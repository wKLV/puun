
var Module;
if (typeof Module === 'undefined') Module = eval('(function() { try { return Module || {} } catch(e) { return {} } })()');
if (!Module.expectedDataFileDownloads) {
  Module.expectedDataFileDownloads = 0;
  Module.finishedDataFileDownloads = 0;
}
Module.expectedDataFileDownloads++;
(function() {

    var PACKAGE_PATH;
    if (typeof window === 'object') {
      PACKAGE_PATH = window['encodeURIComponent'](window.location.pathname.toString().substring(0, window.location.pathname.toString().lastIndexOf('/')) + '/');
    } else if (typeof location !== 'undefined') {
      // worker
      PACKAGE_PATH = encodeURIComponent(location.pathname.toString().substring(0, location.pathname.toString().lastIndexOf('/')) + '/');
    } else {
      throw 'using preloaded data can only be done on a web page or in a web worker';
    }
    var PACKAGE_NAME = 'build/sprites.data';
    var REMOTE_PACKAGE_BASE = 'sprites.data';
    if (typeof Module['locateFilePackage'] === 'function' && !Module['locateFile']) {
      Module['locateFile'] = Module['locateFilePackage'];
      Module.printErr('warning: you defined Module.locateFilePackage, that has been renamed to Module.locateFile (using your locateFilePackage for now)');
    }
    var REMOTE_PACKAGE_NAME = typeof Module['locateFile'] === 'function' ?
                              Module['locateFile'](REMOTE_PACKAGE_BASE) :
                              ((Module['filePackagePrefixURL'] || '') + REMOTE_PACKAGE_BASE);
    var REMOTE_PACKAGE_SIZE = 2317570;
    var PACKAGE_UUID = 'f9a3390c-64f0-49ee-8a45-5b9b2621ed02';
  
    function fetchRemotePackage(packageName, packageSize, callback, errback) {
      var xhr = new XMLHttpRequest();
      xhr.open('GET', packageName, true);
      xhr.responseType = 'arraybuffer';
      xhr.onprogress = function(event) {
        var url = packageName;
        var size = packageSize;
        if (event.total) size = event.total;
        if (event.loaded) {
          if (!xhr.addedTotal) {
            xhr.addedTotal = true;
            if (!Module.dataFileDownloads) Module.dataFileDownloads = {};
            Module.dataFileDownloads[url] = {
              loaded: event.loaded,
              total: size
            };
          } else {
            Module.dataFileDownloads[url].loaded = event.loaded;
          }
          var total = 0;
          var loaded = 0;
          var num = 0;
          for (var download in Module.dataFileDownloads) {
          var data = Module.dataFileDownloads[download];
            total += data.total;
            loaded += data.loaded;
            num++;
          }
          total = Math.ceil(total * Module.expectedDataFileDownloads/num);
          if (Module['setStatus']) Module['setStatus']('Downloading data... (' + loaded + '/' + total + ')');
        } else if (!Module.dataFileDownloads) {
          if (Module['setStatus']) Module['setStatus']('Downloading data...');
        }
      };
      xhr.onload = function(event) {
        var packageData = xhr.response;
        callback(packageData);
      };
      xhr.send(null);
    };

    function handleError(error) {
      console.error('package error:', error);
    };
  
      var fetched = null, fetchedCallback = null;
      fetchRemotePackage(REMOTE_PACKAGE_NAME, REMOTE_PACKAGE_SIZE, function(data) {
        if (fetchedCallback) {
          fetchedCallback(data);
          fetchedCallback = null;
        } else {
          fetched = data;
        }
      }, handleError);
    
  function runWithFS() {

function assert(check, msg) {
  if (!check) throw msg + new Error().stack;
}
Module['FS_createPath']('/', 'assets', true, true);
Module['FS_createPath']('/assets', 'making', true, true);
Module['FS_createPath']('/assets', 'PNG', true, true);
Module['FS_createPath']('/assets/PNG', 'Tiles red', true, true);
Module['FS_createPath']('/assets/PNG', 'Tiles yellow', true, true);
Module['FS_createPath']('/assets/PNG', 'Balls', true, true);
Module['FS_createPath']('/assets/PNG/Balls', 'Black', true, true);
Module['FS_createPath']('/assets/PNG/Balls', 'Grey', true, true);
Module['FS_createPath']('/assets/PNG/Balls', 'Blue', true, true);
Module['FS_createPath']('/assets/PNG/Balls', 'Yellow', true, true);
Module['FS_createPath']('/assets/PNG', 'Pipes', true, true);
Module['FS_createPath']('/assets/PNG/Pipes', 'Green', true, true);
Module['FS_createPath']('/assets/PNG/Pipes', 'Grey', true, true);
Module['FS_createPath']('/assets/PNG', 'Paddles', true, true);
Module['FS_createPath']('/assets/PNG', 'Tiles grey', true, true);
Module['FS_createPath']('/assets/PNG', 'Tiles black', true, true);
Module['FS_createPath']('/assets/PNG', 'Particles yellow', true, true);
Module['FS_createPath']('/assets/PNG', 'Back tiles', true, true);
Module['FS_createPath']('/assets/PNG', 'Tiles green', true, true);
Module['FS_createPath']('/assets/PNG', 'Tiles blue', true, true);
Module['FS_createPath']('/assets/PNG', 'Coins', true, true);
Module['FS_createPath']('/assets/PNG', 'Tiles orange', true, true);
Module['FS_createPath']('/assets/PNG', 'Tiles pink', true, true);
Module['FS_createPath']('/assets/PNG', 'Particles blue', true, true);
Module['FS_createPath']('/assets/PNG', 'Particles white', true, true);

    function DataRequest(start, end, crunched, audio) {
      this.start = start;
      this.end = end;
      this.crunched = crunched;
      this.audio = audio;
    }
    DataRequest.prototype = {
      requests: {},
      open: function(mode, name) {
        this.name = name;
        this.requests[name] = this;
        Module['addRunDependency']('fp ' + this.name);
      },
      send: function() {},
      onload: function() {
        var byteArray = this.byteArray.subarray(this.start, this.end);

          this.finish(byteArray);

      },
      finish: function(byteArray) {
        var that = this;
        Module['FS_createPreloadedFile'](this.name, null, byteArray, true, true, function() {
          Module['removeRunDependency']('fp ' + that.name);
        }, function() {
          if (that.audio) {
            Module['removeRunDependency']('fp ' + that.name); // workaround for chromium bug 124926 (still no audio with this, but at least we don't hang)
          } else {
            Module.printErr('Preloading file ' + that.name + ' failed');
          }
        }, false, true); // canOwn this data in the filesystem, it is a slide into the heap that will never change
        this.requests[this.name] = null;
      },
    };
      new DataRequest(0, 3108, 0, 0).open('GET', '/assets/paddle_12.png');
    new DataRequest(3108, 6316, 0, 0).open('GET', '/assets/paddle_08.png');
    new DataRequest(6316, 11882, 0, 0).open('GET', '/assets/paddle.png');
    new DataRequest(11882, 427434, 0, 0).open('GET', '/assets/Ubuntu-Light.ttf');
    new DataRequest(427434, 443077, 0, 0).open('GET', '/assets/atlas.png');
    new DataRequest(443077, 449823, 0, 0).open('GET', '/assets/ball.png');
    new DataRequest(449823, 791147, 0, 0).open('GET', '/assets/Ubuntu-Medium.ttf');
    new DataRequest(791147, 825181, 0, 0).open('GET', '/assets/making/atlas.xcf');
    new DataRequest(825181, 826473, 0, 0).open('GET', '/assets/PNG/Tiles red/tileRed_10.png');
    new DataRequest(826473, 829542, 0, 0).open('GET', '/assets/PNG/Tiles red/tileRed_57.png');
    new DataRequest(829542, 831609, 0, 0).open('GET', '/assets/PNG/Tiles red/tileRed_32.png');
    new DataRequest(831609, 834419, 0, 0).open('GET', '/assets/PNG/Tiles red/tileRed_60.png');
    new DataRequest(834419, 837624, 0, 0).open('GET', '/assets/PNG/Tiles red/tileRed_69.png');
    new DataRequest(837624, 838491, 0, 0).open('GET', '/assets/PNG/Tiles red/tileRed_25.png');
    new DataRequest(838491, 839514, 0, 0).open('GET', '/assets/PNG/Tiles red/tileRed_19.png');
    new DataRequest(839514, 840563, 0, 0).open('GET', '/assets/PNG/Tiles red/tileRed_52.png');
    new DataRequest(840563, 843478, 0, 0).open('GET', '/assets/PNG/Tiles red/tileRed_54.png');
    new DataRequest(843478, 845287, 0, 0).open('GET', '/assets/PNG/Tiles red/tileRed_34.png');
    new DataRequest(845287, 847340, 0, 0).open('GET', '/assets/PNG/Tiles red/tileRed_68.png');
    new DataRequest(847340, 850310, 0, 0).open('GET', '/assets/PNG/Tiles red/tileRed_66.png');
    new DataRequest(850310, 850732, 0, 0).open('GET', '/assets/PNG/Tiles red/tileRed_03.png');
    new DataRequest(850732, 851783, 0, 0).open('GET', '/assets/PNG/Tiles red/tileRed_64.png');
    new DataRequest(851783, 852336, 0, 0).open('GET', '/assets/PNG/Tiles red/tileRed_13.png');
    new DataRequest(852336, 855282, 0, 0).open('GET', '/assets/PNG/Tiles red/tileRed_30.png');
    new DataRequest(855282, 856664, 0, 0).open('GET', '/assets/PNG/Tiles red/tileRed_67.png');
    new DataRequest(856664, 858082, 0, 0).open('GET', '/assets/PNG/Tiles red/tileRed_22.png');
    new DataRequest(858082, 858967, 0, 0).open('GET', '/assets/PNG/Tiles red/tileRed_37.png');
    new DataRequest(858967, 859784, 0, 0).open('GET', '/assets/PNG/Tiles red/tileRed_62.png');
    new DataRequest(859784, 862698, 0, 0).open('GET', '/assets/PNG/Tiles red/tileRed_72.png');
    new DataRequest(862698, 864961, 0, 0).open('GET', '/assets/PNG/Tiles red/tileRed_23.png');
    new DataRequest(864961, 865813, 0, 0).open('GET', '/assets/PNG/Tiles red/tileRed_49.png');
    new DataRequest(865813, 866248, 0, 0).open('GET', '/assets/PNG/Tiles red/tileRed_15.png');
    new DataRequest(866248, 868278, 0, 0).open('GET', '/assets/PNG/Tiles red/tileRed_11.png');
    new DataRequest(868278, 869681, 0, 0).open('GET', '/assets/PNG/Tiles red/tileRed_43.png');
    new DataRequest(869681, 870494, 0, 0).open('GET', '/assets/PNG/Tiles red/tileRed_26.png');
    new DataRequest(870494, 873495, 0, 0).open('GET', '/assets/PNG/Tiles red/tileRed_42.png');
    new DataRequest(873495, 874196, 0, 0).open('GET', '/assets/PNG/Tiles red/tileRed_51.png');
    new DataRequest(874196, 875627, 0, 0).open('GET', '/assets/PNG/Tiles red/tileRed_08.png');
    new DataRequest(875627, 878570, 0, 0).open('GET', '/assets/PNG/Tiles red/tileRed_48.png');
    new DataRequest(878570, 879111, 0, 0).open('GET', '/assets/PNG/Tiles red/tileRed_01.png');
    new DataRequest(879111, 881171, 0, 0).open('GET', '/assets/PNG/Tiles red/tileRed_17.png');
    new DataRequest(881171, 882973, 0, 0).open('GET', '/assets/PNG/Tiles red/tileRed_58.png');
    new DataRequest(882973, 885043, 0, 0).open('GET', '/assets/PNG/Tiles red/tileRed_18.png');
    new DataRequest(885043, 888143, 0, 0).open('GET', '/assets/PNG/Tiles red/tileRed_33.png');
    new DataRequest(888143, 890859, 0, 0).open('GET', '/assets/PNG/Tiles red/tileRed_41.png');
    new DataRequest(890859, 891689, 0, 0).open('GET', '/assets/PNG/Tiles red/tileRed_38.png');
    new DataRequest(891689, 894755, 0, 0).open('GET', '/assets/PNG/Tiles red/tileRed_59.png');
    new DataRequest(894755, 898045, 0, 0).open('GET', '/assets/PNG/Tiles red/tileRed_71.png');
    new DataRequest(898045, 899995, 0, 0).open('GET', '/assets/PNG/Tiles red/tileRed_12.png');
    new DataRequest(899995, 902032, 0, 0).open('GET', '/assets/PNG/Tiles red/tileRed_56.png');
    new DataRequest(902032, 904376, 0, 0).open('GET', '/assets/PNG/Tiles red/tileRed_21.png');
    new DataRequest(904376, 907460, 0, 0).open('GET', '/assets/PNG/Tiles red/tileRed_35.png');
    new DataRequest(907460, 910775, 0, 0).open('GET', '/assets/PNG/Tiles red/tileRed_47.png');
    new DataRequest(910775, 912781, 0, 0).open('GET', '/assets/PNG/Tiles red/tileRed_06.png');
    new DataRequest(912781, 913477, 0, 0).open('GET', '/assets/PNG/Tiles red/tileRed_04.png');
    new DataRequest(913477, 915344, 0, 0).open('GET', '/assets/PNG/Tiles red/tileRed_05.png');
    new DataRequest(915344, 916215, 0, 0).open('GET', '/assets/PNG/Tiles red/tileRed_61.png');
    new DataRequest(916215, 916930, 0, 0).open('GET', '/assets/PNG/Tiles red/tileRed_63.png');
    new DataRequest(916930, 919006, 0, 0).open('GET', '/assets/PNG/Tiles red/tileRed_44.png');
    new DataRequest(919006, 920920, 0, 0).open('GET', '/assets/PNG/Tiles red/tileRed_70.png');
    new DataRequest(920920, 921412, 0, 0).open('GET', '/assets/PNG/Tiles red/tileRed_14.png');
    new DataRequest(921412, 924074, 0, 0).open('GET', '/assets/PNG/Tiles red/tileRed_65.png');
    new DataRequest(924074, 924793, 0, 0).open('GET', '/assets/PNG/Tiles red/tileRed_27.png');
    new DataRequest(924793, 927279, 0, 0).open('GET', '/assets/PNG/Tiles red/tileRed_53.png');
    new DataRequest(927279, 930103, 0, 0).open('GET', '/assets/PNG/Tiles red/tileRed_36.png');
    new DataRequest(930103, 932032, 0, 0).open('GET', '/assets/PNG/Tiles red/tileRed_46.png');
    new DataRequest(932032, 934099, 0, 0).open('GET', '/assets/PNG/Tiles red/tileRed_24.png');
    new DataRequest(934099, 937378, 0, 0).open('GET', '/assets/PNG/Tiles red/tileRed_45.png');
    new DataRequest(937378, 938700, 0, 0).open('GET', '/assets/PNG/Tiles red/tileRed_55.png');
    new DataRequest(938700, 939435, 0, 0).open('GET', '/assets/PNG/Tiles red/tileRed_39.png');
    new DataRequest(939435, 940135, 0, 0).open('GET', '/assets/PNG/Tiles red/tileRed_16.png');
    new DataRequest(940135, 941588, 0, 0).open('GET', '/assets/PNG/Tiles red/tileRed_20.png');
    new DataRequest(941588, 944098, 0, 0).open('GET', '/assets/PNG/Tiles red/tileRed_29.png');
    new DataRequest(944098, 945086, 0, 0).open('GET', '/assets/PNG/Tiles red/tileRed_07.png');
    new DataRequest(945086, 946160, 0, 0).open('GET', '/assets/PNG/Tiles red/tileRed_40.png');
    new DataRequest(946160, 946649, 0, 0).open('GET', '/assets/PNG/Tiles red/tileRed_02.png');
    new DataRequest(946649, 947722, 0, 0).open('GET', '/assets/PNG/Tiles red/tileRed_28.png');
    new DataRequest(947722, 949906, 0, 0).open('GET', '/assets/PNG/Tiles red/tileRed_09.png');
    new DataRequest(949906, 951253, 0, 0).open('GET', '/assets/PNG/Tiles red/tileRed_31.png');
    new DataRequest(951253, 952051, 0, 0).open('GET', '/assets/PNG/Tiles red/tileRed_50.png');
    new DataRequest(952051, 952598, 0, 0).open('GET', '/assets/PNG/Tiles yellow/tileYellow_13.png');
    new DataRequest(952598, 955543, 0, 0).open('GET', '/assets/PNG/Tiles yellow/tileYellow_42.png');
    new DataRequest(955543, 956266, 0, 0).open('GET', '/assets/PNG/Tiles yellow/tileYellow_39.png');
    new DataRequest(956266, 956964, 0, 0).open('GET', '/assets/PNG/Tiles yellow/tileYellow_16.png');
    new DataRequest(956964, 958804, 0, 0).open('GET', '/assets/PNG/Tiles yellow/tileYellow_70.png');
    new DataRequest(958804, 962085, 0, 0).open('GET', '/assets/PNG/Tiles yellow/tileYellow_47.png');
    new DataRequest(962085, 965006, 0, 0).open('GET', '/assets/PNG/Tiles yellow/tileYellow_48.png');
    new DataRequest(965006, 966888, 0, 0).open('GET', '/assets/PNG/Tiles yellow/tileYellow_46.png');
    new DataRequest(966888, 967317, 0, 0).open('GET', '/assets/PNG/Tiles yellow/tileYellow_15.png');
    new DataRequest(967317, 970399, 0, 0).open('GET', '/assets/PNG/Tiles yellow/tileYellow_33.png');
    new DataRequest(970399, 971383, 0, 0).open('GET', '/assets/PNG/Tiles yellow/tileYellow_07.png');
    new DataRequest(971383, 973365, 0, 0).open('GET', '/assets/PNG/Tiles yellow/tileYellow_56.png');
    new DataRequest(973365, 976151, 0, 0).open('GET', '/assets/PNG/Tiles yellow/tileYellow_60.png');
    new DataRequest(976151, 979214, 0, 0).open('GET', '/assets/PNG/Tiles yellow/tileYellow_35.png');
    new DataRequest(979214, 981491, 0, 0).open('GET', '/assets/PNG/Tiles yellow/tileYellow_23.png');
    new DataRequest(981491, 982507, 0, 0).open('GET', '/assets/PNG/Tiles yellow/tileYellow_19.png');
    new DataRequest(982507, 985594, 0, 0).open('GET', '/assets/PNG/Tiles yellow/tileYellow_69.png');
    new DataRequest(985594, 986468, 0, 0).open('GET', '/assets/PNG/Tiles yellow/tileYellow_37.png');
    new DataRequest(986468, 988238, 0, 0).open('GET', '/assets/PNG/Tiles yellow/tileYellow_34.png');
    new DataRequest(988238, 988928, 0, 0).open('GET', '/assets/PNG/Tiles yellow/tileYellow_04.png');
    new DataRequest(988928, 992159, 0, 0).open('GET', '/assets/PNG/Tiles yellow/tileYellow_71.png');
    new DataRequest(992159, 994214, 0, 0).open('GET', '/assets/PNG/Tiles yellow/tileYellow_18.png');
    new DataRequest(994214, 995552, 0, 0).open('GET', '/assets/PNG/Tiles yellow/tileYellow_31.png');
    new DataRequest(995552, 996942, 0, 0).open('GET', '/assets/PNG/Tiles yellow/tileYellow_43.png');
    new DataRequest(996942, 999819, 0, 0).open('GET', '/assets/PNG/Tiles yellow/tileYellow_54.png');
    new DataRequest(999819, 1002634, 0, 0).open('GET', '/assets/PNG/Tiles yellow/tileYellow_36.png');
    new DataRequest(1002634, 1005539, 0, 0).open('GET', '/assets/PNG/Tiles yellow/tileYellow_66.png');
    new DataRequest(1005539, 1006817, 0, 0).open('GET', '/assets/PNG/Tiles yellow/tileYellow_10.png');
    new DataRequest(1006817, 1009334, 0, 0).open('GET', '/assets/PNG/Tiles yellow/tileYellow_29.png');
    new DataRequest(1009334, 1011508, 0, 0).open('GET', '/assets/PNG/Tiles yellow/tileYellow_09.png');
    new DataRequest(1011508, 1013413, 0, 0).open('GET', '/assets/PNG/Tiles yellow/tileYellow_05.png');
    new DataRequest(1013413, 1014108, 0, 0).open('GET', '/assets/PNG/Tiles yellow/tileYellow_51.png');
    new DataRequest(1014108, 1014595, 0, 0).open('GET', '/assets/PNG/Tiles yellow/tileYellow_02.png');
    new DataRequest(1014595, 1016022, 0, 0).open('GET', '/assets/PNG/Tiles yellow/tileYellow_08.png');
    new DataRequest(1016022, 1016829, 0, 0).open('GET', '/assets/PNG/Tiles yellow/tileYellow_62.png');
    new DataRequest(1016829, 1018914, 0, 0).open('GET', '/assets/PNG/Tiles yellow/tileYellow_17.png');
    new DataRequest(1018914, 1021524, 0, 0).open('GET', '/assets/PNG/Tiles yellow/tileYellow_65.png');
    new DataRequest(1021524, 1021942, 0, 0).open('GET', '/assets/PNG/Tiles yellow/tileYellow_03.png');
    new DataRequest(1021942, 1024011, 0, 0).open('GET', '/assets/PNG/Tiles yellow/tileYellow_24.png');
    new DataRequest(1024011, 1026038, 0, 0).open('GET', '/assets/PNG/Tiles yellow/tileYellow_32.png');
    new DataRequest(1026038, 1028736, 0, 0).open('GET', '/assets/PNG/Tiles yellow/tileYellow_41.png');
    new DataRequest(1028736, 1030480, 0, 0).open('GET', '/assets/PNG/Tiles yellow/tileYellow_58.png');
    new DataRequest(1030480, 1030967, 0, 0).open('GET', '/assets/PNG/Tiles yellow/tileYellow_14.png');
    new DataRequest(1030967, 1032957, 0, 0).open('GET', '/assets/PNG/Tiles yellow/tileYellow_68.png');
    new DataRequest(1032957, 1033670, 0, 0).open('GET', '/assets/PNG/Tiles yellow/tileYellow_27.png');
    new DataRequest(1033670, 1034700, 0, 0).open('GET', '/assets/PNG/Tiles yellow/tileYellow_52.png');
    new DataRequest(1034700, 1036655, 0, 0).open('GET', '/assets/PNG/Tiles yellow/tileYellow_12.png');
    new DataRequest(1036655, 1037517, 0, 0).open('GET', '/assets/PNG/Tiles yellow/tileYellow_61.png');
    new DataRequest(1037517, 1038586, 0, 0).open('GET', '/assets/PNG/Tiles yellow/tileYellow_40.png');
    new DataRequest(1038586, 1039432, 0, 0).open('GET', '/assets/PNG/Tiles yellow/tileYellow_49.png');
    new DataRequest(1039432, 1042467, 0, 0).open('GET', '/assets/PNG/Tiles yellow/tileYellow_59.png');
    new DataRequest(1042467, 1043286, 0, 0).open('GET', '/assets/PNG/Tiles yellow/tileYellow_38.png');
    new DataRequest(1043286, 1044325, 0, 0).open('GET', '/assets/PNG/Tiles yellow/tileYellow_64.png');
    new DataRequest(1044325, 1045116, 0, 0).open('GET', '/assets/PNG/Tiles yellow/tileYellow_50.png');
    new DataRequest(1045116, 1047153, 0, 0).open('GET', '/assets/PNG/Tiles yellow/tileYellow_11.png');
    new DataRequest(1047153, 1047956, 0, 0).open('GET', '/assets/PNG/Tiles yellow/tileYellow_26.png');
    new DataRequest(1047956, 1050007, 0, 0).open('GET', '/assets/PNG/Tiles yellow/tileYellow_44.png');
    new DataRequest(1050007, 1053011, 0, 0).open('GET', '/assets/PNG/Tiles yellow/tileYellow_57.png');
    new DataRequest(1053011, 1055928, 0, 0).open('GET', '/assets/PNG/Tiles yellow/tileYellow_30.png');
    new DataRequest(1055928, 1056786, 0, 0).open('GET', '/assets/PNG/Tiles yellow/tileYellow_25.png');
    new DataRequest(1056786, 1058230, 0, 0).open('GET', '/assets/PNG/Tiles yellow/tileYellow_20.png');
    new DataRequest(1058230, 1060692, 0, 0).open('GET', '/assets/PNG/Tiles yellow/tileYellow_53.png');
    new DataRequest(1060692, 1061230, 0, 0).open('GET', '/assets/PNG/Tiles yellow/tileYellow_01.png');
    new DataRequest(1061230, 1063556, 0, 0).open('GET', '/assets/PNG/Tiles yellow/tileYellow_21.png');
    new DataRequest(1063556, 1064942, 0, 0).open('GET', '/assets/PNG/Tiles yellow/tileYellow_22.png');
    new DataRequest(1064942, 1066293, 0, 0).open('GET', '/assets/PNG/Tiles yellow/tileYellow_67.png');
    new DataRequest(1066293, 1069155, 0, 0).open('GET', '/assets/PNG/Tiles yellow/tileYellow_72.png');
    new DataRequest(1069155, 1070459, 0, 0).open('GET', '/assets/PNG/Tiles yellow/tileYellow_55.png');
    new DataRequest(1070459, 1071523, 0, 0).open('GET', '/assets/PNG/Tiles yellow/tileYellow_28.png');
    new DataRequest(1071523, 1074753, 0, 0).open('GET', '/assets/PNG/Tiles yellow/tileYellow_45.png');
    new DataRequest(1074753, 1075464, 0, 0).open('GET', '/assets/PNG/Tiles yellow/tileYellow_63.png');
    new DataRequest(1075464, 1077483, 0, 0).open('GET', '/assets/PNG/Tiles yellow/tileYellow_06.png');
    new DataRequest(1077483, 1080261, 0, 0).open('GET', '/assets/PNG/Balls/Black/ballBlack_10.png');
    new DataRequest(1080261, 1082888, 0, 0).open('GET', '/assets/PNG/Balls/Black/ballBlack_07.png');
    new DataRequest(1082888, 1085342, 0, 0).open('GET', '/assets/PNG/Balls/Black/ballBlack_08.png');
    new DataRequest(1085342, 1086804, 0, 0).open('GET', '/assets/PNG/Balls/Black/ballBlack_03.png');
    new DataRequest(1086804, 1087950, 0, 0).open('GET', '/assets/PNG/Balls/Black/ballBlack_01.png');
    new DataRequest(1087950, 1089723, 0, 0).open('GET', '/assets/PNG/Balls/Black/ballBlack_05.png');
    new DataRequest(1089723, 1092207, 0, 0).open('GET', '/assets/PNG/Balls/Black/ballBlack_09.png');
    new DataRequest(1092207, 1093825, 0, 0).open('GET', '/assets/PNG/Balls/Black/ballBlack_02.png');
    new DataRequest(1093825, 1095312, 0, 0).open('GET', '/assets/PNG/Balls/Black/ballBlack_04.png');
    new DataRequest(1095312, 1097442, 0, 0).open('GET', '/assets/PNG/Balls/Black/ballBlack_06.png');
    new DataRequest(1097442, 1098924, 0, 0).open('GET', '/assets/PNG/Balls/Grey/ballGrey_04.png');
    new DataRequest(1098924, 1101481, 0, 0).open('GET', '/assets/PNG/Balls/Grey/ballGrey_09.png');
    new DataRequest(1101481, 1102615, 0, 0).open('GET', '/assets/PNG/Balls/Grey/ballGrey_01.png');
    new DataRequest(1102615, 1105419, 0, 0).open('GET', '/assets/PNG/Balls/Grey/ballGrey_10.png');
    new DataRequest(1105419, 1107025, 0, 0).open('GET', '/assets/PNG/Balls/Grey/ballGrey_02.png');
    new DataRequest(1107025, 1109241, 0, 0).open('GET', '/assets/PNG/Balls/Grey/ballGrey_06.png');
    new DataRequest(1109241, 1111946, 0, 0).open('GET', '/assets/PNG/Balls/Grey/ballGrey_07.png');
    new DataRequest(1111946, 1113669, 0, 0).open('GET', '/assets/PNG/Balls/Grey/ballGrey_05.png');
    new DataRequest(1113669, 1115114, 0, 0).open('GET', '/assets/PNG/Balls/Grey/ballGrey_03.png');
    new DataRequest(1115114, 1117649, 0, 0).open('GET', '/assets/PNG/Balls/Grey/ballGrey_08.png');
    new DataRequest(1117649, 1119208, 0, 0).open('GET', '/assets/PNG/Balls/Blue/ballBlue_04.png');
    new DataRequest(1119208, 1121855, 0, 0).open('GET', '/assets/PNG/Balls/Blue/ballBlue_08.png');
    new DataRequest(1121855, 1124708, 0, 0).open('GET', '/assets/PNG/Balls/Blue/ballBlue_07.png');
    new DataRequest(1124708, 1125880, 0, 0).open('GET', '/assets/PNG/Balls/Blue/ballBlue_01.png');
    new DataRequest(1125880, 1128184, 0, 0).open('GET', '/assets/PNG/Balls/Blue/ballBlue_06.png');
    new DataRequest(1128184, 1129722, 0, 0).open('GET', '/assets/PNG/Balls/Blue/ballBlue_03.png');
    new DataRequest(1129722, 1132709, 0, 0).open('GET', '/assets/PNG/Balls/Blue/ballBlue_10.png');
    new DataRequest(1132709, 1135399, 0, 0).open('GET', '/assets/PNG/Balls/Blue/ballBlue_09.png');
    new DataRequest(1135399, 1137284, 0, 0).open('GET', '/assets/PNG/Balls/Blue/ballBlue_05.png');
    new DataRequest(1137284, 1138992, 0, 0).open('GET', '/assets/PNG/Balls/Blue/ballBlue_02.png');
    new DataRequest(1138992, 1140171, 0, 0).open('GET', '/assets/PNG/Balls/Yellow/ballYellow_01.png');
    new DataRequest(1140171, 1141902, 0, 0).open('GET', '/assets/PNG/Balls/Yellow/ballYellow_02.png');
    new DataRequest(1141902, 1143788, 0, 0).open('GET', '/assets/PNG/Balls/Yellow/ballYellow_05.png');
    new DataRequest(1143788, 1146768, 0, 0).open('GET', '/assets/PNG/Balls/Yellow/ballYellow_10.png');
    new DataRequest(1146768, 1148340, 0, 0).open('GET', '/assets/PNG/Balls/Yellow/ballYellow_04.png');
    new DataRequest(1148340, 1150650, 0, 0).open('GET', '/assets/PNG/Balls/Yellow/ballYellow_06.png');
    new DataRequest(1150650, 1152205, 0, 0).open('GET', '/assets/PNG/Balls/Yellow/ballYellow_03.png');
    new DataRequest(1152205, 1155066, 0, 0).open('GET', '/assets/PNG/Balls/Yellow/ballYellow_07.png');
    new DataRequest(1155066, 1157758, 0, 0).open('GET', '/assets/PNG/Balls/Yellow/ballYellow_09.png');
    new DataRequest(1157758, 1160403, 0, 0).open('GET', '/assets/PNG/Balls/Yellow/ballYellow_08.png');
    new DataRequest(1160403, 1163032, 0, 0).open('GET', '/assets/PNG/Pipes/Green/pipeGreen_24.png');
    new DataRequest(1163032, 1165745, 0, 0).open('GET', '/assets/PNG/Pipes/Green/pipeGreen_34.png');
    new DataRequest(1165745, 1167481, 0, 0).open('GET', '/assets/PNG/Pipes/Green/pipeGreen_28.png');
    new DataRequest(1167481, 1169479, 0, 0).open('GET', '/assets/PNG/Pipes/Green/pipeGreen_40.png');
    new DataRequest(1169479, 1170299, 0, 0).open('GET', '/assets/PNG/Pipes/Green/pipeGreen_26.png');
    new DataRequest(1170299, 1170781, 0, 0).open('GET', '/assets/PNG/Pipes/Green/pipeGreen_04.png');
    new DataRequest(1170781, 1172044, 0, 0).open('GET', '/assets/PNG/Pipes/Green/pipeGreen_32.png');
    new DataRequest(1172044, 1173194, 0, 0).open('GET', '/assets/PNG/Pipes/Green/pipeGreen_17.png');
    new DataRequest(1173194, 1176206, 0, 0).open('GET', '/assets/PNG/Pipes/Green/pipeGreen_43.png');
    new DataRequest(1176206, 1179839, 0, 0).open('GET', '/assets/PNG/Pipes/Green/pipeGreen_29.png');
    new DataRequest(1179839, 1182258, 0, 0).open('GET', '/assets/PNG/Pipes/Green/pipeGreen_35.png');
    new DataRequest(1182258, 1184708, 0, 0).open('GET', '/assets/PNG/Pipes/Green/pipeGreen_16.png');
    new DataRequest(1184708, 1188245, 0, 0).open('GET', '/assets/PNG/Pipes/Green/pipeGreen_30.png');
    new DataRequest(1188245, 1190205, 0, 0).open('GET', '/assets/PNG/Pipes/Green/pipeGreen_39.png');
    new DataRequest(1190205, 1191198, 0, 0).open('GET', '/assets/PNG/Pipes/Green/pipeGreen_25.png');
    new DataRequest(1191198, 1193769, 0, 0).open('GET', '/assets/PNG/Pipes/Green/pipeGreen_15.png');
    new DataRequest(1193769, 1197267, 0, 0).open('GET', '/assets/PNG/Pipes/Green/pipeGreen_37.png');
    new DataRequest(1197267, 1199440, 0, 0).open('GET', '/assets/PNG/Pipes/Green/pipeGreen_21.png');
    new DataRequest(1199440, 1202473, 0, 0).open('GET', '/assets/PNG/Pipes/Green/pipeGreen_44.png');
    new DataRequest(1202473, 1204482, 0, 0).open('GET', '/assets/PNG/Pipes/Green/pipeGreen_11.png');
    new DataRequest(1204482, 1207192, 0, 0).open('GET', '/assets/PNG/Pipes/Green/pipeGreen_07.png');
    new DataRequest(1207192, 1209793, 0, 0).open('GET', '/assets/PNG/Pipes/Green/pipeGreen_08.png');
    new DataRequest(1209793, 1211602, 0, 0).open('GET', '/assets/PNG/Pipes/Green/pipeGreen_27.png');
    new DataRequest(1211602, 1213287, 0, 0).open('GET', '/assets/PNG/Pipes/Green/pipeGreen_02.png');
    new DataRequest(1213287, 1214227, 0, 0).open('GET', '/assets/PNG/Pipes/Green/pipeGreen_06.png');
    new DataRequest(1214227, 1215683, 0, 0).open('GET', '/assets/PNG/Pipes/Green/pipeGreen_13.png');
    new DataRequest(1215683, 1216615, 0, 0).open('GET', '/assets/PNG/Pipes/Green/pipeGreen_10.png');
    new DataRequest(1216615, 1218911, 0, 0).open('GET', '/assets/PNG/Pipes/Green/pipeGreen_22.png');
    new DataRequest(1218911, 1222302, 0, 0).open('GET', '/assets/PNG/Pipes/Green/pipeGreen_38.png');
    new DataRequest(1222302, 1223717, 0, 0).open('GET', '/assets/PNG/Pipes/Green/pipeGreen_14.png');
    new DataRequest(1223717, 1225056, 0, 0).open('GET', '/assets/PNG/Pipes/Green/pipeGreen_19.png');
    new DataRequest(1225056, 1226624, 0, 0).open('GET', '/assets/PNG/Pipes/Green/pipeGreen_31.png');
    new DataRequest(1226624, 1229339, 0, 0).open('GET', '/assets/PNG/Pipes/Green/pipeGreen_33.png');
    new DataRequest(1229339, 1231006, 0, 0).open('GET', '/assets/PNG/Pipes/Green/pipeGreen_01.png');
    new DataRequest(1231006, 1231520, 0, 0).open('GET', '/assets/PNG/Pipes/Green/pipeGreen_03.png');
    new DataRequest(1231520, 1233898, 0, 0).open('GET', '/assets/PNG/Pipes/Green/pipeGreen_36.png');
    new DataRequest(1233898, 1234967, 0, 0).open('GET', '/assets/PNG/Pipes/Green/pipeGreen_05.png');
    new DataRequest(1234967, 1236137, 0, 0).open('GET', '/assets/PNG/Pipes/Green/pipeGreen_18.png');
    new DataRequest(1236137, 1238793, 0, 0).open('GET', '/assets/PNG/Pipes/Green/pipeGreen_23.png');
    new DataRequest(1238793, 1240948, 0, 0).open('GET', '/assets/PNG/Pipes/Green/pipeGreen_20.png');
    new DataRequest(1240948, 1243888, 0, 0).open('GET', '/assets/PNG/Pipes/Green/pipeGreen_42.png');
    new DataRequest(1243888, 1245772, 0, 0).open('GET', '/assets/PNG/Pipes/Green/pipeGreen_12.png');
    new DataRequest(1245772, 1246825, 0, 0).open('GET', '/assets/PNG/Pipes/Green/pipeGreen_09.png');
    new DataRequest(1246825, 1248937, 0, 0).open('GET', '/assets/PNG/Pipes/Green/pipeGreen_41.png');
    new DataRequest(1248937, 1251238, 0, 0).open('GET', '/assets/PNG/Pipes/Grey/pipeGrey_35.png');
    new DataRequest(1251238, 1254096, 0, 0).open('GET', '/assets/PNG/Pipes/Grey/pipeGrey_42.png');
    new DataRequest(1254096, 1256719, 0, 0).open('GET', '/assets/PNG/Pipes/Grey/pipeGrey_33.png');
    new DataRequest(1256719, 1259993, 0, 0).open('GET', '/assets/PNG/Pipes/Grey/pipeGrey_38.png');
    new DataRequest(1259993, 1262201, 0, 0).open('GET', '/assets/PNG/Pipes/Grey/pipeGrey_22.png');
    new DataRequest(1262201, 1264697, 0, 0).open('GET', '/assets/PNG/Pipes/Grey/pipeGrey_24.png');
    new DataRequest(1264697, 1266266, 0, 0).open('GET', '/assets/PNG/Pipes/Grey/pipeGrey_01.png');
    new DataRequest(1266266, 1267281, 0, 0).open('GET', '/assets/PNG/Pipes/Grey/pipeGrey_05.png');
    new DataRequest(1267281, 1270661, 0, 0).open('GET', '/assets/PNG/Pipes/Grey/pipeGrey_37.png');
    new DataRequest(1270661, 1271991, 0, 0).open('GET', '/assets/PNG/Pipes/Grey/pipeGrey_14.png');
    new DataRequest(1271991, 1272495, 0, 0).open('GET', '/assets/PNG/Pipes/Grey/pipeGrey_03.png');
    new DataRequest(1272495, 1274341, 0, 0).open('GET', '/assets/PNG/Pipes/Grey/pipeGrey_12.png');
    new DataRequest(1274341, 1276829, 0, 0).open('GET', '/assets/PNG/Pipes/Grey/pipeGrey_08.png');
    new DataRequest(1276829, 1279301, 0, 0).open('GET', '/assets/PNG/Pipes/Grey/pipeGrey_15.png');
    new DataRequest(1279301, 1280102, 0, 0).open('GET', '/assets/PNG/Pipes/Grey/pipeGrey_26.png');
    new DataRequest(1280102, 1280572, 0, 0).open('GET', '/assets/PNG/Pipes/Grey/pipeGrey_04.png');
    new DataRequest(1280572, 1282479, 0, 0).open('GET', '/assets/PNG/Pipes/Grey/pipeGrey_40.png');
    new DataRequest(1282479, 1283844, 0, 0).open('GET', '/assets/PNG/Pipes/Grey/pipeGrey_13.png');
    new DataRequest(1283844, 1285772, 0, 0).open('GET', '/assets/PNG/Pipes/Grey/pipeGrey_11.png');
    new DataRequest(1285772, 1287877, 0, 0).open('GET', '/assets/PNG/Pipes/Grey/pipeGrey_21.png');
    new DataRequest(1287877, 1288994, 0, 0).open('GET', '/assets/PNG/Pipes/Grey/pipeGrey_18.png');
    new DataRequest(1288994, 1290870, 0, 0).open('GET', '/assets/PNG/Pipes/Grey/pipeGrey_39.png');
    new DataRequest(1290870, 1293229, 0, 0).open('GET', '/assets/PNG/Pipes/Grey/pipeGrey_16.png');
    new DataRequest(1293229, 1296712, 0, 0).open('GET', '/assets/PNG/Pipes/Grey/pipeGrey_29.png');
    new DataRequest(1296712, 1297676, 0, 0).open('GET', '/assets/PNG/Pipes/Grey/pipeGrey_25.png');
    new DataRequest(1297676, 1298596, 0, 0).open('GET', '/assets/PNG/Pipes/Grey/pipeGrey_06.png');
    new DataRequest(1298596, 1299633, 0, 0).open('GET', '/assets/PNG/Pipes/Grey/pipeGrey_09.png');
    new DataRequest(1299633, 1303025, 0, 0).open('GET', '/assets/PNG/Pipes/Grey/pipeGrey_30.png');
    new DataRequest(1303025, 1305303, 0, 0).open('GET', '/assets/PNG/Pipes/Grey/pipeGrey_36.png');
    new DataRequest(1305303, 1307916, 0, 0).open('GET', '/assets/PNG/Pipes/Grey/pipeGrey_34.png');
    new DataRequest(1307916, 1310835, 0, 0).open('GET', '/assets/PNG/Pipes/Grey/pipeGrey_43.png');
    new DataRequest(1310835, 1312921, 0, 0).open('GET', '/assets/PNG/Pipes/Grey/pipeGrey_20.png');
    new DataRequest(1312921, 1315839, 0, 0).open('GET', '/assets/PNG/Pipes/Grey/pipeGrey_44.png');
    new DataRequest(1315839, 1318430, 0, 0).open('GET', '/assets/PNG/Pipes/Grey/pipeGrey_07.png');
    new DataRequest(1318430, 1320097, 0, 0).open('GET', '/assets/PNG/Pipes/Grey/pipeGrey_28.png');
    new DataRequest(1320097, 1321809, 0, 0).open('GET', '/assets/PNG/Pipes/Grey/pipeGrey_27.png');
    new DataRequest(1321809, 1323055, 0, 0).open('GET', '/assets/PNG/Pipes/Grey/pipeGrey_32.png');
    new DataRequest(1323055, 1324589, 0, 0).open('GET', '/assets/PNG/Pipes/Grey/pipeGrey_31.png');
    new DataRequest(1324589, 1325845, 0, 0).open('GET', '/assets/PNG/Pipes/Grey/pipeGrey_19.png');
    new DataRequest(1325845, 1327428, 0, 0).open('GET', '/assets/PNG/Pipes/Grey/pipeGrey_02.png');
    new DataRequest(1327428, 1329947, 0, 0).open('GET', '/assets/PNG/Pipes/Grey/pipeGrey_23.png');
    new DataRequest(1329947, 1331039, 0, 0).open('GET', '/assets/PNG/Pipes/Grey/pipeGrey_17.png');
    new DataRequest(1331039, 1331953, 0, 0).open('GET', '/assets/PNG/Pipes/Grey/pipeGrey_10.png');
    new DataRequest(1331953, 1333957, 0, 0).open('GET', '/assets/PNG/Pipes/Grey/pipeGrey_41.png');
    new DataRequest(1333957, 1338611, 0, 0).open('GET', '/assets/PNG/Paddles/paddle_05.png');
    new DataRequest(1338611, 1341625, 0, 0).open('GET', '/assets/PNG/Paddles/paddle_07.png');
    new DataRequest(1341625, 1343979, 0, 0).open('GET', '/assets/PNG/Paddles/paddle_03.png');
    new DataRequest(1343979, 1347087, 0, 0).open('GET', '/assets/PNG/Paddles/paddle_12.png');
    new DataRequest(1347087, 1350295, 0, 0).open('GET', '/assets/PNG/Paddles/paddle_08.png');
    new DataRequest(1350295, 1354987, 0, 0).open('GET', '/assets/PNG/Paddles/paddle_10.png');
    new DataRequest(1354987, 1359503, 0, 0).open('GET', '/assets/PNG/Paddles/paddle_09.png');
    new DataRequest(1359503, 1363209, 0, 0).open('GET', '/assets/PNG/Paddles/paddle_01.png');
    new DataRequest(1363209, 1366982, 0, 0).open('GET', '/assets/PNG/Paddles/paddle_02.png');
    new DataRequest(1366982, 1369891, 0, 0).open('GET', '/assets/PNG/Paddles/paddle_11.png');
    new DataRequest(1369891, 1374696, 0, 0).open('GET', '/assets/PNG/Paddles/paddle_06.png');
    new DataRequest(1374696, 1377184, 0, 0).open('GET', '/assets/PNG/Paddles/paddle_04.png');
    new DataRequest(1377184, 1378190, 0, 0).open('GET', '/assets/PNG/Tiles grey/tileGrey_52.png');
    new DataRequest(1378190, 1378870, 0, 0).open('GET', '/assets/PNG/Tiles grey/tileGrey_16.png');
    new DataRequest(1378870, 1380769, 0, 0).open('GET', '/assets/PNG/Tiles grey/tileGrey_11.png');
    new DataRequest(1380769, 1381301, 0, 0).open('GET', '/assets/PNG/Tiles grey/tileGrey_01.png');
    new DataRequest(1381301, 1384122, 0, 0).open('GET', '/assets/PNG/Tiles grey/tileGrey_42.png');
    new DataRequest(1384122, 1384798, 0, 0).open('GET', '/assets/PNG/Tiles grey/tileGrey_04.png');
    new DataRequest(1384798, 1385833, 0, 0).open('GET', '/assets/PNG/Tiles grey/tileGrey_28.png');
    new DataRequest(1385833, 1386622, 0, 0).open('GET', '/assets/PNG/Tiles grey/tileGrey_26.png');
    new DataRequest(1386622, 1389136, 0, 0).open('GET', '/assets/PNG/Tiles grey/tileGrey_41.png');
    new DataRequest(1389136, 1390489, 0, 0).open('GET', '/assets/PNG/Tiles grey/tileGrey_20.png');
    new DataRequest(1390489, 1391346, 0, 0).open('GET', '/assets/PNG/Tiles grey/tileGrey_37.png');
    new DataRequest(1391346, 1393015, 0, 0).open('GET', '/assets/PNG/Tiles grey/tileGrey_70.png');
    new DataRequest(1393015, 1394884, 0, 0).open('GET', '/assets/PNG/Tiles grey/tileGrey_24.png');
    new DataRequest(1394884, 1397160, 0, 0).open('GET', '/assets/PNG/Tiles grey/tileGrey_65.png');
    new DataRequest(1397160, 1399126, 0, 0).open('GET', '/assets/PNG/Tiles grey/tileGrey_44.png');
    new DataRequest(1399126, 1401827, 0, 0).open('GET', '/assets/PNG/Tiles grey/tileGrey_72.png');
    new DataRequest(1401827, 1403559, 0, 0).open('GET', '/assets/PNG/Tiles grey/tileGrey_05.png');
    new DataRequest(1403559, 1405769, 0, 0).open('GET', '/assets/PNG/Tiles grey/tileGrey_53.png');
    new DataRequest(1405769, 1407649, 0, 0).open('GET', '/assets/PNG/Tiles grey/tileGrey_18.png');
    new DataRequest(1407649, 1408607, 0, 0).open('GET', '/assets/PNG/Tiles grey/tileGrey_19.png');
    new DataRequest(1408607, 1410400, 0, 0).open('GET', '/assets/PNG/Tiles grey/tileGrey_56.png');
    new DataRequest(1410400, 1412969, 0, 0).open('GET', '/assets/PNG/Tiles grey/tileGrey_66.png');
    new DataRequest(1412969, 1414235, 0, 0).open('GET', '/assets/PNG/Tiles grey/tileGrey_67.png');
    new DataRequest(1414235, 1416913, 0, 0).open('GET', '/assets/PNG/Tiles grey/tileGrey_60.png');
    new DataRequest(1416913, 1417755, 0, 0).open('GET', '/assets/PNG/Tiles grey/tileGrey_49.png');
    new DataRequest(1417755, 1420558, 0, 0).open('GET', '/assets/PNG/Tiles grey/tileGrey_30.png');
    new DataRequest(1420558, 1420979, 0, 0).open('GET', '/assets/PNG/Tiles grey/tileGrey_15.png');
    new DataRequest(1420979, 1423554, 0, 0).open('GET', '/assets/PNG/Tiles grey/tileGrey_54.png');
    new DataRequest(1423554, 1425610, 0, 0).open('GET', '/assets/PNG/Tiles grey/tileGrey_23.png');
    new DataRequest(1425610, 1428642, 0, 0).open('GET', '/assets/PNG/Tiles grey/tileGrey_71.png');
    new DataRequest(1428642, 1431444, 0, 0).open('GET', '/assets/PNG/Tiles grey/tileGrey_48.png');
    new DataRequest(1431444, 1434412, 0, 0).open('GET', '/assets/PNG/Tiles grey/tileGrey_35.png');
    new DataRequest(1434412, 1435120, 0, 0).open('GET', '/assets/PNG/Tiles grey/tileGrey_39.png');
    new DataRequest(1435120, 1437868, 0, 0).open('GET', '/assets/PNG/Tiles grey/tileGrey_36.png');
    new DataRequest(1437868, 1438569, 0, 0).open('GET', '/assets/PNG/Tiles grey/tileGrey_63.png');
    new DataRequest(1438569, 1441252, 0, 0).open('GET', '/assets/PNG/Tiles grey/tileGrey_69.png');
    new DataRequest(1441252, 1442292, 0, 0).open('GET', '/assets/PNG/Tiles grey/tileGrey_40.png');
    new DataRequest(1442292, 1444262, 0, 0).open('GET', '/assets/PNG/Tiles grey/tileGrey_32.png');
    new DataRequest(1444262, 1446386, 0, 0).open('GET', '/assets/PNG/Tiles grey/tileGrey_21.png');
    new DataRequest(1446386, 1447331, 0, 0).open('GET', '/assets/PNG/Tiles grey/tileGrey_07.png');
    new DataRequest(1447331, 1450470, 0, 0).open('GET', '/assets/PNG/Tiles grey/tileGrey_47.png');
    new DataRequest(1450470, 1452069, 0, 0).open('GET', '/assets/PNG/Tiles grey/tileGrey_58.png');
    new DataRequest(1452069, 1452765, 0, 0).open('GET', '/assets/PNG/Tiles grey/tileGrey_27.png');
    new DataRequest(1452765, 1454001, 0, 0).open('GET', '/assets/PNG/Tiles grey/tileGrey_55.png');
    new DataRequest(1454001, 1454841, 0, 0).open('GET', '/assets/PNG/Tiles grey/tileGrey_25.png');
    new DataRequest(1454841, 1455384, 0, 0).open('GET', '/assets/PNG/Tiles grey/tileGrey_13.png');
    new DataRequest(1455384, 1457367, 0, 0).open('GET', '/assets/PNG/Tiles grey/tileGrey_09.png');
    new DataRequest(1457367, 1460307, 0, 0).open('GET', '/assets/PNG/Tiles grey/tileGrey_33.png');
    new DataRequest(1460307, 1463214, 0, 0).open('GET', '/assets/PNG/Tiles grey/tileGrey_59.png');
    new DataRequest(1463214, 1465851, 0, 0).open('GET', '/assets/PNG/Tiles grey/tileGrey_57.png');
    new DataRequest(1465851, 1466259, 0, 0).open('GET', '/assets/PNG/Tiles grey/tileGrey_03.png');
    new DataRequest(1466259, 1466739, 0, 0).open('GET', '/assets/PNG/Tiles grey/tileGrey_02.png');
    new DataRequest(1466739, 1468526, 0, 0).open('GET', '/assets/PNG/Tiles grey/tileGrey_68.png');
    new DataRequest(1468526, 1469331, 0, 0).open('GET', '/assets/PNG/Tiles grey/tileGrey_62.png');
    new DataRequest(1469331, 1469823, 0, 0).open('GET', '/assets/PNG/Tiles grey/tileGrey_14.png');
    new DataRequest(1469823, 1472876, 0, 0).open('GET', '/assets/PNG/Tiles grey/tileGrey_45.png');
    new DataRequest(1472876, 1473666, 0, 0).open('GET', '/assets/PNG/Tiles grey/tileGrey_50.png');
    new DataRequest(1473666, 1474678, 0, 0).open('GET', '/assets/PNG/Tiles grey/tileGrey_64.png');
    new DataRequest(1474678, 1476474, 0, 0).open('GET', '/assets/PNG/Tiles grey/tileGrey_46.png');
    new DataRequest(1476474, 1478284, 0, 0).open('GET', '/assets/PNG/Tiles grey/tileGrey_12.png');
    new DataRequest(1478284, 1480133, 0, 0).open('GET', '/assets/PNG/Tiles grey/tileGrey_06.png');
    new DataRequest(1480133, 1481402, 0, 0).open('GET', '/assets/PNG/Tiles grey/tileGrey_22.png');
    new DataRequest(1481402, 1483249, 0, 0).open('GET', '/assets/PNG/Tiles grey/tileGrey_17.png');
    new DataRequest(1483249, 1484576, 0, 0).open('GET', '/assets/PNG/Tiles grey/tileGrey_43.png');
    new DataRequest(1484576, 1485266, 0, 0).open('GET', '/assets/PNG/Tiles grey/tileGrey_51.png');
    new DataRequest(1485266, 1486071, 0, 0).open('GET', '/assets/PNG/Tiles grey/tileGrey_38.png');
    new DataRequest(1486071, 1487246, 0, 0).open('GET', '/assets/PNG/Tiles grey/tileGrey_10.png');
    new DataRequest(1487246, 1489626, 0, 0).open('GET', '/assets/PNG/Tiles grey/tileGrey_29.png');
    new DataRequest(1489626, 1490915, 0, 0).open('GET', '/assets/PNG/Tiles grey/tileGrey_31.png');
    new DataRequest(1490915, 1492270, 0, 0).open('GET', '/assets/PNG/Tiles grey/tileGrey_08.png');
    new DataRequest(1492270, 1493988, 0, 0).open('GET', '/assets/PNG/Tiles grey/tileGrey_34.png');
    new DataRequest(1493988, 1494846, 0, 0).open('GET', '/assets/PNG/Tiles grey/tileGrey_61.png');
    new DataRequest(1494846, 1495544, 0, 0).open('GET', '/assets/PNG/Tiles black/tileBlack_27.png');
    new DataRequest(1495544, 1497266, 0, 0).open('GET', '/assets/PNG/Tiles black/tileBlack_34.png');
    new DataRequest(1497266, 1497807, 0, 0).open('GET', '/assets/PNG/Tiles black/tileBlack_13.png');
    new DataRequest(1497807, 1498511, 0, 0).open('GET', '/assets/PNG/Tiles black/tileBlack_63.png');
    new DataRequest(1498511, 1501510, 0, 0).open('GET', '/assets/PNG/Tiles black/tileBlack_57.png');
    new DataRequest(1501510, 1502860, 0, 0).open('GET', '/assets/PNG/Tiles black/tileBlack_43.png');
    new DataRequest(1502860, 1503391, 0, 0).open('GET', '/assets/PNG/Tiles black/tileBlack_01.png');
    new DataRequest(1503391, 1504179, 0, 0).open('GET', '/assets/PNG/Tiles black/tileBlack_26.png');
    new DataRequest(1504179, 1505160, 0, 0).open('GET', '/assets/PNG/Tiles black/tileBlack_19.png');
    new DataRequest(1505160, 1506508, 0, 0).open('GET', '/assets/PNG/Tiles black/tileBlack_67.png');
    new DataRequest(1506508, 1507190, 0, 0).open('GET', '/assets/PNG/Tiles black/tileBlack_16.png');
    new DataRequest(1507190, 1507994, 0, 0).open('GET', '/assets/PNG/Tiles black/tileBlack_38.png');
    new DataRequest(1507994, 1508671, 0, 0).open('GET', '/assets/PNG/Tiles black/tileBlack_04.png');
    new DataRequest(1508671, 1511830, 0, 0).open('GET', '/assets/PNG/Tiles black/tileBlack_47.png');
    new DataRequest(1511830, 1514038, 0, 0).open('GET', '/assets/PNG/Tiles black/tileBlack_21.png');
    new DataRequest(1514038, 1514461, 0, 0).open('GET', '/assets/PNG/Tiles black/tileBlack_15.png');
    new DataRequest(1514461, 1516501, 0, 0).open('GET', '/assets/PNG/Tiles black/tileBlack_68.png');
    new DataRequest(1516501, 1517344, 0, 0).open('GET', '/assets/PNG/Tiles black/tileBlack_25.png');
    new DataRequest(1517344, 1520232, 0, 0).open('GET', '/assets/PNG/Tiles black/tileBlack_54.png');
    new DataRequest(1520232, 1523015, 0, 0).open('GET', '/assets/PNG/Tiles black/tileBlack_60.png');
    new DataRequest(1523015, 1523806, 0, 0).open('GET', '/assets/PNG/Tiles black/tileBlack_50.png');
    new DataRequest(1523806, 1525645, 0, 0).open('GET', '/assets/PNG/Tiles black/tileBlack_05.png');
    new DataRequest(1525645, 1527509, 0, 0).open('GET', '/assets/PNG/Tiles black/tileBlack_70.png');
    new DataRequest(1527509, 1529479, 0, 0).open('GET', '/assets/PNG/Tiles black/tileBlack_24.png');
    new DataRequest(1529479, 1532326, 0, 0).open('GET', '/assets/PNG/Tiles black/tileBlack_30.png');
    new DataRequest(1532326, 1534198, 0, 0).open('GET', '/assets/PNG/Tiles black/tileBlack_12.png');
    new DataRequest(1534198, 1535953, 0, 0).open('GET', '/assets/PNG/Tiles black/tileBlack_58.png');
    new DataRequest(1535953, 1537243, 0, 0).open('GET', '/assets/PNG/Tiles black/tileBlack_31.png');
    new DataRequest(1537243, 1540130, 0, 0).open('GET', '/assets/PNG/Tiles black/tileBlack_42.png');
    new DataRequest(1540130, 1542158, 0, 0).open('GET', '/assets/PNG/Tiles black/tileBlack_56.png');
    new DataRequest(1542158, 1544291, 0, 0).open('GET', '/assets/PNG/Tiles black/tileBlack_23.png');
    new DataRequest(1544291, 1546233, 0, 0).open('GET', '/assets/PNG/Tiles black/tileBlack_11.png');
    new DataRequest(1546233, 1548835, 0, 0).open('GET', '/assets/PNG/Tiles black/tileBlack_41.png');
    new DataRequest(1548835, 1551712, 0, 0).open('GET', '/assets/PNG/Tiles black/tileBlack_72.png');
    new DataRequest(1551712, 1552422, 0, 0).open('GET', '/assets/PNG/Tiles black/tileBlack_39.png');
    new DataRequest(1552422, 1554390, 0, 0).open('GET', '/assets/PNG/Tiles black/tileBlack_18.png');
    new DataRequest(1554390, 1555437, 0, 0).open('GET', '/assets/PNG/Tiles black/tileBlack_40.png');
    new DataRequest(1555437, 1558106, 0, 0).open('GET', '/assets/PNG/Tiles black/tileBlack_65.png');
    new DataRequest(1558106, 1561037, 0, 0).open('GET', '/assets/PNG/Tiles black/tileBlack_66.png');
    new DataRequest(1561037, 1561731, 0, 0).open('GET', '/assets/PNG/Tiles black/tileBlack_51.png');
    new DataRequest(1561731, 1564182, 0, 0).open('GET', '/assets/PNG/Tiles black/tileBlack_29.png');
    new DataRequest(1564182, 1565589, 0, 0).open('GET', '/assets/PNG/Tiles black/tileBlack_20.png');
    new DataRequest(1565589, 1566917, 0, 0).open('GET', '/assets/PNG/Tiles black/tileBlack_22.png');
    new DataRequest(1566917, 1567777, 0, 0).open('GET', '/assets/PNG/Tiles black/tileBlack_61.png');
    new DataRequest(1567777, 1570758, 0, 0).open('GET', '/assets/PNG/Tiles black/tileBlack_33.png');
    new DataRequest(1570758, 1571603, 0, 0).open('GET', '/assets/PNG/Tiles black/tileBlack_49.png');
    new DataRequest(1571603, 1574088, 0, 0).open('GET', '/assets/PNG/Tiles black/tileBlack_53.png');
    new DataRequest(1574088, 1577093, 0, 0).open('GET', '/assets/PNG/Tiles black/tileBlack_35.png');
    new DataRequest(1577093, 1579862, 0, 0).open('GET', '/assets/PNG/Tiles black/tileBlack_36.png');
    new DataRequest(1579862, 1583092, 0, 0).open('GET', '/assets/PNG/Tiles black/tileBlack_71.png');
    new DataRequest(1583092, 1585020, 0, 0).open('GET', '/assets/PNG/Tiles black/tileBlack_06.png');
    new DataRequest(1585020, 1588101, 0, 0).open('GET', '/assets/PNG/Tiles black/tileBlack_45.png');
    new DataRequest(1588101, 1588959, 0, 0).open('GET', '/assets/PNG/Tiles black/tileBlack_37.png');
    new DataRequest(1588959, 1589369, 0, 0).open('GET', '/assets/PNG/Tiles black/tileBlack_03.png');
    new DataRequest(1589369, 1589849, 0, 0).open('GET', '/assets/PNG/Tiles black/tileBlack_02.png');
    new DataRequest(1589849, 1591136, 0, 0).open('GET', '/assets/PNG/Tiles black/tileBlack_55.png');
    new DataRequest(1591136, 1592170, 0, 0).open('GET', '/assets/PNG/Tiles black/tileBlack_52.png');
    new DataRequest(1592170, 1593566, 0, 0).open('GET', '/assets/PNG/Tiles black/tileBlack_08.png');
    new DataRequest(1593566, 1596403, 0, 0).open('GET', '/assets/PNG/Tiles black/tileBlack_48.png');
    new DataRequest(1596403, 1596883, 0, 0).open('GET', '/assets/PNG/Tiles black/tileBlack_14.png');
    new DataRequest(1596883, 1597689, 0, 0).open('GET', '/assets/PNG/Tiles black/tileBlack_62.png');
    new DataRequest(1597689, 1599707, 0, 0).open('GET', '/assets/PNG/Tiles black/tileBlack_44.png');
    new DataRequest(1599707, 1602820, 0, 0).open('GET', '/assets/PNG/Tiles black/tileBlack_69.png');
    new DataRequest(1602820, 1604821, 0, 0).open('GET', '/assets/PNG/Tiles black/tileBlack_32.png');
    new DataRequest(1604821, 1605774, 0, 0).open('GET', '/assets/PNG/Tiles black/tileBlack_07.png');
    new DataRequest(1605774, 1607760, 0, 0).open('GET', '/assets/PNG/Tiles black/tileBlack_17.png');
    new DataRequest(1607760, 1609835, 0, 0).open('GET', '/assets/PNG/Tiles black/tileBlack_09.png');
    new DataRequest(1609835, 1610877, 0, 0).open('GET', '/assets/PNG/Tiles black/tileBlack_28.png');
    new DataRequest(1610877, 1612695, 0, 0).open('GET', '/assets/PNG/Tiles black/tileBlack_46.png');
    new DataRequest(1612695, 1613912, 0, 0).open('GET', '/assets/PNG/Tiles black/tileBlack_10.png');
    new DataRequest(1613912, 1614950, 0, 0).open('GET', '/assets/PNG/Tiles black/tileBlack_64.png');
    new DataRequest(1614950, 1617981, 0, 0).open('GET', '/assets/PNG/Tiles black/tileBlack_59.png');
    new DataRequest(1617981, 1620044, 0, 0).open('GET', '/assets/PNG/Particles yellow/particleYellow_4.png');
    new DataRequest(1620044, 1621918, 0, 0).open('GET', '/assets/PNG/Particles yellow/particleYellow_3.png');
    new DataRequest(1621918, 1624097, 0, 0).open('GET', '/assets/PNG/Particles yellow/particleYellow_5.png');
    new DataRequest(1624097, 1626223, 0, 0).open('GET', '/assets/PNG/Particles yellow/particleYellow_7.png');
    new DataRequest(1626223, 1628481, 0, 0).open('GET', '/assets/PNG/Particles yellow/particleYellow_1.png');
    new DataRequest(1628481, 1631366, 0, 0).open('GET', '/assets/PNG/Particles yellow/particleYellow_2.png');
    new DataRequest(1631366, 1634264, 0, 0).open('GET', '/assets/PNG/Particles yellow/particleYellow_6.png');
    new DataRequest(1634264, 1635688, 0, 0).open('GET', '/assets/PNG/Back tiles/BackTile_15.png');
    new DataRequest(1635688, 1637262, 0, 0).open('GET', '/assets/PNG/Back tiles/BackTile_09.png');
    new DataRequest(1637262, 1638513, 0, 0).open('GET', '/assets/PNG/Back tiles/BackTile_05.png');
    new DataRequest(1638513, 1639983, 0, 0).open('GET', '/assets/PNG/Back tiles/BackTile_11.png');
    new DataRequest(1639983, 1641542, 0, 0).open('GET', '/assets/PNG/Back tiles/BackTile_03.png');
    new DataRequest(1641542, 1643770, 0, 0).open('GET', '/assets/PNG/Back tiles/BackTile_12.png');
    new DataRequest(1643770, 1645314, 0, 0).open('GET', '/assets/PNG/Back tiles/BackTile_17.png');
    new DataRequest(1645314, 1647014, 0, 0).open('GET', '/assets/PNG/Back tiles/BackTile_06.png');
    new DataRequest(1647014, 1649241, 0, 0).open('GET', '/assets/PNG/Back tiles/BackTile_08.png');
    new DataRequest(1649241, 1651583, 0, 0).open('GET', '/assets/PNG/Back tiles/BackTile_10.png');
    new DataRequest(1651583, 1653843, 0, 0).open('GET', '/assets/PNG/Back tiles/BackTile_18.png');
    new DataRequest(1653843, 1656057, 0, 0).open('GET', '/assets/PNG/Back tiles/BackTile_02.png');
    new DataRequest(1656057, 1657507, 0, 0).open('GET', '/assets/PNG/Back tiles/BackTile_07.png');
    new DataRequest(1657507, 1658946, 0, 0).open('GET', '/assets/PNG/Back tiles/BackTile_01.png');
    new DataRequest(1658946, 1660519, 0, 0).open('GET', '/assets/PNG/Back tiles/BackTile_13.png');
    new DataRequest(1660519, 1662847, 0, 0).open('GET', '/assets/PNG/Back tiles/BackTile_04.png');
    new DataRequest(1662847, 1664995, 0, 0).open('GET', '/assets/PNG/Back tiles/BackTile_16.png');
    new DataRequest(1664995, 1667325, 0, 0).open('GET', '/assets/PNG/Back tiles/BackTile_14.png');
    new DataRequest(1667325, 1669305, 0, 0).open('GET', '/assets/PNG/Tiles green/tileGreen_12.png');
    new DataRequest(1669305, 1670770, 0, 0).open('GET', '/assets/PNG/Tiles green/tileGreen_08.png');
    new DataRequest(1670770, 1673772, 0, 0).open('GET', '/assets/PNG/Tiles green/tileGreen_30.png');
    new DataRequest(1673772, 1677089, 0, 0).open('GET', '/assets/PNG/Tiles green/tileGreen_71.png');
    new DataRequest(1677089, 1680124, 0, 0).open('GET', '/assets/PNG/Tiles green/tileGreen_42.png');
    new DataRequest(1680124, 1680981, 0, 0).open('GET', '/assets/PNG/Tiles green/tileGreen_49.png');
    new DataRequest(1680981, 1681807, 0, 0).open('GET', '/assets/PNG/Tiles green/tileGreen_26.png');
    new DataRequest(1681807, 1682651, 0, 0).open('GET', '/assets/PNG/Tiles green/tileGreen_38.png');
    new DataRequest(1682651, 1685595, 0, 0).open('GET', '/assets/PNG/Tiles green/tileGreen_72.png');
    new DataRequest(1685595, 1686478, 0, 0).open('GET', '/assets/PNG/Tiles green/tileGreen_25.png');
    new DataRequest(1686478, 1686972, 0, 0).open('GET', '/assets/PNG/Tiles green/tileGreen_02.png');
    new DataRequest(1686972, 1689026, 0, 0).open('GET', '/assets/PNG/Tiles green/tileGreen_56.png');
    new DataRequest(1689026, 1691099, 0, 0).open('GET', '/assets/PNG/Tiles green/tileGreen_68.png');
    new DataRequest(1691099, 1694479, 0, 0).open('GET', '/assets/PNG/Tiles green/tileGreen_47.png');
    new DataRequest(1694479, 1697187, 0, 0).open('GET', '/assets/PNG/Tiles green/tileGreen_65.png');
    new DataRequest(1697187, 1698587, 0, 0).open('GET', '/assets/PNG/Tiles green/tileGreen_67.png');
    new DataRequest(1698587, 1700527, 0, 0).open('GET', '/assets/PNG/Tiles green/tileGreen_05.png');
    new DataRequest(1700527, 1703412, 0, 0).open('GET', '/assets/PNG/Tiles green/tileGreen_36.png');
    new DataRequest(1703412, 1704453, 0, 0).open('GET', '/assets/PNG/Tiles green/tileGreen_19.png');
    new DataRequest(1704453, 1706687, 0, 0).open('GET', '/assets/PNG/Tiles green/tileGreen_09.png');
    new DataRequest(1706687, 1707505, 0, 0).open('GET', '/assets/PNG/Tiles green/tileGreen_62.png');
    new DataRequest(1707505, 1709323, 0, 0).open('GET', '/assets/PNG/Tiles green/tileGreen_58.png');
    new DataRequest(1709323, 1710031, 0, 0).open('GET', '/assets/PNG/Tiles green/tileGreen_04.png');
    new DataRequest(1710031, 1711875, 0, 0).open('GET', '/assets/PNG/Tiles green/tileGreen_34.png');
    new DataRequest(1711875, 1712878, 0, 0).open('GET', '/assets/PNG/Tiles green/tileGreen_07.png');
    new DataRequest(1712878, 1716127, 0, 0).open('GET', '/assets/PNG/Tiles green/tileGreen_69.png');
    new DataRequest(1716127, 1718222, 0, 0).open('GET', '/assets/PNG/Tiles green/tileGreen_24.png');
    new DataRequest(1718222, 1719668, 0, 0).open('GET', '/assets/PNG/Tiles green/tileGreen_22.png');
    new DataRequest(1719668, 1720380, 0, 0).open('GET', '/assets/PNG/Tiles green/tileGreen_16.png');
    new DataRequest(1720380, 1722913, 0, 0).open('GET', '/assets/PNG/Tiles green/tileGreen_53.png');
    new DataRequest(1722913, 1724999, 0, 0).open('GET', '/assets/PNG/Tiles green/tileGreen_18.png');
    new DataRequest(1724999, 1726375, 0, 0).open('GET', '/assets/PNG/Tiles green/tileGreen_31.png');
    new DataRequest(1726375, 1727123, 0, 0).open('GET', '/assets/PNG/Tiles green/tileGreen_39.png');
    new DataRequest(1727123, 1730241, 0, 0).open('GET', '/assets/PNG/Tiles green/tileGreen_57.png');
    new DataRequest(1730241, 1732349, 0, 0).open('GET', '/assets/PNG/Tiles green/tileGreen_17.png');
    new DataRequest(1732349, 1735305, 0, 0).open('GET', '/assets/PNG/Tiles green/tileGreen_54.png');
    new DataRequest(1735305, 1737403, 0, 0).open('GET', '/assets/PNG/Tiles green/tileGreen_32.png');
    new DataRequest(1737403, 1738137, 0, 0).open('GET', '/assets/PNG/Tiles green/tileGreen_27.png');
    new DataRequest(1738137, 1739458, 0, 0).open('GET', '/assets/PNG/Tiles green/tileGreen_10.png');
    new DataRequest(1739458, 1742548, 0, 0).open('GET', '/assets/PNG/Tiles green/tileGreen_59.png');
    new DataRequest(1742548, 1743634, 0, 0).open('GET', '/assets/PNG/Tiles green/tileGreen_28.png');
    new DataRequest(1743634, 1744696, 0, 0).open('GET', '/assets/PNG/Tiles green/tileGreen_64.png');
    new DataRequest(1744696, 1747873, 0, 0).open('GET', '/assets/PNG/Tiles green/tileGreen_33.png');
    new DataRequest(1747873, 1749984, 0, 0).open('GET', '/assets/PNG/Tiles green/tileGreen_44.png');
    new DataRequest(1749984, 1752761, 0, 0).open('GET', '/assets/PNG/Tiles green/tileGreen_41.png');
    new DataRequest(1752761, 1755751, 0, 0).open('GET', '/assets/PNG/Tiles green/tileGreen_66.png');
    new DataRequest(1755751, 1759092, 0, 0).open('GET', '/assets/PNG/Tiles green/tileGreen_45.png');
    new DataRequest(1759092, 1760572, 0, 0).open('GET', '/assets/PNG/Tiles green/tileGreen_20.png');
    new DataRequest(1760572, 1762506, 0, 0).open('GET', '/assets/PNG/Tiles green/tileGreen_70.png');
    new DataRequest(1762506, 1764896, 0, 0).open('GET', '/assets/PNG/Tiles green/tileGreen_21.png');
    new DataRequest(1764896, 1768039, 0, 0).open('GET', '/assets/PNG/Tiles green/tileGreen_35.png');
    new DataRequest(1768039, 1771032, 0, 0).open('GET', '/assets/PNG/Tiles green/tileGreen_48.png');
    new DataRequest(1771032, 1771460, 0, 0).open('GET', '/assets/PNG/Tiles green/tileGreen_03.png');
    new DataRequest(1771460, 1772890, 0, 0).open('GET', '/assets/PNG/Tiles green/tileGreen_43.png');
    new DataRequest(1772890, 1773605, 0, 0).open('GET', '/assets/PNG/Tiles green/tileGreen_63.png');
    new DataRequest(1773605, 1776439, 0, 0).open('GET', '/assets/PNG/Tiles green/tileGreen_60.png');
    new DataRequest(1776439, 1777778, 0, 0).open('GET', '/assets/PNG/Tiles green/tileGreen_55.png');
    new DataRequest(1777778, 1778483, 0, 0).open('GET', '/assets/PNG/Tiles green/tileGreen_51.png');
    new DataRequest(1778483, 1779033, 0, 0).open('GET', '/assets/PNG/Tiles green/tileGreen_01.png');
    new DataRequest(1779033, 1779592, 0, 0).open('GET', '/assets/PNG/Tiles green/tileGreen_13.png');
    new DataRequest(1779592, 1780394, 0, 0).open('GET', '/assets/PNG/Tiles green/tileGreen_50.png');
    new DataRequest(1780394, 1781294, 0, 0).open('GET', '/assets/PNG/Tiles green/tileGreen_37.png');
    new DataRequest(1781294, 1783372, 0, 0).open('GET', '/assets/PNG/Tiles green/tileGreen_11.png');
    new DataRequest(1783372, 1785680, 0, 0).open('GET', '/assets/PNG/Tiles green/tileGreen_23.png');
    new DataRequest(1785680, 1787638, 0, 0).open('GET', '/assets/PNG/Tiles green/tileGreen_46.png');
    new DataRequest(1787638, 1788137, 0, 0).open('GET', '/assets/PNG/Tiles green/tileGreen_14.png');
    new DataRequest(1788137, 1789008, 0, 0).open('GET', '/assets/PNG/Tiles green/tileGreen_61.png');
    new DataRequest(1789008, 1791073, 0, 0).open('GET', '/assets/PNG/Tiles green/tileGreen_06.png');
    new DataRequest(1791073, 1792163, 0, 0).open('GET', '/assets/PNG/Tiles green/tileGreen_40.png');
    new DataRequest(1792163, 1794744, 0, 0).open('GET', '/assets/PNG/Tiles green/tileGreen_29.png');
    new DataRequest(1794744, 1795799, 0, 0).open('GET', '/assets/PNG/Tiles green/tileGreen_52.png');
    new DataRequest(1795799, 1796241, 0, 0).open('GET', '/assets/PNG/Tiles green/tileGreen_15.png');
    new DataRequest(1796241, 1798461, 0, 0).open('GET', '/assets/PNG/Tiles blue/tileBlue_09.png');
    new DataRequest(1798461, 1798961, 0, 0).open('GET', '/assets/PNG/Tiles blue/tileBlue_14.png');
    new DataRequest(1798961, 1800049, 0, 0).open('GET', '/assets/PNG/Tiles blue/tileBlue_28.png');
    new DataRequest(1800049, 1802160, 0, 0).open('GET', '/assets/PNG/Tiles blue/tileBlue_24.png');
    new DataRequest(1802160, 1803609, 0, 0).open('GET', '/assets/PNG/Tiles blue/tileBlue_22.png');
    new DataRequest(1803609, 1804454, 0, 0).open('GET', '/assets/PNG/Tiles blue/tileBlue_38.png');
    new DataRequest(1804454, 1806541, 0, 0).open('GET', '/assets/PNG/Tiles blue/tileBlue_32.png');
    new DataRequest(1806541, 1809052, 0, 0).open('GET', '/assets/PNG/Tiles blue/tileBlue_53.png');
    new DataRequest(1809052, 1810524, 0, 0).open('GET', '/assets/PNG/Tiles blue/tileBlue_20.png');
    new DataRequest(1810524, 1811857, 0, 0).open('GET', '/assets/PNG/Tiles blue/tileBlue_55.png');
    new DataRequest(1811857, 1812590, 0, 0).open('GET', '/assets/PNG/Tiles blue/tileBlue_27.png');
    new DataRequest(1812590, 1814636, 0, 0).open('GET', '/assets/PNG/Tiles blue/tileBlue_68.png');
    new DataRequest(1814636, 1815535, 0, 0).open('GET', '/assets/PNG/Tiles blue/tileBlue_37.png');
    new DataRequest(1815535, 1818222, 0, 0).open('GET', '/assets/PNG/Tiles blue/tileBlue_65.png');
    new DataRequest(1818222, 1821121, 0, 0).open('GET', '/assets/PNG/Tiles blue/tileBlue_36.png');
    new DataRequest(1821121, 1821548, 0, 0).open('GET', '/assets/PNG/Tiles blue/tileBlue_03.png');
    new DataRequest(1821548, 1822096, 0, 0).open('GET', '/assets/PNG/Tiles blue/tileBlue_01.png');
    new DataRequest(1822096, 1823892, 0, 0).open('GET', '/assets/PNG/Tiles blue/tileBlue_58.png');
    new DataRequest(1823892, 1825969, 0, 0).open('GET', '/assets/PNG/Tiles blue/tileBlue_11.png');
    new DataRequest(1825969, 1828085, 0, 0).open('GET', '/assets/PNG/Tiles blue/tileBlue_17.png');
    new DataRequest(1828085, 1828910, 0, 0).open('GET', '/assets/PNG/Tiles blue/tileBlue_26.png');
    new DataRequest(1828910, 1831881, 0, 0).open('GET', '/assets/PNG/Tiles blue/tileBlue_66.png');
    new DataRequest(1831881, 1832971, 0, 0).open('GET', '/assets/PNG/Tiles blue/tileBlue_40.png');
    new DataRequest(1832971, 1834025, 0, 0).open('GET', '/assets/PNG/Tiles blue/tileBlue_64.png');
    new DataRequest(1834025, 1836320, 0, 0).open('GET', '/assets/PNG/Tiles blue/tileBlue_23.png');
    new DataRequest(1836320, 1838244, 0, 0).open('GET', '/assets/PNG/Tiles blue/tileBlue_05.png');
    new DataRequest(1838244, 1838804, 0, 0).open('GET', '/assets/PNG/Tiles blue/tileBlue_13.png');
    new DataRequest(1838804, 1839605, 0, 0).open('GET', '/assets/PNG/Tiles blue/tileBlue_50.png');
    new DataRequest(1839605, 1842777, 0, 0).open('GET', '/assets/PNG/Tiles blue/tileBlue_33.png');
    new DataRequest(1842777, 1845825, 0, 0).open('GET', '/assets/PNG/Tiles blue/tileBlue_42.png');
    new DataRequest(1845825, 1848771, 0, 0).open('GET', '/assets/PNG/Tiles blue/tileBlue_72.png');
    new DataRequest(1848771, 1850880, 0, 0).open('GET', '/assets/PNG/Tiles blue/tileBlue_18.png');
    new DataRequest(1850880, 1852189, 0, 0).open('GET', '/assets/PNG/Tiles blue/tileBlue_10.png');
    new DataRequest(1852189, 1854103, 0, 0).open('GET', '/assets/PNG/Tiles blue/tileBlue_70.png');
    new DataRequest(1854103, 1856945, 0, 0).open('GET', '/assets/PNG/Tiles blue/tileBlue_60.png');
    new DataRequest(1856945, 1857660, 0, 0).open('GET', '/assets/PNG/Tiles blue/tileBlue_16.png');
    new DataRequest(1857660, 1859088, 0, 0).open('GET', '/assets/PNG/Tiles blue/tileBlue_43.png');
    new DataRequest(1859088, 1861120, 0, 0).open('GET', '/assets/PNG/Tiles blue/tileBlue_56.png');
    new DataRequest(1861120, 1863895, 0, 0).open('GET', '/assets/PNG/Tiles blue/tileBlue_41.png');
    new DataRequest(1863895, 1864643, 0, 0).open('GET', '/assets/PNG/Tiles blue/tileBlue_39.png');
    new DataRequest(1864643, 1866018, 0, 0).open('GET', '/assets/PNG/Tiles blue/tileBlue_31.png');
    new DataRequest(1866018, 1866899, 0, 0).open('GET', '/assets/PNG/Tiles blue/tileBlue_25.png');
    new DataRequest(1866899, 1869985, 0, 0).open('GET', '/assets/PNG/Tiles blue/tileBlue_59.png');
    new DataRequest(1869985, 1871022, 0, 0).open('GET', '/assets/PNG/Tiles blue/tileBlue_19.png');
    new DataRequest(1871022, 1874237, 0, 0).open('GET', '/assets/PNG/Tiles blue/tileBlue_69.png');
    new DataRequest(1874237, 1877329, 0, 0).open('GET', '/assets/PNG/Tiles blue/tileBlue_57.png');
    new DataRequest(1877329, 1880721, 0, 0).open('GET', '/assets/PNG/Tiles blue/tileBlue_47.png');
    new DataRequest(1880721, 1883121, 0, 0).open('GET', '/assets/PNG/Tiles blue/tileBlue_21.png');
    new DataRequest(1883121, 1885694, 0, 0).open('GET', '/assets/PNG/Tiles blue/tileBlue_29.png');
    new DataRequest(1885694, 1889001, 0, 0).open('GET', '/assets/PNG/Tiles blue/tileBlue_71.png');
    new DataRequest(1889001, 1890454, 0, 0).open('GET', '/assets/PNG/Tiles blue/tileBlue_08.png');
    new DataRequest(1890454, 1893390, 0, 0).open('GET', '/assets/PNG/Tiles blue/tileBlue_54.png');
    new DataRequest(1893390, 1896393, 0, 0).open('GET', '/assets/PNG/Tiles blue/tileBlue_30.png');
    new DataRequest(1896393, 1897111, 0, 0).open('GET', '/assets/PNG/Tiles blue/tileBlue_63.png');
    new DataRequest(1897111, 1899078, 0, 0).open('GET', '/assets/PNG/Tiles blue/tileBlue_46.png');
    new DataRequest(1899078, 1899952, 0, 0).open('GET', '/assets/PNG/Tiles blue/tileBlue_61.png');
    new DataRequest(1899952, 1901002, 0, 0).open('GET', '/assets/PNG/Tiles blue/tileBlue_52.png');
    new DataRequest(1901002, 1904349, 0, 0).open('GET', '/assets/PNG/Tiles blue/tileBlue_45.png');
    new DataRequest(1904349, 1906448, 0, 0).open('GET', '/assets/PNG/Tiles blue/tileBlue_44.png');
    new DataRequest(1906448, 1907269, 0, 0).open('GET', '/assets/PNG/Tiles blue/tileBlue_62.png');
    new DataRequest(1907269, 1909324, 0, 0).open('GET', '/assets/PNG/Tiles blue/tileBlue_06.png');
    new DataRequest(1909324, 1910714, 0, 0).open('GET', '/assets/PNG/Tiles blue/tileBlue_67.png');
    new DataRequest(1910714, 1912559, 0, 0).open('GET', '/assets/PNG/Tiles blue/tileBlue_34.png');
    new DataRequest(1912559, 1913052, 0, 0).open('GET', '/assets/PNG/Tiles blue/tileBlue_02.png');
    new DataRequest(1913052, 1914054, 0, 0).open('GET', '/assets/PNG/Tiles blue/tileBlue_07.png');
    new DataRequest(1914054, 1916044, 0, 0).open('GET', '/assets/PNG/Tiles blue/tileBlue_12.png');
    new DataRequest(1916044, 1919197, 0, 0).open('GET', '/assets/PNG/Tiles blue/tileBlue_35.png');
    new DataRequest(1919197, 1919899, 0, 0).open('GET', '/assets/PNG/Tiles blue/tileBlue_51.png');
    new DataRequest(1919899, 1922901, 0, 0).open('GET', '/assets/PNG/Tiles blue/tileBlue_48.png');
    new DataRequest(1922901, 1923344, 0, 0).open('GET', '/assets/PNG/Tiles blue/tileBlue_15.png');
    new DataRequest(1923344, 1924199, 0, 0).open('GET', '/assets/PNG/Tiles blue/tileBlue_49.png');
    new DataRequest(1924199, 1924908, 0, 0).open('GET', '/assets/PNG/Tiles blue/tileBlue_04.png');
    new DataRequest(1924908, 1927846, 0, 0).open('GET', '/assets/PNG/Coins/coin_30.png');
    new DataRequest(1927846, 1931299, 0, 0).open('GET', '/assets/PNG/Coins/coin_19.png');
    new DataRequest(1931299, 1933660, 0, 0).open('GET', '/assets/PNG/Coins/coin_34.png');
    new DataRequest(1933660, 1936148, 0, 0).open('GET', '/assets/PNG/Coins/coin_15.png');
    new DataRequest(1936148, 1939040, 0, 0).open('GET', '/assets/PNG/Coins/coin_26.png');
    new DataRequest(1939040, 1941506, 0, 0).open('GET', '/assets/PNG/Coins/coin_35.png');
    new DataRequest(1941506, 1943493, 0, 0).open('GET', '/assets/PNG/Coins/coin_03.png');
    new DataRequest(1943493, 1945508, 0, 0).open('GET', '/assets/PNG/Coins/coin_01.png');
    new DataRequest(1945508, 1947353, 0, 0).open('GET', '/assets/PNG/Coins/coin_21.png');
    new DataRequest(1947353, 1949772, 0, 0).open('GET', '/assets/PNG/Coins/coin_32.png');
    new DataRequest(1949772, 1952959, 0, 0).open('GET', '/assets/PNG/Coins/coin_10.png');
    new DataRequest(1952959, 1956024, 0, 0).open('GET', '/assets/PNG/Coins/coin_06.png');
    new DataRequest(1956024, 1959395, 0, 0).open('GET', '/assets/PNG/Coins/coin_36.png');
    new DataRequest(1959395, 1961830, 0, 0).open('GET', '/assets/PNG/Coins/coin_12.png');
    new DataRequest(1961830, 1965238, 0, 0).open('GET', '/assets/PNG/Coins/coin_37.png');
    new DataRequest(1965238, 1968311, 0, 0).open('GET', '/assets/PNG/Coins/coin_07.png');
    new DataRequest(1968311, 1971724, 0, 0).open('GET', '/assets/PNG/Coins/coin_17.png');
    new DataRequest(1971724, 1975253, 0, 0).open('GET', '/assets/PNG/Coins/coin_20.png');
    new DataRequest(1975253, 1977372, 0, 0).open('GET', '/assets/PNG/Coins/coin_05.png');
    new DataRequest(1977372, 1980753, 0, 0).open('GET', '/assets/PNG/Coins/coin_16.png');
    new DataRequest(1980753, 1983721, 0, 0).open('GET', '/assets/PNG/Coins/coin_29.png');
    new DataRequest(1983721, 1987232, 0, 0).open('GET', '/assets/PNG/Coins/coin_40.png');
    new DataRequest(1987232, 1990223, 0, 0).open('GET', '/assets/PNG/Coins/coin_08.png');
    new DataRequest(1990223, 1992289, 0, 0).open('GET', '/assets/PNG/Coins/coin_02.png');
    new DataRequest(1992289, 1995129, 0, 0).open('GET', '/assets/PNG/Coins/coin_27.png');
    new DataRequest(1995129, 1997453, 0, 0).open('GET', '/assets/PNG/Coins/coin_13.png');
    new DataRequest(1997453, 2000762, 0, 0).open('GET', '/assets/PNG/Coins/coin_18.png');
    new DataRequest(2000762, 2003076, 0, 0).open('GET', '/assets/PNG/Coins/coin_33.png');
    new DataRequest(2003076, 2005445, 0, 0).open('GET', '/assets/PNG/Coins/coin_14.png');
    new DataRequest(2005445, 2007327, 0, 0).open('GET', '/assets/PNG/Coins/coin_25.png');
    new DataRequest(2007327, 2009161, 0, 0).open('GET', '/assets/PNG/Coins/coin_22.png');
    new DataRequest(2009161, 2012464, 0, 0).open('GET', '/assets/PNG/Coins/coin_38.png');
    new DataRequest(2012464, 2014493, 0, 0).open('GET', '/assets/PNG/Coins/coin_04.png');
    new DataRequest(2014493, 2016830, 0, 0).open('GET', '/assets/PNG/Coins/coin_31.png');
    new DataRequest(2016830, 2019959, 0, 0).open('GET', '/assets/PNG/Coins/coin_09.png');
    new DataRequest(2019959, 2021834, 0, 0).open('GET', '/assets/PNG/Coins/coin_24.png');
    new DataRequest(2021834, 2024172, 0, 0).open('GET', '/assets/PNG/Coins/coin_11.png');
    new DataRequest(2024172, 2025990, 0, 0).open('GET', '/assets/PNG/Coins/coin_23.png');
    new DataRequest(2025990, 2028808, 0, 0).open('GET', '/assets/PNG/Coins/coin_28.png');
    new DataRequest(2028808, 2032252, 0, 0).open('GET', '/assets/PNG/Coins/coin_39.png');
    new DataRequest(2032252, 2032957, 0, 0).open('GET', '/assets/PNG/Tiles orange/tileOrange_50.png');
    new DataRequest(2032957, 2034864, 0, 0).open('GET', '/assets/PNG/Tiles orange/tileOrange_04.png');
    new DataRequest(2034864, 2036185, 0, 0).open('GET', '/assets/PNG/Tiles orange/tileOrange_09.png');
    new DataRequest(2036185, 2039163, 0, 0).open('GET', '/assets/PNG/Tiles orange/tileOrange_41.png');
    new DataRequest(2039163, 2041217, 0, 0).open('GET', '/assets/PNG/Tiles orange/tileOrange_10.png');
    new DataRequest(2041217, 2043742, 0, 0).open('GET', '/assets/PNG/Tiles orange/tileOrange_28.png');
    new DataRequest(2043742, 2044737, 0, 0).open('GET', '/assets/PNG/Tiles orange/tileOrange_06.png');
    new DataRequest(2044737, 2045237, 0, 0).open('GET', '/assets/PNG/Tiles orange/tileOrange_13.png');
    new DataRequest(2045237, 2046120, 0, 0).open('GET', '/assets/PNG/Tiles orange/tileOrange_36.png');
    new DataRequest(2046120, 2049075, 0, 0).open('GET', '/assets/PNG/Tiles orange/tileOrange_65.png');
    new DataRequest(2049075, 2050150, 0, 0).open('GET', '/assets/PNG/Tiles orange/tileOrange_39.png');
    new DataRequest(2050150, 2053455, 0, 0).open('GET', '/assets/PNG/Tiles orange/tileOrange_46.png');
    new DataRequest(2053455, 2054284, 0, 0).open('GET', '/assets/PNG/Tiles orange/tileOrange_37.png');
    new DataRequest(2054284, 2056486, 0, 0).open('GET', '/assets/PNG/Tiles orange/tileOrange_08.png');
    new DataRequest(2056486, 2059207, 0, 0).open('GET', '/assets/PNG/Tiles orange/tileOrange_40.png');
    new DataRequest(2059207, 2060083, 0, 0).open('GET', '/assets/PNG/Tiles orange/tileOrange_60.png');
    new DataRequest(2060083, 2061435, 0, 0).open('GET', '/assets/PNG/Tiles orange/tileOrange_30.png');
    new DataRequest(2061435, 2063494, 0, 0).open('GET', '/assets/PNG/Tiles orange/tileOrange_31.png');
    new DataRequest(2063494, 2064053, 0, 0).open('GET', '/assets/PNG/Tiles orange/tileOrange_12.png');
    new DataRequest(2064053, 2064761, 0, 0).open('GET', '/assets/PNG/Tiles orange/tileOrange_03.png');
    new DataRequest(2064761, 2067702, 0, 0).open('GET', '/assets/PNG/Tiles orange/tileOrange_47.png');
    new DataRequest(2067702, 2070524, 0, 0).open('GET', '/assets/PNG/Tiles orange/tileOrange_59.png');
    new DataRequest(2070524, 2073595, 0, 0).open('GET', '/assets/PNG/Tiles orange/tileOrange_58.png');
    new DataRequest(2073595, 2074418, 0, 0).open('GET', '/assets/PNG/Tiles orange/tileOrange_61.png');
    new DataRequest(2074418, 2076446, 0, 0).open('GET', '/assets/PNG/Tiles orange/tileOrange_55.png');
    new DataRequest(2076446, 2077166, 0, 0).open('GET', '/assets/PNG/Tiles orange/tileOrange_62.png');
    new DataRequest(2077166, 2078965, 0, 0).open('GET', '/assets/PNG/Tiles orange/tileOrange_57.png');
    new DataRequest(2078965, 2081048, 0, 0).open('GET', '/assets/PNG/Tiles orange/tileOrange_16.png');
    new DataRequest(2081048, 2082101, 0, 0).open('GET', '/assets/PNG/Tiles orange/tileOrange_51.png');
    new DataRequest(2082101, 2083176, 0, 0).open('GET', '/assets/PNG/Tiles orange/tileOrange_27.png');
    new DataRequest(2083176, 2086370, 0, 0).open('GET', '/assets/PNG/Tiles orange/tileOrange_68.png');
    new DataRequest(2086370, 2088744, 0, 0).open('GET', '/assets/PNG/Tiles orange/tileOrange_20.png');
    new DataRequest(2088744, 2091409, 0, 0).open('GET', '/assets/PNG/Tiles orange/tileOrange_64.png');
    new DataRequest(2091409, 2091851, 0, 0).open('GET', '/assets/PNG/Tiles orange/tileOrange_14.png');
    new DataRequest(2091851, 2095151, 0, 0).open('GET', '/assets/PNG/Tiles orange/tileOrange_70.png');
    new DataRequest(2095151, 2095882, 0, 0).open('GET', '/assets/PNG/Tiles orange/tileOrange_38.png');
    new DataRequest(2095882, 2097959, 0, 0).open('GET', '/assets/PNG/Tiles orange/tileOrange_43.png');
    new DataRequest(2097959, 2101024, 0, 0).open('GET', '/assets/PNG/Tiles orange/tileOrange_34.png');
    new DataRequest(2101024, 2101835, 0, 0).open('GET', '/assets/PNG/Tiles orange/tileOrange_25.png');
    new DataRequest(2101835, 2105115, 0, 0).open('GET', '/assets/PNG/Tiles orange/tileOrange_44.png');
    new DataRequest(2105115, 2107193, 0, 0).open('GET', '/assets/PNG/Tiles orange/tileOrange_17.png');
    new DataRequest(2107193, 2107686, 0, 0).open('GET', '/assets/PNG/Tiles orange/tileOrange_01.png');
    new DataRequest(2107686, 2108489, 0, 0).open('GET', '/assets/PNG/Tiles orange/tileOrange_49.png');
    new DataRequest(2108489, 2109037, 0, 0).open('GET', '/assets/PNG/Tiles orange/tileOrange_72.png');
    new DataRequest(2109037, 2109903, 0, 0).open('GET', '/assets/PNG/Tiles orange/tileOrange_24.png');
    new DataRequest(2109903, 2110760, 0, 0).open('GET', '/assets/PNG/Tiles orange/tileOrange_48.png');
    new DataRequest(2110760, 2112670, 0, 0).open('GET', '/assets/PNG/Tiles orange/tileOrange_69.png');
    new DataRequest(2112670, 2114708, 0, 0).open('GET', '/assets/PNG/Tiles orange/tileOrange_67.png');
    new DataRequest(2114708, 2117522, 0, 0).open('GET', '/assets/PNG/Tiles orange/tileOrange_35.png');
    new DataRequest(2117522, 2118996, 0, 0).open('GET', '/assets/PNG/Tiles orange/tileOrange_19.png');
    new DataRequest(2118996, 2121491, 0, 0).open('GET', '/assets/PNG/Tiles orange/tileOrange_52.png');
    new DataRequest(2121491, 2124583, 0, 0).open('GET', '/assets/PNG/Tiles orange/tileOrange_32.png');
    new DataRequest(2124583, 2125969, 0, 0).open('GET', '/assets/PNG/Tiles orange/tileOrange_66.png');
    new DataRequest(2125969, 2127376, 0, 0).open('GET', '/assets/PNG/Tiles orange/tileOrange_42.png');
    new DataRequest(2127376, 2128409, 0, 0).open('GET', '/assets/PNG/Tiles orange/tileOrange_18.png');
    new DataRequest(2128409, 2129862, 0, 0).open('GET', '/assets/PNG/Tiles orange/tileOrange_07.png');
    new DataRequest(2129862, 2132789, 0, 0).open('GET', '/assets/PNG/Tiles orange/tileOrange_71.png');
    new DataRequest(2132789, 2134119, 0, 0).open('GET', '/assets/PNG/Tiles orange/tileOrange_54.png');
    new DataRequest(2134119, 2134546, 0, 0).open('GET', '/assets/PNG/Tiles orange/tileOrange_02.png');
    new DataRequest(2134546, 2137463, 0, 0).open('GET', '/assets/PNG/Tiles orange/tileOrange_53.png');
    new DataRequest(2137463, 2139559, 0, 0).open('GET', '/assets/PNG/Tiles orange/tileOrange_23.png');
    new DataRequest(2139559, 2141373, 0, 0).open('GET', '/assets/PNG/Tiles orange/tileOrange_33.png');
    new DataRequest(2141373, 2143349, 0, 0).open('GET', '/assets/PNG/Tiles orange/tileOrange_11.png');
    new DataRequest(2143349, 2146420, 0, 0).open('GET', '/assets/PNG/Tiles orange/tileOrange_56.png');
    new DataRequest(2146420, 2147864, 0, 0).open('GET', '/assets/PNG/Tiles orange/tileOrange_21.png');
    new DataRequest(2147864, 2150158, 0, 0).open('GET', '/assets/PNG/Tiles orange/tileOrange_22.png');
    new DataRequest(2150158, 2152192, 0, 0).open('GET', '/assets/PNG/Tiles orange/tileOrange_05.png');
    new DataRequest(2152192, 2155130, 0, 0).open('GET', '/assets/PNG/Tiles orange/tileOrange_29.png');
    new DataRequest(2155130, 2156187, 0, 0).open('GET', '/assets/PNG/Tiles orange/tileOrange_63.png');
    new DataRequest(2156187, 2156896, 0, 0).open('GET', '/assets/PNG/Tiles orange/tileOrange_15.png');
    new DataRequest(2156896, 2158835, 0, 0).open('GET', '/assets/PNG/Tiles orange/tileOrange_45.png');
    new DataRequest(2158835, 2159552, 0, 0).open('GET', '/assets/PNG/Tiles orange/tileOrange_26.png');
    new DataRequest(2159552, 2161570, 0, 0).open('GET', '/assets/PNG/Tiles pink/tilePink_17.png');
    new DataRequest(2161570, 2163483, 0, 0).open('GET', '/assets/PNG/Tiles pink/tilePink_46.png');
    new DataRequest(2163483, 2163903, 0, 0).open('GET', '/assets/PNG/Tiles pink/tilePink_03.png');
    new DataRequest(2163903, 2165248, 0, 0).open('GET', '/assets/PNG/Tiles pink/tilePink_67.png');
    new DataRequest(2165248, 2167310, 0, 0).open('GET', '/assets/PNG/Tiles pink/tilePink_11.png');
    new DataRequest(2167310, 2170286, 0, 0).open('GET', '/assets/PNG/Tiles pink/tilePink_42.png');
    new DataRequest(2170286, 2171687, 0, 0).open('GET', '/assets/PNG/Tiles pink/tilePink_43.png');
    new DataRequest(2171687, 2172388, 0, 0).open('GET', '/assets/PNG/Tiles pink/tilePink_16.png');
    new DataRequest(2172388, 2174904, 0, 0).open('GET', '/assets/PNG/Tiles pink/tilePink_29.png');
    new DataRequest(2174904, 2177763, 0, 0).open('GET', '/assets/PNG/Tiles pink/tilePink_66.png');
    new DataRequest(2177763, 2179738, 0, 0).open('GET', '/assets/PNG/Tiles pink/tilePink_56.png');
    new DataRequest(2179738, 2181117, 0, 0).open('GET', '/assets/PNG/Tiles pink/tilePink_22.png');
    new DataRequest(2181117, 2183374, 0, 0).open('GET', '/assets/PNG/Tiles pink/tilePink_23.png');
    new DataRequest(2183374, 2184168, 0, 0).open('GET', '/assets/PNG/Tiles pink/tilePink_50.png');
    new DataRequest(2184168, 2185439, 0, 0).open('GET', '/assets/PNG/Tiles pink/tilePink_10.png');
    new DataRequest(2185439, 2187316, 0, 0).open('GET', '/assets/PNG/Tiles pink/tilePink_05.png');
    new DataRequest(2187316, 2190301, 0, 0).open('GET', '/assets/PNG/Tiles pink/tilePink_57.png');
    new DataRequest(2190301, 2190998, 0, 0).open('GET', '/assets/PNG/Tiles pink/tilePink_51.png');
    new DataRequest(2190998, 2192079, 0, 0).open('GET', '/assets/PNG/Tiles pink/tilePink_40.png');
    new DataRequest(2192079, 2193120, 0, 0).open('GET', '/assets/PNG/Tiles pink/tilePink_64.png');
    new DataRequest(2193120, 2195185, 0, 0).open('GET', '/assets/PNG/Tiles pink/tilePink_44.png');
    new DataRequest(2195185, 2195993, 0, 0).open('GET', '/assets/PNG/Tiles pink/tilePink_62.png');
    new DataRequest(2195993, 2199116, 0, 0).open('GET', '/assets/PNG/Tiles pink/tilePink_33.png');
    new DataRequest(2199116, 2201176, 0, 0).open('GET', '/assets/PNG/Tiles pink/tilePink_32.png');
    new DataRequest(2201176, 2203472, 0, 0).open('GET', '/assets/PNG/Tiles pink/tilePink_21.png');
    new DataRequest(2203472, 2206347, 0, 0).open('GET', '/assets/PNG/Tiles pink/tilePink_72.png');
    new DataRequest(2206347, 2207175, 0, 0).open('GET', '/assets/PNG/Tiles pink/tilePink_26.png');
    new DataRequest(2207175, 2208210, 0, 0).open('GET', '/assets/PNG/Tiles pink/tilePink_52.png');
    new DataRequest(2208210, 2211268, 0, 0).open('GET', '/assets/PNG/Tiles pink/tilePink_59.png');
    new DataRequest(2211268, 2214122, 0, 0).open('GET', '/assets/PNG/Tiles pink/tilePink_54.png');
    new DataRequest(2214122, 2215098, 0, 0).open('GET', '/assets/PNG/Tiles pink/tilePink_07.png');
    new DataRequest(2215098, 2216399, 0, 0).open('GET', '/assets/PNG/Tiles pink/tilePink_55.png');
    new DataRequest(2216399, 2219612, 0, 0).open('GET', '/assets/PNG/Tiles pink/tilePink_71.png');
    new DataRequest(2219612, 2221597, 0, 0).open('GET', '/assets/PNG/Tiles pink/tilePink_12.png');
    new DataRequest(2221597, 2222139, 0, 0).open('GET', '/assets/PNG/Tiles pink/tilePink_01.png');
    new DataRequest(2222139, 2224155, 0, 0).open('GET', '/assets/PNG/Tiles pink/tilePink_18.png');
    new DataRequest(2224155, 2224889, 0, 0).open('GET', '/assets/PNG/Tiles pink/tilePink_27.png');
    new DataRequest(2224889, 2227427, 0, 0).open('GET', '/assets/PNG/Tiles pink/tilePink_65.png');
    new DataRequest(2227427, 2229237, 0, 0).open('GET', '/assets/PNG/Tiles pink/tilePink_34.png');
    new DataRequest(2229237, 2232571, 0, 0).open('GET', '/assets/PNG/Tiles pink/tilePink_47.png');
    new DataRequest(2232571, 2233058, 0, 0).open('GET', '/assets/PNG/Tiles pink/tilePink_02.png');
    new DataRequest(2233058, 2233922, 0, 0).open('GET', '/assets/PNG/Tiles pink/tilePink_61.png');
    new DataRequest(2233922, 2235347, 0, 0).open('GET', '/assets/PNG/Tiles pink/tilePink_20.png');
    new DataRequest(2235347, 2236766, 0, 0).open('GET', '/assets/PNG/Tiles pink/tilePink_08.png');
    new DataRequest(2236766, 2237764, 0, 0).open('GET', '/assets/PNG/Tiles pink/tilePink_19.png');
    new DataRequest(2237764, 2240806, 0, 0).open('GET', '/assets/PNG/Tiles pink/tilePink_69.png');
    new DataRequest(2240806, 2241555, 0, 0).open('GET', '/assets/PNG/Tiles pink/tilePink_39.png');
    new DataRequest(2241555, 2244799, 0, 0).open('GET', '/assets/PNG/Tiles pink/tilePink_45.png');
    new DataRequest(2244799, 2247215, 0, 0).open('GET', '/assets/PNG/Tiles pink/tilePink_53.png');
    new DataRequest(2247215, 2248928, 0, 0).open('GET', '/assets/PNG/Tiles pink/tilePink_58.png');
    new DataRequest(2248928, 2250993, 0, 0).open('GET', '/assets/PNG/Tiles pink/tilePink_24.png');
    new DataRequest(2250993, 2253662, 0, 0).open('GET', '/assets/PNG/Tiles pink/tilePink_41.png');
    new DataRequest(2253662, 2254507, 0, 0).open('GET', '/assets/PNG/Tiles pink/tilePink_38.png');
    new DataRequest(2254507, 2255390, 0, 0).open('GET', '/assets/PNG/Tiles pink/tilePink_25.png');
    new DataRequest(2255390, 2258348, 0, 0).open('GET', '/assets/PNG/Tiles pink/tilePink_30.png');
    new DataRequest(2258348, 2261325, 0, 0).open('GET', '/assets/PNG/Tiles pink/tilePink_48.png');
    new DataRequest(2261325, 2262683, 0, 0).open('GET', '/assets/PNG/Tiles pink/tilePink_31.png');
    new DataRequest(2262683, 2263171, 0, 0).open('GET', '/assets/PNG/Tiles pink/tilePink_14.png');
    new DataRequest(2263171, 2264980, 0, 0).open('GET', '/assets/PNG/Tiles pink/tilePink_70.png');
    new DataRequest(2264980, 2265828, 0, 0).open('GET', '/assets/PNG/Tiles pink/tilePink_49.png');
    new DataRequest(2265828, 2267816, 0, 0).open('GET', '/assets/PNG/Tiles pink/tilePink_06.png');
    new DataRequest(2267816, 2268514, 0, 0).open('GET', '/assets/PNG/Tiles pink/tilePink_04.png');
    new DataRequest(2268514, 2269225, 0, 0).open('GET', '/assets/PNG/Tiles pink/tilePink_63.png');
    new DataRequest(2269225, 2272138, 0, 0).open('GET', '/assets/PNG/Tiles pink/tilePink_36.png');
    new DataRequest(2272138, 2273216, 0, 0).open('GET', '/assets/PNG/Tiles pink/tilePink_28.png');
    new DataRequest(2273216, 2273647, 0, 0).open('GET', '/assets/PNG/Tiles pink/tilePink_15.png');
    new DataRequest(2273647, 2276797, 0, 0).open('GET', '/assets/PNG/Tiles pink/tilePink_35.png');
    new DataRequest(2276797, 2278773, 0, 0).open('GET', '/assets/PNG/Tiles pink/tilePink_68.png');
    new DataRequest(2278773, 2280929, 0, 0).open('GET', '/assets/PNG/Tiles pink/tilePink_09.png');
    new DataRequest(2280929, 2283758, 0, 0).open('GET', '/assets/PNG/Tiles pink/tilePink_60.png');
    new DataRequest(2283758, 2284305, 0, 0).open('GET', '/assets/PNG/Tiles pink/tilePink_13.png');
    new DataRequest(2284305, 2285205, 0, 0).open('GET', '/assets/PNG/Tiles pink/tilePink_37.png');
    new DataRequest(2285205, 2287141, 0, 0).open('GET', '/assets/PNG/Particles blue/particleBlue_3.png');
    new DataRequest(2287141, 2289325, 0, 0).open('GET', '/assets/PNG/Particles blue/particleBlue_7.png');
    new DataRequest(2289325, 2291630, 0, 0).open('GET', '/assets/PNG/Particles blue/particleBlue_1.png');
    new DataRequest(2291630, 2293997, 0, 0).open('GET', '/assets/PNG/Particles blue/particleBlue_5.png');
    new DataRequest(2293997, 2296933, 0, 0).open('GET', '/assets/PNG/Particles blue/particleBlue_2.png');
    new DataRequest(2296933, 2299025, 0, 0).open('GET', '/assets/PNG/Particles blue/particleBlue_4.png');
    new DataRequest(2299025, 2302009, 0, 0).open('GET', '/assets/PNG/Particles blue/particleBlue_6.png');
    new DataRequest(2302009, 2304012, 0, 0).open('GET', '/assets/PNG/Particles white/particleWhite_7.png');
    new DataRequest(2304012, 2306807, 0, 0).open('GET', '/assets/PNG/Particles white/particleWhite_6.png');
    new DataRequest(2306807, 2308683, 0, 0).open('GET', '/assets/PNG/Particles white/particleWhite_3.png');
    new DataRequest(2308683, 2311514, 0, 0).open('GET', '/assets/PNG/Particles white/particleWhite_2.png');
    new DataRequest(2311514, 2313405, 0, 0).open('GET', '/assets/PNG/Particles white/particleWhite_5.png');
    new DataRequest(2313405, 2315417, 0, 0).open('GET', '/assets/PNG/Particles white/particleWhite_4.png');
    new DataRequest(2315417, 2317570, 0, 0).open('GET', '/assets/PNG/Particles white/particleWhite_1.png');

    function processPackageData(arrayBuffer) {
      Module.finishedDataFileDownloads++;
      assert(arrayBuffer, 'Loading data file failed.');
      var byteArray = new Uint8Array(arrayBuffer);
      var curr;
      
      // copy the entire loaded file into a spot in the heap. Files will refer to slices in that. They cannot be freed though.
      var ptr = Module['_malloc'](byteArray.length);
      Module['HEAPU8'].set(byteArray, ptr);
      DataRequest.prototype.byteArray = Module['HEAPU8'].subarray(ptr, ptr+byteArray.length);
          DataRequest.prototype.requests["/assets/paddle_12.png"].onload();
          DataRequest.prototype.requests["/assets/paddle_08.png"].onload();
          DataRequest.prototype.requests["/assets/paddle.png"].onload();
          DataRequest.prototype.requests["/assets/Ubuntu-Light.ttf"].onload();
          DataRequest.prototype.requests["/assets/atlas.png"].onload();
          DataRequest.prototype.requests["/assets/ball.png"].onload();
          DataRequest.prototype.requests["/assets/Ubuntu-Medium.ttf"].onload();
          DataRequest.prototype.requests["/assets/making/atlas.xcf"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles red/tileRed_10.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles red/tileRed_57.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles red/tileRed_32.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles red/tileRed_60.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles red/tileRed_69.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles red/tileRed_25.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles red/tileRed_19.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles red/tileRed_52.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles red/tileRed_54.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles red/tileRed_34.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles red/tileRed_68.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles red/tileRed_66.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles red/tileRed_03.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles red/tileRed_64.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles red/tileRed_13.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles red/tileRed_30.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles red/tileRed_67.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles red/tileRed_22.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles red/tileRed_37.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles red/tileRed_62.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles red/tileRed_72.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles red/tileRed_23.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles red/tileRed_49.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles red/tileRed_15.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles red/tileRed_11.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles red/tileRed_43.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles red/tileRed_26.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles red/tileRed_42.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles red/tileRed_51.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles red/tileRed_08.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles red/tileRed_48.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles red/tileRed_01.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles red/tileRed_17.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles red/tileRed_58.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles red/tileRed_18.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles red/tileRed_33.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles red/tileRed_41.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles red/tileRed_38.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles red/tileRed_59.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles red/tileRed_71.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles red/tileRed_12.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles red/tileRed_56.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles red/tileRed_21.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles red/tileRed_35.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles red/tileRed_47.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles red/tileRed_06.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles red/tileRed_04.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles red/tileRed_05.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles red/tileRed_61.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles red/tileRed_63.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles red/tileRed_44.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles red/tileRed_70.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles red/tileRed_14.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles red/tileRed_65.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles red/tileRed_27.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles red/tileRed_53.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles red/tileRed_36.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles red/tileRed_46.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles red/tileRed_24.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles red/tileRed_45.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles red/tileRed_55.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles red/tileRed_39.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles red/tileRed_16.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles red/tileRed_20.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles red/tileRed_29.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles red/tileRed_07.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles red/tileRed_40.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles red/tileRed_02.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles red/tileRed_28.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles red/tileRed_09.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles red/tileRed_31.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles red/tileRed_50.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles yellow/tileYellow_13.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles yellow/tileYellow_42.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles yellow/tileYellow_39.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles yellow/tileYellow_16.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles yellow/tileYellow_70.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles yellow/tileYellow_47.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles yellow/tileYellow_48.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles yellow/tileYellow_46.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles yellow/tileYellow_15.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles yellow/tileYellow_33.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles yellow/tileYellow_07.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles yellow/tileYellow_56.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles yellow/tileYellow_60.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles yellow/tileYellow_35.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles yellow/tileYellow_23.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles yellow/tileYellow_19.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles yellow/tileYellow_69.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles yellow/tileYellow_37.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles yellow/tileYellow_34.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles yellow/tileYellow_04.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles yellow/tileYellow_71.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles yellow/tileYellow_18.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles yellow/tileYellow_31.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles yellow/tileYellow_43.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles yellow/tileYellow_54.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles yellow/tileYellow_36.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles yellow/tileYellow_66.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles yellow/tileYellow_10.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles yellow/tileYellow_29.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles yellow/tileYellow_09.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles yellow/tileYellow_05.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles yellow/tileYellow_51.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles yellow/tileYellow_02.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles yellow/tileYellow_08.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles yellow/tileYellow_62.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles yellow/tileYellow_17.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles yellow/tileYellow_65.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles yellow/tileYellow_03.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles yellow/tileYellow_24.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles yellow/tileYellow_32.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles yellow/tileYellow_41.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles yellow/tileYellow_58.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles yellow/tileYellow_14.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles yellow/tileYellow_68.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles yellow/tileYellow_27.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles yellow/tileYellow_52.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles yellow/tileYellow_12.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles yellow/tileYellow_61.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles yellow/tileYellow_40.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles yellow/tileYellow_49.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles yellow/tileYellow_59.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles yellow/tileYellow_38.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles yellow/tileYellow_64.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles yellow/tileYellow_50.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles yellow/tileYellow_11.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles yellow/tileYellow_26.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles yellow/tileYellow_44.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles yellow/tileYellow_57.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles yellow/tileYellow_30.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles yellow/tileYellow_25.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles yellow/tileYellow_20.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles yellow/tileYellow_53.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles yellow/tileYellow_01.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles yellow/tileYellow_21.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles yellow/tileYellow_22.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles yellow/tileYellow_67.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles yellow/tileYellow_72.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles yellow/tileYellow_55.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles yellow/tileYellow_28.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles yellow/tileYellow_45.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles yellow/tileYellow_63.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles yellow/tileYellow_06.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Balls/Black/ballBlack_10.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Balls/Black/ballBlack_07.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Balls/Black/ballBlack_08.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Balls/Black/ballBlack_03.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Balls/Black/ballBlack_01.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Balls/Black/ballBlack_05.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Balls/Black/ballBlack_09.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Balls/Black/ballBlack_02.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Balls/Black/ballBlack_04.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Balls/Black/ballBlack_06.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Balls/Grey/ballGrey_04.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Balls/Grey/ballGrey_09.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Balls/Grey/ballGrey_01.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Balls/Grey/ballGrey_10.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Balls/Grey/ballGrey_02.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Balls/Grey/ballGrey_06.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Balls/Grey/ballGrey_07.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Balls/Grey/ballGrey_05.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Balls/Grey/ballGrey_03.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Balls/Grey/ballGrey_08.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Balls/Blue/ballBlue_04.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Balls/Blue/ballBlue_08.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Balls/Blue/ballBlue_07.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Balls/Blue/ballBlue_01.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Balls/Blue/ballBlue_06.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Balls/Blue/ballBlue_03.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Balls/Blue/ballBlue_10.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Balls/Blue/ballBlue_09.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Balls/Blue/ballBlue_05.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Balls/Blue/ballBlue_02.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Balls/Yellow/ballYellow_01.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Balls/Yellow/ballYellow_02.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Balls/Yellow/ballYellow_05.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Balls/Yellow/ballYellow_10.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Balls/Yellow/ballYellow_04.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Balls/Yellow/ballYellow_06.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Balls/Yellow/ballYellow_03.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Balls/Yellow/ballYellow_07.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Balls/Yellow/ballYellow_09.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Balls/Yellow/ballYellow_08.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Pipes/Green/pipeGreen_24.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Pipes/Green/pipeGreen_34.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Pipes/Green/pipeGreen_28.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Pipes/Green/pipeGreen_40.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Pipes/Green/pipeGreen_26.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Pipes/Green/pipeGreen_04.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Pipes/Green/pipeGreen_32.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Pipes/Green/pipeGreen_17.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Pipes/Green/pipeGreen_43.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Pipes/Green/pipeGreen_29.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Pipes/Green/pipeGreen_35.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Pipes/Green/pipeGreen_16.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Pipes/Green/pipeGreen_30.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Pipes/Green/pipeGreen_39.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Pipes/Green/pipeGreen_25.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Pipes/Green/pipeGreen_15.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Pipes/Green/pipeGreen_37.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Pipes/Green/pipeGreen_21.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Pipes/Green/pipeGreen_44.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Pipes/Green/pipeGreen_11.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Pipes/Green/pipeGreen_07.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Pipes/Green/pipeGreen_08.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Pipes/Green/pipeGreen_27.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Pipes/Green/pipeGreen_02.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Pipes/Green/pipeGreen_06.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Pipes/Green/pipeGreen_13.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Pipes/Green/pipeGreen_10.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Pipes/Green/pipeGreen_22.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Pipes/Green/pipeGreen_38.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Pipes/Green/pipeGreen_14.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Pipes/Green/pipeGreen_19.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Pipes/Green/pipeGreen_31.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Pipes/Green/pipeGreen_33.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Pipes/Green/pipeGreen_01.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Pipes/Green/pipeGreen_03.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Pipes/Green/pipeGreen_36.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Pipes/Green/pipeGreen_05.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Pipes/Green/pipeGreen_18.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Pipes/Green/pipeGreen_23.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Pipes/Green/pipeGreen_20.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Pipes/Green/pipeGreen_42.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Pipes/Green/pipeGreen_12.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Pipes/Green/pipeGreen_09.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Pipes/Green/pipeGreen_41.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Pipes/Grey/pipeGrey_35.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Pipes/Grey/pipeGrey_42.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Pipes/Grey/pipeGrey_33.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Pipes/Grey/pipeGrey_38.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Pipes/Grey/pipeGrey_22.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Pipes/Grey/pipeGrey_24.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Pipes/Grey/pipeGrey_01.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Pipes/Grey/pipeGrey_05.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Pipes/Grey/pipeGrey_37.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Pipes/Grey/pipeGrey_14.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Pipes/Grey/pipeGrey_03.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Pipes/Grey/pipeGrey_12.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Pipes/Grey/pipeGrey_08.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Pipes/Grey/pipeGrey_15.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Pipes/Grey/pipeGrey_26.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Pipes/Grey/pipeGrey_04.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Pipes/Grey/pipeGrey_40.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Pipes/Grey/pipeGrey_13.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Pipes/Grey/pipeGrey_11.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Pipes/Grey/pipeGrey_21.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Pipes/Grey/pipeGrey_18.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Pipes/Grey/pipeGrey_39.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Pipes/Grey/pipeGrey_16.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Pipes/Grey/pipeGrey_29.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Pipes/Grey/pipeGrey_25.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Pipes/Grey/pipeGrey_06.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Pipes/Grey/pipeGrey_09.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Pipes/Grey/pipeGrey_30.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Pipes/Grey/pipeGrey_36.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Pipes/Grey/pipeGrey_34.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Pipes/Grey/pipeGrey_43.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Pipes/Grey/pipeGrey_20.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Pipes/Grey/pipeGrey_44.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Pipes/Grey/pipeGrey_07.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Pipes/Grey/pipeGrey_28.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Pipes/Grey/pipeGrey_27.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Pipes/Grey/pipeGrey_32.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Pipes/Grey/pipeGrey_31.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Pipes/Grey/pipeGrey_19.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Pipes/Grey/pipeGrey_02.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Pipes/Grey/pipeGrey_23.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Pipes/Grey/pipeGrey_17.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Pipes/Grey/pipeGrey_10.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Pipes/Grey/pipeGrey_41.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Paddles/paddle_05.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Paddles/paddle_07.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Paddles/paddle_03.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Paddles/paddle_12.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Paddles/paddle_08.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Paddles/paddle_10.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Paddles/paddle_09.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Paddles/paddle_01.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Paddles/paddle_02.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Paddles/paddle_11.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Paddles/paddle_06.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Paddles/paddle_04.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles grey/tileGrey_52.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles grey/tileGrey_16.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles grey/tileGrey_11.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles grey/tileGrey_01.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles grey/tileGrey_42.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles grey/tileGrey_04.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles grey/tileGrey_28.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles grey/tileGrey_26.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles grey/tileGrey_41.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles grey/tileGrey_20.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles grey/tileGrey_37.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles grey/tileGrey_70.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles grey/tileGrey_24.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles grey/tileGrey_65.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles grey/tileGrey_44.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles grey/tileGrey_72.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles grey/tileGrey_05.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles grey/tileGrey_53.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles grey/tileGrey_18.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles grey/tileGrey_19.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles grey/tileGrey_56.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles grey/tileGrey_66.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles grey/tileGrey_67.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles grey/tileGrey_60.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles grey/tileGrey_49.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles grey/tileGrey_30.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles grey/tileGrey_15.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles grey/tileGrey_54.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles grey/tileGrey_23.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles grey/tileGrey_71.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles grey/tileGrey_48.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles grey/tileGrey_35.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles grey/tileGrey_39.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles grey/tileGrey_36.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles grey/tileGrey_63.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles grey/tileGrey_69.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles grey/tileGrey_40.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles grey/tileGrey_32.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles grey/tileGrey_21.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles grey/tileGrey_07.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles grey/tileGrey_47.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles grey/tileGrey_58.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles grey/tileGrey_27.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles grey/tileGrey_55.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles grey/tileGrey_25.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles grey/tileGrey_13.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles grey/tileGrey_09.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles grey/tileGrey_33.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles grey/tileGrey_59.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles grey/tileGrey_57.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles grey/tileGrey_03.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles grey/tileGrey_02.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles grey/tileGrey_68.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles grey/tileGrey_62.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles grey/tileGrey_14.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles grey/tileGrey_45.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles grey/tileGrey_50.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles grey/tileGrey_64.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles grey/tileGrey_46.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles grey/tileGrey_12.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles grey/tileGrey_06.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles grey/tileGrey_22.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles grey/tileGrey_17.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles grey/tileGrey_43.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles grey/tileGrey_51.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles grey/tileGrey_38.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles grey/tileGrey_10.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles grey/tileGrey_29.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles grey/tileGrey_31.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles grey/tileGrey_08.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles grey/tileGrey_34.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles grey/tileGrey_61.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles black/tileBlack_27.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles black/tileBlack_34.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles black/tileBlack_13.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles black/tileBlack_63.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles black/tileBlack_57.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles black/tileBlack_43.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles black/tileBlack_01.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles black/tileBlack_26.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles black/tileBlack_19.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles black/tileBlack_67.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles black/tileBlack_16.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles black/tileBlack_38.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles black/tileBlack_04.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles black/tileBlack_47.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles black/tileBlack_21.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles black/tileBlack_15.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles black/tileBlack_68.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles black/tileBlack_25.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles black/tileBlack_54.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles black/tileBlack_60.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles black/tileBlack_50.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles black/tileBlack_05.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles black/tileBlack_70.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles black/tileBlack_24.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles black/tileBlack_30.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles black/tileBlack_12.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles black/tileBlack_58.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles black/tileBlack_31.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles black/tileBlack_42.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles black/tileBlack_56.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles black/tileBlack_23.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles black/tileBlack_11.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles black/tileBlack_41.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles black/tileBlack_72.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles black/tileBlack_39.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles black/tileBlack_18.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles black/tileBlack_40.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles black/tileBlack_65.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles black/tileBlack_66.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles black/tileBlack_51.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles black/tileBlack_29.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles black/tileBlack_20.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles black/tileBlack_22.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles black/tileBlack_61.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles black/tileBlack_33.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles black/tileBlack_49.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles black/tileBlack_53.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles black/tileBlack_35.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles black/tileBlack_36.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles black/tileBlack_71.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles black/tileBlack_06.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles black/tileBlack_45.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles black/tileBlack_37.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles black/tileBlack_03.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles black/tileBlack_02.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles black/tileBlack_55.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles black/tileBlack_52.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles black/tileBlack_08.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles black/tileBlack_48.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles black/tileBlack_14.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles black/tileBlack_62.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles black/tileBlack_44.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles black/tileBlack_69.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles black/tileBlack_32.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles black/tileBlack_07.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles black/tileBlack_17.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles black/tileBlack_09.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles black/tileBlack_28.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles black/tileBlack_46.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles black/tileBlack_10.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles black/tileBlack_64.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles black/tileBlack_59.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Particles yellow/particleYellow_4.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Particles yellow/particleYellow_3.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Particles yellow/particleYellow_5.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Particles yellow/particleYellow_7.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Particles yellow/particleYellow_1.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Particles yellow/particleYellow_2.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Particles yellow/particleYellow_6.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Back tiles/BackTile_15.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Back tiles/BackTile_09.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Back tiles/BackTile_05.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Back tiles/BackTile_11.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Back tiles/BackTile_03.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Back tiles/BackTile_12.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Back tiles/BackTile_17.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Back tiles/BackTile_06.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Back tiles/BackTile_08.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Back tiles/BackTile_10.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Back tiles/BackTile_18.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Back tiles/BackTile_02.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Back tiles/BackTile_07.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Back tiles/BackTile_01.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Back tiles/BackTile_13.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Back tiles/BackTile_04.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Back tiles/BackTile_16.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Back tiles/BackTile_14.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles green/tileGreen_12.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles green/tileGreen_08.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles green/tileGreen_30.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles green/tileGreen_71.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles green/tileGreen_42.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles green/tileGreen_49.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles green/tileGreen_26.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles green/tileGreen_38.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles green/tileGreen_72.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles green/tileGreen_25.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles green/tileGreen_02.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles green/tileGreen_56.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles green/tileGreen_68.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles green/tileGreen_47.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles green/tileGreen_65.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles green/tileGreen_67.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles green/tileGreen_05.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles green/tileGreen_36.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles green/tileGreen_19.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles green/tileGreen_09.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles green/tileGreen_62.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles green/tileGreen_58.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles green/tileGreen_04.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles green/tileGreen_34.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles green/tileGreen_07.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles green/tileGreen_69.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles green/tileGreen_24.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles green/tileGreen_22.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles green/tileGreen_16.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles green/tileGreen_53.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles green/tileGreen_18.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles green/tileGreen_31.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles green/tileGreen_39.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles green/tileGreen_57.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles green/tileGreen_17.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles green/tileGreen_54.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles green/tileGreen_32.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles green/tileGreen_27.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles green/tileGreen_10.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles green/tileGreen_59.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles green/tileGreen_28.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles green/tileGreen_64.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles green/tileGreen_33.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles green/tileGreen_44.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles green/tileGreen_41.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles green/tileGreen_66.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles green/tileGreen_45.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles green/tileGreen_20.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles green/tileGreen_70.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles green/tileGreen_21.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles green/tileGreen_35.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles green/tileGreen_48.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles green/tileGreen_03.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles green/tileGreen_43.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles green/tileGreen_63.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles green/tileGreen_60.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles green/tileGreen_55.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles green/tileGreen_51.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles green/tileGreen_01.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles green/tileGreen_13.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles green/tileGreen_50.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles green/tileGreen_37.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles green/tileGreen_11.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles green/tileGreen_23.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles green/tileGreen_46.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles green/tileGreen_14.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles green/tileGreen_61.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles green/tileGreen_06.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles green/tileGreen_40.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles green/tileGreen_29.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles green/tileGreen_52.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles green/tileGreen_15.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles blue/tileBlue_09.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles blue/tileBlue_14.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles blue/tileBlue_28.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles blue/tileBlue_24.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles blue/tileBlue_22.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles blue/tileBlue_38.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles blue/tileBlue_32.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles blue/tileBlue_53.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles blue/tileBlue_20.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles blue/tileBlue_55.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles blue/tileBlue_27.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles blue/tileBlue_68.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles blue/tileBlue_37.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles blue/tileBlue_65.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles blue/tileBlue_36.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles blue/tileBlue_03.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles blue/tileBlue_01.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles blue/tileBlue_58.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles blue/tileBlue_11.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles blue/tileBlue_17.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles blue/tileBlue_26.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles blue/tileBlue_66.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles blue/tileBlue_40.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles blue/tileBlue_64.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles blue/tileBlue_23.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles blue/tileBlue_05.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles blue/tileBlue_13.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles blue/tileBlue_50.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles blue/tileBlue_33.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles blue/tileBlue_42.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles blue/tileBlue_72.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles blue/tileBlue_18.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles blue/tileBlue_10.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles blue/tileBlue_70.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles blue/tileBlue_60.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles blue/tileBlue_16.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles blue/tileBlue_43.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles blue/tileBlue_56.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles blue/tileBlue_41.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles blue/tileBlue_39.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles blue/tileBlue_31.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles blue/tileBlue_25.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles blue/tileBlue_59.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles blue/tileBlue_19.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles blue/tileBlue_69.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles blue/tileBlue_57.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles blue/tileBlue_47.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles blue/tileBlue_21.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles blue/tileBlue_29.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles blue/tileBlue_71.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles blue/tileBlue_08.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles blue/tileBlue_54.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles blue/tileBlue_30.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles blue/tileBlue_63.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles blue/tileBlue_46.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles blue/tileBlue_61.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles blue/tileBlue_52.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles blue/tileBlue_45.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles blue/tileBlue_44.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles blue/tileBlue_62.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles blue/tileBlue_06.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles blue/tileBlue_67.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles blue/tileBlue_34.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles blue/tileBlue_02.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles blue/tileBlue_07.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles blue/tileBlue_12.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles blue/tileBlue_35.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles blue/tileBlue_51.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles blue/tileBlue_48.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles blue/tileBlue_15.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles blue/tileBlue_49.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles blue/tileBlue_04.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Coins/coin_30.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Coins/coin_19.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Coins/coin_34.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Coins/coin_15.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Coins/coin_26.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Coins/coin_35.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Coins/coin_03.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Coins/coin_01.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Coins/coin_21.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Coins/coin_32.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Coins/coin_10.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Coins/coin_06.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Coins/coin_36.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Coins/coin_12.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Coins/coin_37.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Coins/coin_07.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Coins/coin_17.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Coins/coin_20.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Coins/coin_05.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Coins/coin_16.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Coins/coin_29.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Coins/coin_40.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Coins/coin_08.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Coins/coin_02.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Coins/coin_27.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Coins/coin_13.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Coins/coin_18.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Coins/coin_33.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Coins/coin_14.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Coins/coin_25.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Coins/coin_22.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Coins/coin_38.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Coins/coin_04.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Coins/coin_31.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Coins/coin_09.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Coins/coin_24.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Coins/coin_11.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Coins/coin_23.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Coins/coin_28.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Coins/coin_39.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles orange/tileOrange_50.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles orange/tileOrange_04.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles orange/tileOrange_09.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles orange/tileOrange_41.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles orange/tileOrange_10.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles orange/tileOrange_28.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles orange/tileOrange_06.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles orange/tileOrange_13.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles orange/tileOrange_36.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles orange/tileOrange_65.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles orange/tileOrange_39.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles orange/tileOrange_46.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles orange/tileOrange_37.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles orange/tileOrange_08.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles orange/tileOrange_40.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles orange/tileOrange_60.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles orange/tileOrange_30.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles orange/tileOrange_31.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles orange/tileOrange_12.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles orange/tileOrange_03.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles orange/tileOrange_47.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles orange/tileOrange_59.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles orange/tileOrange_58.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles orange/tileOrange_61.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles orange/tileOrange_55.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles orange/tileOrange_62.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles orange/tileOrange_57.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles orange/tileOrange_16.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles orange/tileOrange_51.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles orange/tileOrange_27.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles orange/tileOrange_68.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles orange/tileOrange_20.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles orange/tileOrange_64.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles orange/tileOrange_14.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles orange/tileOrange_70.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles orange/tileOrange_38.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles orange/tileOrange_43.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles orange/tileOrange_34.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles orange/tileOrange_25.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles orange/tileOrange_44.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles orange/tileOrange_17.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles orange/tileOrange_01.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles orange/tileOrange_49.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles orange/tileOrange_72.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles orange/tileOrange_24.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles orange/tileOrange_48.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles orange/tileOrange_69.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles orange/tileOrange_67.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles orange/tileOrange_35.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles orange/tileOrange_19.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles orange/tileOrange_52.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles orange/tileOrange_32.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles orange/tileOrange_66.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles orange/tileOrange_42.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles orange/tileOrange_18.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles orange/tileOrange_07.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles orange/tileOrange_71.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles orange/tileOrange_54.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles orange/tileOrange_02.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles orange/tileOrange_53.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles orange/tileOrange_23.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles orange/tileOrange_33.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles orange/tileOrange_11.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles orange/tileOrange_56.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles orange/tileOrange_21.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles orange/tileOrange_22.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles orange/tileOrange_05.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles orange/tileOrange_29.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles orange/tileOrange_63.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles orange/tileOrange_15.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles orange/tileOrange_45.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles orange/tileOrange_26.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles pink/tilePink_17.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles pink/tilePink_46.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles pink/tilePink_03.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles pink/tilePink_67.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles pink/tilePink_11.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles pink/tilePink_42.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles pink/tilePink_43.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles pink/tilePink_16.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles pink/tilePink_29.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles pink/tilePink_66.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles pink/tilePink_56.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles pink/tilePink_22.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles pink/tilePink_23.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles pink/tilePink_50.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles pink/tilePink_10.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles pink/tilePink_05.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles pink/tilePink_57.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles pink/tilePink_51.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles pink/tilePink_40.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles pink/tilePink_64.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles pink/tilePink_44.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles pink/tilePink_62.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles pink/tilePink_33.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles pink/tilePink_32.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles pink/tilePink_21.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles pink/tilePink_72.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles pink/tilePink_26.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles pink/tilePink_52.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles pink/tilePink_59.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles pink/tilePink_54.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles pink/tilePink_07.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles pink/tilePink_55.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles pink/tilePink_71.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles pink/tilePink_12.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles pink/tilePink_01.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles pink/tilePink_18.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles pink/tilePink_27.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles pink/tilePink_65.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles pink/tilePink_34.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles pink/tilePink_47.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles pink/tilePink_02.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles pink/tilePink_61.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles pink/tilePink_20.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles pink/tilePink_08.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles pink/tilePink_19.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles pink/tilePink_69.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles pink/tilePink_39.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles pink/tilePink_45.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles pink/tilePink_53.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles pink/tilePink_58.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles pink/tilePink_24.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles pink/tilePink_41.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles pink/tilePink_38.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles pink/tilePink_25.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles pink/tilePink_30.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles pink/tilePink_48.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles pink/tilePink_31.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles pink/tilePink_14.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles pink/tilePink_70.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles pink/tilePink_49.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles pink/tilePink_06.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles pink/tilePink_04.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles pink/tilePink_63.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles pink/tilePink_36.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles pink/tilePink_28.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles pink/tilePink_15.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles pink/tilePink_35.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles pink/tilePink_68.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles pink/tilePink_09.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles pink/tilePink_60.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles pink/tilePink_13.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Tiles pink/tilePink_37.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Particles blue/particleBlue_3.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Particles blue/particleBlue_7.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Particles blue/particleBlue_1.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Particles blue/particleBlue_5.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Particles blue/particleBlue_2.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Particles blue/particleBlue_4.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Particles blue/particleBlue_6.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Particles white/particleWhite_7.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Particles white/particleWhite_6.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Particles white/particleWhite_3.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Particles white/particleWhite_2.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Particles white/particleWhite_5.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Particles white/particleWhite_4.png"].onload();
          DataRequest.prototype.requests["/assets/PNG/Particles white/particleWhite_1.png"].onload();
          Module['removeRunDependency']('datafile_build/sprites.data');

    };
    Module['addRunDependency']('datafile_build/sprites.data');
  
    if (!Module.preloadResults) Module.preloadResults = {};
  
      Module.preloadResults[PACKAGE_NAME] = {fromCache: false};
      if (fetched) {
        processPackageData(fetched);
        fetched = null;
      } else {
        fetchedCallback = processPackageData;
      }
    
  }
  if (Module['calledRun']) {
    runWithFS();
  } else {
    if (!Module['preRun']) Module['preRun'] = [];
    Module["preRun"].push(runWithFS); // FS is not initialized yet, wait for it
  }

})();

// The Module object: Our interface to the outside world. We import
// and export values on it, and do the work to get that through
// closure compiler if necessary. There are various ways Module can be used:
// 1. Not defined. We create it here
// 2. A function parameter, function(Module) { ..generated code.. }
// 3. pre-run appended it, var Module = {}; ..generated code..
// 4. External script tag defines var Module.
// We need to do an eval in order to handle the closure compiler
// case, where this code here is minified but Module was defined
// elsewhere (e.g. case 4 above). We also need to check if Module
// already exists (e.g. case 3 above).
// Note that if you want to run closure, and also to use Module
// after the generated code, you will need to define   var Module = {};
// before the code. Then that object will be used in the code, and you
// can continue to use Module afterwards as well.
var Module;
if (!Module) Module = (typeof Module !== 'undefined' ? Module : null) || {};

// Sometimes an existing Module object exists with properties
// meant to overwrite the default module functionality. Here
// we collect those properties and reapply _after_ we configure
// the current environment's defaults to avoid having to be so
// defensive during initialization.
var moduleOverrides = {};
for (var key in Module) {
  if (Module.hasOwnProperty(key)) {
    moduleOverrides[key] = Module[key];
  }
}

// The environment setup code below is customized to use Module.
// *** Environment setup code ***
var ENVIRONMENT_IS_NODE = typeof process === 'object' && typeof require === 'function';
var ENVIRONMENT_IS_WEB = typeof window === 'object';
var ENVIRONMENT_IS_WORKER = typeof importScripts === 'function';
var ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;

if (ENVIRONMENT_IS_NODE) {
  // Expose functionality in the same simple way that the shells work
  // Note that we pollute the global namespace here, otherwise we break in node
  if (!Module['print']) Module['print'] = function print(x) {
    process['stdout'].write(x + '\n');
  };
  if (!Module['printErr']) Module['printErr'] = function printErr(x) {
    process['stderr'].write(x + '\n');
  };

  var nodeFS = require('fs');
  var nodePath = require('path');

  Module['read'] = function read(filename, binary) {
    filename = nodePath['normalize'](filename);
    var ret = nodeFS['readFileSync'](filename);
    // The path is absolute if the normalized version is the same as the resolved.
    if (!ret && filename != nodePath['resolve'](filename)) {
      filename = path.join(__dirname, '..', 'src', filename);
      ret = nodeFS['readFileSync'](filename);
    }
    if (ret && !binary) ret = ret.toString();
    return ret;
  };

  Module['readBinary'] = function readBinary(filename) { return Module['read'](filename, true) };

  Module['load'] = function load(f) {
    globalEval(read(f));
  };

  if (!Module['thisProgram']) {
    if (process['argv'].length > 1) {
      Module['thisProgram'] = process['argv'][1].replace(/\\/g, '/');
    } else {
      Module['thisProgram'] = 'unknown-program';
    }
  }

  Module['arguments'] = process['argv'].slice(2);

  if (typeof module !== 'undefined') {
    module['exports'] = Module;
  }

  process['on']('uncaughtException', function(ex) {
    // suppress ExitStatus exceptions from showing an error
    if (!(ex instanceof ExitStatus)) {
      throw ex;
    }
  });
}
else if (ENVIRONMENT_IS_SHELL) {
  if (!Module['print']) Module['print'] = print;
  if (typeof printErr != 'undefined') Module['printErr'] = printErr; // not present in v8 or older sm

  if (typeof read != 'undefined') {
    Module['read'] = read;
  } else {
    Module['read'] = function read() { throw 'no read() available (jsc?)' };
  }

  Module['readBinary'] = function readBinary(f) {
    if (typeof readbuffer === 'function') {
      return new Uint8Array(readbuffer(f));
    }
    var data = read(f, 'binary');
    assert(typeof data === 'object');
    return data;
  };

  if (typeof scriptArgs != 'undefined') {
    Module['arguments'] = scriptArgs;
  } else if (typeof arguments != 'undefined') {
    Module['arguments'] = arguments;
  }

}
else if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {
  Module['read'] = function read(url) {
    var xhr = new XMLHttpRequest();
    xhr.open('GET', url, false);
    xhr.send(null);
    return xhr.responseText;
  };

  if (typeof arguments != 'undefined') {
    Module['arguments'] = arguments;
  }

  if (typeof console !== 'undefined') {
    if (!Module['print']) Module['print'] = function print(x) {
      console.log(x);
    };
    if (!Module['printErr']) Module['printErr'] = function printErr(x) {
      console.log(x);
    };
  } else {
    // Probably a worker, and without console.log. We can do very little here...
    var TRY_USE_DUMP = false;
    if (!Module['print']) Module['print'] = (TRY_USE_DUMP && (typeof(dump) !== "undefined") ? (function(x) {
      dump(x);
    }) : (function(x) {
      // self.postMessage(x); // enable this if you want stdout to be sent as messages
    }));
  }

  if (ENVIRONMENT_IS_WORKER) {
    Module['load'] = importScripts;
  }

  if (typeof Module['setWindowTitle'] === 'undefined') {
    Module['setWindowTitle'] = function(title) { document.title = title };
  }
}
else {
  // Unreachable because SHELL is dependant on the others
  throw 'Unknown runtime environment. Where are we?';
}

function globalEval(x) {
  eval.call(null, x);
}
if (!Module['load'] && Module['read']) {
  Module['load'] = function load(f) {
    globalEval(Module['read'](f));
  };
}
if (!Module['print']) {
  Module['print'] = function(){};
}
if (!Module['printErr']) {
  Module['printErr'] = Module['print'];
}
if (!Module['arguments']) {
  Module['arguments'] = [];
}
if (!Module['thisProgram']) {
  Module['thisProgram'] = './this.program';
}

// *** Environment setup code ***

// Closure helpers
Module.print = Module['print'];
Module.printErr = Module['printErr'];

// Callbacks
Module['preRun'] = [];
Module['postRun'] = [];

// Merge back in the overrides
for (var key in moduleOverrides) {
  if (moduleOverrides.hasOwnProperty(key)) {
    Module[key] = moduleOverrides[key];
  }
}



// === Preamble library stuff ===

// Documentation for the public APIs defined in this file must be updated in: 
//    site/source/docs/api_reference/preamble.js.rst
// A prebuilt local version of the documentation is available at: 
//    site/build/text/docs/api_reference/preamble.js.txt
// You can also build docs locally as HTML or other formats in site/
// An online HTML version (which may be of a different version of Emscripten)
//    is up at http://kripken.github.io/emscripten-site/docs/api_reference/preamble.js.html

//========================================
// Runtime code shared with compiler
//========================================

var Runtime = {
  setTempRet0: function (value) {
    tempRet0 = value;
  },
  getTempRet0: function () {
    return tempRet0;
  },
  stackSave: function () {
    return STACKTOP;
  },
  stackRestore: function (stackTop) {
    STACKTOP = stackTop;
  },
  getNativeTypeSize: function (type) {
    switch (type) {
      case 'i1': case 'i8': return 1;
      case 'i16': return 2;
      case 'i32': return 4;
      case 'i64': return 8;
      case 'float': return 4;
      case 'double': return 8;
      default: {
        if (type[type.length-1] === '*') {
          return Runtime.QUANTUM_SIZE; // A pointer
        } else if (type[0] === 'i') {
          var bits = parseInt(type.substr(1));
          assert(bits % 8 === 0);
          return bits/8;
        } else {
          return 0;
        }
      }
    }
  },
  getNativeFieldSize: function (type) {
    return Math.max(Runtime.getNativeTypeSize(type), Runtime.QUANTUM_SIZE);
  },
  STACK_ALIGN: 16,
  prepVararg: function (ptr, type) {
    if (type === 'double' || type === 'i64') {
      // move so the load is aligned
      if (ptr & 7) {
        assert((ptr & 7) === 4);
        ptr += 4;
      }
    } else {
      assert((ptr & 3) === 0);
    }
    return ptr;
  },
  getAlignSize: function (type, size, vararg) {
    // we align i64s and doubles on 64-bit boundaries, unlike x86
    if (!vararg && (type == 'i64' || type == 'double')) return 8;
    if (!type) return Math.min(size, 8); // align structures internally to 64 bits
    return Math.min(size || (type ? Runtime.getNativeFieldSize(type) : 0), Runtime.QUANTUM_SIZE);
  },
  dynCall: function (sig, ptr, args) {
    if (args && args.length) {
      assert(args.length == sig.length-1);
      if (!args.splice) args = Array.prototype.slice.call(args);
      args.splice(0, 0, ptr);
      assert(('dynCall_' + sig) in Module, 'bad function pointer type - no table for sig \'' + sig + '\'');
      return Module['dynCall_' + sig].apply(null, args);
    } else {
      assert(sig.length == 1);
      assert(('dynCall_' + sig) in Module, 'bad function pointer type - no table for sig \'' + sig + '\'');
      return Module['dynCall_' + sig].call(null, ptr);
    }
  },
  functionPointers: [],
  addFunction: function (func) {
    for (var i = 0; i < Runtime.functionPointers.length; i++) {
      if (!Runtime.functionPointers[i]) {
        Runtime.functionPointers[i] = func;
        return 2*(1 + i);
      }
    }
    throw 'Finished up all reserved function pointers. Use a higher value for RESERVED_FUNCTION_POINTERS.';
  },
  removeFunction: function (index) {
    Runtime.functionPointers[(index-2)/2] = null;
  },
  asmConsts: [],
  warnOnce: function (text) {
    if (!Runtime.warnOnce.shown) Runtime.warnOnce.shown = {};
    if (!Runtime.warnOnce.shown[text]) {
      Runtime.warnOnce.shown[text] = 1;
      Module.printErr(text);
    }
  },
  funcWrappers: {},
  getFuncWrapper: function (func, sig) {
    assert(sig);
    if (!Runtime.funcWrappers[sig]) {
      Runtime.funcWrappers[sig] = {};
    }
    var sigCache = Runtime.funcWrappers[sig];
    if (!sigCache[func]) {
      sigCache[func] = function dynCall_wrapper() {
        return Runtime.dynCall(sig, func, arguments);
      };
    }
    return sigCache[func];
  },
  getCompilerSetting: function (name) {
    throw 'You must build with -s RETAIN_COMPILER_SETTINGS=1 for Runtime.getCompilerSetting or emscripten_get_compiler_setting to work';
  },
  stackAlloc: function (size) { var ret = STACKTOP;STACKTOP = (STACKTOP + size)|0;STACKTOP = (((STACKTOP)+15)&-16);(assert((((STACKTOP|0) < (STACK_MAX|0))|0))|0); return ret; },
  staticAlloc: function (size) { var ret = STATICTOP;STATICTOP = (STATICTOP + (assert(!staticSealed),size))|0;STATICTOP = (((STATICTOP)+15)&-16); return ret; },
  dynamicAlloc: function (size) { var ret = DYNAMICTOP;DYNAMICTOP = (DYNAMICTOP + (assert(DYNAMICTOP > 0),size))|0;DYNAMICTOP = (((DYNAMICTOP)+15)&-16); if (DYNAMICTOP >= TOTAL_MEMORY) { var success = enlargeMemory(); if (!success) return 0; }; return ret; },
  alignMemory: function (size,quantum) { var ret = size = Math.ceil((size)/(quantum ? quantum : 16))*(quantum ? quantum : 16); return ret; },
  makeBigInt: function (low,high,unsigned) { var ret = (unsigned ? ((+((low>>>0)))+((+((high>>>0)))*4294967296.0)) : ((+((low>>>0)))+((+((high|0)))*4294967296.0))); return ret; },
  GLOBAL_BASE: 8,
  QUANTUM_SIZE: 4,
  __dummy__: 0
}


Module['Runtime'] = Runtime;








//========================================
// Runtime essentials
//========================================

var __THREW__ = 0; // Used in checking for thrown exceptions.

var ABORT = false; // whether we are quitting the application. no code should run after this. set in exit() and abort()
var EXITSTATUS = 0;

var undef = 0;
// tempInt is used for 32-bit signed values or smaller. tempBigInt is used
// for 32-bit unsigned values or more than 32 bits. TODO: audit all uses of tempInt
var tempValue, tempInt, tempBigInt, tempInt2, tempBigInt2, tempPair, tempBigIntI, tempBigIntR, tempBigIntS, tempBigIntP, tempBigIntD, tempDouble, tempFloat;
var tempI64, tempI64b;
var tempRet0, tempRet1, tempRet2, tempRet3, tempRet4, tempRet5, tempRet6, tempRet7, tempRet8, tempRet9;

function assert(condition, text) {
  if (!condition) {
    abort('Assertion failed: ' + text);
  }
}

var globalScope = this;

// Returns the C function with a specified identifier (for C++, you need to do manual name mangling)
function getCFunc(ident) {
  var func = Module['_' + ident]; // closure exported function
  if (!func) {
    try {
      func = eval('_' + ident); // explicit lookup
    } catch(e) {}
  }
  assert(func, 'Cannot call unknown function ' + ident + ' (perhaps LLVM optimizations or closure removed it?)');
  return func;
}

var cwrap, ccall;
(function(){
  var JSfuncs = {
    // Helpers for cwrap -- it can't refer to Runtime directly because it might
    // be renamed by closure, instead it calls JSfuncs['stackSave'].body to find
    // out what the minified function name is.
    'stackSave': function() {
      Runtime.stackSave()
    },
    'stackRestore': function() {
      Runtime.stackRestore()
    },
    // type conversion from js to c
    'arrayToC' : function(arr) {
      var ret = Runtime.stackAlloc(arr.length);
      writeArrayToMemory(arr, ret);
      return ret;
    },
    'stringToC' : function(str) {
      var ret = 0;
      if (str !== null && str !== undefined && str !== 0) { // null string
        // at most 4 bytes per UTF-8 code point, +1 for the trailing '\0'
        ret = Runtime.stackAlloc((str.length << 2) + 1);
        writeStringToMemory(str, ret);
      }
      return ret;
    }
  };
  // For fast lookup of conversion functions
  var toC = {'string' : JSfuncs['stringToC'], 'array' : JSfuncs['arrayToC']};

  // C calling interface. 
  ccall = function ccallFunc(ident, returnType, argTypes, args, opts) {
    var func = getCFunc(ident);
    var cArgs = [];
    var stack = 0;
    assert(returnType !== 'array', 'Return type should not be "array".');
    if (args) {
      for (var i = 0; i < args.length; i++) {
        var converter = toC[argTypes[i]];
        if (converter) {
          if (stack === 0) stack = Runtime.stackSave();
          cArgs[i] = converter(args[i]);
        } else {
          cArgs[i] = args[i];
        }
      }
    }
    var ret = func.apply(null, cArgs);
    if ((!opts || !opts.async) && typeof EmterpreterAsync === 'object') {
      assert(!EmterpreterAsync.state, 'cannot start async op with normal JS calling ccall');
    }
    if (opts && opts.async) assert(!returnType, 'async ccalls cannot return values');
    if (returnType === 'string') ret = Pointer_stringify(ret);
    if (stack !== 0) {
      if (opts && opts.async) {
        EmterpreterAsync.asyncFinalizers.push(function() {
          Runtime.stackRestore(stack);
        });
        return;
      }
      Runtime.stackRestore(stack);
    }
    return ret;
  }

  var sourceRegex = /^function\s*\(([^)]*)\)\s*{\s*([^*]*?)[\s;]*(?:return\s*(.*?)[;\s]*)?}$/;
  function parseJSFunc(jsfunc) {
    // Match the body and the return value of a javascript function source
    var parsed = jsfunc.toString().match(sourceRegex).slice(1);
    return {arguments : parsed[0], body : parsed[1], returnValue: parsed[2]}
  }
  var JSsource = {};
  for (var fun in JSfuncs) {
    if (JSfuncs.hasOwnProperty(fun)) {
      // Elements of toCsource are arrays of three items:
      // the code, and the return value
      JSsource[fun] = parseJSFunc(JSfuncs[fun]);
    }
  }

  
  cwrap = function cwrap(ident, returnType, argTypes) {
    argTypes = argTypes || [];
    var cfunc = getCFunc(ident);
    // When the function takes numbers and returns a number, we can just return
    // the original function
    var numericArgs = argTypes.every(function(type){ return type === 'number'});
    var numericRet = (returnType !== 'string');
    if ( numericRet && numericArgs) {
      return cfunc;
    }
    // Creation of the arguments list (["$1","$2",...,"$nargs"])
    var argNames = argTypes.map(function(x,i){return '$'+i});
    var funcstr = "(function(" + argNames.join(',') + ") {";
    var nargs = argTypes.length;
    if (!numericArgs) {
      // Generate the code needed to convert the arguments from javascript
      // values to pointers
      funcstr += 'var stack = ' + JSsource['stackSave'].body + ';';
      for (var i = 0; i < nargs; i++) {
        var arg = argNames[i], type = argTypes[i];
        if (type === 'number') continue;
        var convertCode = JSsource[type + 'ToC']; // [code, return]
        funcstr += 'var ' + convertCode.arguments + ' = ' + arg + ';';
        funcstr += convertCode.body + ';';
        funcstr += arg + '=' + convertCode.returnValue + ';';
      }
    }

    // When the code is compressed, the name of cfunc is not literally 'cfunc' anymore
    var cfuncname = parseJSFunc(function(){return cfunc}).returnValue;
    // Call the function
    funcstr += 'var ret = ' + cfuncname + '(' + argNames.join(',') + ');';
    if (!numericRet) { // Return type can only by 'string' or 'number'
      // Convert the result to a string
      var strgfy = parseJSFunc(function(){return Pointer_stringify}).returnValue;
      funcstr += 'ret = ' + strgfy + '(ret);';
    }
    funcstr += "if (typeof EmterpreterAsync === 'object') { assert(!EmterpreterAsync.state, 'cannot start async op with normal JS calling cwrap') }";
    if (!numericArgs) {
      // If we had a stack, restore it
      funcstr += JSsource['stackRestore'].body.replace('()', '(stack)') + ';';
    }
    funcstr += 'return ret})';
    return eval(funcstr);
  };
})();
Module["cwrap"] = cwrap;
Module["ccall"] = ccall;


function setValue(ptr, value, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': HEAP8[((ptr)>>0)]=value; break;
      case 'i8': HEAP8[((ptr)>>0)]=value; break;
      case 'i16': HEAP16[((ptr)>>1)]=value; break;
      case 'i32': HEAP32[((ptr)>>2)]=value; break;
      case 'i64': (tempI64 = [value>>>0,(tempDouble=value,(+(Math_abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? ((Math_min((+(Math_floor((tempDouble)/4294967296.0))), 4294967295.0))|0)>>>0 : (~~((+(Math_ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)],HEAP32[((ptr)>>2)]=tempI64[0],HEAP32[(((ptr)+(4))>>2)]=tempI64[1]); break;
      case 'float': HEAPF32[((ptr)>>2)]=value; break;
      case 'double': HEAPF64[((ptr)>>3)]=value; break;
      default: abort('invalid type for setValue: ' + type);
    }
}
Module['setValue'] = setValue;


function getValue(ptr, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': return HEAP8[((ptr)>>0)];
      case 'i8': return HEAP8[((ptr)>>0)];
      case 'i16': return HEAP16[((ptr)>>1)];
      case 'i32': return HEAP32[((ptr)>>2)];
      case 'i64': return HEAP32[((ptr)>>2)];
      case 'float': return HEAPF32[((ptr)>>2)];
      case 'double': return HEAPF64[((ptr)>>3)];
      default: abort('invalid type for setValue: ' + type);
    }
  return null;
}
Module['getValue'] = getValue;

var ALLOC_NORMAL = 0; // Tries to use _malloc()
var ALLOC_STACK = 1; // Lives for the duration of the current function call
var ALLOC_STATIC = 2; // Cannot be freed
var ALLOC_DYNAMIC = 3; // Cannot be freed except through sbrk
var ALLOC_NONE = 4; // Do not allocate
Module['ALLOC_NORMAL'] = ALLOC_NORMAL;
Module['ALLOC_STACK'] = ALLOC_STACK;
Module['ALLOC_STATIC'] = ALLOC_STATIC;
Module['ALLOC_DYNAMIC'] = ALLOC_DYNAMIC;
Module['ALLOC_NONE'] = ALLOC_NONE;

// allocate(): This is for internal use. You can use it yourself as well, but the interface
//             is a little tricky (see docs right below). The reason is that it is optimized
//             for multiple syntaxes to save space in generated code. So you should
//             normally not use allocate(), and instead allocate memory using _malloc(),
//             initialize it with setValue(), and so forth.
// @slab: An array of data, or a number. If a number, then the size of the block to allocate,
//        in *bytes* (note that this is sometimes confusing: the next parameter does not
//        affect this!)
// @types: Either an array of types, one for each byte (or 0 if no type at that position),
//         or a single type which is used for the entire block. This only matters if there
//         is initial data - if @slab is a number, then this does not matter at all and is
//         ignored.
// @allocator: How to allocate memory, see ALLOC_*
function allocate(slab, types, allocator, ptr) {
  var zeroinit, size;
  if (typeof slab === 'number') {
    zeroinit = true;
    size = slab;
  } else {
    zeroinit = false;
    size = slab.length;
  }

  var singleType = typeof types === 'string' ? types : null;

  var ret;
  if (allocator == ALLOC_NONE) {
    ret = ptr;
  } else {
    ret = [_malloc, Runtime.stackAlloc, Runtime.staticAlloc, Runtime.dynamicAlloc][allocator === undefined ? ALLOC_STATIC : allocator](Math.max(size, singleType ? 1 : types.length));
  }

  if (zeroinit) {
    var ptr = ret, stop;
    assert((ret & 3) == 0);
    stop = ret + (size & ~3);
    for (; ptr < stop; ptr += 4) {
      HEAP32[((ptr)>>2)]=0;
    }
    stop = ret + size;
    while (ptr < stop) {
      HEAP8[((ptr++)>>0)]=0;
    }
    return ret;
  }

  if (singleType === 'i8') {
    if (slab.subarray || slab.slice) {
      HEAPU8.set(slab, ret);
    } else {
      HEAPU8.set(new Uint8Array(slab), ret);
    }
    return ret;
  }

  var i = 0, type, typeSize, previousType;
  while (i < size) {
    var curr = slab[i];

    if (typeof curr === 'function') {
      curr = Runtime.getFunctionIndex(curr);
    }

    type = singleType || types[i];
    if (type === 0) {
      i++;
      continue;
    }
    assert(type, 'Must know what type to store in allocate!');

    if (type == 'i64') type = 'i32'; // special case: we have one i32 here, and one i32 later

    setValue(ret+i, curr, type);

    // no need to look up size unless type changes, so cache it
    if (previousType !== type) {
      typeSize = Runtime.getNativeTypeSize(type);
      previousType = type;
    }
    i += typeSize;
  }

  return ret;
}
Module['allocate'] = allocate;

function Pointer_stringify(ptr, /* optional */ length) {
  if (length === 0 || !ptr) return '';
  // TODO: use TextDecoder
  // Find the length, and check for UTF while doing so
  var hasUtf = 0;
  var t;
  var i = 0;
  while (1) {
    assert(ptr + i < TOTAL_MEMORY);
    t = HEAPU8[(((ptr)+(i))>>0)];
    hasUtf |= t;
    if (t == 0 && !length) break;
    i++;
    if (length && i == length) break;
  }
  if (!length) length = i;

  var ret = '';

  if (hasUtf < 128) {
    var MAX_CHUNK = 1024; // split up into chunks, because .apply on a huge string can overflow the stack
    var curr;
    while (length > 0) {
      curr = String.fromCharCode.apply(String, HEAPU8.subarray(ptr, ptr + Math.min(length, MAX_CHUNK)));
      ret = ret ? ret + curr : curr;
      ptr += MAX_CHUNK;
      length -= MAX_CHUNK;
    }
    return ret;
  }
  return Module['UTF8ToString'](ptr);
}
Module['Pointer_stringify'] = Pointer_stringify;

// Given a pointer 'ptr' to a null-terminated ASCII-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.

function AsciiToString(ptr) {
  var str = '';
  while (1) {
    var ch = HEAP8[((ptr++)>>0)];
    if (!ch) return str;
    str += String.fromCharCode(ch);
  }
}
Module['AsciiToString'] = AsciiToString;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in ASCII form. The copy will require at most str.length+1 bytes of space in the HEAP.

function stringToAscii(str, outPtr) {
  return writeAsciiToMemory(str, outPtr, false);
}
Module['stringToAscii'] = stringToAscii;

// Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the a given array that contains uint8 values, returns
// a copy of that string as a Javascript String object.

function UTF8ArrayToString(u8Array, idx) {
  var u0, u1, u2, u3, u4, u5;

  var str = '';
  while (1) {
    // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description and https://www.ietf.org/rfc/rfc2279.txt and https://tools.ietf.org/html/rfc3629
    u0 = u8Array[idx++];
    if (!u0) return str;
    if (!(u0 & 0x80)) { str += String.fromCharCode(u0); continue; }
    u1 = u8Array[idx++] & 63;
    if ((u0 & 0xE0) == 0xC0) { str += String.fromCharCode(((u0 & 31) << 6) | u1); continue; }
    u2 = u8Array[idx++] & 63;
    if ((u0 & 0xF0) == 0xE0) {
      u0 = ((u0 & 15) << 12) | (u1 << 6) | u2;
    } else {
      u3 = u8Array[idx++] & 63;
      if ((u0 & 0xF8) == 0xF0) {
        u0 = ((u0 & 7) << 18) | (u1 << 12) | (u2 << 6) | u3;
      } else {
        u4 = u8Array[idx++] & 63;
        if ((u0 & 0xFC) == 0xF8) {
          u0 = ((u0 & 3) << 24) | (u1 << 18) | (u2 << 12) | (u3 << 6) | u4;
        } else {
          u5 = u8Array[idx++] & 63;
          u0 = ((u0 & 1) << 30) | (u1 << 24) | (u2 << 18) | (u3 << 12) | (u4 << 6) | u5;
        }
      }
    }
    if (u0 < 0x10000) {
      str += String.fromCharCode(u0);
    } else {
      var ch = u0 - 0x10000;
      str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));
    }
  }
}
Module['UTF8ArrayToString'] = UTF8ArrayToString;

// Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.

function UTF8ToString(ptr) {
  return UTF8ArrayToString(HEAPU8, ptr);
}
Module['UTF8ToString'] = UTF8ToString;

// Copies the given Javascript String object 'str' to the given byte array at address 'outIdx',
// encoded in UTF8 form and null-terminated. The copy will require at most str.length*4+1 bytes of space in the HEAP.
// Use the function lengthBytesUTF8() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Parameters:
//   str: the Javascript string to copy.
//   outU8Array: the array to copy to. Each index in this array is assumed to be one 8-byte element.
//   outIdx: The starting offset in the array to begin the copying.
//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null 
//                    terminator, i.e. if maxBytesToWrite=1, only the null terminator will be written and nothing else.
//                    maxBytesToWrite=0 does not write any bytes to the output, not even the null terminator.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF8Array(str, outU8Array, outIdx, maxBytesToWrite) {
  if (!(maxBytesToWrite > 0)) // Parameter maxBytesToWrite is not optional. Negative values, 0, null, undefined and false each don't write out any bytes.
    return 0;

  var startIdx = outIdx;
  var endIdx = outIdx + maxBytesToWrite - 1; // -1 for string null terminator.
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! So decode UTF16->UTF32->UTF8.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description and https://www.ietf.org/rfc/rfc2279.txt and https://tools.ietf.org/html/rfc3629
    var u = str.charCodeAt(i); // possibly a lead surrogate
    if (u >= 0xD800 && u <= 0xDFFF) u = 0x10000 + ((u & 0x3FF) << 10) | (str.charCodeAt(++i) & 0x3FF);
    if (u <= 0x7F) {
      if (outIdx >= endIdx) break;
      outU8Array[outIdx++] = u;
    } else if (u <= 0x7FF) {
      if (outIdx + 1 >= endIdx) break;
      outU8Array[outIdx++] = 0xC0 | (u >> 6);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else if (u <= 0xFFFF) {
      if (outIdx + 2 >= endIdx) break;
      outU8Array[outIdx++] = 0xE0 | (u >> 12);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else if (u <= 0x1FFFFF) {
      if (outIdx + 3 >= endIdx) break;
      outU8Array[outIdx++] = 0xF0 | (u >> 18);
      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else if (u <= 0x3FFFFFF) {
      if (outIdx + 4 >= endIdx) break;
      outU8Array[outIdx++] = 0xF8 | (u >> 24);
      outU8Array[outIdx++] = 0x80 | ((u >> 18) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else {
      if (outIdx + 5 >= endIdx) break;
      outU8Array[outIdx++] = 0xFC | (u >> 30);
      outU8Array[outIdx++] = 0x80 | ((u >> 24) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 18) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    }
  }
  // Null-terminate the pointer to the buffer.
  outU8Array[outIdx] = 0;
  return outIdx - startIdx;
}
Module['stringToUTF8Array'] = stringToUTF8Array;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF8 form. The copy will require at most str.length*4+1 bytes of space in the HEAP.
// Use the function lengthBytesUTF8() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF8(str, outPtr, maxBytesToWrite) {
  assert(typeof maxBytesToWrite == 'number', 'stringToUTF8(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');
  return stringToUTF8Array(str, HEAPU8, outPtr, maxBytesToWrite);
}
Module['stringToUTF8'] = stringToUTF8;

// Returns the number of bytes the given Javascript string takes if encoded as a UTF8 byte array, EXCLUDING the null terminator byte.

function lengthBytesUTF8(str) {
  var len = 0;
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! So decode UTF16->UTF32->UTF8.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    var u = str.charCodeAt(i); // possibly a lead surrogate
    if (u >= 0xD800 && u <= 0xDFFF) u = 0x10000 + ((u & 0x3FF) << 10) | (str.charCodeAt(++i) & 0x3FF);
    if (u <= 0x7F) {
      ++len;
    } else if (u <= 0x7FF) {
      len += 2;
    } else if (u <= 0xFFFF) {
      len += 3;
    } else if (u <= 0x1FFFFF) {
      len += 4;
    } else if (u <= 0x3FFFFFF) {
      len += 5;
    } else {
      len += 6;
    }
  }
  return len;
}
Module['lengthBytesUTF8'] = lengthBytesUTF8;

// Given a pointer 'ptr' to a null-terminated UTF16LE-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.

function UTF16ToString(ptr) {
  var i = 0;

  var str = '';
  while (1) {
    var codeUnit = HEAP16[(((ptr)+(i*2))>>1)];
    if (codeUnit == 0)
      return str;
    ++i;
    // fromCharCode constructs a character from a UTF-16 code unit, so we can pass the UTF16 string right through.
    str += String.fromCharCode(codeUnit);
  }
}
Module['UTF16ToString'] = UTF16ToString;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF16 form. The copy will require at most str.length*4+2 bytes of space in the HEAP.
// Use the function lengthBytesUTF16() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Parameters:
//   str: the Javascript string to copy.
//   outPtr: Byte address in Emscripten HEAP where to write the string to.
//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null 
//                    terminator, i.e. if maxBytesToWrite=2, only the null terminator will be written and nothing else.
//                    maxBytesToWrite<2 does not write any bytes to the output, not even the null terminator.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF16(str, outPtr, maxBytesToWrite) {
  assert(typeof maxBytesToWrite == 'number', 'stringToUTF16(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');
  // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.
  if (maxBytesToWrite === undefined) {
    maxBytesToWrite = 0x7FFFFFFF;
  }
  if (maxBytesToWrite < 2) return 0;
  maxBytesToWrite -= 2; // Null terminator.
  var startPtr = outPtr;
  var numCharsToWrite = (maxBytesToWrite < str.length*2) ? (maxBytesToWrite / 2) : str.length;
  for (var i = 0; i < numCharsToWrite; ++i) {
    // charCodeAt returns a UTF-16 encoded code unit, so it can be directly written to the HEAP.
    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate
    HEAP16[((outPtr)>>1)]=codeUnit;
    outPtr += 2;
  }
  // Null-terminate the pointer to the HEAP.
  HEAP16[((outPtr)>>1)]=0;
  return outPtr - startPtr;
}
Module['stringToUTF16'] = stringToUTF16;

// Returns the number of bytes the given Javascript string takes if encoded as a UTF16 byte array, EXCLUDING the null terminator byte.

function lengthBytesUTF16(str) {
  return str.length*2;
}
Module['lengthBytesUTF16'] = lengthBytesUTF16;

function UTF32ToString(ptr) {
  var i = 0;

  var str = '';
  while (1) {
    var utf32 = HEAP32[(((ptr)+(i*4))>>2)];
    if (utf32 == 0)
      return str;
    ++i;
    // Gotcha: fromCharCode constructs a character from a UTF-16 encoded code (pair), not from a Unicode code point! So encode the code point to UTF-16 for constructing.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    if (utf32 >= 0x10000) {
      var ch = utf32 - 0x10000;
      str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));
    } else {
      str += String.fromCharCode(utf32);
    }
  }
}
Module['UTF32ToString'] = UTF32ToString;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF32 form. The copy will require at most str.length*4+4 bytes of space in the HEAP.
// Use the function lengthBytesUTF32() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Parameters:
//   str: the Javascript string to copy.
//   outPtr: Byte address in Emscripten HEAP where to write the string to.
//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null 
//                    terminator, i.e. if maxBytesToWrite=4, only the null terminator will be written and nothing else.
//                    maxBytesToWrite<4 does not write any bytes to the output, not even the null terminator.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF32(str, outPtr, maxBytesToWrite) {
  assert(typeof maxBytesToWrite == 'number', 'stringToUTF32(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');
  // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.
  if (maxBytesToWrite === undefined) {
    maxBytesToWrite = 0x7FFFFFFF;
  }
  if (maxBytesToWrite < 4) return 0;
  var startPtr = outPtr;
  var endPtr = startPtr + maxBytesToWrite - 4;
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate
    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) {
      var trailSurrogate = str.charCodeAt(++i);
      codeUnit = 0x10000 + ((codeUnit & 0x3FF) << 10) | (trailSurrogate & 0x3FF);
    }
    HEAP32[((outPtr)>>2)]=codeUnit;
    outPtr += 4;
    if (outPtr + 4 > endPtr) break;
  }
  // Null-terminate the pointer to the HEAP.
  HEAP32[((outPtr)>>2)]=0;
  return outPtr - startPtr;
}
Module['stringToUTF32'] = stringToUTF32;

// Returns the number of bytes the given Javascript string takes if encoded as a UTF16 byte array, EXCLUDING the null terminator byte.

function lengthBytesUTF32(str) {
  var len = 0;
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    var codeUnit = str.charCodeAt(i);
    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) ++i; // possibly a lead surrogate, so skip over the tail surrogate.
    len += 4;
  }

  return len;
}
Module['lengthBytesUTF32'] = lengthBytesUTF32;

function demangle(func) {
  var hasLibcxxabi = !!Module['___cxa_demangle'];
  if (hasLibcxxabi) {
    try {
      var buf = _malloc(func.length);
      writeStringToMemory(func.substr(1), buf);
      var status = _malloc(4);
      var ret = Module['___cxa_demangle'](buf, 0, 0, status);
      if (getValue(status, 'i32') === 0 && ret) {
        return Pointer_stringify(ret);
      }
      // otherwise, libcxxabi failed, we can try ours which may return a partial result
    } catch(e) {
      // failure when using libcxxabi, we can try ours which may return a partial result
    } finally {
      if (buf) _free(buf);
      if (status) _free(status);
      if (ret) _free(ret);
    }
  }
  var i = 3;
  // params, etc.
  var basicTypes = {
    'v': 'void',
    'b': 'bool',
    'c': 'char',
    's': 'short',
    'i': 'int',
    'l': 'long',
    'f': 'float',
    'd': 'double',
    'w': 'wchar_t',
    'a': 'signed char',
    'h': 'unsigned char',
    't': 'unsigned short',
    'j': 'unsigned int',
    'm': 'unsigned long',
    'x': 'long long',
    'y': 'unsigned long long',
    'z': '...'
  };
  var subs = [];
  var first = true;
  function dump(x) {
    //return;
    if (x) Module.print(x);
    Module.print(func);
    var pre = '';
    for (var a = 0; a < i; a++) pre += ' ';
    Module.print (pre + '^');
  }
  function parseNested() {
    i++;
    if (func[i] === 'K') i++; // ignore const
    var parts = [];
    while (func[i] !== 'E') {
      if (func[i] === 'S') { // substitution
        i++;
        var next = func.indexOf('_', i);
        var num = func.substring(i, next) || 0;
        parts.push(subs[num] || '?');
        i = next+1;
        continue;
      }
      if (func[i] === 'C') { // constructor
        parts.push(parts[parts.length-1]);
        i += 2;
        continue;
      }
      var size = parseInt(func.substr(i));
      var pre = size.toString().length;
      if (!size || !pre) { i--; break; } // counter i++ below us
      var curr = func.substr(i + pre, size);
      parts.push(curr);
      subs.push(curr);
      i += pre + size;
    }
    i++; // skip E
    return parts;
  }
  function parse(rawList, limit, allowVoid) { // main parser
    limit = limit || Infinity;
    var ret = '', list = [];
    function flushList() {
      return '(' + list.join(', ') + ')';
    }
    var name;
    if (func[i] === 'N') {
      // namespaced N-E
      name = parseNested().join('::');
      limit--;
      if (limit === 0) return rawList ? [name] : name;
    } else {
      // not namespaced
      if (func[i] === 'K' || (first && func[i] === 'L')) i++; // ignore const and first 'L'
      var size = parseInt(func.substr(i));
      if (size) {
        var pre = size.toString().length;
        name = func.substr(i + pre, size);
        i += pre + size;
      }
    }
    first = false;
    if (func[i] === 'I') {
      i++;
      var iList = parse(true);
      var iRet = parse(true, 1, true);
      ret += iRet[0] + ' ' + name + '<' + iList.join(', ') + '>';
    } else {
      ret = name;
    }
    paramLoop: while (i < func.length && limit-- > 0) {
      //dump('paramLoop');
      var c = func[i++];
      if (c in basicTypes) {
        list.push(basicTypes[c]);
      } else {
        switch (c) {
          case 'P': list.push(parse(true, 1, true)[0] + '*'); break; // pointer
          case 'R': list.push(parse(true, 1, true)[0] + '&'); break; // reference
          case 'L': { // literal
            i++; // skip basic type
            var end = func.indexOf('E', i);
            var size = end - i;
            list.push(func.substr(i, size));
            i += size + 2; // size + 'EE'
            break;
          }
          case 'A': { // array
            var size = parseInt(func.substr(i));
            i += size.toString().length;
            if (func[i] !== '_') throw '?';
            i++; // skip _
            list.push(parse(true, 1, true)[0] + ' [' + size + ']');
            break;
          }
          case 'E': break paramLoop;
          default: ret += '?' + c; break paramLoop;
        }
      }
    }
    if (!allowVoid && list.length === 1 && list[0] === 'void') list = []; // avoid (void)
    if (rawList) {
      if (ret) {
        list.push(ret + '?');
      }
      return list;
    } else {
      return ret + flushList();
    }
  }
  var parsed = func;
  try {
    // Special-case the entry point, since its name differs from other name mangling.
    if (func == 'Object._main' || func == '_main') {
      return 'main()';
    }
    if (typeof func === 'number') func = Pointer_stringify(func);
    if (func[0] !== '_') return func;
    if (func[1] !== '_') return func; // C function
    if (func[2] !== 'Z') return func;
    switch (func[3]) {
      case 'n': return 'operator new()';
      case 'd': return 'operator delete()';
    }
    parsed = parse();
  } catch(e) {
    parsed += '?';
  }
  if (parsed.indexOf('?') >= 0 && !hasLibcxxabi) {
    Runtime.warnOnce('warning: a problem occurred in builtin C++ name demangling; build with  -s DEMANGLE_SUPPORT=1  to link in libcxxabi demangling');
  }
  return parsed;
}

function demangleAll(text) {
  return text.replace(/__Z[\w\d_]+/g, function(x) { var y = demangle(x); return x === y ? x : (x + ' [' + y + ']') });
}

function jsStackTrace() {
  var err = new Error();
  if (!err.stack) {
    // IE10+ special cases: It does have callstack info, but it is only populated if an Error object is thrown,
    // so try that as a special-case.
    try {
      throw new Error(0);
    } catch(e) {
      err = e;
    }
    if (!err.stack) {
      return '(no stack trace available)';
    }
  }
  return err.stack.toString();
}

function stackTrace() {
  return demangleAll(jsStackTrace());
}
Module['stackTrace'] = stackTrace;

// Memory management

var PAGE_SIZE = 4096;

function alignMemoryPage(x) {
  if (x % 4096 > 0) {
    x += (4096 - (x % 4096));
  }
  return x;
}

var HEAP;
var HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;

var STATIC_BASE = 0, STATICTOP = 0, staticSealed = false; // static area
var STACK_BASE = 0, STACKTOP = 0, STACK_MAX = 0; // stack area
var DYNAMIC_BASE = 0, DYNAMICTOP = 0; // dynamic area handled by sbrk

function enlargeMemory() {
  abort('Cannot enlarge memory arrays. Either (1) compile with -s TOTAL_MEMORY=X with X higher than the current value ' + TOTAL_MEMORY + ', (2) compile with ALLOW_MEMORY_GROWTH which adjusts the size at runtime but prevents some optimizations, or (3) set Module.TOTAL_MEMORY before the program runs.');
}


var TOTAL_STACK = Module['TOTAL_STACK'] || 5242880;
var TOTAL_MEMORY = Module['TOTAL_MEMORY'] || 16777216;


var totalMemory = 64*1024;
while (totalMemory < TOTAL_MEMORY || totalMemory < 2*TOTAL_STACK) {
  if (totalMemory < 16*1024*1024) {
    totalMemory *= 2;
  } else {
    totalMemory += 16*1024*1024
  }
}
if (totalMemory !== TOTAL_MEMORY) {
  Module.printErr('increasing TOTAL_MEMORY to ' + totalMemory + ' to be compliant with the asm.js spec (and given that TOTAL_STACK=' + TOTAL_STACK + ')');
  TOTAL_MEMORY = totalMemory;
}



// Initialize the runtime's memory
// check for full engine support (use string 'subarray' to avoid closure compiler confusion)
assert(typeof Int32Array !== 'undefined' && typeof Float64Array !== 'undefined' && !!(new Int32Array(1)['subarray']) && !!(new Int32Array(1)['set']),
       'JS engine does not provide full typed array support');

var buffer = new ArrayBuffer(TOTAL_MEMORY);

HEAP8 = new Int8Array(buffer);
HEAP16 = new Int16Array(buffer);
HEAP32 = new Int32Array(buffer);
HEAPU8 = new Uint8Array(buffer);
HEAPU16 = new Uint16Array(buffer);
HEAPU32 = new Uint32Array(buffer);
HEAPF32 = new Float32Array(buffer);
HEAPF64 = new Float64Array(buffer);

// Endianness check (note: assumes compiler arch was little-endian)
HEAP32[0] = 255;
assert(HEAPU8[0] === 255 && HEAPU8[3] === 0, 'Typed arrays 2 must be run on a little-endian system');

Module['HEAP'] = HEAP;
Module['buffer'] = buffer;
Module['HEAP8'] = HEAP8;
Module['HEAP16'] = HEAP16;
Module['HEAP32'] = HEAP32;
Module['HEAPU8'] = HEAPU8;
Module['HEAPU16'] = HEAPU16;
Module['HEAPU32'] = HEAPU32;
Module['HEAPF32'] = HEAPF32;
Module['HEAPF64'] = HEAPF64;

function callRuntimeCallbacks(callbacks) {
  while(callbacks.length > 0) {
    var callback = callbacks.shift();
    if (typeof callback == 'function') {
      callback();
      continue;
    }
    var func = callback.func;
    if (typeof func === 'number') {
      if (callback.arg === undefined) {
        Runtime.dynCall('v', func);
      } else {
        Runtime.dynCall('vi', func, [callback.arg]);
      }
    } else {
      func(callback.arg === undefined ? null : callback.arg);
    }
  }
}

var __ATPRERUN__  = []; // functions called before the runtime is initialized
var __ATINIT__    = []; // functions called during startup
var __ATMAIN__    = []; // functions called when main() is to be run
var __ATEXIT__    = []; // functions called during shutdown
var __ATPOSTRUN__ = []; // functions called after the runtime has exited

var runtimeInitialized = false;
var runtimeExited = false;

function preRun() {
  // compatibility - merge in anything from Module['preRun'] at this time
  if (Module['preRun']) {
    if (typeof Module['preRun'] == 'function') Module['preRun'] = [Module['preRun']];
    while (Module['preRun'].length) {
      addOnPreRun(Module['preRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPRERUN__);
}

function ensureInitRuntime() {
  if (runtimeInitialized) return;
  runtimeInitialized = true;
  callRuntimeCallbacks(__ATINIT__);
}

function preMain() {
  callRuntimeCallbacks(__ATMAIN__);
}

function exitRuntime() {
  callRuntimeCallbacks(__ATEXIT__);
  runtimeExited = true;
}

function postRun() {
  // compatibility - merge in anything from Module['postRun'] at this time
  if (Module['postRun']) {
    if (typeof Module['postRun'] == 'function') Module['postRun'] = [Module['postRun']];
    while (Module['postRun'].length) {
      addOnPostRun(Module['postRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPOSTRUN__);
}

function addOnPreRun(cb) {
  __ATPRERUN__.unshift(cb);
}
Module['addOnPreRun'] = Module.addOnPreRun = addOnPreRun;

function addOnInit(cb) {
  __ATINIT__.unshift(cb);
}
Module['addOnInit'] = Module.addOnInit = addOnInit;

function addOnPreMain(cb) {
  __ATMAIN__.unshift(cb);
}
Module['addOnPreMain'] = Module.addOnPreMain = addOnPreMain;

function addOnExit(cb) {
  __ATEXIT__.unshift(cb);
}
Module['addOnExit'] = Module.addOnExit = addOnExit;

function addOnPostRun(cb) {
  __ATPOSTRUN__.unshift(cb);
}
Module['addOnPostRun'] = Module.addOnPostRun = addOnPostRun;

// Tools


function intArrayFromString(stringy, dontAddNull, length /* optional */) {
  var len = length > 0 ? length : lengthBytesUTF8(stringy)+1;
  var u8array = new Array(len);
  var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);
  if (dontAddNull) u8array.length = numBytesWritten;
  return u8array;
}
Module['intArrayFromString'] = intArrayFromString;

function intArrayToString(array) {
  var ret = [];
  for (var i = 0; i < array.length; i++) {
    var chr = array[i];
    if (chr > 0xFF) {
        assert(false, 'Character code ' + chr + ' (' + String.fromCharCode(chr) + ')  at offset ' + i + ' not in 0x00-0xFF.');
      chr &= 0xFF;
    }
    ret.push(String.fromCharCode(chr));
  }
  return ret.join('');
}
Module['intArrayToString'] = intArrayToString;

function writeStringToMemory(string, buffer, dontAddNull) {
  var array = intArrayFromString(string, dontAddNull);
  var i = 0;
  while (i < array.length) {
    var chr = array[i];
    HEAP8[(((buffer)+(i))>>0)]=chr;
    i = i + 1;
  }
}
Module['writeStringToMemory'] = writeStringToMemory;

function writeArrayToMemory(array, buffer) {
  for (var i = 0; i < array.length; i++) {
    HEAP8[((buffer++)>>0)]=array[i];
  }
}
Module['writeArrayToMemory'] = writeArrayToMemory;

function writeAsciiToMemory(str, buffer, dontAddNull) {
  for (var i = 0; i < str.length; ++i) {
    assert(str.charCodeAt(i) === str.charCodeAt(i)&0xff);
    HEAP8[((buffer++)>>0)]=str.charCodeAt(i);
  }
  // Null-terminate the pointer to the HEAP.
  if (!dontAddNull) HEAP8[((buffer)>>0)]=0;
}
Module['writeAsciiToMemory'] = writeAsciiToMemory;

function unSign(value, bits, ignore) {
  if (value >= 0) {
    return value;
  }
  return bits <= 32 ? 2*Math.abs(1 << (bits-1)) + value // Need some trickery, since if bits == 32, we are right at the limit of the bits JS uses in bitshifts
                    : Math.pow(2, bits)         + value;
}
function reSign(value, bits, ignore) {
  if (value <= 0) {
    return value;
  }
  var half = bits <= 32 ? Math.abs(1 << (bits-1)) // abs is needed if bits == 32
                        : Math.pow(2, bits-1);
  if (value >= half && (bits <= 32 || value > half)) { // for huge values, we can hit the precision limit and always get true here. so don't do that
                                                       // but, in general there is no perfect solution here. With 64-bit ints, we get rounding and errors
                                                       // TODO: In i64 mode 1, resign the two parts separately and safely
    value = -2*half + value; // Cannot bitshift half, as it may be at the limit of the bits JS uses in bitshifts
  }
  return value;
}

// check for imul support, and also for correctness ( https://bugs.webkit.org/show_bug.cgi?id=126345 )
if (!Math['imul'] || Math['imul'](0xffffffff, 5) !== -5) Math['imul'] = function imul(a, b) {
  var ah  = a >>> 16;
  var al = a & 0xffff;
  var bh  = b >>> 16;
  var bl = b & 0xffff;
  return (al*bl + ((ah*bl + al*bh) << 16))|0;
};
Math.imul = Math['imul'];


if (!Math['clz32']) Math['clz32'] = function(x) {
  x = x >>> 0;
  for (var i = 0; i < 32; i++) {
    if (x & (1 << (31 - i))) return i;
  }
  return 32;
};
Math.clz32 = Math['clz32']

var Math_abs = Math.abs;
var Math_cos = Math.cos;
var Math_sin = Math.sin;
var Math_tan = Math.tan;
var Math_acos = Math.acos;
var Math_asin = Math.asin;
var Math_atan = Math.atan;
var Math_atan2 = Math.atan2;
var Math_exp = Math.exp;
var Math_log = Math.log;
var Math_sqrt = Math.sqrt;
var Math_ceil = Math.ceil;
var Math_floor = Math.floor;
var Math_pow = Math.pow;
var Math_imul = Math.imul;
var Math_fround = Math.fround;
var Math_min = Math.min;
var Math_clz32 = Math.clz32;

// A counter of dependencies for calling run(). If we need to
// do asynchronous work before running, increment this and
// decrement it. Incrementing must happen in a place like
// PRE_RUN_ADDITIONS (used by emcc to add file preloading).
// Note that you can add dependencies in preRun, even though
// it happens right before run - run will be postponed until
// the dependencies are met.
var runDependencies = 0;
var runDependencyWatcher = null;
var dependenciesFulfilled = null; // overridden to take different actions when all run dependencies are fulfilled
var runDependencyTracking = {};

function addRunDependency(id) {
  runDependencies++;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
  if (id) {
    assert(!runDependencyTracking[id]);
    runDependencyTracking[id] = 1;
    if (runDependencyWatcher === null && typeof setInterval !== 'undefined') {
      // Check for missing dependencies every few seconds
      runDependencyWatcher = setInterval(function() {
        if (ABORT) {
          clearInterval(runDependencyWatcher);
          runDependencyWatcher = null;
          return;
        }
        var shown = false;
        for (var dep in runDependencyTracking) {
          if (!shown) {
            shown = true;
            Module.printErr('still waiting on run dependencies:');
          }
          Module.printErr('dependency: ' + dep);
        }
        if (shown) {
          Module.printErr('(end of list)');
        }
      }, 10000);
    }
  } else {
    Module.printErr('warning: run dependency added without ID');
  }
}
Module['addRunDependency'] = addRunDependency;
function removeRunDependency(id) {
  runDependencies--;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
  if (id) {
    assert(runDependencyTracking[id]);
    delete runDependencyTracking[id];
  } else {
    Module.printErr('warning: run dependency removed without ID');
  }
  if (runDependencies == 0) {
    if (runDependencyWatcher !== null) {
      clearInterval(runDependencyWatcher);
      runDependencyWatcher = null;
    }
    if (dependenciesFulfilled) {
      var callback = dependenciesFulfilled;
      dependenciesFulfilled = null;
      callback(); // can add another dependenciesFulfilled
    }
  }
}
Module['removeRunDependency'] = removeRunDependency;

Module["preloadedImages"] = {}; // maps url to image data
Module["preloadedAudios"] = {}; // maps url to audio data


var memoryInitializer = null;

// === Body ===

Runtime.asmConsts = [];





STATIC_BASE = 8;

STATICTOP = STATIC_BASE + 11520;
  /* global initializers */ __ATINIT__.push();
  

/* memory initializer */ allocate([0,0,0,0,0,0,0,0,83,101,99,111,110,100,121,32,112,117,117,110,0,0,0,0,79,112,101,110,71,76,32,118,101,114,115,105,111,110,32,105,115,32,40,37,115,41,10,0,70,97,105,108,101,100,32,116,111,32,99,111,109,112,105,108,101,32,118,101,114,116,101,120,32,115,104,97,100,101,114,10,0,0,0,0,0,0,0,0,70,97,105,108,101,100,32,116,111,32,99,111,109,112,105,108,101,32,102,114,97,103,109,101,110,116,32,115,104,97,100,101,114,10,0,0,0,0,0,0,70,97,105,108,101,100,32,116,111,32,108,105,110,107,32,115,104,97,100,101,114,32,112,114,111,103,114,97,109,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,114,98,0,0,0,0,0,0,99,97,110,39,116,32,102,111,112,101,110,0,0,0,0,0,46,186,232,62,0,0,0,0,0,0,128,63,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,111,115,105,116,105,111,110,0,0,0,0,0,0,0,0,117,118,0,0,0,0,0,0,115,99,97,108,101,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,97,116,116,114,105,98,117,116,101,32,118,101,99,50,32,112,111,115,105,116,105,111,110,59,32,97,116,116,114,105,98,117,116,101,32,118,101,99,50,32,117,118,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,121,105,110,103,32,118,101,99,50,32,116,101,120,99,111,111,114,100,59,32,118,111,105,100,32,109,97,105,110,40,41,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,103,108,95,80,111,115,105,116,105,111,110,61,118,101,99,52,40,112,111,115,105,116,105,111,110,44,32,48,44,32,49,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,116,101,120,99,111,111,114,100,61,117,118,59,125,0,0,0,0,0,0,0,112,114,101,99,105,115,105,111,110,32,109,101,100,105,117,109,112,32,102,108,111,97,116,59,32,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,117,110,105,102,111,114,109,32,115,97,109,112,108,101,114,50,68,32,116,101,120,116,117,114,101,59,32,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,118,97,114,121,105,110,103,32,118,101,99,50,32,116,101,120,99,111,111,114,100,59,32,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,118,111,105,100,32,109,97,105,110,40,41,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,103,108,95,70,114,97,103,67,111,108,111,114,32,61,32,116,101,120,116,117,114,101,50,68,40,116,101,120,116,117,114,101,44,32,116,101,120,99,111,111,114,100,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,0,0,0,0,0,0,0,0,0,0,0,0,0,116,101,120,116,117,114,101,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,97,115,115,101,116,115,47,97,116,108,97,115,46,112,110,103,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,191,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,205,204,76,191,0,0,0,0,0,0,0,0,0,0,0,0,89,79,85,82,32,83,67,79,82,69,32,73,83,32,37,100,10,0,0,0,0,0,0,0,117,110,107,110,111,119,110,32,105,109,97,103,101,32,116,121,112,101,0,0,0,0,0,0,35,63,82,65,68,73,65,78,67,69,0,0,0,0,0,0,70,79,82,77,65,84,61,51,50,45,98,105,116,95,114,108,101,95,114,103,98,101,0,0,45,89,32,0,0,0,0,0,43,88,32,0,0,0,0,0,109,97,120,32,118,97,108,117,101,32,62,32,50,53,53,0,110,111,116,32,71,73,70,0,0,0,0,0,0,0,0,0,109,117,108,116,105,112,108,101,32,73,72,68,82,0,0,0,98,97,100,32,73,72,68,82,32,108,101,110,0,0,0,0,116,111,111,32,108,97,114,103,101,0,0,0,0,0,0,0,49,47,50,47,52,47,56,45,98,105,116,32,111,110,108,121,0,0,0,0,0,0,0,0,98,97,100,32,99,116,121,112,101,0,0,0,0,0,0,0,98,97,100,32,99,111,109,112,32,109,101,116,104,111,100,0,98,97,100,32,102,105,108,116,101,114,32,109,101,116,104,111,100,0,0,0,0,0,0,0,98,97,100,32,105,110,116,101,114,108,97,99,101,32,109,101,116,104,111,100,0,0,0,0,48,45,112,105,120,101,108,32,105,109,97,103,101,0,0,0,102,105,114,115,116,32,110,111,116,32,73,72,68,82,0,0,105,110,118,97,108,105,100,32,80,76,84,69,0,0,0,0,116,82,78,83,32,97,102,116,101,114,32,73,68,65,84,0,116,82,78,83,32,98,101,102,111,114,101,32,80,76,84,69,0,0,0,0,0,0,0,0,98,97,100,32,116,82,78,83,32,108,101,110,0,0,0,0,116,82,78,83,32,119,105,116,104,32,97,108,112,104,97,0,0,255,85,0,17,0,0,0,1,0,0,0,0,0,0,0,110,111,32,80,76,84,69,0,111,117,116,111,102,109,101,109,0,0,0,0,0,0,0,0,111,117,116,111,102,100,97,116,97,0,0,0,0,0,0,0,110,111,32,73,68,65,84,0,88,88,88,88,32,80,78,71,32,99,104,117,110,107,32,110,111,116,32,107,110,111,119,110,0,0,0,0,0,0,0,0,115,45,62,105,109,103,95,111,117,116,95,110,32,61,61,32,52,0,0,0,0,0,0,0,115,114,99,47,115,112,114,105,116,101,115,47,46,46,47,112,117,117,110,47,103,102,47,46,46,47,46,46,47,111,116,104,101,114,47,115,116,98,95,105,109,97,103,101,46,104,0,0,115,116,98,105,95,95,100,101,95,105,112,104,111,110,101,0,111,117,116,95,110,32,61,61,32,50,32,124,124,32,111,117,116,95,110,32,61,61,32,52,0,0,0,0,0,0,0,0,115,116,98,105,95,95,99,111,109,112,117,116,101,95,116,114,97,110,115,112,97,114,101,110,99,121,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,8,0,0,0,8,0,0,0,4,0,0,0,4,0,0,0,2,0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,4,0,0,0,4,0,0,0,2,0,0,0,2,0,0,0,0,0,0,0,111,117,116,95,110,32,61,61,32,115,45,62,105,109,103,95,110,32,124,124,32,111,117,116,95,110,32,61,61,32,115,45,62,105,109,103,95,110,43,49,0,0,0,0,0,0,0,0,115,116,98,105,95,95,99,114,101,97,116,101,95,112,110,103,95,105,109,97,103,101,95,114,97,119,0,0,0,0,0,0,110,111,116,32,101,110,111,117,103,104,32,112,105,120,101,108,115,0,0,0,0,0,0,0,105,110,118,97,108,105,100,32,102,105,108,116,101,114,0,0,105,109,103,95,119,105,100,116,104,95,98,121,116,101,115,32,60,61,32,120,0,0,0,0,0,1,0,5,6,0,0,0,105,109,103,95,110,43,49,32,61,61,32,111,117,116,95,110,0,0,0,0,0,0,0,0,105,109,103,95,110,32,61,61,32,51,0,0,0,0,0,0,137,80,78,71,13,10,26,10,98,97,100,32,112,110,103,32,115,105,103,0,0,0,0,0,110,111,32,83,79,73,0,0,110,111,32,83,79,70,0,0,98,97,100,32,83,79,70,32,108,101,110,0,0,0,0,0,111,110,108,121,32,56,45,98,105,116,0,0,0,0,0,0,110,111,32,104,101,97,100,101,114,32,104,101,105,103,104,116,0,0,0,0,0,0,0,0,48,32,119,105,100,116,104,0,98,97,100,32,99,111,109,112,111,110,101,110,116,32,99,111,117,110,116,0,0,0,0,0,98,97,100,32,99,111,109,112,111,110,101,110,116,32,73,68,0,0,0,0,0,0,0,0,98,97,100,32,72,0,0,0,98,97,100,32,86,0,0,0,98,97,100,32,84,81,0,0,101,120,112,101,99,116,101,100,32,109,97,114,107,101,114,0,98,97,100,32,68,82,73,32,108,101,110,0,0,0,0,0,98,97,100,32,68,81,84,32,116,121,112,101,0,0,0,0,98,97,100,32,68,81,84,32,116,97,98,108,101,0,0,0,0,1,8,16,9,2,3,10,17,24,32,25,18,11,4,5,12,19,26,33,40,48,41,34,27,20,13,6,7,14,21,28,35,42,49,56,57,50,43,36,29,22,15,23,30,37,44,51,58,59,52,45,38,31,39,46,53,60,61,54,47,55,62,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,0,98,97,100,32,68,72,84,32,104,101,97,100,101,114,0,0,98,97,100,32,99,111,100,101,32,108,101,110,103,116,104,115,0,0,0,0,0,0,0,0,35,63,82,65,68,73,65,78,67,69,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,98,97,100,32,104,117,102,102,109,97,110,32,99,111,100,101,0,0,0,0,0,0,0,0,3,0,0,0,4,0,0,0,5,0,0,0,6,0,0,0,7,0,0,0,8,0,0,0,9,0,0,0,10,0,0,0,11,0,0,0,13,0,0,0,15,0,0,0,17,0,0,0,19,0,0,0,23,0,0,0,27,0,0,0,31,0,0,0,35,0,0,0,43,0,0,0,51,0,0,0,59,0,0,0,67,0,0,0,83,0,0,0,99,0,0,0,115,0,0,0,131,0,0,0,163,0,0,0,195,0,0,0,227,0,0,0,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,4,0,0,0,5,0,0,0,7,0,0,0,9,0,0,0,13,0,0,0,17,0,0,0,25,0,0,0,33,0,0,0,49,0,0,0,65,0,0,0,97,0,0,0,129,0,0,0,193,0,0,0,1,1,0,0,129,1,0,0,1,2,0,0,1,3,0,0,1,4,0,0,1,6,0,0,1,8,0,0,1,12,0,0,1,16,0,0,1,24,0,0,1,32,0,0,1,48,0,0,1,64,0,0,1,96,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,2,0,0,0,2,0,0,0,3,0,0,0,3,0,0,0,4,0,0,0,4,0,0,0,5,0,0,0,5,0,0,0,6,0,0,0,6,0,0,0,7,0,0,0,7,0,0,0,8,0,0,0,8,0,0,0,9,0,0,0,9,0,0,0,10,0,0,0,10,0,0,0,11,0,0,0,11,0,0,0,12,0,0,0,12,0,0,0,13,0,0,0,13,0,0,0,0,0,0,0,0,0,0,0,98,97,100,32,100,105,115,116,0,0,0,0,0,0,0,0,111,117,116,112,117,116,32,98,117,102,102,101,114,32,108,105,109,105,116,0,0,0,0,0,122,45,62,115,105,122,101,91,98,93,32,61,61,32,115,0,115,116,98,105,95,95,122,104,117,102,102,109,97,110,95,100,101,99,111,100,101,95,115,108,111,119,112,97,116,104,0,0,98,105,116,115,32,60,61,32,49,54,0,0,0,0,0,0,115,116,98,105,95,95,98,105,116,95,114,101,118,101,114,115,101,0,0,0,0,0,0,0,122,45,62,99,111,100,101,95,98,117,102,102,101,114,32,60,32,40,49,85,32,60,60,32,122,45,62,110,117,109,95,98,105,116,115,41,0,0,0,0,115,116,98,105,95,95,102,105,108,108,95,98,105,116,115,0,16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15,0,0,0,0,0,98,97,100,32,99,111,100,101,108,101,110,103,116,104,115,0,99,32,61,61,32,49,56,0,115,116,98,105,95,95,99,111,109,112,117,116,101,95,104,117,102,102,109,97,110,95,99,111,100,101,115,0,0,0,0,0,98,97,100,32,115,105,122,101,115,0,0,0,0,0,0,0,97,45,62,110,117,109,95,98,105,116,115,32,61,61,32,48,0,0,0,0,0,0,0,0,115,116,98,105,95,95,112,97,114,115,101,95,117,110,99,111,109,112,101,114,115,115,101,100,95,98,108,111,99,107,0,0,122,108,105,98,32,99,111,114,114,117,112,116,0,0,0,0,114,101,97,100,32,112,97,115,116,32,98,117,102,102,101,114,0,0,0,0,0,0,0,0,98,97,100,32,122,108,105,98,32,104,101,97,100,101,114,0,110,111,32,112,114,101,115,101,116,32,100,105,99,116,0,0,98,97,100,32,99,111,109,112,114,101,115,115,105,111,110,0,110,111,116,32,72,68,82,0,117,110,115,117,112,112,111,114,116,101,100,32,102,111,114,109,97,116,0,0,0,0,0,0,117,110,115,117,112,112,111,114,116,101,100,32,100,97,116,97,32,108,97,121,111,117,116,0,105,110,118,97,108,105,100,32,100,101,99,111,100,101,100,32,115,99,97,110,108,105,110,101,32,108,101,110,103,116,104,0,98,97,100,32,112,97,108,101,116,116,101,0,0,0,0,0,114,101,113,95,99,111,109,112,32,62,61,32,49,32,38,38,32,114,101,113,95,99,111,109,112,32,60,61,32,52,0,0,115,116,98,105,95,95,99,111,110,118,101,114,116,95,102,111,114,109,97,116,0,0,0,0,48,0,0,0,0,0,0,0,98,97,100,32,102,105,108,101,0,0,0,0,0,0,0,0,98,97,100,32,102,111,114,109,97,116,0,0,0,0,0,0,83,128,246,52,0,0,0,0,80,73,67,84,0,0,0,0,110,111,116,32,80,83,68,0,119,114,111,110,103,32,118,101,114,115,105,111,110,0,0,0,119,114,111,110,103,32,99,104,97,110,110,101,108,32,99,111,117,110,116,0,0,0,0,0,117,110,115,117,112,112,111,114,116,101,100,32,98,105,116,32,100,101,112,116,104,0,0,0,119,114,111,110,103,32,99,111,108,111,114,32,102,111,114,109,97,116,0,0,0,0,0,0,98,97,100,32,73,109,97,103,101,32,68,101,115,99,114,105,112,116,111,114,0,0,0,0,109,105,115,115,105,110,103,32,99,111,108,111,114,32,116,97,98,108,101,0,0,0,0,0,117,110,107,110,111,119,110,32,99,111,100,101,0,0,0,0,110,111,32,99,108,101,97,114,32,99,111,100,101,0,0,0,116,111,111,32,109,97,110,121,32,99,111,100,101,115,0,0,105,108,108,101,103,97,108,32,99,111,100,101,32,105,110,32,114,97,115,116,101,114,0,0,110,111,116,32,66,77,80,0,117,110,107,110,111,119,110,32,66,77,80,0,0,0,0,0,98,97,100,32,66,77,80,0,109,111,110,111,99,104,114,111,109,101,0,0,0,0,0,0,66,77,80,32,82,76,69,0,104,115,122,32,61,61,32,49,48,56,32,124,124,32,104,115,122,32,61,61,32,49,50,52,0,0,0,0,0,0,0,0,115,116,98,105,95,95,98,109,112,95,108,111,97,100,0,0,105,110,118,97,108,105,100,0,98,97,100,32,98,112,112,0,98,97,100,32,109,97,115,107,115,0,0,0,0,0,0,0,98,97,100,32,114,101,113,95,99,111,109,112,0,0,0,0,106,117,110,107,32,98,101,102,111,114,101,32,109,97,114,107,101,114,0,0,0,0,0,0,99,97,110,39,116,32,109,101,114,103,101,32,100,99,32,97,110,100,32,97,99,0,0,0,110,32,62,61,32,48,32,38,38,32,110,32,60,32,40,105,110,116,41,32,40,115,105,122,101,111,102,40,115,116,98,105,95,95,98,109,97,115,107,41,47,115,105,122,101,111,102,40,42,115,116,98,105,95,95,98,109,97,115,107,41,41,0,0,115,116,98,105,95,95,101,120,116,101,110,100,95,114,101,99,101,105,118,101,0,0,0,0,0,0,0,0,1,0,0,0,3,0,0,0,7,0,0,0,15,0,0,0,31,0,0,0,63,0,0,0,127,0,0,0,255,0,0,0,255,1,0,0,255,3,0,0,255,7,0,0,255,15,0,0,255,31,0,0,255,63,0,0,255,127,0,0,255,255,0,0,0,0,0,0,0,0,0,0,255,255,255,255,253,255,255,255,249,255,255,255,241,255,255,255,225,255,255,255,193,255,255,255,129,255,255,255,1,255,255,255,1,254,255,255,1,252,255,255,1,248,255,255,1,240,255,255,1,224,255,255,1,192,255,255,1,128,255,255,40,40,40,106,45,62,99,111,100,101,95,98,117,102,102,101,114,41,32,62,62,32,40,51,50,32,45,32,104,45,62,115,105,122,101,91,99,93,41,41,32,38,32,115,116,98,105,95,95,98,109,97,115,107,91,104,45,62,115,105,122,101,91,99,93,93,41,32,61,61,32,104,45,62,99,111,100,101,91,99,93,0,0,0,0,0,0,0,115,116,98,105,95,95,106,112,101,103,95,104,117,102,102,95,100,101,99,111,100,101,0,0,98,97,100,32,83,79,83,32,99,111,109,112,111,110,101,110,116,32,99,111,117,110,116,0,98,97,100,32,83,79,83,32,108,101,110,0,0,0,0,0,98,97,100,32,68,67,32,104,117,102,102,0,0,0,0,0,98,97,100,32,65,67,32,104,117,102,102,0,0,0,0,0,98,97,100,32,83,79,83,0,1,0,0,0,2,0,0,0,3,0,0,0,0,0,0,0,101,114,114,111,114,58,10,32,37,115,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,1,2,3,4,5,6,7,8,9,255,255,255,255,255,255,255,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,255,255,255,255,255,255,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0,1,2,4,7,3,6,5,0,0,0,0,0,0,0,0], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE);




var tempDoublePtr = Runtime.alignMemory(allocate(12, "i8", ALLOC_STATIC), 8);

assert(tempDoublePtr % 8 == 0);

function copyTempFloat(ptr) { // functions, because inlining this code increases code size too much

  HEAP8[tempDoublePtr] = HEAP8[ptr];

  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];

  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];

  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];

}

function copyTempDouble(ptr) {

  HEAP8[tempDoublePtr] = HEAP8[ptr];

  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];

  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];

  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];

  HEAP8[tempDoublePtr+4] = HEAP8[ptr+4];

  HEAP8[tempDoublePtr+5] = HEAP8[ptr+5];

  HEAP8[tempDoublePtr+6] = HEAP8[ptr+6];

  HEAP8[tempDoublePtr+7] = HEAP8[ptr+7];

}


  
  
  
  var GL={counter:1,lastError:0,buffers:[],mappedBuffers:{},programs:[],framebuffers:[],renderbuffers:[],textures:[],uniforms:[],shaders:[],vaos:[],contexts:[],currentContext:null,byteSizeByTypeRoot:5120,byteSizeByType:[1,1,2,2,4,4,4,2,3,4,8],programInfos:{},stringCache:{},packAlignment:4,unpackAlignment:4,init:function () {
        GL.miniTempBuffer = new Float32Array(GL.MINI_TEMP_BUFFER_SIZE);
        for (var i = 0; i < GL.MINI_TEMP_BUFFER_SIZE; i++) {
          GL.miniTempBufferViews[i] = GL.miniTempBuffer.subarray(0, i+1);
        }
      },recordError:function recordError(errorCode) {
        if (!GL.lastError) {
          GL.lastError = errorCode;
        }
      },getNewId:function (table) {
        var ret = GL.counter++;
        for (var i = table.length; i < ret; i++) {
          table[i] = null;
        }
        return ret;
      },MINI_TEMP_BUFFER_SIZE:16,miniTempBuffer:null,miniTempBufferViews:[0],getSource:function (shader, count, string, length) {
        var source = '';
        for (var i = 0; i < count; ++i) {
          var frag;
          if (length) {
            var len = HEAP32[(((length)+(i*4))>>2)];
            if (len < 0) {
              frag = Pointer_stringify(HEAP32[(((string)+(i*4))>>2)]);
            } else {
              frag = Pointer_stringify(HEAP32[(((string)+(i*4))>>2)], len);
            }
          } else {
            frag = Pointer_stringify(HEAP32[(((string)+(i*4))>>2)]);
          }
          source += frag;
        }
        return source;
      },computeImageSize:function (width, height, sizePerPixel, alignment) {
        function roundedToNextMultipleOf(x, y) {
          return Math.floor((x + y - 1) / y) * y
        }
        var plainRowSize = width * sizePerPixel;
        var alignedRowSize = roundedToNextMultipleOf(plainRowSize, alignment);
        return (height <= 0) ? 0 :
                 ((height - 1) * alignedRowSize + plainRowSize);
      },get:function (name_, p, type) {
        // Guard against user passing a null pointer.
        // Note that GLES2 spec does not say anything about how passing a null pointer should be treated.
        // Testing on desktop core GL 3, the application crashes on glGetIntegerv to a null pointer, but
        // better to report an error instead of doing anything random.
        if (!p) {
          GL.recordError(0x0501 /* GL_INVALID_VALUE */);
          return;
        }
        var ret = undefined;
        switch(name_) { // Handle a few trivial GLES values
          case 0x8DFA: // GL_SHADER_COMPILER
            ret = 1;
            break;
          case 0x8DF8: // GL_SHADER_BINARY_FORMATS
            if (type !== 'Integer') {
              GL.recordError(0x0500); // GL_INVALID_ENUM
            }
            return; // Do not write anything to the out pointer, since no binary formats are supported.
          case 0x8DF9: // GL_NUM_SHADER_BINARY_FORMATS
            ret = 0;
            break;
          case 0x86A2: // GL_NUM_COMPRESSED_TEXTURE_FORMATS
            // WebGL doesn't have GL_NUM_COMPRESSED_TEXTURE_FORMATS (it's obsolete since GL_COMPRESSED_TEXTURE_FORMATS returns a JS array that can be queried for length),
            // so implement it ourselves to allow C++ GLES2 code get the length.
            var formats = GLctx.getParameter(0x86A3 /*GL_COMPRESSED_TEXTURE_FORMATS*/);
            ret = formats.length;
            break;
          case 0x8B9A: // GL_IMPLEMENTATION_COLOR_READ_TYPE
            ret = 0x1401; // GL_UNSIGNED_BYTE
            break;
          case 0x8B9B: // GL_IMPLEMENTATION_COLOR_READ_FORMAT
            ret = 0x1908; // GL_RGBA
            break;
        }
  
        if (ret === undefined) {
          var result = GLctx.getParameter(name_);
          switch (typeof(result)) {
            case "number":
              ret = result;
              break;
            case "boolean":
              ret = result ? 1 : 0;
              break;
            case "string":
              GL.recordError(0x0500); // GL_INVALID_ENUM
              return;
            case "object":
              if (result === null) {
                // null is a valid result for some (e.g., which buffer is bound - perhaps nothing is bound), but otherwise
                // can mean an invalid name_, which we need to report as an error
                switch(name_) {
                  case 0x8894: // ARRAY_BUFFER_BINDING
                  case 0x8B8D: // CURRENT_PROGRAM
                  case 0x8895: // ELEMENT_ARRAY_BUFFER_BINDING
                  case 0x8CA6: // FRAMEBUFFER_BINDING
                  case 0x8CA7: // RENDERBUFFER_BINDING
                  case 0x8069: // TEXTURE_BINDING_2D
                  case 0x8514: { // TEXTURE_BINDING_CUBE_MAP
                    ret = 0;
                    break;
                  }
                  default: {
                    GL.recordError(0x0500); // GL_INVALID_ENUM
                    return;
                  }
                }
              } else if (result instanceof Float32Array ||
                         result instanceof Uint32Array ||
                         result instanceof Int32Array ||
                         result instanceof Array) {
                for (var i = 0; i < result.length; ++i) {
                  switch (type) {
                    case 'Integer': HEAP32[(((p)+(i*4))>>2)]=result[i];   break;
                    case 'Float':   HEAPF32[(((p)+(i*4))>>2)]=result[i]; break;
                    case 'Boolean': HEAP8[(((p)+(i))>>0)]=result[i] ? 1 : 0;    break;
                    default: throw 'internal glGet error, bad type: ' + type;
                  }
                }
                return;
              } else if (result instanceof WebGLBuffer ||
                         result instanceof WebGLProgram ||
                         result instanceof WebGLFramebuffer ||
                         result instanceof WebGLRenderbuffer ||
                         result instanceof WebGLTexture) {
                ret = result.name | 0;
              } else {
                GL.recordError(0x0500); // GL_INVALID_ENUM
                return;
              }
              break;
            default:
              GL.recordError(0x0500); // GL_INVALID_ENUM
              return;
          }
        }
  
        switch (type) {
          case 'Integer': HEAP32[((p)>>2)]=ret;    break;
          case 'Float':   HEAPF32[((p)>>2)]=ret;  break;
          case 'Boolean': HEAP8[((p)>>0)]=ret ? 1 : 0; break;
          default: throw 'internal glGet error, bad type: ' + type;
        }
      },getTexPixelData:function (type, format, width, height, pixels, internalFormat) {
        var sizePerPixel;
        var numChannels;
        switch(format) {
          case 0x1906 /* GL_ALPHA */:
          case 0x1909 /* GL_LUMINANCE */:
          case 0x1902 /* GL_DEPTH_COMPONENT */:
          case 0x1903 /* GL_RED */:
            numChannels = 1;
            break;
          case 0x190A /* GL_LUMINANCE_ALPHA */:
          case 0x8227 /* GL_RG */:
            numChannels = 2;
            break;
          case 0x1907 /* GL_RGB */:
            numChannels = 3;
            break;
          case 0x1908 /* GL_RGBA */:
            numChannels = 4;
            break;
          default:
            GL.recordError(0x0500); // GL_INVALID_ENUM
            return {
              pixels: null,
              internalFormat: 0x0
            };
        }
        switch (type) {
          case 0x1401 /* GL_UNSIGNED_BYTE */:
            sizePerPixel = numChannels*1;
            break;
          case 0x1403 /* GL_UNSIGNED_SHORT */:
          case 0x8D61 /* GL_HALF_FLOAT_OES */:
            sizePerPixel = numChannels*2;
            break;
          case 0x1405 /* GL_UNSIGNED_INT */:
          case 0x1406 /* GL_FLOAT */:
            sizePerPixel = numChannels*4;
            break;
          case 0x84FA /* UNSIGNED_INT_24_8_WEBGL */:
            sizePerPixel = 4;
            break;
          case 0x8363 /* GL_UNSIGNED_SHORT_5_6_5 */:
          case 0x8033 /* GL_UNSIGNED_SHORT_4_4_4_4 */:
          case 0x8034 /* GL_UNSIGNED_SHORT_5_5_5_1 */:
            sizePerPixel = 2;
            break;
          default:
            GL.recordError(0x0500); // GL_INVALID_ENUM
            return {
              pixels: null,
              internalFormat: 0x0
            };
        }
        var bytes = GL.computeImageSize(width, height, sizePerPixel, GL.unpackAlignment);
        if (type == 0x1401 /* GL_UNSIGNED_BYTE */) {
          pixels = HEAPU8.subarray((pixels),(pixels+bytes));
        } else if (type == 0x1406 /* GL_FLOAT */) {
          pixels = HEAPF32.subarray((pixels)>>2,(pixels+bytes)>>2);
        } else if (type == 0x1405 /* GL_UNSIGNED_INT */ || type == 0x84FA /* UNSIGNED_INT_24_8_WEBGL */) {
          pixels = HEAPU32.subarray((pixels)>>2,(pixels+bytes)>>2);
        } else {
          pixels = HEAPU16.subarray((pixels)>>1,(pixels+bytes)>>1);
        }
        return {
          pixels: pixels,
          internalFormat: internalFormat
        };
      },validateBufferTarget:function (target) {
        switch (target) {
          case 0x8892: // GL_ARRAY_BUFFER
          case 0x8893: // GL_ELEMENT_ARRAY_BUFFER
          case 0x8F36: // GL_COPY_READ_BUFFER
          case 0x8F37: // GL_COPY_WRITE_BUFFER
          case 0x88EB: // GL_PIXEL_PACK_BUFFER
          case 0x88EC: // GL_PIXEL_UNPACK_BUFFER
          case 0x8C2A: // GL_TEXTURE_BUFFER
          case 0x8C8E: // GL_TRANSFORM_FEEDBACK_BUFFER
          case 0x8A11: // GL_UNIFORM_BUFFER
            return true;
          default:
            return false;
        }
      },createContext:function (canvas, webGLContextAttributes) {
        if (typeof webGLContextAttributes.majorVersion === 'undefined' && typeof webGLContextAttributes.minorVersion === 'undefined') {
          webGLContextAttributes.majorVersion = 1;
          webGLContextAttributes.minorVersion = 0;
        }
        var ctx;
        var errorInfo = '?';
        function onContextCreationError(event) {
          errorInfo = event.statusMessage || errorInfo;
        }
        try {
          canvas.addEventListener('webglcontextcreationerror', onContextCreationError, false);
          try {
            if (webGLContextAttributes.majorVersion == 1 && webGLContextAttributes.minorVersion == 0) {
              ctx = canvas.getContext("webgl", webGLContextAttributes) || canvas.getContext("experimental-webgl", webGLContextAttributes);
            } else if (webGLContextAttributes.majorVersion == 2 && webGLContextAttributes.minorVersion == 0) {
              ctx = canvas.getContext("webgl2", webGLContextAttributes) || canvas.getContext("experimental-webgl2", webGLContextAttributes);
            } else {
              throw 'Unsupported WebGL context version ' + majorVersion + '.' + minorVersion + '!'
            }
          } finally {
            canvas.removeEventListener('webglcontextcreationerror', onContextCreationError, false);
          }
          if (!ctx) throw ':(';
        } catch (e) {
          Module.print('Could not create canvas: ' + [errorInfo, e, JSON.stringify(webGLContextAttributes)]);
          return 0;
        }
        // possible GL_DEBUG entry point: ctx = wrapDebugGL(ctx);
  
        if (!ctx) return 0;
        return GL.registerContext(ctx, webGLContextAttributes);
      },registerContext:function (ctx, webGLContextAttributes) {
        var handle = GL.getNewId(GL.contexts);
        var context = {
          handle: handle,
          version: webGLContextAttributes.majorVersion,
          GLctx: ctx
        };
        // Store the created context object so that we can access the context given a canvas without having to pass the parameters again.
        if (ctx.canvas) ctx.canvas.GLctxObject = context;
        GL.contexts[handle] = context;
        if (typeof webGLContextAttributes['enableExtensionsByDefault'] === 'undefined' || webGLContextAttributes.enableExtensionsByDefault) {
          GL.initExtensions(context);
        }
        return handle;
      },makeContextCurrent:function (contextHandle) {
        var context = GL.contexts[contextHandle];
        if (!context) return false;
        GLctx = Module.ctx = context.GLctx; // Active WebGL context object.
        GL.currentContext = context; // Active Emscripten GL layer context object.
        return true;
      },getContext:function (contextHandle) {
        return GL.contexts[contextHandle];
      },deleteContext:function (contextHandle) {
        if (GL.currentContext === GL.contexts[contextHandle]) GL.currentContext = null;
        if (typeof JSEvents === 'object') JSEvents.removeAllHandlersOnTarget(GL.contexts[contextHandle].GLctx.canvas); // Release all JS event handlers on the DOM element that the GL context is associated with since the context is now deleted.
        if (GL.contexts[contextHandle] && GL.contexts[contextHandle].GLctx.canvas) GL.contexts[contextHandle].GLctx.canvas.GLctxObject = undefined; // Make sure the canvas object no longer refers to the context object so there are no GC surprises.
        GL.contexts[contextHandle] = null;
      },initExtensions:function (context) {
  
        // If this function is called without a specific context object, init the extensions of the currently active context.
        if (!context) context = GL.currentContext;
  
        if (context.initExtensionsDone) return;
        context.initExtensionsDone = true;
  
        var GLctx = context.GLctx;
  
        context.maxVertexAttribs = GLctx.getParameter(GLctx.MAX_VERTEX_ATTRIBS);
  
        // Detect the presence of a few extensions manually, this GL interop layer itself will need to know if they exist. 
        context.compressionExt = GLctx.getExtension('WEBGL_compressed_texture_s3tc');
        context.anisotropicExt = GLctx.getExtension('EXT_texture_filter_anisotropic');
        context.floatExt = GLctx.getExtension('OES_texture_float');
  
        // Extension available from Firefox 26 and Google Chrome 30
        context.instancedArraysExt = GLctx.getExtension('ANGLE_instanced_arrays');
        
        // Extension available from Firefox 25 and WebKit
        context.vaoExt = GLctx.getExtension('OES_vertex_array_object');
  
        if (context.version === 2) {
          // drawBuffers is available in WebGL2 by default.
          context.drawBuffersExt = function(n, bufs) {
            GLctx.drawBuffers(n, bufs);
          };
        } else {
          var ext = GLctx.getExtension('WEBGL_draw_buffers');
          if (ext) {
            context.drawBuffersExt = function(n, bufs) {
              ext.drawBuffersWEBGL(n, bufs);
            };
          }
        }
  
        // These are the 'safe' feature-enabling extensions that don't add any performance impact related to e.g. debugging, and
        // should be enabled by default so that client GLES2/GL code will not need to go through extra hoops to get its stuff working.
        // As new extensions are ratified at http://www.khronos.org/registry/webgl/extensions/ , feel free to add your new extensions
        // here, as long as they don't produce a performance impact for users that might not be using those extensions.
        // E.g. debugging-related extensions should probably be off by default.
        var automaticallyEnabledExtensions = [ "OES_texture_float", "OES_texture_half_float", "OES_standard_derivatives",
                                               "OES_vertex_array_object", "WEBGL_compressed_texture_s3tc", "WEBGL_depth_texture",
                                               "OES_element_index_uint", "EXT_texture_filter_anisotropic", "ANGLE_instanced_arrays",
                                               "OES_texture_float_linear", "OES_texture_half_float_linear", "WEBGL_compressed_texture_atc",
                                               "WEBGL_compressed_texture_pvrtc", "EXT_color_buffer_half_float", "WEBGL_color_buffer_float",
                                               "EXT_frag_depth", "EXT_sRGB", "WEBGL_draw_buffers", "WEBGL_shared_resources",
                                               "EXT_shader_texture_lod" ];
  
        function shouldEnableAutomatically(extension) {
          var ret = false;
          automaticallyEnabledExtensions.forEach(function(include) {
            if (ext.indexOf(include) != -1) {
              ret = true;
            }
          });
          return ret;
        }
  
        var exts = GLctx.getSupportedExtensions();
        if (exts && exts.length > 0) {
          GLctx.getSupportedExtensions().forEach(function(ext) {
            if (automaticallyEnabledExtensions.indexOf(ext) != -1) {
              GLctx.getExtension(ext); // Calling .getExtension enables that extension permanently, no need to store the return value to be enabled.
            }
          });
        }
      },populateUniformTable:function (program) {
        var p = GL.programs[program];
        GL.programInfos[program] = {
          uniforms: {},
          maxUniformLength: 0, // This is eagerly computed below, since we already enumerate all uniforms anyway.
          maxAttributeLength: -1 // This is lazily computed and cached, computed when/if first asked, "-1" meaning not computed yet.
        };
  
        var ptable = GL.programInfos[program];
        var utable = ptable.uniforms;
        // A program's uniform table maps the string name of an uniform to an integer location of that uniform.
        // The global GL.uniforms map maps integer locations to WebGLUniformLocations.
        var numUniforms = GLctx.getProgramParameter(p, GLctx.ACTIVE_UNIFORMS);
        for (var i = 0; i < numUniforms; ++i) {
          var u = GLctx.getActiveUniform(p, i);
  
          var name = u.name;
          ptable.maxUniformLength = Math.max(ptable.maxUniformLength, name.length+1);
  
          // Strip off any trailing array specifier we might have got, e.g. "[0]".
          if (name.indexOf(']', name.length-1) !== -1) {
            var ls = name.lastIndexOf('[');
            name = name.slice(0, ls);
          }
  
          // Optimize memory usage slightly: If we have an array of uniforms, e.g. 'vec3 colors[3];', then 
          // only store the string 'colors' in utable, and 'colors[0]', 'colors[1]' and 'colors[2]' will be parsed as 'colors'+i.
          // Note that for the GL.uniforms table, we still need to fetch the all WebGLUniformLocations for all the indices.
          var loc = GLctx.getUniformLocation(p, name);
          var id = GL.getNewId(GL.uniforms);
          utable[name] = [u.size, id];
          GL.uniforms[id] = loc;
  
          for (var j = 1; j < u.size; ++j) {
            var n = name + '['+j+']';
            loc = GLctx.getUniformLocation(p, n);
            id = GL.getNewId(GL.uniforms);
  
            GL.uniforms[id] = loc;
          }
        }
      }};function _glGetString(name_) {
      if (GL.stringCache[name_]) return GL.stringCache[name_];
      var ret; 
      switch(name_) {
        case 0x1F00 /* GL_VENDOR */:
        case 0x1F01 /* GL_RENDERER */:
        case 0x1F02 /* GL_VERSION */:
          ret = allocate(intArrayFromString(GLctx.getParameter(name_)), 'i8', ALLOC_NORMAL);
          break;
        case 0x1F03 /* GL_EXTENSIONS */:
          var exts = GLctx.getSupportedExtensions();
          var gl_exts = [];
          for (var i in exts) {
            gl_exts.push(exts[i]);
            gl_exts.push("GL_" + exts[i]);
          }
          ret = allocate(intArrayFromString(gl_exts.join(' ')), 'i8', ALLOC_NORMAL);
          break;
        case 0x8B8C /* GL_SHADING_LANGUAGE_VERSION */:
          ret = allocate(intArrayFromString('OpenGL ES GLSL 1.00 (WebGL)'), 'i8', ALLOC_NORMAL);
          break;
        default:
          GL.recordError(0x0500/*GL_INVALID_ENUM*/);
          return 0;
      }
      GL.stringCache[name_] = ret;
      return ret;
    }var GLEW={isLinaroFork:1,extensions:null,error:{0:null,1:null,2:null,3:null,4:null,5:null,6:null,7:null,8:null},version:{1:null,2:null,3:null,4:null},errorStringConstantFromCode:function (error) {
        if (GLEW.isLinaroFork) {
          switch (error) {
            case 4:return "OpenGL ES lib expected, found OpenGL lib"; // GLEW_ERROR_NOT_GLES_VERSION
            case 5:return "OpenGL lib expected, found OpenGL ES lib"; // GLEW_ERROR_GLES_VERSION
            case 6:return "Missing EGL version"; // GLEW_ERROR_NO_EGL_VERSION
            case 7:return "EGL 1.1 and up are supported"; // GLEW_ERROR_EGL_VERSION_10_ONLY
            default:break;
          }
        }
  
        switch (error) {
          case 0:return "No error"; // GLEW_OK || GLEW_NO_ERROR
          case 1:return "Missing GL version"; // GLEW_ERROR_NO_GL_VERSION
          case 2:return "GL 1.1 and up are supported"; // GLEW_ERROR_GL_VERSION_10_ONLY
          case 3:return "GLX 1.2 and up are supported"; // GLEW_ERROR_GLX_VERSION_11_ONLY
          default:return null;
        }
      },errorString:function (error) {
        if (!GLEW.error[error]) {
          var string = GLEW.errorStringConstantFromCode(error);
          if (!string) {
            string = "Unknown error";
            error = 8; // prevent array from growing more than this
          }
          GLEW.error[error] = allocate(intArrayFromString(string), 'i8', ALLOC_NORMAL);
        }
        return GLEW.error[error];
      },versionStringConstantFromCode:function (name) {
        switch (name) {
          case 1:return "1.10.0"; // GLEW_VERSION
          case 2:return "1"; // GLEW_VERSION_MAJOR
          case 3:return "10"; // GLEW_VERSION_MINOR
          case 4:return "0"; // GLEW_VERSION_MICRO
          default:return null;
        }
      },versionString:function (name) {
        if (!GLEW.version[name]) {
          var string = GLEW.versionStringConstantFromCode(name);
          if (!string)
            return 0;
          GLEW.version[name] = allocate(intArrayFromString(string), 'i8', ALLOC_NORMAL);
        }
        return GLEW.version[name];
      },extensionIsSupported:function (name) {
        if (!GLEW.extensions) {
          GLEW.extensions = Pointer_stringify(_glGetString(0x1F03)).split(' ');
        }
  
        if (GLEW.extensions.indexOf(name) != -1)
          return 1;
  
        // extensions from GLEmulations do not come unprefixed
        // so, try with prefix
        return (GLEW.extensions.indexOf("GL_" + name) != -1);
      }};function _glewInit() { return 0; }

   
  Module["_i64Subtract"] = _i64Subtract;

  function _glClearColor(x0, x1, x2, x3) { GLctx.clearColor(x0, x1, x2, x3) }

   
  Module["_i64Add"] = _i64Add;

  
  
  
  var ERRNO_CODES={EPERM:1,ENOENT:2,ESRCH:3,EINTR:4,EIO:5,ENXIO:6,E2BIG:7,ENOEXEC:8,EBADF:9,ECHILD:10,EAGAIN:11,EWOULDBLOCK:11,ENOMEM:12,EACCES:13,EFAULT:14,ENOTBLK:15,EBUSY:16,EEXIST:17,EXDEV:18,ENODEV:19,ENOTDIR:20,EISDIR:21,EINVAL:22,ENFILE:23,EMFILE:24,ENOTTY:25,ETXTBSY:26,EFBIG:27,ENOSPC:28,ESPIPE:29,EROFS:30,EMLINK:31,EPIPE:32,EDOM:33,ERANGE:34,ENOMSG:42,EIDRM:43,ECHRNG:44,EL2NSYNC:45,EL3HLT:46,EL3RST:47,ELNRNG:48,EUNATCH:49,ENOCSI:50,EL2HLT:51,EDEADLK:35,ENOLCK:37,EBADE:52,EBADR:53,EXFULL:54,ENOANO:55,EBADRQC:56,EBADSLT:57,EDEADLOCK:35,EBFONT:59,ENOSTR:60,ENODATA:61,ETIME:62,ENOSR:63,ENONET:64,ENOPKG:65,EREMOTE:66,ENOLINK:67,EADV:68,ESRMNT:69,ECOMM:70,EPROTO:71,EMULTIHOP:72,EDOTDOT:73,EBADMSG:74,ENOTUNIQ:76,EBADFD:77,EREMCHG:78,ELIBACC:79,ELIBBAD:80,ELIBSCN:81,ELIBMAX:82,ELIBEXEC:83,ENOSYS:38,ENOTEMPTY:39,ENAMETOOLONG:36,ELOOP:40,EOPNOTSUPP:95,EPFNOSUPPORT:96,ECONNRESET:104,ENOBUFS:105,EAFNOSUPPORT:97,EPROTOTYPE:91,ENOTSOCK:88,ENOPROTOOPT:92,ESHUTDOWN:108,ECONNREFUSED:111,EADDRINUSE:98,ECONNABORTED:103,ENETUNREACH:101,ENETDOWN:100,ETIMEDOUT:110,EHOSTDOWN:112,EHOSTUNREACH:113,EINPROGRESS:115,EALREADY:114,EDESTADDRREQ:89,EMSGSIZE:90,EPROTONOSUPPORT:93,ESOCKTNOSUPPORT:94,EADDRNOTAVAIL:99,ENETRESET:102,EISCONN:106,ENOTCONN:107,ETOOMANYREFS:109,EUSERS:87,EDQUOT:122,ESTALE:116,ENOTSUP:95,ENOMEDIUM:123,EILSEQ:84,EOVERFLOW:75,ECANCELED:125,ENOTRECOVERABLE:131,EOWNERDEAD:130,ESTRPIPE:86};
  
  var ERRNO_MESSAGES={0:"Success",1:"Not super-user",2:"No such file or directory",3:"No such process",4:"Interrupted system call",5:"I/O error",6:"No such device or address",7:"Arg list too long",8:"Exec format error",9:"Bad file number",10:"No children",11:"No more processes",12:"Not enough core",13:"Permission denied",14:"Bad address",15:"Block device required",16:"Mount device busy",17:"File exists",18:"Cross-device link",19:"No such device",20:"Not a directory",21:"Is a directory",22:"Invalid argument",23:"Too many open files in system",24:"Too many open files",25:"Not a typewriter",26:"Text file busy",27:"File too large",28:"No space left on device",29:"Illegal seek",30:"Read only file system",31:"Too many links",32:"Broken pipe",33:"Math arg out of domain of func",34:"Math result not representable",35:"File locking deadlock error",36:"File or path name too long",37:"No record locks available",38:"Function not implemented",39:"Directory not empty",40:"Too many symbolic links",42:"No message of desired type",43:"Identifier removed",44:"Channel number out of range",45:"Level 2 not synchronized",46:"Level 3 halted",47:"Level 3 reset",48:"Link number out of range",49:"Protocol driver not attached",50:"No CSI structure available",51:"Level 2 halted",52:"Invalid exchange",53:"Invalid request descriptor",54:"Exchange full",55:"No anode",56:"Invalid request code",57:"Invalid slot",59:"Bad font file fmt",60:"Device not a stream",61:"No data (for no delay io)",62:"Timer expired",63:"Out of streams resources",64:"Machine is not on the network",65:"Package not installed",66:"The object is remote",67:"The link has been severed",68:"Advertise error",69:"Srmount error",70:"Communication error on send",71:"Protocol error",72:"Multihop attempted",73:"Cross mount point (not really error)",74:"Trying to read unreadable message",75:"Value too large for defined data type",76:"Given log. name not unique",77:"f.d. invalid for this operation",78:"Remote address changed",79:"Can   access a needed shared lib",80:"Accessing a corrupted shared lib",81:".lib section in a.out corrupted",82:"Attempting to link in too many libs",83:"Attempting to exec a shared library",84:"Illegal byte sequence",86:"Streams pipe error",87:"Too many users",88:"Socket operation on non-socket",89:"Destination address required",90:"Message too long",91:"Protocol wrong type for socket",92:"Protocol not available",93:"Unknown protocol",94:"Socket type not supported",95:"Not supported",96:"Protocol family not supported",97:"Address family not supported by protocol family",98:"Address already in use",99:"Address not available",100:"Network interface is not configured",101:"Network is unreachable",102:"Connection reset by network",103:"Connection aborted",104:"Connection reset by peer",105:"No buffer space available",106:"Socket is already connected",107:"Socket is not connected",108:"Can't send after socket shutdown",109:"Too many references",110:"Connection timed out",111:"Connection refused",112:"Host is down",113:"Host is unreachable",114:"Socket already connected",115:"Connection already in progress",116:"Stale file handle",122:"Quota exceeded",123:"No medium (in tape drive)",125:"Operation canceled",130:"Previous owner died",131:"State not recoverable"};
  
  
  var ___errno_state=0;function ___setErrNo(value) {
      // For convenient setting and returning of errno.
      HEAP32[((___errno_state)>>2)]=value;
      return value;
    }
  
  var PATH={splitPath:function (filename) {
        var splitPathRe = /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;
        return splitPathRe.exec(filename).slice(1);
      },normalizeArray:function (parts, allowAboveRoot) {
        // if the path tries to go above the root, `up` ends up > 0
        var up = 0;
        for (var i = parts.length - 1; i >= 0; i--) {
          var last = parts[i];
          if (last === '.') {
            parts.splice(i, 1);
          } else if (last === '..') {
            parts.splice(i, 1);
            up++;
          } else if (up) {
            parts.splice(i, 1);
            up--;
          }
        }
        // if the path is allowed to go above the root, restore leading ..s
        if (allowAboveRoot) {
          for (; up--; up) {
            parts.unshift('..');
          }
        }
        return parts;
      },normalize:function (path) {
        var isAbsolute = path.charAt(0) === '/',
            trailingSlash = path.substr(-1) === '/';
        // Normalize the path
        path = PATH.normalizeArray(path.split('/').filter(function(p) {
          return !!p;
        }), !isAbsolute).join('/');
        if (!path && !isAbsolute) {
          path = '.';
        }
        if (path && trailingSlash) {
          path += '/';
        }
        return (isAbsolute ? '/' : '') + path;
      },dirname:function (path) {
        var result = PATH.splitPath(path),
            root = result[0],
            dir = result[1];
        if (!root && !dir) {
          // No dirname whatsoever
          return '.';
        }
        if (dir) {
          // It has a dirname, strip trailing slash
          dir = dir.substr(0, dir.length - 1);
        }
        return root + dir;
      },basename:function (path) {
        // EMSCRIPTEN return '/'' for '/', not an empty string
        if (path === '/') return '/';
        var lastSlash = path.lastIndexOf('/');
        if (lastSlash === -1) return path;
        return path.substr(lastSlash+1);
      },extname:function (path) {
        return PATH.splitPath(path)[3];
      },join:function () {
        var paths = Array.prototype.slice.call(arguments, 0);
        return PATH.normalize(paths.join('/'));
      },join2:function (l, r) {
        return PATH.normalize(l + '/' + r);
      },resolve:function () {
        var resolvedPath = '',
          resolvedAbsolute = false;
        for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
          var path = (i >= 0) ? arguments[i] : FS.cwd();
          // Skip empty and invalid entries
          if (typeof path !== 'string') {
            throw new TypeError('Arguments to path.resolve must be strings');
          } else if (!path) {
            return ''; // an invalid portion invalidates the whole thing
          }
          resolvedPath = path + '/' + resolvedPath;
          resolvedAbsolute = path.charAt(0) === '/';
        }
        // At this point the path should be resolved to a full absolute path, but
        // handle relative paths to be safe (might happen when process.cwd() fails)
        resolvedPath = PATH.normalizeArray(resolvedPath.split('/').filter(function(p) {
          return !!p;
        }), !resolvedAbsolute).join('/');
        return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';
      },relative:function (from, to) {
        from = PATH.resolve(from).substr(1);
        to = PATH.resolve(to).substr(1);
        function trim(arr) {
          var start = 0;
          for (; start < arr.length; start++) {
            if (arr[start] !== '') break;
          }
          var end = arr.length - 1;
          for (; end >= 0; end--) {
            if (arr[end] !== '') break;
          }
          if (start > end) return [];
          return arr.slice(start, end - start + 1);
        }
        var fromParts = trim(from.split('/'));
        var toParts = trim(to.split('/'));
        var length = Math.min(fromParts.length, toParts.length);
        var samePartsLength = length;
        for (var i = 0; i < length; i++) {
          if (fromParts[i] !== toParts[i]) {
            samePartsLength = i;
            break;
          }
        }
        var outputParts = [];
        for (var i = samePartsLength; i < fromParts.length; i++) {
          outputParts.push('..');
        }
        outputParts = outputParts.concat(toParts.slice(samePartsLength));
        return outputParts.join('/');
      }};
  
  var TTY={ttys:[],init:function () {
        // https://github.com/kripken/emscripten/pull/1555
        // if (ENVIRONMENT_IS_NODE) {
        //   // currently, FS.init does not distinguish if process.stdin is a file or TTY
        //   // device, it always assumes it's a TTY device. because of this, we're forcing
        //   // process.stdin to UTF8 encoding to at least make stdin reading compatible
        //   // with text files until FS.init can be refactored.
        //   process['stdin']['setEncoding']('utf8');
        // }
      },shutdown:function () {
        // https://github.com/kripken/emscripten/pull/1555
        // if (ENVIRONMENT_IS_NODE) {
        //   // inolen: any idea as to why node -e 'process.stdin.read()' wouldn't exit immediately (with process.stdin being a tty)?
        //   // isaacs: because now it's reading from the stream, you've expressed interest in it, so that read() kicks off a _read() which creates a ReadReq operation
        //   // inolen: I thought read() in that case was a synchronous operation that just grabbed some amount of buffered data if it exists?
        //   // isaacs: it is. but it also triggers a _read() call, which calls readStart() on the handle
        //   // isaacs: do process.stdin.pause() and i'd think it'd probably close the pending call
        //   process['stdin']['pause']();
        // }
      },register:function (dev, ops) {
        TTY.ttys[dev] = { input: [], output: [], ops: ops };
        FS.registerDevice(dev, TTY.stream_ops);
      },stream_ops:{open:function (stream) {
          var tty = TTY.ttys[stream.node.rdev];
          if (!tty) {
            throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
          }
          stream.tty = tty;
          stream.seekable = false;
        },close:function (stream) {
          // flush any pending line data
          stream.tty.ops.flush(stream.tty);
        },flush:function (stream) {
          stream.tty.ops.flush(stream.tty);
        },read:function (stream, buffer, offset, length, pos /* ignored */) {
          if (!stream.tty || !stream.tty.ops.get_char) {
            throw new FS.ErrnoError(ERRNO_CODES.ENXIO);
          }
          var bytesRead = 0;
          for (var i = 0; i < length; i++) {
            var result;
            try {
              result = stream.tty.ops.get_char(stream.tty);
            } catch (e) {
              throw new FS.ErrnoError(ERRNO_CODES.EIO);
            }
            if (result === undefined && bytesRead === 0) {
              throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
            }
            if (result === null || result === undefined) break;
            bytesRead++;
            buffer[offset+i] = result;
          }
          if (bytesRead) {
            stream.node.timestamp = Date.now();
          }
          return bytesRead;
        },write:function (stream, buffer, offset, length, pos) {
          if (!stream.tty || !stream.tty.ops.put_char) {
            throw new FS.ErrnoError(ERRNO_CODES.ENXIO);
          }
          for (var i = 0; i < length; i++) {
            try {
              stream.tty.ops.put_char(stream.tty, buffer[offset+i]);
            } catch (e) {
              throw new FS.ErrnoError(ERRNO_CODES.EIO);
            }
          }
          if (length) {
            stream.node.timestamp = Date.now();
          }
          return i;
        }},default_tty_ops:{get_char:function (tty) {
          if (!tty.input.length) {
            var result = null;
            if (ENVIRONMENT_IS_NODE) {
              // we will read data by chunks of BUFSIZE
              var BUFSIZE = 256;
              var buf = new Buffer(BUFSIZE);
              var bytesRead = 0;
  
              var fd = process.stdin.fd;
              // Linux and Mac cannot use process.stdin.fd (which isn't set up as sync)
              var usingDevice = false;
              try {
                fd = fs.openSync('/dev/stdin', 'r');
                usingDevice = true;
              } catch (e) {}
  
              bytesRead = fs.readSync(fd, buf, 0, BUFSIZE, null);
  
              if (usingDevice) { fs.closeSync(fd); }
              if (bytesRead > 0) {
                result = buf.slice(0, bytesRead).toString('utf-8');
              } else {
                result = null;
              }
  
            } else if (typeof window != 'undefined' &&
              typeof window.prompt == 'function') {
              // Browser.
              result = window.prompt('Input: ');  // returns null on cancel
              if (result !== null) {
                result += '\n';
              }
            } else if (typeof readline == 'function') {
              // Command line.
              result = readline();
              if (result !== null) {
                result += '\n';
              }
            }
            if (!result) {
              return null;
            }
            tty.input = intArrayFromString(result, true);
          }
          return tty.input.shift();
        },put_char:function (tty, val) {
          if (val === null || val === 10) {
            Module['print'](UTF8ArrayToString(tty.output, 0));
            tty.output = [];
          } else {
            if (val != 0) tty.output.push(val); // val == 0 would cut text output off in the middle.
          }
        },flush:function (tty) {
          if (tty.output && tty.output.length > 0) {
            Module['print'](UTF8ArrayToString(tty.output, 0));
            tty.output = [];
          }
        }},default_tty1_ops:{put_char:function (tty, val) {
          if (val === null || val === 10) {
            Module['printErr'](UTF8ArrayToString(tty.output, 0));
            tty.output = [];
          } else {
            if (val != 0) tty.output.push(val);
          }
        },flush:function (tty) {
          if (tty.output && tty.output.length > 0) {
            Module['printErr'](UTF8ArrayToString(tty.output, 0));
            tty.output = [];
          }
        }}};
  
  var MEMFS={ops_table:null,mount:function (mount) {
        return MEMFS.createNode(null, '/', 16384 | 511 /* 0777 */, 0);
      },createNode:function (parent, name, mode, dev) {
        if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {
          // no supported
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (!MEMFS.ops_table) {
          MEMFS.ops_table = {
            dir: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr,
                lookup: MEMFS.node_ops.lookup,
                mknod: MEMFS.node_ops.mknod,
                rename: MEMFS.node_ops.rename,
                unlink: MEMFS.node_ops.unlink,
                rmdir: MEMFS.node_ops.rmdir,
                readdir: MEMFS.node_ops.readdir,
                symlink: MEMFS.node_ops.symlink
              },
              stream: {
                llseek: MEMFS.stream_ops.llseek
              }
            },
            file: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr
              },
              stream: {
                llseek: MEMFS.stream_ops.llseek,
                read: MEMFS.stream_ops.read,
                write: MEMFS.stream_ops.write,
                allocate: MEMFS.stream_ops.allocate,
                mmap: MEMFS.stream_ops.mmap,
                msync: MEMFS.stream_ops.msync
              }
            },
            link: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr,
                readlink: MEMFS.node_ops.readlink
              },
              stream: {}
            },
            chrdev: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr
              },
              stream: FS.chrdev_stream_ops
            }
          };
        }
        var node = FS.createNode(parent, name, mode, dev);
        if (FS.isDir(node.mode)) {
          node.node_ops = MEMFS.ops_table.dir.node;
          node.stream_ops = MEMFS.ops_table.dir.stream;
          node.contents = {};
        } else if (FS.isFile(node.mode)) {
          node.node_ops = MEMFS.ops_table.file.node;
          node.stream_ops = MEMFS.ops_table.file.stream;
          node.usedBytes = 0; // The actual number of bytes used in the typed array, as opposed to contents.buffer.byteLength which gives the whole capacity.
          // When the byte data of the file is populated, this will point to either a typed array, or a normal JS array. Typed arrays are preferred
          // for performance, and used by default. However, typed arrays are not resizable like normal JS arrays are, so there is a small disk size
          // penalty involved for appending file writes that continuously grow a file similar to std::vector capacity vs used -scheme.
          node.contents = null; 
        } else if (FS.isLink(node.mode)) {
          node.node_ops = MEMFS.ops_table.link.node;
          node.stream_ops = MEMFS.ops_table.link.stream;
        } else if (FS.isChrdev(node.mode)) {
          node.node_ops = MEMFS.ops_table.chrdev.node;
          node.stream_ops = MEMFS.ops_table.chrdev.stream;
        }
        node.timestamp = Date.now();
        // add the new node to the parent
        if (parent) {
          parent.contents[name] = node;
        }
        return node;
      },getFileDataAsRegularArray:function (node) {
        if (node.contents && node.contents.subarray) {
          var arr = [];
          for (var i = 0; i < node.usedBytes; ++i) arr.push(node.contents[i]);
          return arr; // Returns a copy of the original data.
        }
        return node.contents; // No-op, the file contents are already in a JS array. Return as-is.
      },getFileDataAsTypedArray:function (node) {
        if (!node.contents) return new Uint8Array;
        if (node.contents.subarray) return node.contents.subarray(0, node.usedBytes); // Make sure to not return excess unused bytes.
        return new Uint8Array(node.contents);
      },expandFileStorage:function (node, newCapacity) {
        // If we are asked to expand the size of a file that already exists, revert to using a standard JS array to store the file
        // instead of a typed array. This makes resizing the array more flexible because we can just .push() elements at the back to
        // increase the size.
        if (node.contents && node.contents.subarray && newCapacity > node.contents.length) {
          node.contents = MEMFS.getFileDataAsRegularArray(node);
          node.usedBytes = node.contents.length; // We might be writing to a lazy-loaded file which had overridden this property, so force-reset it.
        }
  
        if (!node.contents || node.contents.subarray) { // Keep using a typed array if creating a new storage, or if old one was a typed array as well.
          var prevCapacity = node.contents ? node.contents.buffer.byteLength : 0;
          if (prevCapacity >= newCapacity) return; // No need to expand, the storage was already large enough.
          // Don't expand strictly to the given requested limit if it's only a very small increase, but instead geometrically grow capacity.
          // For small filesizes (<1MB), perform size*2 geometric increase, but for large sizes, do a much more conservative size*1.125 increase to
          // avoid overshooting the allocation cap by a very large margin.
          var CAPACITY_DOUBLING_MAX = 1024 * 1024;
          newCapacity = Math.max(newCapacity, (prevCapacity * (prevCapacity < CAPACITY_DOUBLING_MAX ? 2.0 : 1.125)) | 0);
          if (prevCapacity != 0) newCapacity = Math.max(newCapacity, 256); // At minimum allocate 256b for each file when expanding.
          var oldContents = node.contents;
          node.contents = new Uint8Array(newCapacity); // Allocate new storage.
          if (node.usedBytes > 0) node.contents.set(oldContents.subarray(0, node.usedBytes), 0); // Copy old data over to the new storage.
          return;
        }
        // Not using a typed array to back the file storage. Use a standard JS array instead.
        if (!node.contents && newCapacity > 0) node.contents = [];
        while (node.contents.length < newCapacity) node.contents.push(0);
      },resizeFileStorage:function (node, newSize) {
        if (node.usedBytes == newSize) return;
        if (newSize == 0) {
          node.contents = null; // Fully decommit when requesting a resize to zero.
          node.usedBytes = 0;
          return;
        }
        if (!node.contents || node.contents.subarray) { // Resize a typed array if that is being used as the backing store.
          var oldContents = node.contents;
          node.contents = new Uint8Array(new ArrayBuffer(newSize)); // Allocate new storage.
          if (oldContents) {
            node.contents.set(oldContents.subarray(0, Math.min(newSize, node.usedBytes))); // Copy old data over to the new storage.
          }
          node.usedBytes = newSize;
          return;
        }
        // Backing with a JS array.
        if (!node.contents) node.contents = [];
        if (node.contents.length > newSize) node.contents.length = newSize;
        else while (node.contents.length < newSize) node.contents.push(0);
        node.usedBytes = newSize;
      },node_ops:{getattr:function (node) {
          var attr = {};
          // device numbers reuse inode numbers.
          attr.dev = FS.isChrdev(node.mode) ? node.id : 1;
          attr.ino = node.id;
          attr.mode = node.mode;
          attr.nlink = 1;
          attr.uid = 0;
          attr.gid = 0;
          attr.rdev = node.rdev;
          if (FS.isDir(node.mode)) {
            attr.size = 4096;
          } else if (FS.isFile(node.mode)) {
            attr.size = node.usedBytes;
          } else if (FS.isLink(node.mode)) {
            attr.size = node.link.length;
          } else {
            attr.size = 0;
          }
          attr.atime = new Date(node.timestamp);
          attr.mtime = new Date(node.timestamp);
          attr.ctime = new Date(node.timestamp);
          // NOTE: In our implementation, st_blocks = Math.ceil(st_size/st_blksize),
          //       but this is not required by the standard.
          attr.blksize = 4096;
          attr.blocks = Math.ceil(attr.size / attr.blksize);
          return attr;
        },setattr:function (node, attr) {
          if (attr.mode !== undefined) {
            node.mode = attr.mode;
          }
          if (attr.timestamp !== undefined) {
            node.timestamp = attr.timestamp;
          }
          if (attr.size !== undefined) {
            MEMFS.resizeFileStorage(node, attr.size);
          }
        },lookup:function (parent, name) {
          throw FS.genericErrors[ERRNO_CODES.ENOENT];
        },mknod:function (parent, name, mode, dev) {
          return MEMFS.createNode(parent, name, mode, dev);
        },rename:function (old_node, new_dir, new_name) {
          // if we're overwriting a directory at new_name, make sure it's empty.
          if (FS.isDir(old_node.mode)) {
            var new_node;
            try {
              new_node = FS.lookupNode(new_dir, new_name);
            } catch (e) {
            }
            if (new_node) {
              for (var i in new_node.contents) {
                throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
              }
            }
          }
          // do the internal rewiring
          delete old_node.parent.contents[old_node.name];
          old_node.name = new_name;
          new_dir.contents[new_name] = old_node;
          old_node.parent = new_dir;
        },unlink:function (parent, name) {
          delete parent.contents[name];
        },rmdir:function (parent, name) {
          var node = FS.lookupNode(parent, name);
          for (var i in node.contents) {
            throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
          }
          delete parent.contents[name];
        },readdir:function (node) {
          var entries = ['.', '..']
          for (var key in node.contents) {
            if (!node.contents.hasOwnProperty(key)) {
              continue;
            }
            entries.push(key);
          }
          return entries;
        },symlink:function (parent, newname, oldpath) {
          var node = MEMFS.createNode(parent, newname, 511 /* 0777 */ | 40960, 0);
          node.link = oldpath;
          return node;
        },readlink:function (node) {
          if (!FS.isLink(node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          return node.link;
        }},stream_ops:{read:function (stream, buffer, offset, length, position) {
          var contents = stream.node.contents;
          if (position >= stream.node.usedBytes) return 0;
          var size = Math.min(stream.node.usedBytes - position, length);
          assert(size >= 0);
          if (size > 8 && contents.subarray) { // non-trivial, and typed array
            buffer.set(contents.subarray(position, position + size), offset);
          } else {
            for (var i = 0; i < size; i++) buffer[offset + i] = contents[position + i];
          }
          return size;
        },write:function (stream, buffer, offset, length, position, canOwn) {
          if (!length) return 0;
          var node = stream.node;
          node.timestamp = Date.now();
  
          if (buffer.subarray && (!node.contents || node.contents.subarray)) { // This write is from a typed array to a typed array?
            if (canOwn) { // Can we just reuse the buffer we are given?
              assert(position === 0, 'canOwn must imply no weird position inside the file');
              node.contents = buffer.subarray(offset, offset + length);
              node.usedBytes = length;
              return length;
            } else if (node.usedBytes === 0 && position === 0) { // If this is a simple first write to an empty file, do a fast set since we don't need to care about old data.
              node.contents = new Uint8Array(buffer.subarray(offset, offset + length));
              node.usedBytes = length;
              return length;
            } else if (position + length <= node.usedBytes) { // Writing to an already allocated and used subrange of the file?
              node.contents.set(buffer.subarray(offset, offset + length), position);
              return length;
            }
          }
  
          // Appending to an existing file and we need to reallocate, or source data did not come as a typed array.
          MEMFS.expandFileStorage(node, position+length);
          if (node.contents.subarray && buffer.subarray) node.contents.set(buffer.subarray(offset, offset + length), position); // Use typed array write if available.
          else {
            for (var i = 0; i < length; i++) {
             node.contents[position + i] = buffer[offset + i]; // Or fall back to manual write if not.
            }
          }
          node.usedBytes = Math.max(node.usedBytes, position+length);
          return length;
        },llseek:function (stream, offset, whence) {
          var position = offset;
          if (whence === 1) {  // SEEK_CUR.
            position += stream.position;
          } else if (whence === 2) {  // SEEK_END.
            if (FS.isFile(stream.node.mode)) {
              position += stream.node.usedBytes;
            }
          }
          if (position < 0) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          return position;
        },allocate:function (stream, offset, length) {
          MEMFS.expandFileStorage(stream.node, offset + length);
          stream.node.usedBytes = Math.max(stream.node.usedBytes, offset + length);
        },mmap:function (stream, buffer, offset, length, position, prot, flags) {
          if (!FS.isFile(stream.node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
          }
          var ptr;
          var allocated;
          var contents = stream.node.contents;
          // Only make a new copy when MAP_PRIVATE is specified.
          if ( !(flags & 2) &&
                (contents.buffer === buffer || contents.buffer === buffer.buffer) ) {
            // We can't emulate MAP_SHARED when the file is not backed by the buffer
            // we're mapping to (e.g. the HEAP buffer).
            allocated = false;
            ptr = contents.byteOffset;
          } else {
            // Try to avoid unnecessary slices.
            if (position > 0 || position + length < stream.node.usedBytes) {
              if (contents.subarray) {
                contents = contents.subarray(position, position + length);
              } else {
                contents = Array.prototype.slice.call(contents, position, position + length);
              }
            }
            allocated = true;
            ptr = _malloc(length);
            if (!ptr) {
              throw new FS.ErrnoError(ERRNO_CODES.ENOMEM);
            }
            buffer.set(contents, ptr);
          }
          return { ptr: ptr, allocated: allocated };
        },msync:function (stream, buffer, offset, length, mmapFlags) {
          if (!FS.isFile(stream.node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
          }
          if (mmapFlags & 2) {
            // MAP_PRIVATE calls need not to be synced back to underlying fs
            return 0;
          }
  
          var bytesWritten = MEMFS.stream_ops.write(stream, buffer, 0, length, offset, false);
          // should we check if bytesWritten and length are the same?
          return 0;
        }}};
  
  var IDBFS={dbs:{},indexedDB:function () {
        if (typeof indexedDB !== 'undefined') return indexedDB;
        var ret = null;
        if (typeof window === 'object') ret = window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
        assert(ret, 'IDBFS used, but indexedDB not supported');
        return ret;
      },DB_VERSION:21,DB_STORE_NAME:"FILE_DATA",mount:function (mount) {
        // reuse all of the core MEMFS functionality
        return MEMFS.mount.apply(null, arguments);
      },syncfs:function (mount, populate, callback) {
        IDBFS.getLocalSet(mount, function(err, local) {
          if (err) return callback(err);
  
          IDBFS.getRemoteSet(mount, function(err, remote) {
            if (err) return callback(err);
  
            var src = populate ? remote : local;
            var dst = populate ? local : remote;
  
            IDBFS.reconcile(src, dst, callback);
          });
        });
      },getDB:function (name, callback) {
        // check the cache first
        var db = IDBFS.dbs[name];
        if (db) {
          return callback(null, db);
        }
  
        var req;
        try {
          req = IDBFS.indexedDB().open(name, IDBFS.DB_VERSION);
        } catch (e) {
          return callback(e);
        }
        req.onupgradeneeded = function(e) {
          var db = e.target.result;
          var transaction = e.target.transaction;
  
          var fileStore;
  
          if (db.objectStoreNames.contains(IDBFS.DB_STORE_NAME)) {
            fileStore = transaction.objectStore(IDBFS.DB_STORE_NAME);
          } else {
            fileStore = db.createObjectStore(IDBFS.DB_STORE_NAME);
          }
  
          if (!fileStore.indexNames.contains('timestamp')) {
            fileStore.createIndex('timestamp', 'timestamp', { unique: false });
          }
        };
        req.onsuccess = function() {
          db = req.result;
  
          // add to the cache
          IDBFS.dbs[name] = db;
          callback(null, db);
        };
        req.onerror = function(e) {
          callback(this.error);
          e.preventDefault();
        };
      },getLocalSet:function (mount, callback) {
        var entries = {};
  
        function isRealDir(p) {
          return p !== '.' && p !== '..';
        };
        function toAbsolute(root) {
          return function(p) {
            return PATH.join2(root, p);
          }
        };
  
        var check = FS.readdir(mount.mountpoint).filter(isRealDir).map(toAbsolute(mount.mountpoint));
  
        while (check.length) {
          var path = check.pop();
          var stat;
  
          try {
            stat = FS.stat(path);
          } catch (e) {
            return callback(e);
          }
  
          if (FS.isDir(stat.mode)) {
            check.push.apply(check, FS.readdir(path).filter(isRealDir).map(toAbsolute(path)));
          }
  
          entries[path] = { timestamp: stat.mtime };
        }
  
        return callback(null, { type: 'local', entries: entries });
      },getRemoteSet:function (mount, callback) {
        var entries = {};
  
        IDBFS.getDB(mount.mountpoint, function(err, db) {
          if (err) return callback(err);
  
          var transaction = db.transaction([IDBFS.DB_STORE_NAME], 'readonly');
          transaction.onerror = function(e) {
            callback(this.error);
            e.preventDefault();
          };
  
          var store = transaction.objectStore(IDBFS.DB_STORE_NAME);
          var index = store.index('timestamp');
  
          index.openKeyCursor().onsuccess = function(event) {
            var cursor = event.target.result;
  
            if (!cursor) {
              return callback(null, { type: 'remote', db: db, entries: entries });
            }
  
            entries[cursor.primaryKey] = { timestamp: cursor.key };
  
            cursor.continue();
          };
        });
      },loadLocalEntry:function (path, callback) {
        var stat, node;
  
        try {
          var lookup = FS.lookupPath(path);
          node = lookup.node;
          stat = FS.stat(path);
        } catch (e) {
          return callback(e);
        }
  
        if (FS.isDir(stat.mode)) {
          return callback(null, { timestamp: stat.mtime, mode: stat.mode });
        } else if (FS.isFile(stat.mode)) {
          // Performance consideration: storing a normal JavaScript array to a IndexedDB is much slower than storing a typed array.
          // Therefore always convert the file contents to a typed array first before writing the data to IndexedDB.
          node.contents = MEMFS.getFileDataAsTypedArray(node);
          return callback(null, { timestamp: stat.mtime, mode: stat.mode, contents: node.contents });
        } else {
          return callback(new Error('node type not supported'));
        }
      },storeLocalEntry:function (path, entry, callback) {
        try {
          if (FS.isDir(entry.mode)) {
            FS.mkdir(path, entry.mode);
          } else if (FS.isFile(entry.mode)) {
            FS.writeFile(path, entry.contents, { encoding: 'binary', canOwn: true });
          } else {
            return callback(new Error('node type not supported'));
          }
  
          FS.chmod(path, entry.mode);
          FS.utime(path, entry.timestamp, entry.timestamp);
        } catch (e) {
          return callback(e);
        }
  
        callback(null);
      },removeLocalEntry:function (path, callback) {
        try {
          var lookup = FS.lookupPath(path);
          var stat = FS.stat(path);
  
          if (FS.isDir(stat.mode)) {
            FS.rmdir(path);
          } else if (FS.isFile(stat.mode)) {
            FS.unlink(path);
          }
        } catch (e) {
          return callback(e);
        }
  
        callback(null);
      },loadRemoteEntry:function (store, path, callback) {
        var req = store.get(path);
        req.onsuccess = function(event) { callback(null, event.target.result); };
        req.onerror = function(e) {
          callback(this.error);
          e.preventDefault();
        };
      },storeRemoteEntry:function (store, path, entry, callback) {
        var req = store.put(entry, path);
        req.onsuccess = function() { callback(null); };
        req.onerror = function(e) {
          callback(this.error);
          e.preventDefault();
        };
      },removeRemoteEntry:function (store, path, callback) {
        var req = store.delete(path);
        req.onsuccess = function() { callback(null); };
        req.onerror = function(e) {
          callback(this.error);
          e.preventDefault();
        };
      },reconcile:function (src, dst, callback) {
        var total = 0;
  
        var create = [];
        Object.keys(src.entries).forEach(function (key) {
          var e = src.entries[key];
          var e2 = dst.entries[key];
          if (!e2 || e.timestamp > e2.timestamp) {
            create.push(key);
            total++;
          }
        });
  
        var remove = [];
        Object.keys(dst.entries).forEach(function (key) {
          var e = dst.entries[key];
          var e2 = src.entries[key];
          if (!e2) {
            remove.push(key);
            total++;
          }
        });
  
        if (!total) {
          return callback(null);
        }
  
        var errored = false;
        var completed = 0;
        var db = src.type === 'remote' ? src.db : dst.db;
        var transaction = db.transaction([IDBFS.DB_STORE_NAME], 'readwrite');
        var store = transaction.objectStore(IDBFS.DB_STORE_NAME);
  
        function done(err) {
          if (err) {
            if (!done.errored) {
              done.errored = true;
              return callback(err);
            }
            return;
          }
          if (++completed >= total) {
            return callback(null);
          }
        };
  
        transaction.onerror = function(e) {
          done(this.error);
          e.preventDefault();
        };
  
        // sort paths in ascending order so directory entries are created
        // before the files inside them
        create.sort().forEach(function (path) {
          if (dst.type === 'local') {
            IDBFS.loadRemoteEntry(store, path, function (err, entry) {
              if (err) return done(err);
              IDBFS.storeLocalEntry(path, entry, done);
            });
          } else {
            IDBFS.loadLocalEntry(path, function (err, entry) {
              if (err) return done(err);
              IDBFS.storeRemoteEntry(store, path, entry, done);
            });
          }
        });
  
        // sort paths in descending order so files are deleted before their
        // parent directories
        remove.sort().reverse().forEach(function(path) {
          if (dst.type === 'local') {
            IDBFS.removeLocalEntry(path, done);
          } else {
            IDBFS.removeRemoteEntry(store, path, done);
          }
        });
      }};
  
  var NODEFS={isWindows:false,staticInit:function () {
        NODEFS.isWindows = !!process.platform.match(/^win/);
      },mount:function (mount) {
        assert(ENVIRONMENT_IS_NODE);
        return NODEFS.createNode(null, '/', NODEFS.getMode(mount.opts.root), 0);
      },createNode:function (parent, name, mode, dev) {
        if (!FS.isDir(mode) && !FS.isFile(mode) && !FS.isLink(mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var node = FS.createNode(parent, name, mode);
        node.node_ops = NODEFS.node_ops;
        node.stream_ops = NODEFS.stream_ops;
        return node;
      },getMode:function (path) {
        var stat;
        try {
          stat = fs.lstatSync(path);
          if (NODEFS.isWindows) {
            // On Windows, directories return permission bits 'rw-rw-rw-', even though they have 'rwxrwxrwx', so
            // propagate write bits to execute bits.
            stat.mode = stat.mode | ((stat.mode & 146) >> 1);
          }
        } catch (e) {
          if (!e.code) throw e;
          throw new FS.ErrnoError(ERRNO_CODES[e.code]);
        }
        return stat.mode;
      },realPath:function (node) {
        var parts = [];
        while (node.parent !== node) {
          parts.push(node.name);
          node = node.parent;
        }
        parts.push(node.mount.opts.root);
        parts.reverse();
        return PATH.join.apply(null, parts);
      },flagsToPermissionStringMap:{0:"r",1:"r+",2:"r+",64:"r",65:"r+",66:"r+",129:"rx+",193:"rx+",514:"w+",577:"w",578:"w+",705:"wx",706:"wx+",1024:"a",1025:"a",1026:"a+",1089:"a",1090:"a+",1153:"ax",1154:"ax+",1217:"ax",1218:"ax+",4096:"rs",4098:"rs+"},flagsToPermissionString:function (flags) {
        if (flags in NODEFS.flagsToPermissionStringMap) {
          return NODEFS.flagsToPermissionStringMap[flags];
        } else {
          return flags;
        }
      },node_ops:{getattr:function (node) {
          var path = NODEFS.realPath(node);
          var stat;
          try {
            stat = fs.lstatSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          // node.js v0.10.20 doesn't report blksize and blocks on Windows. Fake them with default blksize of 4096.
          // See http://support.microsoft.com/kb/140365
          if (NODEFS.isWindows && !stat.blksize) {
            stat.blksize = 4096;
          }
          if (NODEFS.isWindows && !stat.blocks) {
            stat.blocks = (stat.size+stat.blksize-1)/stat.blksize|0;
          }
          return {
            dev: stat.dev,
            ino: stat.ino,
            mode: stat.mode,
            nlink: stat.nlink,
            uid: stat.uid,
            gid: stat.gid,
            rdev: stat.rdev,
            size: stat.size,
            atime: stat.atime,
            mtime: stat.mtime,
            ctime: stat.ctime,
            blksize: stat.blksize,
            blocks: stat.blocks
          };
        },setattr:function (node, attr) {
          var path = NODEFS.realPath(node);
          try {
            if (attr.mode !== undefined) {
              fs.chmodSync(path, attr.mode);
              // update the common node structure mode as well
              node.mode = attr.mode;
            }
            if (attr.timestamp !== undefined) {
              var date = new Date(attr.timestamp);
              fs.utimesSync(path, date, date);
            }
            if (attr.size !== undefined) {
              fs.truncateSync(path, attr.size);
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },lookup:function (parent, name) {
          var path = PATH.join2(NODEFS.realPath(parent), name);
          var mode = NODEFS.getMode(path);
          return NODEFS.createNode(parent, name, mode);
        },mknod:function (parent, name, mode, dev) {
          var node = NODEFS.createNode(parent, name, mode, dev);
          // create the backing node for this in the fs root as well
          var path = NODEFS.realPath(node);
          try {
            if (FS.isDir(node.mode)) {
              fs.mkdirSync(path, node.mode);
            } else {
              fs.writeFileSync(path, '', { mode: node.mode });
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          return node;
        },rename:function (oldNode, newDir, newName) {
          var oldPath = NODEFS.realPath(oldNode);
          var newPath = PATH.join2(NODEFS.realPath(newDir), newName);
          try {
            fs.renameSync(oldPath, newPath);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },unlink:function (parent, name) {
          var path = PATH.join2(NODEFS.realPath(parent), name);
          try {
            fs.unlinkSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },rmdir:function (parent, name) {
          var path = PATH.join2(NODEFS.realPath(parent), name);
          try {
            fs.rmdirSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },readdir:function (node) {
          var path = NODEFS.realPath(node);
          try {
            return fs.readdirSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },symlink:function (parent, newName, oldPath) {
          var newPath = PATH.join2(NODEFS.realPath(parent), newName);
          try {
            fs.symlinkSync(oldPath, newPath);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },readlink:function (node) {
          var path = NODEFS.realPath(node);
          try {
            path = fs.readlinkSync(path);
            path = NODEJS_PATH.relative(NODEJS_PATH.resolve(node.mount.opts.root), path);
            return path;
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        }},stream_ops:{open:function (stream) {
          var path = NODEFS.realPath(stream.node);
          try {
            if (FS.isFile(stream.node.mode)) {
              stream.nfd = fs.openSync(path, NODEFS.flagsToPermissionString(stream.flags));
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },close:function (stream) {
          try {
            if (FS.isFile(stream.node.mode) && stream.nfd) {
              fs.closeSync(stream.nfd);
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },read:function (stream, buffer, offset, length, position) {
          if (length === 0) return 0; // node errors on 0 length reads
          // FIXME this is terrible.
          var nbuffer = new Buffer(length);
          var res;
          try {
            res = fs.readSync(stream.nfd, nbuffer, 0, length, position);
          } catch (e) {
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          if (res > 0) {
            for (var i = 0; i < res; i++) {
              buffer[offset + i] = nbuffer[i];
            }
          }
          return res;
        },write:function (stream, buffer, offset, length, position) {
          // FIXME this is terrible.
          var nbuffer = new Buffer(buffer.subarray(offset, offset + length));
          var res;
          try {
            res = fs.writeSync(stream.nfd, nbuffer, 0, length, position);
          } catch (e) {
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          return res;
        },llseek:function (stream, offset, whence) {
          var position = offset;
          if (whence === 1) {  // SEEK_CUR.
            position += stream.position;
          } else if (whence === 2) {  // SEEK_END.
            if (FS.isFile(stream.node.mode)) {
              try {
                var stat = fs.fstatSync(stream.nfd);
                position += stat.size;
              } catch (e) {
                throw new FS.ErrnoError(ERRNO_CODES[e.code]);
              }
            }
          }
  
          if (position < 0) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
  
          return position;
        }}};
  
  var _stdin=allocate(1, "i32*", ALLOC_STATIC);
  
  var _stdout=allocate(1, "i32*", ALLOC_STATIC);
  
  var _stderr=allocate(1, "i32*", ALLOC_STATIC);
  
  function _fflush(stream) {
      // int fflush(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fflush.html
  
      /*
      // Disabled, see https://github.com/kripken/emscripten/issues/2770
      stream = FS.getStreamFromPtr(stream);
      if (stream.stream_ops.flush) {
        stream.stream_ops.flush(stream);
      }
      */
    }var FS={root:null,mounts:[],devices:[null],streams:[],nextInode:1,nameTable:null,currentPath:"/",initialized:false,ignorePermissions:true,trackingDelegate:{},tracking:{openFlags:{READ:1,WRITE:2}},ErrnoError:null,genericErrors:{},handleFSError:function (e) {
        if (!(e instanceof FS.ErrnoError)) throw e + ' : ' + stackTrace();
        return ___setErrNo(e.errno);
      },lookupPath:function (path, opts) {
        path = PATH.resolve(FS.cwd(), path);
        opts = opts || {};
  
        if (!path) return { path: '', node: null };
  
        var defaults = {
          follow_mount: true,
          recurse_count: 0
        };
        for (var key in defaults) {
          if (opts[key] === undefined) {
            opts[key] = defaults[key];
          }
        }
  
        if (opts.recurse_count > 8) {  // max recursive lookup of 8
          throw new FS.ErrnoError(ERRNO_CODES.ELOOP);
        }
  
        // split the path
        var parts = PATH.normalizeArray(path.split('/').filter(function(p) {
          return !!p;
        }), false);
  
        // start at the root
        var current = FS.root;
        var current_path = '/';
  
        for (var i = 0; i < parts.length; i++) {
          var islast = (i === parts.length-1);
          if (islast && opts.parent) {
            // stop resolving
            break;
          }
  
          current = FS.lookupNode(current, parts[i]);
          current_path = PATH.join2(current_path, parts[i]);
  
          // jump to the mount's root node if this is a mountpoint
          if (FS.isMountpoint(current)) {
            if (!islast || (islast && opts.follow_mount)) {
              current = current.mounted.root;
            }
          }
  
          // by default, lookupPath will not follow a symlink if it is the final path component.
          // setting opts.follow = true will override this behavior.
          if (!islast || opts.follow) {
            var count = 0;
            while (FS.isLink(current.mode)) {
              var link = FS.readlink(current_path);
              current_path = PATH.resolve(PATH.dirname(current_path), link);
  
              var lookup = FS.lookupPath(current_path, { recurse_count: opts.recurse_count });
              current = lookup.node;
  
              if (count++ > 40) {  // limit max consecutive symlinks to 40 (SYMLOOP_MAX).
                throw new FS.ErrnoError(ERRNO_CODES.ELOOP);
              }
            }
          }
        }
  
        return { path: current_path, node: current };
      },getPath:function (node) {
        var path;
        while (true) {
          if (FS.isRoot(node)) {
            var mount = node.mount.mountpoint;
            if (!path) return mount;
            return mount[mount.length-1] !== '/' ? mount + '/' + path : mount + path;
          }
          path = path ? node.name + '/' + path : node.name;
          node = node.parent;
        }
      },hashName:function (parentid, name) {
        var hash = 0;
  
  
        for (var i = 0; i < name.length; i++) {
          hash = ((hash << 5) - hash + name.charCodeAt(i)) | 0;
        }
        return ((parentid + hash) >>> 0) % FS.nameTable.length;
      },hashAddNode:function (node) {
        var hash = FS.hashName(node.parent.id, node.name);
        node.name_next = FS.nameTable[hash];
        FS.nameTable[hash] = node;
      },hashRemoveNode:function (node) {
        var hash = FS.hashName(node.parent.id, node.name);
        if (FS.nameTable[hash] === node) {
          FS.nameTable[hash] = node.name_next;
        } else {
          var current = FS.nameTable[hash];
          while (current) {
            if (current.name_next === node) {
              current.name_next = node.name_next;
              break;
            }
            current = current.name_next;
          }
        }
      },lookupNode:function (parent, name) {
        var err = FS.mayLookup(parent);
        if (err) {
          throw new FS.ErrnoError(err, parent);
        }
        var hash = FS.hashName(parent.id, name);
        for (var node = FS.nameTable[hash]; node; node = node.name_next) {
          var nodeName = node.name;
          if (node.parent.id === parent.id && nodeName === name) {
            return node;
          }
        }
        // if we failed to find it in the cache, call into the VFS
        return FS.lookup(parent, name);
      },createNode:function (parent, name, mode, rdev) {
        if (!FS.FSNode) {
          FS.FSNode = function(parent, name, mode, rdev) {
            if (!parent) {
              parent = this;  // root node sets parent to itself
            }
            this.parent = parent;
            this.mount = parent.mount;
            this.mounted = null;
            this.id = FS.nextInode++;
            this.name = name;
            this.mode = mode;
            this.node_ops = {};
            this.stream_ops = {};
            this.rdev = rdev;
          };
  
          FS.FSNode.prototype = {};
  
          // compatibility
          var readMode = 292 | 73;
          var writeMode = 146;
  
          // NOTE we must use Object.defineProperties instead of individual calls to
          // Object.defineProperty in order to make closure compiler happy
          Object.defineProperties(FS.FSNode.prototype, {
            read: {
              get: function() { return (this.mode & readMode) === readMode; },
              set: function(val) { val ? this.mode |= readMode : this.mode &= ~readMode; }
            },
            write: {
              get: function() { return (this.mode & writeMode) === writeMode; },
              set: function(val) { val ? this.mode |= writeMode : this.mode &= ~writeMode; }
            },
            isFolder: {
              get: function() { return FS.isDir(this.mode); }
            },
            isDevice: {
              get: function() { return FS.isChrdev(this.mode); }
            }
          });
        }
  
        var node = new FS.FSNode(parent, name, mode, rdev);
  
        FS.hashAddNode(node);
  
        return node;
      },destroyNode:function (node) {
        FS.hashRemoveNode(node);
      },isRoot:function (node) {
        return node === node.parent;
      },isMountpoint:function (node) {
        return !!node.mounted;
      },isFile:function (mode) {
        return (mode & 61440) === 32768;
      },isDir:function (mode) {
        return (mode & 61440) === 16384;
      },isLink:function (mode) {
        return (mode & 61440) === 40960;
      },isChrdev:function (mode) {
        return (mode & 61440) === 8192;
      },isBlkdev:function (mode) {
        return (mode & 61440) === 24576;
      },isFIFO:function (mode) {
        return (mode & 61440) === 4096;
      },isSocket:function (mode) {
        return (mode & 49152) === 49152;
      },flagModes:{"r":0,"rs":1052672,"r+":2,"w":577,"wx":705,"xw":705,"w+":578,"wx+":706,"xw+":706,"a":1089,"ax":1217,"xa":1217,"a+":1090,"ax+":1218,"xa+":1218},modeStringToFlags:function (str) {
        var flags = FS.flagModes[str];
        if (typeof flags === 'undefined') {
          throw new Error('Unknown file open mode: ' + str);
        }
        return flags;
      },flagsToPermissionString:function (flag) {
        var accmode = flag & 2097155;
        var perms = ['r', 'w', 'rw'][accmode];
        if ((flag & 512)) {
          perms += 'w';
        }
        return perms;
      },nodePermissions:function (node, perms) {
        if (FS.ignorePermissions) {
          return 0;
        }
        // return 0 if any user, group or owner bits are set.
        if (perms.indexOf('r') !== -1 && !(node.mode & 292)) {
          return ERRNO_CODES.EACCES;
        } else if (perms.indexOf('w') !== -1 && !(node.mode & 146)) {
          return ERRNO_CODES.EACCES;
        } else if (perms.indexOf('x') !== -1 && !(node.mode & 73)) {
          return ERRNO_CODES.EACCES;
        }
        return 0;
      },mayLookup:function (dir) {
        var err = FS.nodePermissions(dir, 'x');
        if (err) return err;
        if (!dir.node_ops.lookup) return ERRNO_CODES.EACCES;
        return 0;
      },mayCreate:function (dir, name) {
        try {
          var node = FS.lookupNode(dir, name);
          return ERRNO_CODES.EEXIST;
        } catch (e) {
        }
        return FS.nodePermissions(dir, 'wx');
      },mayDelete:function (dir, name, isdir) {
        var node;
        try {
          node = FS.lookupNode(dir, name);
        } catch (e) {
          return e.errno;
        }
        var err = FS.nodePermissions(dir, 'wx');
        if (err) {
          return err;
        }
        if (isdir) {
          if (!FS.isDir(node.mode)) {
            return ERRNO_CODES.ENOTDIR;
          }
          if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {
            return ERRNO_CODES.EBUSY;
          }
        } else {
          if (FS.isDir(node.mode)) {
            return ERRNO_CODES.EISDIR;
          }
        }
        return 0;
      },mayOpen:function (node, flags) {
        if (!node) {
          return ERRNO_CODES.ENOENT;
        }
        if (FS.isLink(node.mode)) {
          return ERRNO_CODES.ELOOP;
        } else if (FS.isDir(node.mode)) {
          if ((flags & 2097155) !== 0 ||  // opening for write
              (flags & 512)) {
            return ERRNO_CODES.EISDIR;
          }
        }
        return FS.nodePermissions(node, FS.flagsToPermissionString(flags));
      },MAX_OPEN_FDS:4096,nextfd:function (fd_start, fd_end) {
        fd_start = fd_start || 0;
        fd_end = fd_end || FS.MAX_OPEN_FDS;
        for (var fd = fd_start; fd <= fd_end; fd++) {
          if (!FS.streams[fd]) {
            return fd;
          }
        }
        throw new FS.ErrnoError(ERRNO_CODES.EMFILE);
      },getStream:function (fd) {
        return FS.streams[fd];
      },createStream:function (stream, fd_start, fd_end) {
        if (!FS.FSStream) {
          FS.FSStream = function(){};
          FS.FSStream.prototype = {};
          // compatibility
          Object.defineProperties(FS.FSStream.prototype, {
            object: {
              get: function() { return this.node; },
              set: function(val) { this.node = val; }
            },
            isRead: {
              get: function() { return (this.flags & 2097155) !== 1; }
            },
            isWrite: {
              get: function() { return (this.flags & 2097155) !== 0; }
            },
            isAppend: {
              get: function() { return (this.flags & 1024); }
            }
          });
        }
        // clone it, so we can return an instance of FSStream
        var newStream = new FS.FSStream();
        for (var p in stream) {
          newStream[p] = stream[p];
        }
        stream = newStream;
        var fd = FS.nextfd(fd_start, fd_end);
        stream.fd = fd;
        FS.streams[fd] = stream;
        return stream;
      },closeStream:function (fd) {
        FS.streams[fd] = null;
      },getStreamFromPtr:function (ptr) {
        return FS.streams[ptr - 1];
      },getPtrForStream:function (stream) {
        return stream ? stream.fd + 1 : 0;
      },chrdev_stream_ops:{open:function (stream) {
          var device = FS.getDevice(stream.node.rdev);
          // override node's stream ops with the device's
          stream.stream_ops = device.stream_ops;
          // forward the open call
          if (stream.stream_ops.open) {
            stream.stream_ops.open(stream);
          }
        },llseek:function () {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }},major:function (dev) {
        return ((dev) >> 8);
      },minor:function (dev) {
        return ((dev) & 0xff);
      },makedev:function (ma, mi) {
        return ((ma) << 8 | (mi));
      },registerDevice:function (dev, ops) {
        FS.devices[dev] = { stream_ops: ops };
      },getDevice:function (dev) {
        return FS.devices[dev];
      },getMounts:function (mount) {
        var mounts = [];
        var check = [mount];
  
        while (check.length) {
          var m = check.pop();
  
          mounts.push(m);
  
          check.push.apply(check, m.mounts);
        }
  
        return mounts;
      },syncfs:function (populate, callback) {
        if (typeof(populate) === 'function') {
          callback = populate;
          populate = false;
        }
  
        var mounts = FS.getMounts(FS.root.mount);
        var completed = 0;
  
        function done(err) {
          if (err) {
            if (!done.errored) {
              done.errored = true;
              return callback(err);
            }
            return;
          }
          if (++completed >= mounts.length) {
            callback(null);
          }
        };
  
        // sync all mounts
        mounts.forEach(function (mount) {
          if (!mount.type.syncfs) {
            return done(null);
          }
          mount.type.syncfs(mount, populate, done);
        });
      },mount:function (type, opts, mountpoint) {
        var root = mountpoint === '/';
        var pseudo = !mountpoint;
        var node;
  
        if (root && FS.root) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        } else if (!root && !pseudo) {
          var lookup = FS.lookupPath(mountpoint, { follow_mount: false });
  
          mountpoint = lookup.path;  // use the absolute path
          node = lookup.node;
  
          if (FS.isMountpoint(node)) {
            throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
          }
  
          if (!FS.isDir(node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
          }
        }
  
        var mount = {
          type: type,
          opts: opts,
          mountpoint: mountpoint,
          mounts: []
        };
  
        // create a root node for the fs
        var mountRoot = type.mount(mount);
        mountRoot.mount = mount;
        mount.root = mountRoot;
  
        if (root) {
          FS.root = mountRoot;
        } else if (node) {
          // set as a mountpoint
          node.mounted = mount;
  
          // add the new mount to the current mount's children
          if (node.mount) {
            node.mount.mounts.push(mount);
          }
        }
  
        return mountRoot;
      },unmount:function (mountpoint) {
        var lookup = FS.lookupPath(mountpoint, { follow_mount: false });
  
        if (!FS.isMountpoint(lookup.node)) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
  
        // destroy the nodes for this mount, and all its child mounts
        var node = lookup.node;
        var mount = node.mounted;
        var mounts = FS.getMounts(mount);
  
        Object.keys(FS.nameTable).forEach(function (hash) {
          var current = FS.nameTable[hash];
  
          while (current) {
            var next = current.name_next;
  
            if (mounts.indexOf(current.mount) !== -1) {
              FS.destroyNode(current);
            }
  
            current = next;
          }
        });
  
        // no longer a mountpoint
        node.mounted = null;
  
        // remove this mount from the child mounts
        var idx = node.mount.mounts.indexOf(mount);
        assert(idx !== -1);
        node.mount.mounts.splice(idx, 1);
      },lookup:function (parent, name) {
        return parent.node_ops.lookup(parent, name);
      },mknod:function (path, mode, dev) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        if (!name || name === '.' || name === '..') {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var err = FS.mayCreate(parent, name);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.mknod) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        return parent.node_ops.mknod(parent, name, mode, dev);
      },create:function (path, mode) {
        mode = mode !== undefined ? mode : 438 /* 0666 */;
        mode &= 4095;
        mode |= 32768;
        return FS.mknod(path, mode, 0);
      },mkdir:function (path, mode) {
        mode = mode !== undefined ? mode : 511 /* 0777 */;
        mode &= 511 | 512;
        mode |= 16384;
        return FS.mknod(path, mode, 0);
      },mkdev:function (path, mode, dev) {
        if (typeof(dev) === 'undefined') {
          dev = mode;
          mode = 438 /* 0666 */;
        }
        mode |= 8192;
        return FS.mknod(path, mode, dev);
      },symlink:function (oldpath, newpath) {
        if (!PATH.resolve(oldpath)) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        var lookup = FS.lookupPath(newpath, { parent: true });
        var parent = lookup.node;
        if (!parent) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        var newname = PATH.basename(newpath);
        var err = FS.mayCreate(parent, newname);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.symlink) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        return parent.node_ops.symlink(parent, newname, oldpath);
      },rename:function (old_path, new_path) {
        var old_dirname = PATH.dirname(old_path);
        var new_dirname = PATH.dirname(new_path);
        var old_name = PATH.basename(old_path);
        var new_name = PATH.basename(new_path);
        // parents must exist
        var lookup, old_dir, new_dir;
        try {
          lookup = FS.lookupPath(old_path, { parent: true });
          old_dir = lookup.node;
          lookup = FS.lookupPath(new_path, { parent: true });
          new_dir = lookup.node;
        } catch (e) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        if (!old_dir || !new_dir) throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        // need to be part of the same mount
        if (old_dir.mount !== new_dir.mount) {
          throw new FS.ErrnoError(ERRNO_CODES.EXDEV);
        }
        // source must exist
        var old_node = FS.lookupNode(old_dir, old_name);
        // old path should not be an ancestor of the new path
        var relative = PATH.relative(old_path, new_dirname);
        if (relative.charAt(0) !== '.') {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        // new path should not be an ancestor of the old path
        relative = PATH.relative(new_path, old_dirname);
        if (relative.charAt(0) !== '.') {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
        }
        // see if the new path already exists
        var new_node;
        try {
          new_node = FS.lookupNode(new_dir, new_name);
        } catch (e) {
          // not fatal
        }
        // early out if nothing needs to change
        if (old_node === new_node) {
          return;
        }
        // we'll need to delete the old entry
        var isdir = FS.isDir(old_node.mode);
        var err = FS.mayDelete(old_dir, old_name, isdir);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        // need delete permissions if we'll be overwriting.
        // need create permissions if new doesn't already exist.
        err = new_node ?
          FS.mayDelete(new_dir, new_name, isdir) :
          FS.mayCreate(new_dir, new_name);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!old_dir.node_ops.rename) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isMountpoint(old_node) || (new_node && FS.isMountpoint(new_node))) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        // if we are going to change the parent, check write permissions
        if (new_dir !== old_dir) {
          err = FS.nodePermissions(old_dir, 'w');
          if (err) {
            throw new FS.ErrnoError(err);
          }
        }
        try {
          if (FS.trackingDelegate['willMovePath']) {
            FS.trackingDelegate['willMovePath'](old_path, new_path);
          }
        } catch(e) {
          console.log("FS.trackingDelegate['willMovePath']('"+old_path+"', '"+new_path+"') threw an exception: " + e.message);
        }
        // remove the node from the lookup hash
        FS.hashRemoveNode(old_node);
        // do the underlying fs rename
        try {
          old_dir.node_ops.rename(old_node, new_dir, new_name);
        } catch (e) {
          throw e;
        } finally {
          // add the node back to the hash (in case node_ops.rename
          // changed its name)
          FS.hashAddNode(old_node);
        }
        try {
          if (FS.trackingDelegate['onMovePath']) FS.trackingDelegate['onMovePath'](old_path, new_path);
        } catch(e) {
          console.log("FS.trackingDelegate['onMovePath']('"+old_path+"', '"+new_path+"') threw an exception: " + e.message);
        }
      },rmdir:function (path) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        var node = FS.lookupNode(parent, name);
        var err = FS.mayDelete(parent, name, true);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.rmdir) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isMountpoint(node)) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        try {
          if (FS.trackingDelegate['willDeletePath']) {
            FS.trackingDelegate['willDeletePath'](path);
          }
        } catch(e) {
          console.log("FS.trackingDelegate['willDeletePath']('"+path+"') threw an exception: " + e.message);
        }
        parent.node_ops.rmdir(parent, name);
        FS.destroyNode(node);
        try {
          if (FS.trackingDelegate['onDeletePath']) FS.trackingDelegate['onDeletePath'](path);
        } catch(e) {
          console.log("FS.trackingDelegate['onDeletePath']('"+path+"') threw an exception: " + e.message);
        }
      },readdir:function (path) {
        var lookup = FS.lookupPath(path, { follow: true });
        var node = lookup.node;
        if (!node.node_ops.readdir) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
        }
        return node.node_ops.readdir(node);
      },unlink:function (path) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        var node = FS.lookupNode(parent, name);
        var err = FS.mayDelete(parent, name, false);
        if (err) {
          // POSIX says unlink should set EPERM, not EISDIR
          if (err === ERRNO_CODES.EISDIR) err = ERRNO_CODES.EPERM;
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.unlink) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isMountpoint(node)) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        try {
          if (FS.trackingDelegate['willDeletePath']) {
            FS.trackingDelegate['willDeletePath'](path);
          }
        } catch(e) {
          console.log("FS.trackingDelegate['willDeletePath']('"+path+"') threw an exception: " + e.message);
        }
        parent.node_ops.unlink(parent, name);
        FS.destroyNode(node);
        try {
          if (FS.trackingDelegate['onDeletePath']) FS.trackingDelegate['onDeletePath'](path);
        } catch(e) {
          console.log("FS.trackingDelegate['onDeletePath']('"+path+"') threw an exception: " + e.message);
        }
      },readlink:function (path) {
        var lookup = FS.lookupPath(path);
        var link = lookup.node;
        if (!link) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        if (!link.node_ops.readlink) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        return PATH.resolve(FS.getPath(lookup.node.parent), link.node_ops.readlink(link));
      },stat:function (path, dontFollow) {
        var lookup = FS.lookupPath(path, { follow: !dontFollow });
        var node = lookup.node;
        if (!node) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        if (!node.node_ops.getattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        return node.node_ops.getattr(node);
      },lstat:function (path) {
        return FS.stat(path, true);
      },chmod:function (path, mode, dontFollow) {
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: !dontFollow });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        node.node_ops.setattr(node, {
          mode: (mode & 4095) | (node.mode & ~4095),
          timestamp: Date.now()
        });
      },lchmod:function (path, mode) {
        FS.chmod(path, mode, true);
      },fchmod:function (fd, mode) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        FS.chmod(stream.node, mode);
      },chown:function (path, uid, gid, dontFollow) {
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: !dontFollow });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        node.node_ops.setattr(node, {
          timestamp: Date.now()
          // we ignore the uid / gid for now
        });
      },lchown:function (path, uid, gid) {
        FS.chown(path, uid, gid, true);
      },fchown:function (fd, uid, gid) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        FS.chown(stream.node, uid, gid);
      },truncate:function (path, len) {
        if (len < 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: true });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isDir(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
        }
        if (!FS.isFile(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var err = FS.nodePermissions(node, 'w');
        if (err) {
          throw new FS.ErrnoError(err);
        }
        node.node_ops.setattr(node, {
          size: len,
          timestamp: Date.now()
        });
      },ftruncate:function (fd, len) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        FS.truncate(stream.node, len);
      },utime:function (path, atime, mtime) {
        var lookup = FS.lookupPath(path, { follow: true });
        var node = lookup.node;
        node.node_ops.setattr(node, {
          timestamp: Math.max(atime, mtime)
        });
      },open:function (path, flags, mode, fd_start, fd_end) {
        if (path === "") {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        flags = typeof flags === 'string' ? FS.modeStringToFlags(flags) : flags;
        mode = typeof mode === 'undefined' ? 438 /* 0666 */ : mode;
        if ((flags & 64)) {
          mode = (mode & 4095) | 32768;
        } else {
          mode = 0;
        }
        var node;
        if (typeof path === 'object') {
          node = path;
        } else {
          path = PATH.normalize(path);
          try {
            var lookup = FS.lookupPath(path, {
              follow: !(flags & 131072)
            });
            node = lookup.node;
          } catch (e) {
            // ignore
          }
        }
        // perhaps we need to create the node
        var created = false;
        if ((flags & 64)) {
          if (node) {
            // if O_CREAT and O_EXCL are set, error out if the node already exists
            if ((flags & 128)) {
              throw new FS.ErrnoError(ERRNO_CODES.EEXIST);
            }
          } else {
            // node doesn't exist, try to create it
            node = FS.mknod(path, mode, 0);
            created = true;
          }
        }
        if (!node) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        // can't truncate a device
        if (FS.isChrdev(node.mode)) {
          flags &= ~512;
        }
        // check permissions, if this is not a file we just created now (it is ok to
        // create and write to a file with read-only permissions; it is read-only
        // for later use)
        if (!created) {
          var err = FS.mayOpen(node, flags);
          if (err) {
            throw new FS.ErrnoError(err);
          }
        }
        // do truncation if necessary
        if ((flags & 512)) {
          FS.truncate(node, 0);
        }
        // we've already handled these, don't pass down to the underlying vfs
        flags &= ~(128 | 512);
  
        // register the stream with the filesystem
        var stream = FS.createStream({
          node: node,
          path: FS.getPath(node),  // we want the absolute path to the node
          flags: flags,
          seekable: true,
          position: 0,
          stream_ops: node.stream_ops,
          // used by the file family libc calls (fopen, fwrite, ferror, etc.)
          ungotten: [],
          error: false
        }, fd_start, fd_end);
        // call the new stream's open function
        if (stream.stream_ops.open) {
          stream.stream_ops.open(stream);
        }
        if (Module['logReadFiles'] && !(flags & 1)) {
          if (!FS.readFiles) FS.readFiles = {};
          if (!(path in FS.readFiles)) {
            FS.readFiles[path] = 1;
            Module['printErr']('read file: ' + path);
          }
        }
        try {
          if (FS.trackingDelegate['onOpenFile']) {
            var trackingFlags = 0;
            if ((flags & 2097155) !== 1) {
              trackingFlags |= FS.tracking.openFlags.READ;
            }
            if ((flags & 2097155) !== 0) {
              trackingFlags |= FS.tracking.openFlags.WRITE;
            }
            FS.trackingDelegate['onOpenFile'](path, trackingFlags);
          }
        } catch(e) {
          console.log("FS.trackingDelegate['onOpenFile']('"+path+"', flags) threw an exception: " + e.message);
        }
        return stream;
      },close:function (stream) {
        try {
          if (stream.stream_ops.close) {
            stream.stream_ops.close(stream);
          }
        } catch (e) {
          throw e;
        } finally {
          FS.closeStream(stream.fd);
        }
      },llseek:function (stream, offset, whence) {
        if (!stream.seekable || !stream.stream_ops.llseek) {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }
        stream.position = stream.stream_ops.llseek(stream, offset, whence);
        stream.ungotten = [];
        return stream.position;
      },read:function (stream, buffer, offset, length, position) {
        if (length < 0 || position < 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if ((stream.flags & 2097155) === 1) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if (FS.isDir(stream.node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
        }
        if (!stream.stream_ops.read) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var seeking = true;
        if (typeof position === 'undefined') {
          position = stream.position;
          seeking = false;
        } else if (!stream.seekable) {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }
        var bytesRead = stream.stream_ops.read(stream, buffer, offset, length, position);
        if (!seeking) stream.position += bytesRead;
        return bytesRead;
      },write:function (stream, buffer, offset, length, position, canOwn) {
        if (length < 0 || position < 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if (FS.isDir(stream.node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
        }
        if (!stream.stream_ops.write) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if (stream.flags & 1024) {
          // seek to the end before writing in append mode
          FS.llseek(stream, 0, 2);
        }
        var seeking = true;
        if (typeof position === 'undefined') {
          position = stream.position;
          seeking = false;
        } else if (!stream.seekable) {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }
        var bytesWritten = stream.stream_ops.write(stream, buffer, offset, length, position, canOwn);
        if (!seeking) stream.position += bytesWritten;
        try {
          if (stream.path && FS.trackingDelegate['onWriteToFile']) FS.trackingDelegate['onWriteToFile'](stream.path);
        } catch(e) {
          console.log("FS.trackingDelegate['onWriteToFile']('"+path+"') threw an exception: " + e.message);
        }
        return bytesWritten;
      },allocate:function (stream, offset, length) {
        if (offset < 0 || length <= 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if (!FS.isFile(stream.node.mode) && !FS.isDir(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
        }
        if (!stream.stream_ops.allocate) {
          throw new FS.ErrnoError(ERRNO_CODES.EOPNOTSUPP);
        }
        stream.stream_ops.allocate(stream, offset, length);
      },mmap:function (stream, buffer, offset, length, position, prot, flags) {
        // TODO if PROT is PROT_WRITE, make sure we have write access
        if ((stream.flags & 2097155) === 1) {
          throw new FS.ErrnoError(ERRNO_CODES.EACCES);
        }
        if (!stream.stream_ops.mmap) {
          throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
        }
        return stream.stream_ops.mmap(stream, buffer, offset, length, position, prot, flags);
      },msync:function (stream, buffer, offset, length, mmapFlags) {
        if (!stream || !stream.stream_ops.msync) {
          return 0;
        }
        return stream.stream_ops.msync(stream, buffer, offset, length, mmapFlags);
      },munmap:function (stream) {
        return 0;
      },ioctl:function (stream, cmd, arg) {
        if (!stream.stream_ops.ioctl) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTTY);
        }
        return stream.stream_ops.ioctl(stream, cmd, arg);
      },readFile:function (path, opts) {
        opts = opts || {};
        opts.flags = opts.flags || 'r';
        opts.encoding = opts.encoding || 'binary';
        if (opts.encoding !== 'utf8' && opts.encoding !== 'binary') {
          throw new Error('Invalid encoding type "' + opts.encoding + '"');
        }
        var ret;
        var stream = FS.open(path, opts.flags);
        var stat = FS.stat(path);
        var length = stat.size;
        var buf = new Uint8Array(length);
        FS.read(stream, buf, 0, length, 0);
        if (opts.encoding === 'utf8') {
          ret = UTF8ArrayToString(buf, 0);
        } else if (opts.encoding === 'binary') {
          ret = buf;
        }
        FS.close(stream);
        return ret;
      },writeFile:function (path, data, opts) {
        opts = opts || {};
        opts.flags = opts.flags || 'w';
        opts.encoding = opts.encoding || 'utf8';
        if (opts.encoding !== 'utf8' && opts.encoding !== 'binary') {
          throw new Error('Invalid encoding type "' + opts.encoding + '"');
        }
        var stream = FS.open(path, opts.flags, opts.mode);
        if (opts.encoding === 'utf8') {
          var buf = new Uint8Array(lengthBytesUTF8(data)+1);
          var actualNumBytes = stringToUTF8Array(data, buf, 0, buf.length);
          FS.write(stream, buf, 0, actualNumBytes, 0, opts.canOwn);
        } else if (opts.encoding === 'binary') {
          FS.write(stream, data, 0, data.length, 0, opts.canOwn);
        }
        FS.close(stream);
      },cwd:function () {
        return FS.currentPath;
      },chdir:function (path) {
        var lookup = FS.lookupPath(path, { follow: true });
        if (!FS.isDir(lookup.node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
        }
        var err = FS.nodePermissions(lookup.node, 'x');
        if (err) {
          throw new FS.ErrnoError(err);
        }
        FS.currentPath = lookup.path;
      },createDefaultDirectories:function () {
        FS.mkdir('/tmp');
        FS.mkdir('/home');
        FS.mkdir('/home/web_user');
      },createDefaultDevices:function () {
        // create /dev
        FS.mkdir('/dev');
        // setup /dev/null
        FS.registerDevice(FS.makedev(1, 3), {
          read: function() { return 0; },
          write: function() { return 0; }
        });
        FS.mkdev('/dev/null', FS.makedev(1, 3));
        // setup /dev/tty and /dev/tty1
        // stderr needs to print output using Module['printErr']
        // so we register a second tty just for it.
        TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);
        TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);
        FS.mkdev('/dev/tty', FS.makedev(5, 0));
        FS.mkdev('/dev/tty1', FS.makedev(6, 0));
        // setup /dev/[u]random
        var random_device;
        if (typeof crypto !== 'undefined') {
          // for modern web browsers
          var randomBuffer = new Uint8Array(1);
          random_device = function() { crypto.getRandomValues(randomBuffer); return randomBuffer[0]; };
        } else if (ENVIRONMENT_IS_NODE) {
          // for nodejs
          random_device = function() { return require('crypto').randomBytes(1)[0]; };
        } else {
          // default for ES5 platforms
          random_device = function() { return (Math.random()*256)|0; };
        }
        FS.createDevice('/dev', 'random', random_device);
        FS.createDevice('/dev', 'urandom', random_device);
        // we're not going to emulate the actual shm device,
        // just create the tmp dirs that reside in it commonly
        FS.mkdir('/dev/shm');
        FS.mkdir('/dev/shm/tmp');
      },createStandardStreams:function () {
        // TODO deprecate the old functionality of a single
        // input / output callback and that utilizes FS.createDevice
        // and instead require a unique set of stream ops
  
        // by default, we symlink the standard streams to the
        // default tty devices. however, if the standard streams
        // have been overwritten we create a unique device for
        // them instead.
        if (Module['stdin']) {
          FS.createDevice('/dev', 'stdin', Module['stdin']);
        } else {
          FS.symlink('/dev/tty', '/dev/stdin');
        }
        if (Module['stdout']) {
          FS.createDevice('/dev', 'stdout', null, Module['stdout']);
        } else {
          FS.symlink('/dev/tty', '/dev/stdout');
        }
        if (Module['stderr']) {
          FS.createDevice('/dev', 'stderr', null, Module['stderr']);
        } else {
          FS.symlink('/dev/tty1', '/dev/stderr');
        }
  
        // open default streams for the stdin, stdout and stderr devices
        var stdin = FS.open('/dev/stdin', 'r');
        HEAP32[((_stdin)>>2)]=FS.getPtrForStream(stdin);
        assert(stdin.fd === 0, 'invalid handle for stdin (' + stdin.fd + ')');
  
        var stdout = FS.open('/dev/stdout', 'w');
        HEAP32[((_stdout)>>2)]=FS.getPtrForStream(stdout);
        assert(stdout.fd === 1, 'invalid handle for stdout (' + stdout.fd + ')');
  
        var stderr = FS.open('/dev/stderr', 'w');
        HEAP32[((_stderr)>>2)]=FS.getPtrForStream(stderr);
        assert(stderr.fd === 2, 'invalid handle for stderr (' + stderr.fd + ')');
      },ensureErrnoError:function () {
        if (FS.ErrnoError) return;
        FS.ErrnoError = function ErrnoError(errno, node) {
          this.node = node;
          this.setErrno = function(errno) {
            this.errno = errno;
            for (var key in ERRNO_CODES) {
              if (ERRNO_CODES[key] === errno) {
                this.code = key;
                break;
              }
            }
          };
          this.setErrno(errno);
          this.message = ERRNO_MESSAGES[errno];
          if (this.stack) this.stack = demangleAll(this.stack);
        };
        FS.ErrnoError.prototype = new Error();
        FS.ErrnoError.prototype.constructor = FS.ErrnoError;
        // Some errors may happen quite a bit, to avoid overhead we reuse them (and suffer a lack of stack info)
        [ERRNO_CODES.ENOENT].forEach(function(code) {
          FS.genericErrors[code] = new FS.ErrnoError(code);
          FS.genericErrors[code].stack = '<generic error, no stack>';
        });
      },staticInit:function () {
        FS.ensureErrnoError();
  
        FS.nameTable = new Array(4096);
  
        FS.mount(MEMFS, {}, '/');
  
        FS.createDefaultDirectories();
        FS.createDefaultDevices();
      },init:function (input, output, error) {
        assert(!FS.init.initialized, 'FS.init was previously called. If you want to initialize later with custom parameters, remove any earlier calls (note that one is automatically added to the generated code)');
        FS.init.initialized = true;
  
        FS.ensureErrnoError();
  
        // Allow Module.stdin etc. to provide defaults, if none explicitly passed to us here
        Module['stdin'] = input || Module['stdin'];
        Module['stdout'] = output || Module['stdout'];
        Module['stderr'] = error || Module['stderr'];
  
        FS.createStandardStreams();
      },quit:function () {
        FS.init.initialized = false;
        for (var i = 0; i < FS.streams.length; i++) {
          var stream = FS.streams[i];
          if (!stream) {
            continue;
          }
          FS.close(stream);
        }
      },getMode:function (canRead, canWrite) {
        var mode = 0;
        if (canRead) mode |= 292 | 73;
        if (canWrite) mode |= 146;
        return mode;
      },joinPath:function (parts, forceRelative) {
        var path = PATH.join.apply(null, parts);
        if (forceRelative && path[0] == '/') path = path.substr(1);
        return path;
      },absolutePath:function (relative, base) {
        return PATH.resolve(base, relative);
      },standardizePath:function (path) {
        return PATH.normalize(path);
      },findObject:function (path, dontResolveLastLink) {
        var ret = FS.analyzePath(path, dontResolveLastLink);
        if (ret.exists) {
          return ret.object;
        } else {
          ___setErrNo(ret.error);
          return null;
        }
      },analyzePath:function (path, dontResolveLastLink) {
        // operate from within the context of the symlink's target
        try {
          var lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });
          path = lookup.path;
        } catch (e) {
        }
        var ret = {
          isRoot: false, exists: false, error: 0, name: null, path: null, object: null,
          parentExists: false, parentPath: null, parentObject: null
        };
        try {
          var lookup = FS.lookupPath(path, { parent: true });
          ret.parentExists = true;
          ret.parentPath = lookup.path;
          ret.parentObject = lookup.node;
          ret.name = PATH.basename(path);
          lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });
          ret.exists = true;
          ret.path = lookup.path;
          ret.object = lookup.node;
          ret.name = lookup.node.name;
          ret.isRoot = lookup.path === '/';
        } catch (e) {
          ret.error = e.errno;
        };
        return ret;
      },createFolder:function (parent, name, canRead, canWrite) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(canRead, canWrite);
        return FS.mkdir(path, mode);
      },createPath:function (parent, path, canRead, canWrite) {
        parent = typeof parent === 'string' ? parent : FS.getPath(parent);
        var parts = path.split('/').reverse();
        while (parts.length) {
          var part = parts.pop();
          if (!part) continue;
          var current = PATH.join2(parent, part);
          try {
            FS.mkdir(current);
          } catch (e) {
            // ignore EEXIST
          }
          parent = current;
        }
        return current;
      },createFile:function (parent, name, properties, canRead, canWrite) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(canRead, canWrite);
        return FS.create(path, mode);
      },createDataFile:function (parent, name, data, canRead, canWrite, canOwn) {
        var path = name ? PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name) : parent;
        var mode = FS.getMode(canRead, canWrite);
        var node = FS.create(path, mode);
        if (data) {
          if (typeof data === 'string') {
            var arr = new Array(data.length);
            for (var i = 0, len = data.length; i < len; ++i) arr[i] = data.charCodeAt(i);
            data = arr;
          }
          // make sure we can write to the file
          FS.chmod(node, mode | 146);
          var stream = FS.open(node, 'w');
          FS.write(stream, data, 0, data.length, 0, canOwn);
          FS.close(stream);
          FS.chmod(node, mode);
        }
        return node;
      },createDevice:function (parent, name, input, output) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(!!input, !!output);
        if (!FS.createDevice.major) FS.createDevice.major = 64;
        var dev = FS.makedev(FS.createDevice.major++, 0);
        // Create a fake device that a set of stream ops to emulate
        // the old behavior.
        FS.registerDevice(dev, {
          open: function(stream) {
            stream.seekable = false;
          },
          close: function(stream) {
            // flush any pending line data
            if (output && output.buffer && output.buffer.length) {
              output(10);
            }
          },
          read: function(stream, buffer, offset, length, pos /* ignored */) {
            var bytesRead = 0;
            for (var i = 0; i < length; i++) {
              var result;
              try {
                result = input();
              } catch (e) {
                throw new FS.ErrnoError(ERRNO_CODES.EIO);
              }
              if (result === undefined && bytesRead === 0) {
                throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
              }
              if (result === null || result === undefined) break;
              bytesRead++;
              buffer[offset+i] = result;
            }
            if (bytesRead) {
              stream.node.timestamp = Date.now();
            }
            return bytesRead;
          },
          write: function(stream, buffer, offset, length, pos) {
            for (var i = 0; i < length; i++) {
              try {
                output(buffer[offset+i]);
              } catch (e) {
                throw new FS.ErrnoError(ERRNO_CODES.EIO);
              }
            }
            if (length) {
              stream.node.timestamp = Date.now();
            }
            return i;
          }
        });
        return FS.mkdev(path, mode, dev);
      },createLink:function (parent, name, target, canRead, canWrite) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        return FS.symlink(target, path);
      },forceLoadFile:function (obj) {
        if (obj.isDevice || obj.isFolder || obj.link || obj.contents) return true;
        var success = true;
        if (typeof XMLHttpRequest !== 'undefined') {
          throw new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.");
        } else if (Module['read']) {
          // Command-line.
          try {
            // WARNING: Can't read binary files in V8's d8 or tracemonkey's js, as
            //          read() will try to parse UTF8.
            obj.contents = intArrayFromString(Module['read'](obj.url), true);
            obj.usedBytes = obj.contents.length;
          } catch (e) {
            success = false;
          }
        } else {
          throw new Error('Cannot load without read() or XMLHttpRequest.');
        }
        if (!success) ___setErrNo(ERRNO_CODES.EIO);
        return success;
      },createLazyFile:function (parent, name, url, canRead, canWrite) {
        // Lazy chunked Uint8Array (implements get and length from Uint8Array). Actual getting is abstracted away for eventual reuse.
        function LazyUint8Array() {
          this.lengthKnown = false;
          this.chunks = []; // Loaded chunks. Index is the chunk number
        }
        LazyUint8Array.prototype.get = function LazyUint8Array_get(idx) {
          if (idx > this.length-1 || idx < 0) {
            return undefined;
          }
          var chunkOffset = idx % this.chunkSize;
          var chunkNum = (idx / this.chunkSize)|0;
          return this.getter(chunkNum)[chunkOffset];
        }
        LazyUint8Array.prototype.setDataGetter = function LazyUint8Array_setDataGetter(getter) {
          this.getter = getter;
        }
        LazyUint8Array.prototype.cacheLength = function LazyUint8Array_cacheLength() {
          // Find length
          var xhr = new XMLHttpRequest();
          xhr.open('HEAD', url, false);
          xhr.send(null);
          if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
          var datalength = Number(xhr.getResponseHeader("Content-length"));
          var header;
          var hasByteServing = (header = xhr.getResponseHeader("Accept-Ranges")) && header === "bytes";
          var chunkSize = 1024*1024; // Chunk size in bytes
  
          if (!hasByteServing) chunkSize = datalength;
  
          // Function to get a range from the remote URL.
          var doXHR = (function(from, to) {
            if (from > to) throw new Error("invalid range (" + from + ", " + to + ") or no bytes requested!");
            if (to > datalength-1) throw new Error("only " + datalength + " bytes available! programmer error!");
  
            // TODO: Use mozResponseArrayBuffer, responseStream, etc. if available.
            var xhr = new XMLHttpRequest();
            xhr.open('GET', url, false);
            if (datalength !== chunkSize) xhr.setRequestHeader("Range", "bytes=" + from + "-" + to);
  
            // Some hints to the browser that we want binary data.
            if (typeof Uint8Array != 'undefined') xhr.responseType = 'arraybuffer';
            if (xhr.overrideMimeType) {
              xhr.overrideMimeType('text/plain; charset=x-user-defined');
            }
  
            xhr.send(null);
            if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
            if (xhr.response !== undefined) {
              return new Uint8Array(xhr.response || []);
            } else {
              return intArrayFromString(xhr.responseText || '', true);
            }
          });
          var lazyArray = this;
          lazyArray.setDataGetter(function(chunkNum) {
            var start = chunkNum * chunkSize;
            var end = (chunkNum+1) * chunkSize - 1; // including this byte
            end = Math.min(end, datalength-1); // if datalength-1 is selected, this is the last block
            if (typeof(lazyArray.chunks[chunkNum]) === "undefined") {
              lazyArray.chunks[chunkNum] = doXHR(start, end);
            }
            if (typeof(lazyArray.chunks[chunkNum]) === "undefined") throw new Error("doXHR failed!");
            return lazyArray.chunks[chunkNum];
          });
  
          this._length = datalength;
          this._chunkSize = chunkSize;
          this.lengthKnown = true;
        }
        if (typeof XMLHttpRequest !== 'undefined') {
          if (!ENVIRONMENT_IS_WORKER) throw 'Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc';
          var lazyArray = new LazyUint8Array();
          Object.defineProperty(lazyArray, "length", {
              get: function() {
                  if(!this.lengthKnown) {
                      this.cacheLength();
                  }
                  return this._length;
              }
          });
          Object.defineProperty(lazyArray, "chunkSize", {
              get: function() {
                  if(!this.lengthKnown) {
                      this.cacheLength();
                  }
                  return this._chunkSize;
              }
          });
  
          var properties = { isDevice: false, contents: lazyArray };
        } else {
          var properties = { isDevice: false, url: url };
        }
  
        var node = FS.createFile(parent, name, properties, canRead, canWrite);
        // This is a total hack, but I want to get this lazy file code out of the
        // core of MEMFS. If we want to keep this lazy file concept I feel it should
        // be its own thin LAZYFS proxying calls to MEMFS.
        if (properties.contents) {
          node.contents = properties.contents;
        } else if (properties.url) {
          node.contents = null;
          node.url = properties.url;
        }
        // Add a function that defers querying the file size until it is asked the first time.
        Object.defineProperty(node, "usedBytes", {
            get: function() { return this.contents.length; }
        });
        // override each stream op with one that tries to force load the lazy file first
        var stream_ops = {};
        var keys = Object.keys(node.stream_ops);
        keys.forEach(function(key) {
          var fn = node.stream_ops[key];
          stream_ops[key] = function forceLoadLazyFile() {
            if (!FS.forceLoadFile(node)) {
              throw new FS.ErrnoError(ERRNO_CODES.EIO);
            }
            return fn.apply(null, arguments);
          };
        });
        // use a custom read function
        stream_ops.read = function stream_ops_read(stream, buffer, offset, length, position) {
          if (!FS.forceLoadFile(node)) {
            throw new FS.ErrnoError(ERRNO_CODES.EIO);
          }
          var contents = stream.node.contents;
          if (position >= contents.length)
            return 0;
          var size = Math.min(contents.length - position, length);
          assert(size >= 0);
          if (contents.slice) { // normal array
            for (var i = 0; i < size; i++) {
              buffer[offset + i] = contents[position + i];
            }
          } else {
            for (var i = 0; i < size; i++) { // LazyUint8Array from sync binary XHR
              buffer[offset + i] = contents.get(position + i);
            }
          }
          return size;
        };
        node.stream_ops = stream_ops;
        return node;
      },createPreloadedFile:function (parent, name, url, canRead, canWrite, onload, onerror, dontCreateFile, canOwn) {
        Browser.init();
        // TODO we should allow people to just pass in a complete filename instead
        // of parent and name being that we just join them anyways
        var fullname = name ? PATH.resolve(PATH.join2(parent, name)) : parent;
        function processData(byteArray) {
          function finish(byteArray) {
            if (!dontCreateFile) {
              FS.createDataFile(parent, name, byteArray, canRead, canWrite, canOwn);
            }
            if (onload) onload();
            removeRunDependency('cp ' + fullname);
          }
          var handled = false;
          Module['preloadPlugins'].forEach(function(plugin) {
            if (handled) return;
            if (plugin['canHandle'](fullname)) {
              plugin['handle'](byteArray, fullname, finish, function() {
                if (onerror) onerror();
                removeRunDependency('cp ' + fullname);
              });
              handled = true;
            }
          });
          if (!handled) finish(byteArray);
        }
        addRunDependency('cp ' + fullname);
        if (typeof url == 'string') {
          Browser.asyncLoad(url, function(byteArray) {
            processData(byteArray);
          }, onerror);
        } else {
          processData(url);
        }
      },indexedDB:function () {
        return window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
      },DB_NAME:function () {
        return 'EM_FS_' + window.location.pathname;
      },DB_VERSION:20,DB_STORE_NAME:"FILE_DATA",saveFilesToDB:function (paths, onload, onerror) {
        onload = onload || function(){};
        onerror = onerror || function(){};
        var indexedDB = FS.indexedDB();
        try {
          var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
        } catch (e) {
          return onerror(e);
        }
        openRequest.onupgradeneeded = function openRequest_onupgradeneeded() {
          console.log('creating db');
          var db = openRequest.result;
          db.createObjectStore(FS.DB_STORE_NAME);
        };
        openRequest.onsuccess = function openRequest_onsuccess() {
          var db = openRequest.result;
          var transaction = db.transaction([FS.DB_STORE_NAME], 'readwrite');
          var files = transaction.objectStore(FS.DB_STORE_NAME);
          var ok = 0, fail = 0, total = paths.length;
          function finish() {
            if (fail == 0) onload(); else onerror();
          }
          paths.forEach(function(path) {
            var putRequest = files.put(FS.analyzePath(path).object.contents, path);
            putRequest.onsuccess = function putRequest_onsuccess() { ok++; if (ok + fail == total) finish() };
            putRequest.onerror = function putRequest_onerror() { fail++; if (ok + fail == total) finish() };
          });
          transaction.onerror = onerror;
        };
        openRequest.onerror = onerror;
      },loadFilesFromDB:function (paths, onload, onerror) {
        onload = onload || function(){};
        onerror = onerror || function(){};
        var indexedDB = FS.indexedDB();
        try {
          var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
        } catch (e) {
          return onerror(e);
        }
        openRequest.onupgradeneeded = onerror; // no database to load from
        openRequest.onsuccess = function openRequest_onsuccess() {
          var db = openRequest.result;
          try {
            var transaction = db.transaction([FS.DB_STORE_NAME], 'readonly');
          } catch(e) {
            onerror(e);
            return;
          }
          var files = transaction.objectStore(FS.DB_STORE_NAME);
          var ok = 0, fail = 0, total = paths.length;
          function finish() {
            if (fail == 0) onload(); else onerror();
          }
          paths.forEach(function(path) {
            var getRequest = files.get(path);
            getRequest.onsuccess = function getRequest_onsuccess() {
              if (FS.analyzePath(path).exists) {
                FS.unlink(path);
              }
              FS.createDataFile(PATH.dirname(path), PATH.basename(path), getRequest.result, true, true, true);
              ok++;
              if (ok + fail == total) finish();
            };
            getRequest.onerror = function getRequest_onerror() { fail++; if (ok + fail == total) finish() };
          });
          transaction.onerror = onerror;
        };
        openRequest.onerror = onerror;
      }};function _close(fildes) {
      // int close(int fildes);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/close.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      try {
        FS.close(stream);
        return 0;
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }
  
  function _fsync(fildes) {
      // int fsync(int fildes);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fsync.html
      var stream = FS.getStream(fildes);
      if (stream) {
        // We write directly to the file system, so there's nothing to do here.
        return 0;
      } else {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
    }
  
  function _fileno(stream) {
      // int fileno(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fileno.html
      stream = FS.getStreamFromPtr(stream);
      if (!stream) return -1;
      return stream.fd;
    }function _fclose(stream) {
      // int fclose(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fclose.html
      var fd = _fileno(stream);
      _fsync(fd);
      return _close(fd);
    }

  function _glUseProgram(program) {
      GLctx.useProgram(program ? GL.programs[program] : null);
    }

  function _glLinkProgram(program) {
      GLctx.linkProgram(GL.programs[program]);
      GL.programInfos[program] = null; // uniforms no longer keep the same names after linking
      GL.populateUniformTable(program);
    }

  function _glShaderSource(shader, count, string, length) {
      var source = GL.getSource(shader, count, string, length);
      GLctx.shaderSource(GL.shaders[shader], source);
    }

  function _glBindTexture(target, texture) {
      GLctx.bindTexture(target, texture ? GL.textures[texture] : null);
    }

  
  
  
  
  function _emscripten_set_main_loop_timing(mode, value) {
      Browser.mainLoop.timingMode = mode;
      Browser.mainLoop.timingValue = value;
  
      if (!Browser.mainLoop.func) {
        console.error('emscripten_set_main_loop_timing: Cannot set timing mode for main loop since a main loop does not exist! Call emscripten_set_main_loop first to set one up.');
        return 1; // Return non-zero on failure, can't set timing mode when there is no main loop.
      }
  
      if (mode == 0 /*EM_TIMING_SETTIMEOUT*/) {
        Browser.mainLoop.scheduler = function Browser_mainLoop_scheduler() {
          setTimeout(Browser.mainLoop.runner, value); // doing this each time means that on exception, we stop
        };
        Browser.mainLoop.method = 'timeout';
      } else if (mode == 1 /*EM_TIMING_RAF*/) {
        Browser.mainLoop.scheduler = function Browser_mainLoop_scheduler() {
          Browser.requestAnimationFrame(Browser.mainLoop.runner);
        };
        Browser.mainLoop.method = 'rAF';
      }
      return 0;
    }function _emscripten_set_main_loop(func, fps, simulateInfiniteLoop, arg, noSetTiming) {
      Module['noExitRuntime'] = true;
  
      assert(!Browser.mainLoop.func, 'emscripten_set_main_loop: there can only be one main loop function at once: call emscripten_cancel_main_loop to cancel the previous one before setting a new one with different parameters.');
  
      Browser.mainLoop.func = func;
      Browser.mainLoop.arg = arg;
  
      var thisMainLoopId = Browser.mainLoop.currentlyRunningMainloop;
  
      Browser.mainLoop.runner = function Browser_mainLoop_runner() {
        if (ABORT) return;
        if (Browser.mainLoop.queue.length > 0) {
          var start = Date.now();
          var blocker = Browser.mainLoop.queue.shift();
          blocker.func(blocker.arg);
          if (Browser.mainLoop.remainingBlockers) {
            var remaining = Browser.mainLoop.remainingBlockers;
            var next = remaining%1 == 0 ? remaining-1 : Math.floor(remaining);
            if (blocker.counted) {
              Browser.mainLoop.remainingBlockers = next;
            } else {
              // not counted, but move the progress along a tiny bit
              next = next + 0.5; // do not steal all the next one's progress
              Browser.mainLoop.remainingBlockers = (8*remaining + next)/9;
            }
          }
          console.log('main loop blocker "' + blocker.name + '" took ' + (Date.now() - start) + ' ms'); //, left: ' + Browser.mainLoop.remainingBlockers);
          Browser.mainLoop.updateStatus();
          setTimeout(Browser.mainLoop.runner, 0);
          return;
        }
  
        // catch pauses from non-main loop sources
        if (thisMainLoopId < Browser.mainLoop.currentlyRunningMainloop) return;
  
        // Implement very basic swap interval control
        Browser.mainLoop.currentFrameNumber = Browser.mainLoop.currentFrameNumber + 1 | 0;
        if (Browser.mainLoop.timingMode == 1/*EM_TIMING_RAF*/ && Browser.mainLoop.timingValue > 1 && Browser.mainLoop.currentFrameNumber % Browser.mainLoop.timingValue != 0) {
          // Not the scheduled time to render this frame - skip.
          Browser.mainLoop.scheduler();
          return;
        }
  
        // Signal GL rendering layer that processing of a new frame is about to start. This helps it optimize
        // VBO double-buffering and reduce GPU stalls.
  
        if (Browser.mainLoop.method === 'timeout' && Module.ctx) {
          Module.printErr('Looks like you are rendering without using requestAnimationFrame for the main loop. You should use 0 for the frame rate in emscripten_set_main_loop in order to use requestAnimationFrame, as that can greatly improve your frame rates!');
          Browser.mainLoop.method = ''; // just warn once per call to set main loop
        }
  
        Browser.mainLoop.runIter(function() {
          if (typeof arg !== 'undefined') {
            Runtime.dynCall('vi', func, [arg]);
          } else {
            Runtime.dynCall('v', func);
          }
        });
  
        // catch pauses from the main loop itself
        if (thisMainLoopId < Browser.mainLoop.currentlyRunningMainloop) return;
  
        // Queue new audio data. This is important to be right after the main loop invocation, so that we will immediately be able
        // to queue the newest produced audio samples.
        // TODO: Consider adding pre- and post- rAF callbacks so that GL.newRenderingFrameStarted() and SDL.audio.queueNewAudioData()
        //       do not need to be hardcoded into this function, but can be more generic.
        if (typeof SDL === 'object' && SDL.audio && SDL.audio.queueNewAudioData) SDL.audio.queueNewAudioData();
  
        Browser.mainLoop.scheduler();
      }
  
      if (!noSetTiming) {
        if (fps && fps > 0) _emscripten_set_main_loop_timing(0/*EM_TIMING_SETTIMEOUT*/, 1000.0 / fps);
        else _emscripten_set_main_loop_timing(1/*EM_TIMING_RAF*/, 1); // Do rAF by rendering each frame (no decimating)
  
        Browser.mainLoop.scheduler();
      }
  
      if (simulateInfiniteLoop) {
        throw 'SimulateInfiniteLoop';
      }
    }var Browser={mainLoop:{scheduler:null,method:"",currentlyRunningMainloop:0,func:null,arg:0,timingMode:0,timingValue:0,currentFrameNumber:0,queue:[],pause:function () {
          Browser.mainLoop.scheduler = null;
          Browser.mainLoop.currentlyRunningMainloop++; // Incrementing this signals the previous main loop that it's now become old, and it must return.
        },resume:function () {
          Browser.mainLoop.currentlyRunningMainloop++;
          var timingMode = Browser.mainLoop.timingMode;
          var timingValue = Browser.mainLoop.timingValue;
          var func = Browser.mainLoop.func;
          Browser.mainLoop.func = null;
          _emscripten_set_main_loop(func, 0, false, Browser.mainLoop.arg, true /* do not set timing and call scheduler, we will do it on the next lines */);
          _emscripten_set_main_loop_timing(timingMode, timingValue);
          Browser.mainLoop.scheduler();
        },updateStatus:function () {
          if (Module['setStatus']) {
            var message = Module['statusMessage'] || 'Please wait...';
            var remaining = Browser.mainLoop.remainingBlockers;
            var expected = Browser.mainLoop.expectedBlockers;
            if (remaining) {
              if (remaining < expected) {
                Module['setStatus'](message + ' (' + (expected - remaining) + '/' + expected + ')');
              } else {
                Module['setStatus'](message);
              }
            } else {
              Module['setStatus']('');
            }
          }
        },runIter:function (func) {
          if (ABORT) return;
          if (Module['preMainLoop']) {
            var preRet = Module['preMainLoop']();
            if (preRet === false) {
              return; // |return false| skips a frame
            }
          }
          try {
            func();
          } catch (e) {
            if (e instanceof ExitStatus) {
              return;
            } else {
              if (e && typeof e === 'object' && e.stack) Module.printErr('exception thrown: ' + [e, e.stack]);
              throw e;
            }
          }
          if (Module['postMainLoop']) Module['postMainLoop']();
        }},isFullScreen:false,pointerLock:false,moduleContextCreatedCallbacks:[],workers:[],init:function () {
        if (!Module["preloadPlugins"]) Module["preloadPlugins"] = []; // needs to exist even in workers
  
        if (Browser.initted) return;
        Browser.initted = true;
  
        try {
          new Blob();
          Browser.hasBlobConstructor = true;
        } catch(e) {
          Browser.hasBlobConstructor = false;
          console.log("warning: no blob constructor, cannot create blobs with mimetypes");
        }
        Browser.BlobBuilder = typeof MozBlobBuilder != "undefined" ? MozBlobBuilder : (typeof WebKitBlobBuilder != "undefined" ? WebKitBlobBuilder : (!Browser.hasBlobConstructor ? console.log("warning: no BlobBuilder") : null));
        Browser.URLObject = typeof window != "undefined" ? (window.URL ? window.URL : window.webkitURL) : undefined;
        if (!Module.noImageDecoding && typeof Browser.URLObject === 'undefined') {
          console.log("warning: Browser does not support creating object URLs. Built-in browser image decoding will not be available.");
          Module.noImageDecoding = true;
        }
  
        // Support for plugins that can process preloaded files. You can add more of these to
        // your app by creating and appending to Module.preloadPlugins.
        //
        // Each plugin is asked if it can handle a file based on the file's name. If it can,
        // it is given the file's raw data. When it is done, it calls a callback with the file's
        // (possibly modified) data. For example, a plugin might decompress a file, or it
        // might create some side data structure for use later (like an Image element, etc.).
  
        var imagePlugin = {};
        imagePlugin['canHandle'] = function imagePlugin_canHandle(name) {
          return !Module.noImageDecoding && /\.(jpg|jpeg|png|bmp)$/i.test(name);
        };
        imagePlugin['handle'] = function imagePlugin_handle(byteArray, name, onload, onerror) {
          var b = null;
          if (Browser.hasBlobConstructor) {
            try {
              b = new Blob([byteArray], { type: Browser.getMimetype(name) });
              if (b.size !== byteArray.length) { // Safari bug #118630
                // Safari's Blob can only take an ArrayBuffer
                b = new Blob([(new Uint8Array(byteArray)).buffer], { type: Browser.getMimetype(name) });
              }
            } catch(e) {
              Runtime.warnOnce('Blob constructor present but fails: ' + e + '; falling back to blob builder');
            }
          }
          if (!b) {
            var bb = new Browser.BlobBuilder();
            bb.append((new Uint8Array(byteArray)).buffer); // we need to pass a buffer, and must copy the array to get the right data range
            b = bb.getBlob();
          }
          var url = Browser.URLObject.createObjectURL(b);
          assert(typeof url == 'string', 'createObjectURL must return a url as a string');
          var img = new Image();
          img.onload = function img_onload() {
            assert(img.complete, 'Image ' + name + ' could not be decoded');
            var canvas = document.createElement('canvas');
            canvas.width = img.width;
            canvas.height = img.height;
            var ctx = canvas.getContext('2d');
            ctx.drawImage(img, 0, 0);
            Module["preloadedImages"][name] = canvas;
            Browser.URLObject.revokeObjectURL(url);
            if (onload) onload(byteArray);
          };
          img.onerror = function img_onerror(event) {
            console.log('Image ' + url + ' could not be decoded');
            if (onerror) onerror();
          };
          img.src = url;
        };
        Module['preloadPlugins'].push(imagePlugin);
  
        var audioPlugin = {};
        audioPlugin['canHandle'] = function audioPlugin_canHandle(name) {
          return !Module.noAudioDecoding && name.substr(-4) in { '.ogg': 1, '.wav': 1, '.mp3': 1 };
        };
        audioPlugin['handle'] = function audioPlugin_handle(byteArray, name, onload, onerror) {
          var done = false;
          function finish(audio) {
            if (done) return;
            done = true;
            Module["preloadedAudios"][name] = audio;
            if (onload) onload(byteArray);
          }
          function fail() {
            if (done) return;
            done = true;
            Module["preloadedAudios"][name] = new Audio(); // empty shim
            if (onerror) onerror();
          }
          if (Browser.hasBlobConstructor) {
            try {
              var b = new Blob([byteArray], { type: Browser.getMimetype(name) });
            } catch(e) {
              return fail();
            }
            var url = Browser.URLObject.createObjectURL(b); // XXX we never revoke this!
            assert(typeof url == 'string', 'createObjectURL must return a url as a string');
            var audio = new Audio();
            audio.addEventListener('canplaythrough', function() { finish(audio) }, false); // use addEventListener due to chromium bug 124926
            audio.onerror = function audio_onerror(event) {
              if (done) return;
              console.log('warning: browser could not fully decode audio ' + name + ', trying slower base64 approach');
              function encode64(data) {
                var BASE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';
                var PAD = '=';
                var ret = '';
                var leftchar = 0;
                var leftbits = 0;
                for (var i = 0; i < data.length; i++) {
                  leftchar = (leftchar << 8) | data[i];
                  leftbits += 8;
                  while (leftbits >= 6) {
                    var curr = (leftchar >> (leftbits-6)) & 0x3f;
                    leftbits -= 6;
                    ret += BASE[curr];
                  }
                }
                if (leftbits == 2) {
                  ret += BASE[(leftchar&3) << 4];
                  ret += PAD + PAD;
                } else if (leftbits == 4) {
                  ret += BASE[(leftchar&0xf) << 2];
                  ret += PAD;
                }
                return ret;
              }
              audio.src = 'data:audio/x-' + name.substr(-3) + ';base64,' + encode64(byteArray);
              finish(audio); // we don't wait for confirmation this worked - but it's worth trying
            };
            audio.src = url;
            // workaround for chrome bug 124926 - we do not always get oncanplaythrough or onerror
            Browser.safeSetTimeout(function() {
              finish(audio); // try to use it even though it is not necessarily ready to play
            }, 10000);
          } else {
            return fail();
          }
        };
        Module['preloadPlugins'].push(audioPlugin);
  
        // Canvas event setup
  
        var canvas = Module['canvas'];
        function pointerLockChange() {
          Browser.pointerLock = document['pointerLockElement'] === canvas ||
                                document['mozPointerLockElement'] === canvas ||
                                document['webkitPointerLockElement'] === canvas ||
                                document['msPointerLockElement'] === canvas;
        }
        if (canvas) {
          // forced aspect ratio can be enabled by defining 'forcedAspectRatio' on Module
          // Module['forcedAspectRatio'] = 4 / 3;
          
          canvas.requestPointerLock = canvas['requestPointerLock'] ||
                                      canvas['mozRequestPointerLock'] ||
                                      canvas['webkitRequestPointerLock'] ||
                                      canvas['msRequestPointerLock'] ||
                                      function(){};
          canvas.exitPointerLock = document['exitPointerLock'] ||
                                   document['mozExitPointerLock'] ||
                                   document['webkitExitPointerLock'] ||
                                   document['msExitPointerLock'] ||
                                   function(){}; // no-op if function does not exist
          canvas.exitPointerLock = canvas.exitPointerLock.bind(document);
  
  
          document.addEventListener('pointerlockchange', pointerLockChange, false);
          document.addEventListener('mozpointerlockchange', pointerLockChange, false);
          document.addEventListener('webkitpointerlockchange', pointerLockChange, false);
          document.addEventListener('mspointerlockchange', pointerLockChange, false);
  
          if (Module['elementPointerLock']) {
            canvas.addEventListener("click", function(ev) {
              if (!Browser.pointerLock && canvas.requestPointerLock) {
                canvas.requestPointerLock();
                ev.preventDefault();
              }
            }, false);
          }
        }
      },createContext:function (canvas, useWebGL, setInModule, webGLContextAttributes) {
        if (useWebGL && Module.ctx && canvas == Module.canvas) return Module.ctx; // no need to recreate GL context if it's already been created for this canvas.
  
        var ctx;
        var contextHandle;
        if (useWebGL) {
          // For GLES2/desktop GL compatibility, adjust a few defaults to be different to WebGL defaults, so that they align better with the desktop defaults.
          var contextAttributes = {
            antialias: false,
            alpha: false
          };
  
          if (webGLContextAttributes) {
            for (var attribute in webGLContextAttributes) {
              contextAttributes[attribute] = webGLContextAttributes[attribute];
            }
          }
  
          contextHandle = GL.createContext(canvas, contextAttributes);
          if (contextHandle) {
            ctx = GL.getContext(contextHandle).GLctx;
          }
          // Set the background of the WebGL canvas to black
          canvas.style.backgroundColor = "black";
        } else {
          ctx = canvas.getContext('2d');
        }
  
        if (!ctx) return null;
  
        if (setInModule) {
          if (!useWebGL) assert(typeof GLctx === 'undefined', 'cannot set in module if GLctx is used, but we are a non-GL context that would replace it');
  
          Module.ctx = ctx;
          if (useWebGL) GL.makeContextCurrent(contextHandle);
          Module.useWebGL = useWebGL;
          Browser.moduleContextCreatedCallbacks.forEach(function(callback) { callback() });
          Browser.init();
        }
        return ctx;
      },destroyContext:function (canvas, useWebGL, setInModule) {},fullScreenHandlersInstalled:false,lockPointer:undefined,resizeCanvas:undefined,requestFullScreen:function (lockPointer, resizeCanvas, vrDevice) {
        Browser.lockPointer = lockPointer;
        Browser.resizeCanvas = resizeCanvas;
        Browser.vrDevice = vrDevice;
        if (typeof Browser.lockPointer === 'undefined') Browser.lockPointer = true;
        if (typeof Browser.resizeCanvas === 'undefined') Browser.resizeCanvas = false;
        if (typeof Browser.vrDevice === 'undefined') Browser.vrDevice = null;
  
        var canvas = Module['canvas'];
        function fullScreenChange() {
          Browser.isFullScreen = false;
          var canvasContainer = canvas.parentNode;
          if ((document['webkitFullScreenElement'] || document['webkitFullscreenElement'] ||
               document['mozFullScreenElement'] || document['mozFullscreenElement'] ||
               document['fullScreenElement'] || document['fullscreenElement'] ||
               document['msFullScreenElement'] || document['msFullscreenElement'] ||
               document['webkitCurrentFullScreenElement']) === canvasContainer) {
            canvas.cancelFullScreen = document['cancelFullScreen'] ||
                                      document['mozCancelFullScreen'] ||
                                      document['webkitCancelFullScreen'] ||
                                      document['msExitFullscreen'] ||
                                      document['exitFullscreen'] ||
                                      function() {};
            canvas.cancelFullScreen = canvas.cancelFullScreen.bind(document);
            if (Browser.lockPointer) canvas.requestPointerLock();
            Browser.isFullScreen = true;
            if (Browser.resizeCanvas) Browser.setFullScreenCanvasSize();
          } else {
            
            // remove the full screen specific parent of the canvas again to restore the HTML structure from before going full screen
            canvasContainer.parentNode.insertBefore(canvas, canvasContainer);
            canvasContainer.parentNode.removeChild(canvasContainer);
            
            if (Browser.resizeCanvas) Browser.setWindowedCanvasSize();
          }
          if (Module['onFullScreen']) Module['onFullScreen'](Browser.isFullScreen);
          Browser.updateCanvasDimensions(canvas);
        }
  
        if (!Browser.fullScreenHandlersInstalled) {
          Browser.fullScreenHandlersInstalled = true;
          document.addEventListener('fullscreenchange', fullScreenChange, false);
          document.addEventListener('mozfullscreenchange', fullScreenChange, false);
          document.addEventListener('webkitfullscreenchange', fullScreenChange, false);
          document.addEventListener('MSFullscreenChange', fullScreenChange, false);
        }
  
        // create a new parent to ensure the canvas has no siblings. this allows browsers to optimize full screen performance when its parent is the full screen root
        var canvasContainer = document.createElement("div");
        canvas.parentNode.insertBefore(canvasContainer, canvas);
        canvasContainer.appendChild(canvas);
  
        // use parent of canvas as full screen root to allow aspect ratio correction (Firefox stretches the root to screen size)
        canvasContainer.requestFullScreen = canvasContainer['requestFullScreen'] ||
                                            canvasContainer['mozRequestFullScreen'] ||
                                            canvasContainer['msRequestFullscreen'] ||
                                           (canvasContainer['webkitRequestFullScreen'] ? function() { canvasContainer['webkitRequestFullScreen'](Element['ALLOW_KEYBOARD_INPUT']) } : null);
  
        if (vrDevice) {
          canvasContainer.requestFullScreen({ vrDisplay: vrDevice });
        } else {
          canvasContainer.requestFullScreen();
        }
      },nextRAF:0,fakeRequestAnimationFrame:function (func) {
        // try to keep 60fps between calls to here
        var now = Date.now();
        if (Browser.nextRAF === 0) {
          Browser.nextRAF = now + 1000/60;
        } else {
          while (now + 2 >= Browser.nextRAF) { // fudge a little, to avoid timer jitter causing us to do lots of delay:0
            Browser.nextRAF += 1000/60;
          }
        }
        var delay = Math.max(Browser.nextRAF - now, 0);
        setTimeout(func, delay);
      },requestAnimationFrame:function requestAnimationFrame(func) {
        if (typeof window === 'undefined') { // Provide fallback to setTimeout if window is undefined (e.g. in Node.js)
          Browser.fakeRequestAnimationFrame(func);
        } else {
          if (!window.requestAnimationFrame) {
            window.requestAnimationFrame = window['requestAnimationFrame'] ||
                                           window['mozRequestAnimationFrame'] ||
                                           window['webkitRequestAnimationFrame'] ||
                                           window['msRequestAnimationFrame'] ||
                                           window['oRequestAnimationFrame'] ||
                                           Browser.fakeRequestAnimationFrame;
          }
          window.requestAnimationFrame(func);
        }
      },safeCallback:function (func) {
        return function() {
          if (!ABORT) return func.apply(null, arguments);
        };
      },allowAsyncCallbacks:true,queuedAsyncCallbacks:[],pauseAsyncCallbacks:function () {
        Browser.allowAsyncCallbacks = false;
      },resumeAsyncCallbacks:function () { // marks future callbacks as ok to execute, and synchronously runs any remaining ones right now
        Browser.allowAsyncCallbacks = true;
        if (Browser.queuedAsyncCallbacks.length > 0) {
          var callbacks = Browser.queuedAsyncCallbacks;
          Browser.queuedAsyncCallbacks = [];
          callbacks.forEach(function(func) {
            func();
          });
        }
      },safeRequestAnimationFrame:function (func) {
        return Browser.requestAnimationFrame(function() {
          if (ABORT) return;
          if (Browser.allowAsyncCallbacks) {
            func();
          } else {
            Browser.queuedAsyncCallbacks.push(func);
          }
        });
      },safeSetTimeout:function (func, timeout) {
        Module['noExitRuntime'] = true;
        return setTimeout(function() {
          if (ABORT) return;
          if (Browser.allowAsyncCallbacks) {
            func();
          } else {
            Browser.queuedAsyncCallbacks.push(func);
          }
        }, timeout);
      },safeSetInterval:function (func, timeout) {
        Module['noExitRuntime'] = true;
        return setInterval(function() {
          if (ABORT) return;
          if (Browser.allowAsyncCallbacks) {
            func();
          } // drop it on the floor otherwise, next interval will kick in
        }, timeout);
      },getMimetype:function (name) {
        return {
          'jpg': 'image/jpeg',
          'jpeg': 'image/jpeg',
          'png': 'image/png',
          'bmp': 'image/bmp',
          'ogg': 'audio/ogg',
          'wav': 'audio/wav',
          'mp3': 'audio/mpeg'
        }[name.substr(name.lastIndexOf('.')+1)];
      },getUserMedia:function (func) {
        if(!window.getUserMedia) {
          window.getUserMedia = navigator['getUserMedia'] ||
                                navigator['mozGetUserMedia'];
        }
        window.getUserMedia(func);
      },getMovementX:function (event) {
        return event['movementX'] ||
               event['mozMovementX'] ||
               event['webkitMovementX'] ||
               0;
      },getMovementY:function (event) {
        return event['movementY'] ||
               event['mozMovementY'] ||
               event['webkitMovementY'] ||
               0;
      },getMouseWheelDelta:function (event) {
        var delta = 0;
        switch (event.type) {
          case 'DOMMouseScroll': 
            delta = event.detail;
            break;
          case 'mousewheel': 
            delta = event.wheelDelta;
            break;
          case 'wheel': 
            delta = event['deltaY'];
            break;
          default:
            throw 'unrecognized mouse wheel event: ' + event.type;
        }
        return delta;
      },mouseX:0,mouseY:0,mouseMovementX:0,mouseMovementY:0,touches:{},lastTouches:{},calculateMouseEvent:function (event) { // event should be mousemove, mousedown or mouseup
        if (Browser.pointerLock) {
          // When the pointer is locked, calculate the coordinates
          // based on the movement of the mouse.
          // Workaround for Firefox bug 764498
          if (event.type != 'mousemove' &&
              ('mozMovementX' in event)) {
            Browser.mouseMovementX = Browser.mouseMovementY = 0;
          } else {
            Browser.mouseMovementX = Browser.getMovementX(event);
            Browser.mouseMovementY = Browser.getMovementY(event);
          }
          
          // check if SDL is available
          if (typeof SDL != "undefined") {
          	Browser.mouseX = SDL.mouseX + Browser.mouseMovementX;
          	Browser.mouseY = SDL.mouseY + Browser.mouseMovementY;
          } else {
          	// just add the mouse delta to the current absolut mouse position
          	// FIXME: ideally this should be clamped against the canvas size and zero
          	Browser.mouseX += Browser.mouseMovementX;
          	Browser.mouseY += Browser.mouseMovementY;
          }        
        } else {
          // Otherwise, calculate the movement based on the changes
          // in the coordinates.
          var rect = Module["canvas"].getBoundingClientRect();
          var cw = Module["canvas"].width;
          var ch = Module["canvas"].height;
  
          // Neither .scrollX or .pageXOffset are defined in a spec, but
          // we prefer .scrollX because it is currently in a spec draft.
          // (see: http://www.w3.org/TR/2013/WD-cssom-view-20131217/)
          var scrollX = ((typeof window.scrollX !== 'undefined') ? window.scrollX : window.pageXOffset);
          var scrollY = ((typeof window.scrollY !== 'undefined') ? window.scrollY : window.pageYOffset);
          // If this assert lands, it's likely because the browser doesn't support scrollX or pageXOffset
          // and we have no viable fallback.
          assert((typeof scrollX !== 'undefined') && (typeof scrollY !== 'undefined'), 'Unable to retrieve scroll position, mouse positions likely broken.');
  
          if (event.type === 'touchstart' || event.type === 'touchend' || event.type === 'touchmove') {
            var touch = event.touch;
            if (touch === undefined) {
              return; // the "touch" property is only defined in SDL
  
            }
            var adjustedX = touch.pageX - (scrollX + rect.left);
            var adjustedY = touch.pageY - (scrollY + rect.top);
  
            adjustedX = adjustedX * (cw / rect.width);
            adjustedY = adjustedY * (ch / rect.height);
  
            var coords = { x: adjustedX, y: adjustedY };
            
            if (event.type === 'touchstart') {
              Browser.lastTouches[touch.identifier] = coords;
              Browser.touches[touch.identifier] = coords;
            } else if (event.type === 'touchend' || event.type === 'touchmove') {
              Browser.lastTouches[touch.identifier] = Browser.touches[touch.identifier];
              Browser.touches[touch.identifier] = { x: adjustedX, y: adjustedY };
            } 
            return;
          }
  
          var x = event.pageX - (scrollX + rect.left);
          var y = event.pageY - (scrollY + rect.top);
  
          // the canvas might be CSS-scaled compared to its backbuffer;
          // SDL-using content will want mouse coordinates in terms
          // of backbuffer units.
          x = x * (cw / rect.width);
          y = y * (ch / rect.height);
  
          Browser.mouseMovementX = x - Browser.mouseX;
          Browser.mouseMovementY = y - Browser.mouseY;
          Browser.mouseX = x;
          Browser.mouseY = y;
        }
      },xhrLoad:function (url, onload, onerror) {
        var xhr = new XMLHttpRequest();
        xhr.open('GET', url, true);
        xhr.responseType = 'arraybuffer';
        xhr.onload = function xhr_onload() {
          if (xhr.status == 200 || (xhr.status == 0 && xhr.response)) { // file URLs can return 0
            onload(xhr.response);
          } else {
            onerror();
          }
        };
        xhr.onerror = onerror;
        xhr.send(null);
      },asyncLoad:function (url, onload, onerror, noRunDep) {
        Browser.xhrLoad(url, function(arrayBuffer) {
          assert(arrayBuffer, 'Loading data file "' + url + '" failed (no arrayBuffer).');
          onload(new Uint8Array(arrayBuffer));
          if (!noRunDep) removeRunDependency('al ' + url);
        }, function(event) {
          if (onerror) {
            onerror();
          } else {
            throw 'Loading data file "' + url + '" failed.';
          }
        });
        if (!noRunDep) addRunDependency('al ' + url);
      },resizeListeners:[],updateResizeListeners:function () {
        var canvas = Module['canvas'];
        Browser.resizeListeners.forEach(function(listener) {
          listener(canvas.width, canvas.height);
        });
      },setCanvasSize:function (width, height, noUpdates) {
        var canvas = Module['canvas'];
        Browser.updateCanvasDimensions(canvas, width, height);
        if (!noUpdates) Browser.updateResizeListeners();
      },windowedWidth:0,windowedHeight:0,setFullScreenCanvasSize:function () {
        // check if SDL is available   
        if (typeof SDL != "undefined") {
        	var flags = HEAPU32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)];
        	flags = flags | 0x00800000; // set SDL_FULLSCREEN flag
        	HEAP32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)]=flags
        }
        Browser.updateResizeListeners();
      },setWindowedCanvasSize:function () {
        // check if SDL is available       
        if (typeof SDL != "undefined") {
        	var flags = HEAPU32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)];
        	flags = flags & ~0x00800000; // clear SDL_FULLSCREEN flag
        	HEAP32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)]=flags
        }
        Browser.updateResizeListeners();
      },updateCanvasDimensions:function (canvas, wNative, hNative) {
        if (wNative && hNative) {
          canvas.widthNative = wNative;
          canvas.heightNative = hNative;
        } else {
          wNative = canvas.widthNative;
          hNative = canvas.heightNative;
        }
        var w = wNative;
        var h = hNative;
        if (Module['forcedAspectRatio'] && Module['forcedAspectRatio'] > 0) {
          if (w/h < Module['forcedAspectRatio']) {
            w = Math.round(h * Module['forcedAspectRatio']);
          } else {
            h = Math.round(w / Module['forcedAspectRatio']);
          }
        }
        if (((document['webkitFullScreenElement'] || document['webkitFullscreenElement'] ||
             document['mozFullScreenElement'] || document['mozFullscreenElement'] ||
             document['fullScreenElement'] || document['fullscreenElement'] ||
             document['msFullScreenElement'] || document['msFullscreenElement'] ||
             document['webkitCurrentFullScreenElement']) === canvas.parentNode) && (typeof screen != 'undefined')) {
           var factor = Math.min(screen.width / w, screen.height / h);
           w = Math.round(w * factor);
           h = Math.round(h * factor);
        }
        if (Browser.resizeCanvas) {
          if (canvas.width  != w) canvas.width  = w;
          if (canvas.height != h) canvas.height = h;
          if (typeof canvas.style != 'undefined') {
            canvas.style.removeProperty( "width");
            canvas.style.removeProperty("height");
          }
        } else {
          if (canvas.width  != wNative) canvas.width  = wNative;
          if (canvas.height != hNative) canvas.height = hNative;
          if (typeof canvas.style != 'undefined') {
            if (w != wNative || h != hNative) {
              canvas.style.setProperty( "width", w + "px", "important");
              canvas.style.setProperty("height", h + "px", "important");
            } else {
              canvas.style.removeProperty( "width");
              canvas.style.removeProperty("height");
            }
          }
        }
      },wgetRequests:{},nextWgetRequestHandle:0,getNextWgetRequestHandle:function () {
        var handle = Browser.nextWgetRequestHandle;
        Browser.nextWgetRequestHandle++;
        return handle;
      }};
  
  
  function _malloc(bytes) {
      /* Over-allocate to make sure it is byte-aligned by 8.
       * This will leak memory, but this is only the dummy
       * implementation (replaced by dlmalloc normally) so
       * not an issue.
       */
      var ptr = Runtime.dynamicAlloc(bytes + 8);
      return (ptr+8) & 0xFFFFFFF8;
    }
  Module["_malloc"] = _malloc;
  
  function _free() {
  }
  Module["_free"] = _free;
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  var _environ=allocate(1, "i32*", ALLOC_STATIC);var ___environ=_environ;function ___buildEnvironment(env) {
      // WARNING: Arbitrary limit!
      var MAX_ENV_VALUES = 64;
      var TOTAL_ENV_SIZE = 1024;
  
      // Statically allocate memory for the environment.
      var poolPtr;
      var envPtr;
      if (!___buildEnvironment.called) {
        ___buildEnvironment.called = true;
        // Set default values. Use string keys for Closure Compiler compatibility.
        ENV['USER'] = 'web_user';
        ENV['PATH'] = '/';
        ENV['PWD'] = '/';
        ENV['HOME'] = '/home/web_user';
        ENV['LANG'] = 'C';
        ENV['_'] = Module['thisProgram'];
        // Allocate memory.
        poolPtr = allocate(TOTAL_ENV_SIZE, 'i8', ALLOC_STATIC);
        envPtr = allocate(MAX_ENV_VALUES * 4,
                          'i8*', ALLOC_STATIC);
        HEAP32[((envPtr)>>2)]=poolPtr;
        HEAP32[((_environ)>>2)]=envPtr;
      } else {
        envPtr = HEAP32[((_environ)>>2)];
        poolPtr = HEAP32[((envPtr)>>2)];
      }
  
      // Collect key=value lines.
      var strings = [];
      var totalSize = 0;
      for (var key in env) {
        if (typeof env[key] === 'string') {
          var line = key + '=' + env[key];
          strings.push(line);
          totalSize += line.length;
        }
      }
      if (totalSize > TOTAL_ENV_SIZE) {
        throw new Error('Environment size exceeded TOTAL_ENV_SIZE!');
      }
  
      // Make new.
      var ptrSize = 4;
      for (var i = 0; i < strings.length; i++) {
        var line = strings[i];
        writeAsciiToMemory(line, poolPtr);
        HEAP32[(((envPtr)+(i * ptrSize))>>2)]=poolPtr;
        poolPtr += line.length + 1;
      }
      HEAP32[(((envPtr)+(strings.length * ptrSize))>>2)]=0;
    }var ENV={};function _getenv(name) {
      // char *getenv(const char *name);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/getenv.html
      if (name === 0) return 0;
      name = Pointer_stringify(name);
      if (!ENV.hasOwnProperty(name)) return 0;
  
      if (_getenv.ret) _free(_getenv.ret);
      _getenv.ret = allocate(intArrayFromString(ENV[name]), 'i8', ALLOC_NORMAL);
      return _getenv.ret;
    }
  
  function _putenv(string) {
      // int putenv(char *string);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/putenv.html
      // WARNING: According to the standard (and the glibc implementation), the
      //          string is taken by reference so future changes are reflected.
      //          We copy it instead, possibly breaking some uses.
      if (string === 0) {
        ___setErrNo(ERRNO_CODES.EINVAL);
        return -1;
      }
      string = Pointer_stringify(string);
      var splitPoint = string.indexOf('=')
      if (string === '' || string.indexOf('=') === -1) {
        ___setErrNo(ERRNO_CODES.EINVAL);
        return -1;
      }
      var name = string.slice(0, splitPoint);
      var value = string.slice(splitPoint + 1);
      if (!(name in ENV) || ENV[name] !== value) {
        ENV[name] = value;
        ___buildEnvironment(ENV);
      }
      return 0;
    }
  
  function _SDL_RWFromConstMem(mem, size) {
      var id = SDL.rwops.length; // TODO: recycle ids when they are null
      SDL.rwops.push({ bytes: mem, count: size });
      return id;
    }function _TTF_FontHeight(font) {
      var fontData = SDL.fonts[font];
      return fontData.size;
    }function _TTF_SizeText(font, text, w, h) {
      var fontData = SDL.fonts[font];
      if (w) {
        HEAP32[((w)>>2)]=SDL.estimateTextWidth(fontData, Pointer_stringify(text));
      }
      if (h) {
        HEAP32[((h)>>2)]=fontData.size;
      }
      return 0;
    }function _TTF_RenderText_Solid(font, text, color) {
      // XXX the font and color are ignored
      text = Pointer_stringify(text) || ' '; // if given an empty string, still return a valid surface
      var fontData = SDL.fonts[font];
      var w = SDL.estimateTextWidth(fontData, text);
      var h = fontData.size;
      var color = SDL.loadColorToCSSRGB(color); // XXX alpha breaks fonts?
      var fontString = h + 'px ' + fontData.name;
      var surf = SDL.makeSurface(w, h, 0, false, 'text:' + text); // bogus numbers..
      var surfData = SDL.surfaces[surf];
      surfData.ctx.save();
      surfData.ctx.fillStyle = color;
      surfData.ctx.font = fontString;
      surfData.ctx.textBaseline = 'top';
      surfData.ctx.fillText(text, 0, 0);
      surfData.ctx.restore();
      return surf;
    }function _Mix_HaltMusic() {
      var audio = SDL.music.audio;
      if (audio) {
        audio.src = audio.src; // rewind <media> element
        audio.currentPosition = 0; // rewind Web Audio graph playback.
        audio.pause();
      }
      SDL.music.audio = null;
      if (SDL.hookMusicFinished) {
        Runtime.dynCall('v', SDL.hookMusicFinished);
      }
      return 0;
    }function _Mix_PlayMusic(id, loops) {
      // Pause old music if it exists.
      if (SDL.music.audio) {
        if (!SDL.music.audio.paused) Module.printErr('Music is already playing. ' + SDL.music.source);
        SDL.music.audio.pause();
      }
      var info = SDL.audios[id];
      var audio;
      if (info.webAudio) { // Play via Web Audio API
        // Create an instance of the WebAudio object.
        audio = {};
        audio.resource = info; // This new webAudio object is an instance that refers to this existing resource.
        audio.paused = false;
        audio.currentPosition = 0;
        audio.play = function() { SDL.playWebAudio(this); }
        audio.pause = function() { SDL.pauseWebAudio(this); }
      } else if (info.audio) { // Play via the <audio> element
        audio = info.audio;
      }
      audio['onended'] = function() { if (SDL.music.audio == this) _Mix_HaltMusic(); } // will send callback
      audio.loop = loops != 0; // TODO: handle N loops for finite N
      audio.volume = SDL.music.volume;
      SDL.music.audio = audio;
      audio.play();
      return 0;
    }function _Mix_FreeChunk(id) {
      SDL.audios[id] = null;
    }function _Mix_LoadWAV_RW(rwopsID, freesrc) {
      var rwops = SDL.rwops[rwopsID];
  
      if (rwops === undefined)
        return 0;
  
      var filename = '';
      var audio;
      var webAudio;
      var bytes;
  
      if (rwops.filename !== undefined) {
        filename = PATH.resolve(rwops.filename);
        var raw = Module["preloadedAudios"][filename];
        if (!raw) {
          if (raw === null) Module.printErr('Trying to reuse preloaded audio, but freePreloadedMediaOnUse is set!');
          if (!Module.noAudioDecoding) Runtime.warnOnce('Cannot find preloaded audio ' + filename);
  
          // see if we can read the file-contents from the in-memory FS
          try {
            bytes = FS.readFile(filename);
          } catch (e) {
            Module.printErr('Couldn\'t find file for: ' + filename);
            return 0;
          }
        }
        if (Module['freePreloadedMediaOnUse']) {
          Module["preloadedAudios"][filename] = null;
        }
        audio = raw;
      }
      else if (rwops.bytes !== undefined) {
        // For Web Audio context buffer decoding, we must make a clone of the audio data, but for <media> element,
        // a view to existing data is sufficient.
        if (SDL.webAudioAvailable()) bytes = HEAPU8.buffer.slice(rwops.bytes, rwops.bytes + rwops.count);
        else bytes = HEAPU8.subarray(rwops.bytes, rwops.bytes + rwops.count);
      }
      else {
        return 0;
      }
  
      var arrayBuffer = bytes ? bytes.buffer || bytes : bytes;
  
      // To allow user code to work around browser bugs with audio playback on <audio> elements an Web Audio, enable
      // the user code to hook in a callback to decide on a file basis whether each file should use Web Audio or <audio> for decoding and playback.
      // In particular, see https://bugzilla.mozilla.org/show_bug.cgi?id=654787 and ?id=1012801 for tradeoffs.
      var canPlayWithWebAudio = Module['SDL_canPlayWithWebAudio'] === undefined || Module['SDL_canPlayWithWebAudio'](filename, arrayBuffer);
  
      if (bytes !== undefined && SDL.webAudioAvailable() && canPlayWithWebAudio) {
        audio = undefined;
        webAudio = {};
        // The audio decoding process is asynchronous, which gives trouble if user code plays the audio data back immediately
        // after loading. Therefore prepare an array of callback handlers to run when this audio decoding is complete, which
        // will then start the playback (with some delay).
        webAudio.onDecodeComplete = []; // While this member array exists, decoding hasn't finished yet.
        function onDecodeComplete(data) {
          webAudio.decodedBuffer = data;
          // Call all handlers that were waiting for this decode to finish, and clear the handler list.
          webAudio.onDecodeComplete.forEach(function(e) { e(); });
          webAudio.onDecodeComplete = undefined; // Don't allow more callback handlers since audio has finished decoding.
        }
  
        SDL.audioContext['decodeAudioData'](arrayBuffer, onDecodeComplete);
      } else if (audio === undefined && bytes) {
        // Here, we didn't find a preloaded audio but we either were passed a filepath for
        // which we loaded bytes, or we were passed some bytes
        var blob = new Blob([bytes], {type: rwops.mimetype});
        var url = URL.createObjectURL(blob);
        audio = new Audio();
        audio.src = url;
        audio.mozAudioChannelType = 'content'; // bugzilla 910340
      }
  
      var id = SDL.audios.length;
      // Keep the loaded audio in the audio arrays, ready for playback
      SDL.audios.push({
        source: filename,
        audio: audio, // Points to the <audio> element, if loaded
        webAudio: webAudio // Points to a Web Audio -specific resource object, if loaded
      });
      return id;
    }function _Mix_PlayChannel(channel, id, loops) {
      // TODO: handle fixed amount of N loops. Currently loops either 0 or infinite times.
  
      // Get the audio element associated with the ID
      var info = SDL.audios[id];
      if (!info) return -1;
      if (!info.audio && !info.webAudio) return -1;
  
      // If the user asks us to allocate a channel automatically, get the first
      // free one.
      if (channel == -1) {
        for (var i = SDL.channelMinimumNumber; i < SDL.numChannels; i++) {
          if (!SDL.channels[i].audio) {
            channel = i;
            break;
          }
        }
        if (channel == -1) {
          Module.printErr('All ' + SDL.numChannels + ' channels in use!');
          return -1;
        }
      }
      var channelInfo = SDL.channels[channel];
      var audio;
      if (info.webAudio) {
        // Create an instance of the WebAudio object.
        audio = {};
        audio.resource = info; // This new object is an instance that refers to this existing resource.
        audio.paused = false;
        audio.currentPosition = 0;
        // Make our instance look similar to the instance of a <media> to make api simple.
        audio.play = function() { SDL.playWebAudio(this); }
        audio.pause = function() { SDL.pauseWebAudio(this); }
      } else {
        // We clone the audio node to utilize the preloaded audio buffer, since
        // the browser has already preloaded the audio file.
        audio = info.audio.cloneNode(true);
        audio.numChannels = info.audio.numChannels;
        audio.frequency = info.audio.frequency;
      }
      audio['onended'] = function SDL_audio_onended() { // TODO: cache these
        if (channelInfo.audio == this) { channelInfo.audio.paused = true; channelInfo.audio = null; }
        if (SDL.channelFinished) Runtime.getFuncWrapper(SDL.channelFinished, 'vi')(channel);
      }
      channelInfo.audio = audio;
      // TODO: handle N loops. Behavior matches Mix_PlayMusic
      audio.loop = loops != 0;
      audio.volume = channelInfo.volume;
      audio.play();
      return channel;
    }function _SDL_PauseAudio(pauseOn) {
      if (!SDL.audio) {
        return;
      }
      if (pauseOn) {
        if (SDL.audio.timer !== undefined) {
          clearTimeout(SDL.audio.timer);
          SDL.audio.numAudioTimersPending = 0;
          SDL.audio.timer = undefined;
        }
      } else if (!SDL.audio.timer) {
        // Start the audio playback timer callback loop.
        SDL.audio.numAudioTimersPending = 1;
        SDL.audio.timer = Browser.safeSetTimeout(SDL.audio.caller, 1);
      }
      SDL.audio.paused = pauseOn;
    }function _SDL_CloseAudio() {
      if (SDL.audio) {
        _SDL_PauseAudio(1);
        _free(SDL.audio.buffer);
        SDL.audio = null;
        SDL.allocateChannels(0);
      }
    }function _SDL_LockSurface(surf) {
      var surfData = SDL.surfaces[surf];
  
      surfData.locked++;
      if (surfData.locked > 1) return 0;
  
      if (!surfData.buffer) {
        surfData.buffer = _malloc(surfData.width * surfData.height * 4);
        HEAP32[(((surf)+(20))>>2)]=surfData.buffer;
      }
  
      // Mark in C/C++-accessible SDL structure
      // SDL_Surface has the following fields: Uint32 flags, SDL_PixelFormat *format; int w, h; Uint16 pitch; void *pixels; ...
      // So we have fields all of the same size, and 5 of them before us.
      // TODO: Use macros like in library.js
      HEAP32[(((surf)+(20))>>2)]=surfData.buffer;
  
      if (surf == SDL.screen && Module.screenIsReadOnly && surfData.image) return 0;
  
      if (SDL.defaults.discardOnLock) {
        if (!surfData.image) {
          surfData.image = surfData.ctx.createImageData(surfData.width, surfData.height);
        }
        if (!SDL.defaults.opaqueFrontBuffer) return;
      } else {
        surfData.image = surfData.ctx.getImageData(0, 0, surfData.width, surfData.height);
      }
  
      // Emulate desktop behavior and kill alpha values on the locked surface. (very costly!) Set SDL.defaults.opaqueFrontBuffer = false
      // if you don't want this.
      if (surf == SDL.screen && SDL.defaults.opaqueFrontBuffer) {
        var data = surfData.image.data;
        var num = data.length;
        for (var i = 0; i < num/4; i++) {
          data[i*4+3] = 255; // opacity, as canvases blend alpha
        }
      }
  
      if (SDL.defaults.copyOnLock && !SDL.defaults.discardOnLock) {
        // Copy pixel data to somewhere accessible to 'C/C++'
        if (surfData.isFlagSet(0x00200000 /* SDL_HWPALETTE */)) {
          // If this is neaded then
          // we should compact the data from 32bpp to 8bpp index.
          // I think best way to implement this is use
          // additional colorMap hash (color->index).
          // Something like this:
          //
          // var size = surfData.width * surfData.height;
          // var data = '';
          // for (var i = 0; i<size; i++) {
          //   var color = SDL.translateRGBAToColor(
          //     surfData.image.data[i*4   ], 
          //     surfData.image.data[i*4 +1], 
          //     surfData.image.data[i*4 +2], 
          //     255);
          //   var index = surfData.colorMap[color];
          //   HEAP8[(((surfData.buffer)+(i))>>0)]=index;
          // }
          throw 'CopyOnLock is not supported for SDL_LockSurface with SDL_HWPALETTE flag set' + new Error().stack;
        } else {
          HEAPU8.set(surfData.image.data, surfData.buffer);
        }
      }
  
      return 0;
    }
  
  function _SDL_FreeRW(rwopsID) {
      SDL.rwops[rwopsID] = null;
      while (SDL.rwops.length > 0 && SDL.rwops[SDL.rwops.length-1] === null) {
        SDL.rwops.pop();
      }
    }function _IMG_Load_RW(rwopsID, freeSrc) {
      try {
        // stb_image integration support
        function cleanup() {
          if (rwops && freeSrc) _SDL_FreeRW(rwopsID);
        };
        function addCleanup(func) {
          var old = cleanup;
          cleanup = function added_cleanup() {
            old();
            func();
          }
        }
        function callStbImage(func, params) {
          var x = Module['_malloc'](4);
          var y = Module['_malloc'](4);
          var comp = Module['_malloc'](4);
          addCleanup(function() {
            Module['_free'](x);
            Module['_free'](y);
            Module['_free'](comp);
            if (data) Module['_stbi_image_free'](data);
          });
          var data = Module['_' + func].apply(null, params.concat([x, y, comp, 0]));
          if (!data) return null;
          return {
            rawData: true,
            data: data,
            width: HEAP32[((x)>>2)],
            height: HEAP32[((y)>>2)],
            size: HEAP32[((x)>>2)] * HEAP32[((y)>>2)] * HEAP32[((comp)>>2)],
            bpp: HEAP32[((comp)>>2)]
          };
        }
  
        var rwops = SDL.rwops[rwopsID];
        if (rwops === undefined) {
          return 0;
        }
  
        var filename = rwops.filename;
        if (filename === undefined) {
          Runtime.warnOnce('Only file names that have been preloaded are supported for IMG_Load_RW. Consider using STB_IMAGE=1 if you want synchronous image decoding (see settings.js)');
          return 0;
        }
  
        if (!raw) {
          filename = PATH.resolve(filename);
          var raw = Module["preloadedImages"][filename];
          if (!raw) {
            if (raw === null) Module.printErr('Trying to reuse preloaded image, but freePreloadedMediaOnUse is set!');
            Runtime.warnOnce('Cannot find preloaded image ' + filename);
            Runtime.warnOnce('Cannot find preloaded image ' + filename + '. Consider using STB_IMAGE=1 if you want synchronous image decoding (see settings.js)');
            return 0;
          } else if (Module['freePreloadedMediaOnUse']) {
            Module["preloadedImages"][filename] = null;
          }
        }
  
        var surf = SDL.makeSurface(raw.width, raw.height, 0, false, 'load:' + filename);
        var surfData = SDL.surfaces[surf];
        surfData.ctx.globalCompositeOperation = "copy";
        if (!raw.rawData) {
          surfData.ctx.drawImage(raw, 0, 0, raw.width, raw.height, 0, 0, raw.width, raw.height);
        } else {
          var imageData = surfData.ctx.getImageData(0, 0, surfData.width, surfData.height);
          if (raw.bpp == 4) {
            // rgba
            imageData.data.set(HEAPU8.subarray((raw.data),(raw.data+raw.size)));
          } else if (raw.bpp == 3) {
            // rgb
            var pixels = raw.size/3;
            var data = imageData.data;
            var sourcePtr = raw.data;
            var destPtr = 0;
            for (var i = 0; i < pixels; i++) {
              data[destPtr++] = HEAPU8[((sourcePtr++)>>0)];
              data[destPtr++] = HEAPU8[((sourcePtr++)>>0)];
              data[destPtr++] = HEAPU8[((sourcePtr++)>>0)];
              data[destPtr++] = 255;
            }
          } else if (raw.bpp == 1) {
            // grayscale
            var pixels = raw.size;
            var data = imageData.data;
            var sourcePtr = raw.data;
            var destPtr = 0;
            for (var i = 0; i < pixels; i++) {
              var value = HEAPU8[((sourcePtr++)>>0)];
              data[destPtr++] = value;
              data[destPtr++] = value;
              data[destPtr++] = value;
              data[destPtr++] = 255;
            }
          } else {
            Module.printErr('cannot handle bpp ' + raw.bpp);
            return 0;
          }
          surfData.ctx.putImageData(imageData, 0, 0);
        }
        surfData.ctx.globalCompositeOperation = "source-over";
        // XXX SDL does not specify that loaded images must have available pixel data, in fact
        //     there are cases where you just want to blit them, so you just need the hardware
        //     accelerated version. However, code everywhere seems to assume that the pixels
        //     are in fact available, so we retrieve it here. This does add overhead though.
        _SDL_LockSurface(surf);
        surfData.locked--; // The surface is not actually locked in this hack
        if (SDL.GL) {
          // After getting the pixel data, we can free the canvas and context if we do not need to do 2D canvas blitting
          surfData.canvas = surfData.ctx = null;
        }
        return surf;
      } finally {
        cleanup();
      }
    }
  
  function _SDL_RWFromFile(_name, mode) {
      var id = SDL.rwops.length; // TODO: recycle ids when they are null
      var name = Pointer_stringify(_name)
      SDL.rwops.push({ filename: name, mimetype: Browser.getMimetype(name) });
      return id;
    }function _IMG_Load(filename){
      var rwops = _SDL_RWFromFile(filename);
      var result = _IMG_Load_RW(rwops, 1);
      return result;
    }function _SDL_UpperBlitScaled(src, srcrect, dst, dstrect) {
      return SDL.blitSurface(src, srcrect, dst, dstrect, true);
    }function _SDL_UpperBlit(src, srcrect, dst, dstrect) {
      return SDL.blitSurface(src, srcrect, dst, dstrect, false);
    }function _SDL_GetTicks() {
      return (Date.now() - SDL.startTime)|0;
    }var SDL={defaults:{width:320,height:200,copyOnLock:true,discardOnLock:false,opaqueFrontBuffer:true},version:null,surfaces:{},canvasPool:[],events:[],fonts:[null],audios:[null],rwops:[null],music:{audio:null,volume:1},mixerFrequency:22050,mixerFormat:32784,mixerNumChannels:2,mixerChunkSize:1024,channelMinimumNumber:0,GL:false,glAttributes:{0:3,1:3,2:2,3:0,4:0,5:1,6:16,7:0,8:0,9:0,10:0,11:0,12:0,13:0,14:0,15:1,16:0,17:0,18:0},keyboardState:null,keyboardMap:{},canRequestFullscreen:false,isRequestingFullscreen:false,textInput:false,startTime:null,initFlags:0,buttonState:0,modState:0,DOMButtons:[0,0,0],DOMEventToSDLEvent:{},TOUCH_DEFAULT_ID:0,eventHandler:null,eventHandlerContext:null,eventHandlerTemp:0,keyCodes:{16:1249,17:1248,18:1250,20:1081,33:1099,34:1102,35:1101,36:1098,37:1104,38:1106,39:1103,40:1105,44:316,45:1097,46:127,91:1251,93:1125,96:1122,97:1113,98:1114,99:1115,100:1116,101:1117,102:1118,103:1119,104:1120,105:1121,106:1109,107:1111,109:1110,110:1123,111:1108,112:1082,113:1083,114:1084,115:1085,116:1086,117:1087,118:1088,119:1089,120:1090,121:1091,122:1092,123:1093,124:1128,125:1129,126:1130,127:1131,128:1132,129:1133,130:1134,131:1135,132:1136,133:1137,134:1138,135:1139,144:1107,160:94,161:33,162:34,163:35,164:36,165:37,166:38,167:95,168:40,169:41,170:42,171:43,172:124,173:45,174:123,175:125,176:126,181:127,182:129,183:128,188:44,190:46,191:47,192:96,219:91,220:92,221:93,222:39,224:1251},scanCodes:{8:42,9:43,13:40,27:41,32:44,35:204,39:53,44:54,46:55,47:56,48:39,49:30,50:31,51:32,52:33,53:34,54:35,55:36,56:37,57:38,58:203,59:51,61:46,91:47,92:49,93:48,96:52,97:4,98:5,99:6,100:7,101:8,102:9,103:10,104:11,105:12,106:13,107:14,108:15,109:16,110:17,111:18,112:19,113:20,114:21,115:22,116:23,117:24,118:25,119:26,120:27,121:28,122:29,127:76,305:224,308:226,316:70},loadRect:function (rect) {
        return {
          x: HEAP32[((rect + 0)>>2)],
          y: HEAP32[((rect + 4)>>2)],
          w: HEAP32[((rect + 8)>>2)],
          h: HEAP32[((rect + 12)>>2)]
        };
      },updateRect:function (rect, r) {
        HEAP32[((rect)>>2)]=r.x;
        HEAP32[(((rect)+(4))>>2)]=r.y;
        HEAP32[(((rect)+(8))>>2)]=r.w;
        HEAP32[(((rect)+(12))>>2)]=r.h;
      },intersectionOfRects:function (first, second) {
        var leftX = Math.max(first.x, second.x);
        var leftY = Math.max(first.y, second.y);
        var rightX = Math.min(first.x + first.w, second.x + second.w);
        var rightY = Math.min(first.y + first.h, second.y + second.h);
  
        return {
          x: leftX,
          y: leftY,
          w: Math.max(leftX, rightX) - leftX,
          h: Math.max(leftY, rightY) - leftY
        }
      },checkPixelFormat:function (fmt) {
        // Canvas screens are always RGBA.
        var format = HEAP32[((fmt)>>2)];
        if (format != -2042224636) {
          Runtime.warnOnce('Unsupported pixel format!');
        }
      },loadColorToCSSRGB:function (color) {
        var rgba = HEAP32[((color)>>2)];
        return 'rgb(' + (rgba&255) + ',' + ((rgba >> 8)&255) + ',' + ((rgba >> 16)&255) + ')';
      },loadColorToCSSRGBA:function (color) {
        var rgba = HEAP32[((color)>>2)];
        return 'rgba(' + (rgba&255) + ',' + ((rgba >> 8)&255) + ',' + ((rgba >> 16)&255) + ',' + (((rgba >> 24)&255)/255) + ')';
      },translateColorToCSSRGBA:function (rgba) {
        return 'rgba(' + (rgba&0xff) + ',' + (rgba>>8 & 0xff) + ',' + (rgba>>16 & 0xff) + ',' + (rgba>>>24)/0xff + ')';
      },translateRGBAToCSSRGBA:function (r, g, b, a) {
        return 'rgba(' + (r&0xff) + ',' + (g&0xff) + ',' + (b&0xff) + ',' + (a&0xff)/255 + ')';
      },translateRGBAToColor:function (r, g, b, a) {
        return r | g << 8 | b << 16 | a << 24;
      },makeSurface:function (width, height, flags, usePageCanvas, source, rmask, gmask, bmask, amask) {
        flags = flags || 0;
        var is_SDL_HWSURFACE = flags & 0x00000001;
        var is_SDL_HWPALETTE = flags & 0x00200000;
        var is_SDL_OPENGL = flags & 0x04000000;
  
        var surf = _malloc(60);
        var pixelFormat = _malloc(44);
        //surface with SDL_HWPALETTE flag is 8bpp surface (1 byte)
        var bpp = is_SDL_HWPALETTE ? 1 : 4;
        var buffer = 0;
  
        // preemptively initialize this for software surfaces,
        // otherwise it will be lazily initialized inside of SDL_LockSurface
        if (!is_SDL_HWSURFACE && !is_SDL_OPENGL) {
          buffer = _malloc(width * height * 4);
        }
  
        HEAP32[((surf)>>2)]=flags;
        HEAP32[(((surf)+(4))>>2)]=pixelFormat;
        HEAP32[(((surf)+(8))>>2)]=width;
        HEAP32[(((surf)+(12))>>2)]=height;
        HEAP32[(((surf)+(16))>>2)]=width * bpp;  // assuming RGBA or indexed for now,
                                                                                          // since that is what ImageData gives us in browsers
        HEAP32[(((surf)+(20))>>2)]=buffer;
  
        HEAP32[(((surf)+(36))>>2)]=0;
        HEAP32[(((surf)+(40))>>2)]=0;
        HEAP32[(((surf)+(44))>>2)]=Module["canvas"].width;
        HEAP32[(((surf)+(48))>>2)]=Module["canvas"].height;
  
        HEAP32[(((surf)+(56))>>2)]=1;
  
        HEAP32[((pixelFormat)>>2)]=-2042224636;
        HEAP32[(((pixelFormat)+(4))>>2)]=0;// TODO
        HEAP8[(((pixelFormat)+(8))>>0)]=bpp * 8;
        HEAP8[(((pixelFormat)+(9))>>0)]=bpp;
  
        HEAP32[(((pixelFormat)+(12))>>2)]=rmask || 0x000000ff;
        HEAP32[(((pixelFormat)+(16))>>2)]=gmask || 0x0000ff00;
        HEAP32[(((pixelFormat)+(20))>>2)]=bmask || 0x00ff0000;
        HEAP32[(((pixelFormat)+(24))>>2)]=amask || 0xff000000;
  
        // Decide if we want to use WebGL or not
        SDL.GL = SDL.GL || is_SDL_OPENGL;
        var canvas;
        if (!usePageCanvas) {
          if (SDL.canvasPool.length > 0) {
            canvas = SDL.canvasPool.pop();
          } else {
            canvas = document.createElement('canvas');
          }
          canvas.width = width;
          canvas.height = height;
        } else {
          canvas = Module['canvas'];
        }
  
        var webGLContextAttributes = {
          antialias: ((SDL.glAttributes[13 /*SDL_GL_MULTISAMPLEBUFFERS*/] != 0) && (SDL.glAttributes[14 /*SDL_GL_MULTISAMPLESAMPLES*/] > 1)),
          depth: (SDL.glAttributes[6 /*SDL_GL_DEPTH_SIZE*/] > 0),
          stencil: (SDL.glAttributes[7 /*SDL_GL_STENCIL_SIZE*/] > 0)
        };
        
        var ctx = Browser.createContext(canvas, is_SDL_OPENGL, usePageCanvas, webGLContextAttributes);
              
        SDL.surfaces[surf] = {
          width: width,
          height: height,
          canvas: canvas,
          ctx: ctx,
          surf: surf,
          buffer: buffer,
          pixelFormat: pixelFormat,
          alpha: 255,
          flags: flags,
          locked: 0,
          usePageCanvas: usePageCanvas,
          source: source,
  
          isFlagSet: function(flag) {
            return flags & flag;
          }
        };
  
        return surf;
      },copyIndexedColorData:function (surfData, rX, rY, rW, rH) {
        // HWPALETTE works with palette
        // setted by SDL_SetColors
        if (!surfData.colors) {
          return;
        }
        
        var fullWidth  = Module['canvas'].width;
        var fullHeight = Module['canvas'].height;
  
        var startX  = rX || 0;
        var startY  = rY || 0;
        var endX    = (rW || (fullWidth - startX)) + startX;
        var endY    = (rH || (fullHeight - startY)) + startY;
        
        var buffer  = surfData.buffer;
  
        if (!surfData.image.data32) {
          surfData.image.data32 = new Uint32Array(surfData.image.data.buffer);
        }
        var data32   = surfData.image.data32;
  
        var colors32 = surfData.colors32;
  
        for (var y = startY; y < endY; ++y) {
          var base = y * fullWidth;
          for (var x = startX; x < endX; ++x) {
            data32[base + x] = colors32[HEAPU8[((buffer + base + x)>>0)]];
          }
        }
      },freeSurface:function (surf) {
        var refcountPointer = surf + 56;
        var refcount = HEAP32[((refcountPointer)>>2)];
        if (refcount > 1) {
          HEAP32[((refcountPointer)>>2)]=refcount - 1;
          return;
        }
  
        var info = SDL.surfaces[surf];
        if (!info.usePageCanvas && info.canvas) SDL.canvasPool.push(info.canvas);
        if (info.buffer) _free(info.buffer);
        _free(info.pixelFormat);
        _free(surf);
        SDL.surfaces[surf] = null;
  
        if (surf === SDL.screen) {
          SDL.screen = null;
        }
      },blitSurface__deps:["SDL_LockSurface"],blitSurface:function (src, srcrect, dst, dstrect, scale) {
        var srcData = SDL.surfaces[src];
        var dstData = SDL.surfaces[dst];
        var sr, dr;
        if (srcrect) {
          sr = SDL.loadRect(srcrect);
        } else {
          sr = { x: 0, y: 0, w: srcData.width, h: srcData.height };
        }
        if (dstrect) {
          dr = SDL.loadRect(dstrect);
        } else {
          dr = { x: 0, y: 0, w: srcData.width, h: srcData.height };
        }
        if (dstData.clipRect) {
          var widthScale = (!scale || sr.w === 0) ? 1 : sr.w / dr.w;
          var heightScale = (!scale || sr.h === 0) ? 1 : sr.h / dr.h;
          
          dr = SDL.intersectionOfRects(dstData.clipRect, dr);
          
          sr.w = dr.w * widthScale;
          sr.h = dr.h * heightScale;
          
          if (dstrect) {
            SDL.updateRect(dstrect, dr);
          }
        }
        var blitw, blith;
        if (scale) {
          blitw = dr.w; blith = dr.h;
        } else {
          blitw = sr.w; blith = sr.h;
        }
        if (sr.w === 0 || sr.h === 0 || blitw === 0 || blith === 0) {
          return 0;
        }
        var oldAlpha = dstData.ctx.globalAlpha;
        dstData.ctx.globalAlpha = srcData.alpha/255;
        dstData.ctx.drawImage(srcData.canvas, sr.x, sr.y, sr.w, sr.h, dr.x, dr.y, blitw, blith);
        dstData.ctx.globalAlpha = oldAlpha;
        if (dst != SDL.screen) {
          // XXX As in IMG_Load, for compatibility we write out |pixels|
          Runtime.warnOnce('WARNING: copying canvas data to memory for compatibility');
          _SDL_LockSurface(dst);
          dstData.locked--; // The surface is not actually locked in this hack
        }
        return 0;
      },downFingers:{},savedKeydown:null,receiveEvent:function (event) {
        function unpressAllPressedKeys() {
          // Un-press all pressed keys: TODO
          for (var code in SDL.keyboardMap) {
            SDL.events.push({
              type: 'keyup',
              keyCode: SDL.keyboardMap[code]
            });
          }
        };
        switch(event.type) {
          case 'touchstart': case 'touchmove': {
            event.preventDefault();
  
            var touches = [];
            
            // Clear out any touchstart events that we've already processed
            if (event.type === 'touchstart') {
              for (var i = 0; i < event.touches.length; i++) {
                var touch = event.touches[i];
                if (SDL.downFingers[touch.identifier] != true) {
                  SDL.downFingers[touch.identifier] = true;
                  touches.push(touch);
                }
              }
            } else {
              touches = event.touches;
            }
            
            var firstTouch = touches[0];
            if (event.type == 'touchstart') {
              SDL.DOMButtons[0] = 1;
            }
            var mouseEventType;
            switch(event.type) {
              case 'touchstart': mouseEventType = 'mousedown'; break;
              case 'touchmove': mouseEventType = 'mousemove'; break;
            }
            var mouseEvent = {
              type: mouseEventType,
              button: 0,
              pageX: firstTouch.clientX,
              pageY: firstTouch.clientY
            };
            SDL.events.push(mouseEvent);
  
            for (var i = 0; i < touches.length; i++) {
              var touch = touches[i];
              SDL.events.push({
                type: event.type,
                touch: touch
              });
            };
            break;
          }
          case 'touchend': {
            event.preventDefault();
            
            // Remove the entry in the SDL.downFingers hash
            // because the finger is no longer down.
            for(var i = 0; i < event.changedTouches.length; i++) {
              var touch = event.changedTouches[i];
              if (SDL.downFingers[touch.identifier] === true) {
                delete SDL.downFingers[touch.identifier];
              }
            }
  
            var mouseEvent = {
              type: 'mouseup',
              button: 0,
              pageX: event.changedTouches[0].clientX,
              pageY: event.changedTouches[0].clientY
            };
            SDL.DOMButtons[0] = 0;
            SDL.events.push(mouseEvent);
            
            for (var i = 0; i < event.changedTouches.length; i++) {
              var touch = event.changedTouches[i];
              SDL.events.push({
                type: 'touchend',
                touch: touch
              });
            };
            break;
          }
          case 'DOMMouseScroll': case 'mousewheel': case 'wheel':
            var delta = -Browser.getMouseWheelDelta(event); // Flip the wheel direction to translate from browser wheel direction (+:down) to SDL direction (+:up)
            delta = (delta == 0) ? 0 : (delta > 0 ? Math.max(delta, 1) : Math.min(delta, -1)); // Quantize to integer so that minimum scroll is at least +/- 1.
  
            // Simulate old-style SDL events representing mouse wheel input as buttons
            var button = delta > 0 ? 3 /*SDL_BUTTON_WHEELUP-1*/ : 4 /*SDL_BUTTON_WHEELDOWN-1*/; // Subtract one since JS->C marshalling is defined to add one back.
            SDL.events.push({ type: 'mousedown', button: button, pageX: event.pageX, pageY: event.pageY });
            SDL.events.push({ type: 'mouseup', button: button, pageX: event.pageX, pageY: event.pageY });
  
            // Pass a delta motion event.
            SDL.events.push({ type: 'wheel', deltaX: 0, deltaY: delta });
            event.preventDefault(); // If we don't prevent this, then 'wheel' event will be sent again by the browser as 'DOMMouseScroll' and we will receive this same event the second time.
            break;
          case 'mousemove':
            if (SDL.DOMButtons[0] === 1) {
              SDL.events.push({
                type: 'touchmove',
                touch: {
                  identifier: 0,
                  deviceID: -1,
                  pageX: event.pageX,
                  pageY: event.pageY
                }
              });
            }
            if (Browser.pointerLock) {
              // workaround for firefox bug 750111
              if ('mozMovementX' in event) {
                event['movementX'] = event['mozMovementX'];
                event['movementY'] = event['mozMovementY'];
              }
              // workaround for Firefox bug 782777
              if (event['movementX'] == 0 && event['movementY'] == 0) {
                // ignore a mousemove event if it doesn't contain any movement info
                // (without pointer lock, we infer movement from pageX/pageY, so this check is unnecessary)
                event.preventDefault();
                return;
              }
            }
            // fall through
          case 'keydown': case 'keyup': case 'keypress': case 'mousedown': case 'mouseup':
            // If we preventDefault on keydown events, the subsequent keypress events
            // won't fire. However, it's fine (and in some cases necessary) to
            // preventDefault for keys that don't generate a character. Otherwise,
            // preventDefault is the right thing to do in general.
            if (event.type !== 'keydown' || (!SDL.unicode && !SDL.textInput) || (event.keyCode === 8 /* backspace */ || event.keyCode === 9 /* tab */)) {
              event.preventDefault();
            }
  
            if (event.type == 'mousedown') {
              SDL.DOMButtons[event.button] = 1;
              SDL.events.push({
                type: 'touchstart',
                touch: {
                  identifier: 0,
                  deviceID: -1,
                  pageX: event.pageX,
                  pageY: event.pageY
                }
              });
            } else if (event.type == 'mouseup') {
              // ignore extra ups, can happen if we leave the canvas while pressing down, then return,
              // since we add a mouseup in that case
              if (!SDL.DOMButtons[event.button]) {
                return;
              }
  
              SDL.events.push({
                type: 'touchend',
                touch: {
                  identifier: 0,
                  deviceID: -1,
                  pageX: event.pageX,
                  pageY: event.pageY
                }
              });
              SDL.DOMButtons[event.button] = 0;
            }
  
            // We can only request fullscreen as the result of user input.
            // Due to this limitation, we toggle a boolean on keydown which
            // SDL_WM_ToggleFullScreen will check and subsequently set another
            // flag indicating for us to request fullscreen on the following
            // keyup. This isn't perfect, but it enables SDL_WM_ToggleFullScreen
            // to work as the result of a keypress (which is an extremely
            // common use case).
            if (event.type === 'keydown' || event.type === 'mousedown') {
              SDL.canRequestFullscreen = true;
            } else if (event.type === 'keyup' || event.type === 'mouseup') {
              if (SDL.isRequestingFullscreen) {
                Module['requestFullScreen'](true, true);
                SDL.isRequestingFullscreen = false;
              }
              SDL.canRequestFullscreen = false;
            }
  
            // SDL expects a unicode character to be passed to its keydown events.
            // Unfortunately, the browser APIs only provide a charCode property on
            // keypress events, so we must backfill in keydown events with their
            // subsequent keypress event's charCode.
            if (event.type === 'keypress' && SDL.savedKeydown) {
              // charCode is read-only
              SDL.savedKeydown.keypressCharCode = event.charCode;
              SDL.savedKeydown = null;
            } else if (event.type === 'keydown') {
              SDL.savedKeydown = event;
            }
  
            // Don't push keypress events unless SDL_StartTextInput has been called.
            if (event.type !== 'keypress' || SDL.textInput) {
              SDL.events.push(event);
            }
            break;
          case 'mouseout':
            // Un-press all pressed mouse buttons, because we might miss the release outside of the canvas
            for (var i = 0; i < 3; i++) {
              if (SDL.DOMButtons[i]) {
                SDL.events.push({
                  type: 'mouseup',
                  button: i,
                  pageX: event.pageX,
                  pageY: event.pageY
                });
                SDL.DOMButtons[i] = 0;
              }
            }
            event.preventDefault();
            break;
          case 'focus':
            SDL.events.push(event);
            event.preventDefault();
            break;
          case 'blur':
            SDL.events.push(event);
            unpressAllPressedKeys();
            event.preventDefault();
            break;
          case 'visibilitychange':
            SDL.events.push({
              type: 'visibilitychange',
              visible: !document.hidden
            });
            unpressAllPressedKeys();
            event.preventDefault();
            break;
          case 'unload':
            if (Browser.mainLoop.runner) {
              SDL.events.push(event);
              // Force-run a main event loop, since otherwise this event will never be caught!
              Browser.mainLoop.runner();
            }
            return;
          case 'resize':
            SDL.events.push(event);
            // manually triggered resize event doesn't have a preventDefault member
            if (event.preventDefault) {
              event.preventDefault();
            }
            break;
        }
        if (SDL.events.length >= 10000) {
          Module.printErr('SDL event queue full, dropping events');
          SDL.events = SDL.events.slice(0, 10000);
        }
        // If we have a handler installed, this will push the events to the app
        // instead of the app polling for them.
        SDL.flushEventsToHandler();
        return;
      },lookupKeyCodeForEvent:function (event) {
          var code = event.keyCode;
          if (code >= 65 && code <= 90) {
            code += 32; // make lowercase for SDL
          } else {
            code = SDL.keyCodes[event.keyCode] || event.keyCode;
            // If this is one of the modifier keys (224 | 1<<10 - 227 | 1<<10), and the event specifies that it is
            // a right key, add 4 to get the right key SDL key code.
            if (event.location === KeyboardEvent.DOM_KEY_LOCATION_RIGHT && code >= (224 | 1<<10) && code <= (227 | 1<<10)) {
              code += 4;
            }
          }
          return code;
      },handleEvent:function (event) {
        if (event.handled) return;
        event.handled = true;
  
        switch (event.type) {
          case 'touchstart': case 'touchend': case 'touchmove': {
            Browser.calculateMouseEvent(event);
            break;
          }
          case 'keydown': case 'keyup': {
            var down = event.type === 'keydown';
            var code = SDL.lookupKeyCodeForEvent(event);
            HEAP8[(((SDL.keyboardState)+(code))>>0)]=down;
            // TODO: lmeta, rmeta, numlock, capslock, KMOD_MODE, KMOD_RESERVED
            SDL.modState = (HEAP8[(((SDL.keyboardState)+(1248))>>0)] ? 0x0040 : 0) | // KMOD_LCTRL
              (HEAP8[(((SDL.keyboardState)+(1249))>>0)] ? 0x0001 : 0) | // KMOD_LSHIFT
              (HEAP8[(((SDL.keyboardState)+(1250))>>0)] ? 0x0100 : 0) | // KMOD_LALT
              (HEAP8[(((SDL.keyboardState)+(1252))>>0)] ? 0x0080 : 0) | // KMOD_RCTRL
              (HEAP8[(((SDL.keyboardState)+(1253))>>0)] ? 0x0002 : 0) | // KMOD_RSHIFT
              (HEAP8[(((SDL.keyboardState)+(1254))>>0)] ? 0x0200 : 0); //  KMOD_RALT
            if (down) {
              SDL.keyboardMap[code] = event.keyCode; // save the DOM input, which we can use to unpress it during blur
            } else {
              delete SDL.keyboardMap[code];
            }
  
            break;
          }
          case 'mousedown': case 'mouseup':
            if (event.type == 'mousedown') {
              // SDL_BUTTON(x) is defined as (1 << ((x)-1)).  SDL buttons are 1-3,
              // and DOM buttons are 0-2, so this means that the below formula is
              // correct.
              SDL.buttonState |= 1 << event.button;
            } else if (event.type == 'mouseup') {
              SDL.buttonState &= ~(1 << event.button);
            }
            // fall through
          case 'mousemove': {
            Browser.calculateMouseEvent(event);
            break;
          }
        }
      },flushEventsToHandler:function () {
        if (!SDL.eventHandler) return;
  
        while (SDL.pollEvent(SDL.eventHandlerTemp)) {
          Runtime.dynCall('iii', SDL.eventHandler, [SDL.eventHandlerContext, SDL.eventHandlerTemp]);
        }
      },pollEvent:function (ptr) {
        if (SDL.initFlags & 0x200 && SDL.joystickEventState) {
          // If SDL_INIT_JOYSTICK was supplied AND the joystick system is configured
          // to automatically query for events, query for joystick events.
          SDL.queryJoysticks();
        }
        if (ptr) {
          while (SDL.events.length > 0) {
            if (SDL.makeCEvent(SDL.events.shift(), ptr) !== false) return 1;
          }
          return 0;
        } else {
          // XXX: somewhat risky in that we do not check if the event is real or not (makeCEvent returns false) if no pointer supplied
          return SDL.events.length > 0;
        }
      },makeCEvent:function (event, ptr) {
        if (typeof event === 'number') {
          // This is a pointer to a copy of a native C event that was SDL_PushEvent'ed
          _memcpy(ptr, event, 28);
          _free(event); // the copy is no longer needed
          return;
        }
  
        SDL.handleEvent(event);
  
        switch (event.type) {
          case 'keydown': case 'keyup': {
            var down = event.type === 'keydown';
            //Module.print('Received key event: ' + event.keyCode);
            var key = SDL.lookupKeyCodeForEvent(event);
            var scan;
            if (key >= 1024) {
              scan = key - 1024;
            } else {
              scan = SDL.scanCodes[key] || key;
            }
  
            HEAP32[((ptr)>>2)]=SDL.DOMEventToSDLEvent[event.type];
            HEAP8[(((ptr)+(8))>>0)]=down ? 1 : 0;
            HEAP8[(((ptr)+(9))>>0)]=0; // TODO
            HEAP32[(((ptr)+(12))>>2)]=scan;
            HEAP32[(((ptr)+(16))>>2)]=key;
            HEAP16[(((ptr)+(20))>>1)]=SDL.modState;
            // some non-character keys (e.g. backspace and tab) won't have keypressCharCode set, fill in with the keyCode.
            HEAP32[(((ptr)+(24))>>2)]=event.keypressCharCode || key;
  
            break;
          }
          case 'keypress': {
            HEAP32[((ptr)>>2)]=SDL.DOMEventToSDLEvent[event.type];
            // Not filling in windowID for now
            var cStr = intArrayFromString(String.fromCharCode(event.charCode));
            for (var i = 0; i < cStr.length; ++i) {
              HEAP8[(((ptr)+(8 + i))>>0)]=cStr[i];
            }
            break;
          }
          case 'mousedown': case 'mouseup': case 'mousemove': {
            if (event.type != 'mousemove') {
              var down = event.type === 'mousedown';
              HEAP32[((ptr)>>2)]=SDL.DOMEventToSDLEvent[event.type];
              HEAP32[(((ptr)+(4))>>2)]=0;
              HEAP32[(((ptr)+(8))>>2)]=0;
              HEAP32[(((ptr)+(12))>>2)]=0;
              HEAP8[(((ptr)+(16))>>0)]=event.button+1; // DOM buttons are 0-2, SDL 1-3
              HEAP8[(((ptr)+(17))>>0)]=down ? 1 : 0;
              HEAP32[(((ptr)+(20))>>2)]=Browser.mouseX;
              HEAP32[(((ptr)+(24))>>2)]=Browser.mouseY;
            } else {
              HEAP32[((ptr)>>2)]=SDL.DOMEventToSDLEvent[event.type];
              HEAP32[(((ptr)+(4))>>2)]=0;
              HEAP32[(((ptr)+(8))>>2)]=0;
              HEAP32[(((ptr)+(12))>>2)]=0;
              HEAP32[(((ptr)+(16))>>2)]=SDL.buttonState;
              HEAP32[(((ptr)+(20))>>2)]=Browser.mouseX;
              HEAP32[(((ptr)+(24))>>2)]=Browser.mouseY;
              HEAP32[(((ptr)+(28))>>2)]=Browser.mouseMovementX;
              HEAP32[(((ptr)+(32))>>2)]=Browser.mouseMovementY;
            }
            break;
          }
          case 'wheel': {
            HEAP32[((ptr)>>2)]=SDL.DOMEventToSDLEvent[event.type];
            HEAP32[(((ptr)+(16))>>2)]=event.deltaX;
            HEAP32[(((ptr)+(20))>>2)]=event.deltaY; 
            break;       
          }
          case 'touchstart': case 'touchend': case 'touchmove': {
            var touch = event.touch;
            if (!Browser.touches[touch.identifier]) break;
            var w = Module['canvas'].width;
            var h = Module['canvas'].height;
            var x = Browser.touches[touch.identifier].x / w;
            var y = Browser.touches[touch.identifier].y / h;
            var lx = Browser.lastTouches[touch.identifier].x / w;
            var ly = Browser.lastTouches[touch.identifier].y / h;
            var dx = x - lx;
            var dy = y - ly;
            if (touch['deviceID'] === undefined) touch.deviceID = SDL.TOUCH_DEFAULT_ID;
            if (dx === 0 && dy === 0 && event.type === 'touchmove') return false; // don't send these if nothing happened
            HEAP32[((ptr)>>2)]=SDL.DOMEventToSDLEvent[event.type];
            HEAP32[(((ptr)+(4))>>2)]=_SDL_GetTicks();
            (tempI64 = [touch.deviceID>>>0,(tempDouble=touch.deviceID,(+(Math_abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? ((Math_min((+(Math_floor((tempDouble)/4294967296.0))), 4294967295.0))|0)>>>0 : (~~((+(Math_ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)],HEAP32[(((ptr)+(8))>>2)]=tempI64[0],HEAP32[(((ptr)+(12))>>2)]=tempI64[1]);
            (tempI64 = [touch.identifier>>>0,(tempDouble=touch.identifier,(+(Math_abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? ((Math_min((+(Math_floor((tempDouble)/4294967296.0))), 4294967295.0))|0)>>>0 : (~~((+(Math_ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)],HEAP32[(((ptr)+(16))>>2)]=tempI64[0],HEAP32[(((ptr)+(20))>>2)]=tempI64[1]);
            HEAPF32[(((ptr)+(24))>>2)]=x;
            HEAPF32[(((ptr)+(28))>>2)]=y;
            HEAPF32[(((ptr)+(32))>>2)]=dx;
            HEAPF32[(((ptr)+(36))>>2)]=dy;
            if (touch.force !== undefined) {
              HEAPF32[(((ptr)+(40))>>2)]=touch.force;
            } else { // No pressure data, send a digital 0/1 pressure.
              HEAPF32[(((ptr)+(40))>>2)]=event.type == "touchend" ? 0 : 1;
            }
            break;
          }
          case 'unload': {
            HEAP32[((ptr)>>2)]=SDL.DOMEventToSDLEvent[event.type];
            break;
          }
          case 'resize': {
            HEAP32[((ptr)>>2)]=SDL.DOMEventToSDLEvent[event.type];
            HEAP32[(((ptr)+(4))>>2)]=event.w;
            HEAP32[(((ptr)+(8))>>2)]=event.h;
            break;
          }
          case 'joystick_button_up': case 'joystick_button_down': {
            var state = event.type === 'joystick_button_up' ? 0 : 1;
            HEAP32[((ptr)>>2)]=SDL.DOMEventToSDLEvent[event.type];
            HEAP8[(((ptr)+(4))>>0)]=event.index;
            HEAP8[(((ptr)+(5))>>0)]=event.button;
            HEAP8[(((ptr)+(6))>>0)]=state;
            break;
          }
          case 'joystick_axis_motion': {
            HEAP32[((ptr)>>2)]=SDL.DOMEventToSDLEvent[event.type];
            HEAP8[(((ptr)+(4))>>0)]=event.index;
            HEAP8[(((ptr)+(5))>>0)]=event.axis;
            HEAP32[(((ptr)+(8))>>2)]=SDL.joystickAxisValueConversion(event.value);
            break;
          }
          case 'focus': {
            var SDL_WINDOWEVENT_FOCUS_GAINED = 12 /* SDL_WINDOWEVENT_FOCUS_GAINED */;
            HEAP32[((ptr)>>2)]=SDL.DOMEventToSDLEvent[event.type];
            HEAP32[(((ptr)+(4))>>2)]=0;
            HEAP8[(((ptr)+(8))>>0)]=SDL_WINDOWEVENT_FOCUS_GAINED;
            break;
          }
          case 'blur': {
            var SDL_WINDOWEVENT_FOCUS_LOST = 13 /* SDL_WINDOWEVENT_FOCUS_LOST */;
            HEAP32[((ptr)>>2)]=SDL.DOMEventToSDLEvent[event.type];
            HEAP32[(((ptr)+(4))>>2)]=0;
            HEAP8[(((ptr)+(8))>>0)]=SDL_WINDOWEVENT_FOCUS_LOST;
            break;
          }
          case 'visibilitychange': {
            var SDL_WINDOWEVENT_SHOWN  = 1 /* SDL_WINDOWEVENT_SHOWN */;
            var SDL_WINDOWEVENT_HIDDEN = 2 /* SDL_WINDOWEVENT_HIDDEN */;
            var visibilityEventID = event.visible ? SDL_WINDOWEVENT_SHOWN : SDL_WINDOWEVENT_HIDDEN;
            HEAP32[((ptr)>>2)]=SDL.DOMEventToSDLEvent[event.type];
            HEAP32[(((ptr)+(4))>>2)]=0;
            HEAP8[(((ptr)+(8))>>0)]=visibilityEventID;
            break;
          }
          default: throw 'Unhandled SDL event: ' + event.type;
        }
      },estimateTextWidth:function (fontData, text) {
        var h = fontData.size;
        var fontString = h + 'px ' + fontData.name;
        var tempCtx = SDL.ttfContext;
        assert(tempCtx, 'TTF_Init must have been called');
        tempCtx.save();
        tempCtx.font = fontString;
        var ret = tempCtx.measureText(text).width | 0;
        tempCtx.restore();
        return ret;
      },allocateChannels:function (num) { // called from Mix_AllocateChannels and init
        if (SDL.numChannels && SDL.numChannels >= num && num != 0) return;
        SDL.numChannels = num;
        SDL.channels = [];
        for (var i = 0; i < num; i++) {
          SDL.channels[i] = {
            audio: null,
            volume: 1.0
          };
        }
      },setGetVolume:function (info, volume) {
        if (!info) return 0;
        var ret = info.volume * 128; // MIX_MAX_VOLUME
        if (volume != -1) {
          info.volume = Math.min(Math.max(volume, 0), 128) / 128;
          if (info.audio) {
            try {
              info.audio.volume = info.volume; // For <audio> element
              if (info.audio.webAudioGainNode) info.audio.webAudioGainNode['gain']['value'] = info.volume; // For WebAudio playback
            } catch(e) {
              Module.printErr('setGetVolume failed to set audio volume: ' + e);
            }
          }
        }
        return ret;
      },setPannerPosition:function (info, x, y, z) {
        if (!info) return;
        if (info.audio) {
          if (info.audio.webAudioPannerNode) {
            info.audio.webAudioPannerNode['setPosition'](x, y, z);
          }
        }
      },playWebAudio:function (audio) {
        if (!audio) return;
        if (audio.webAudioNode) return; // This instance is already playing, don't start again.
        if (!SDL.webAudioAvailable()) return;
        try {
          var webAudio = audio.resource.webAudio;
          audio.paused = false;
          if (!webAudio.decodedBuffer) {
            if (webAudio.onDecodeComplete === undefined) abort("Cannot play back audio object that was not loaded");
            webAudio.onDecodeComplete.push(function() { if (!audio.paused) SDL.playWebAudio(audio); });
            return;
          }
          audio.webAudioNode = SDL.audioContext['createBufferSource']();
          audio.webAudioNode['buffer'] = webAudio.decodedBuffer;
          audio.webAudioNode['loop'] = audio.loop;
          audio.webAudioNode['onended'] = function() { audio['onended'](); } // For <media> element compatibility, route the onended signal to the instance.
  
          audio.webAudioPannerNode = SDL.audioContext['createPanner']();
          audio.webAudioPannerNode['panningModel'] = 'equalpower';
  
          // Add an intermediate gain node to control volume.
          audio.webAudioGainNode = SDL.audioContext['createGain']();
          audio.webAudioGainNode['gain']['value'] = audio.volume;
  
          audio.webAudioNode['connect'](audio.webAudioPannerNode);
          audio.webAudioPannerNode['connect'](audio.webAudioGainNode);
          audio.webAudioGainNode['connect'](SDL.audioContext['destination']);
  
          audio.webAudioNode['start'](0, audio.currentPosition);
          audio.startTime = SDL.audioContext['currentTime'] - audio.currentPosition;
        } catch(e) {
          Module.printErr('playWebAudio failed: ' + e);
        }
      },pauseWebAudio:function (audio) {
        if (!audio) return;
        if (audio.webAudioNode) {
          try {
            // Remember where we left off, so that if/when we resume, we can restart the playback at a proper place.
            audio.currentPosition = (SDL.audioContext['currentTime'] - audio.startTime) % audio.resource.webAudio.decodedBuffer.duration;
            // Important: When we reach here, the audio playback is stopped by the user. But when calling .stop() below, the Web Audio
            // graph will send the onended signal, but we don't want to process that, since pausing should not clear/destroy the audio
            // channel.
            audio.webAudioNode['onended'] = undefined;
            audio.webAudioNode.stop();
            audio.webAudioNode = undefined;
          } catch(e) {
            Module.printErr('pauseWebAudio failed: ' + e);
          }
        }
        audio.paused = true;
      },openAudioContext:function () {
        // Initialize Web Audio API if we haven't done so yet. Note: Only initialize Web Audio context ever once on the web page,
        // since initializing multiple times fails on Chrome saying 'audio resources have been exhausted'.
        if (!SDL.audioContext) {
          if (typeof(AudioContext) !== 'undefined') SDL.audioContext = new AudioContext();
          else if (typeof(webkitAudioContext) !== 'undefined') SDL.audioContext = new webkitAudioContext();
        }
      },webAudioAvailable:function () { return !!SDL.audioContext; },fillWebAudioBufferFromHeap:function (heapPtr, sizeSamplesPerChannel, dstAudioBuffer) {
        // The input audio data is interleaved across the channels, i.e. [L, R, L, R, L, R, ...] and is either 8-bit or 16-bit as
        // supported by the SDL API. The output audio wave data for Web Audio API must be in planar buffers of [-1,1]-normalized Float32 data,
        // so perform a buffer conversion for the data.
        var numChannels = SDL.audio.channels;
        for(var c = 0; c < numChannels; ++c) {
          var channelData = dstAudioBuffer['getChannelData'](c);
          if (channelData.length != sizeSamplesPerChannel) {
            throw 'Web Audio output buffer length mismatch! Destination size: ' + channelData.length + ' samples vs expected ' + sizeSamplesPerChannel + ' samples!';
          }
          if (SDL.audio.format == 0x8010 /*AUDIO_S16LSB*/) {
            for(var j = 0; j < sizeSamplesPerChannel; ++j) {
              channelData[j] = (HEAP16[(((heapPtr)+((j*numChannels + c)*2))>>1)]) / 0x8000;
            }
          } else if (SDL.audio.format == 0x0008 /*AUDIO_U8*/) {
            for(var j = 0; j < sizeSamplesPerChannel; ++j) {
              var v = (HEAP8[(((heapPtr)+(j*numChannels + c))>>0)]);
              channelData[j] = ((v >= 0) ? v-128 : v+128) /128;
            }
          }
        }
      },debugSurface:function (surfData) {
        console.log('dumping surface ' + [surfData.surf, surfData.source, surfData.width, surfData.height]);
        var image = surfData.ctx.getImageData(0, 0, surfData.width, surfData.height);
        var data = image.data;
        var num = Math.min(surfData.width, surfData.height);
        for (var i = 0; i < num; i++) {
          console.log('   diagonal ' + i + ':' + [data[i*surfData.width*4 + i*4 + 0], data[i*surfData.width*4 + i*4 + 1], data[i*surfData.width*4 + i*4 + 2], data[i*surfData.width*4 + i*4 + 3]]);
        }
      },joystickEventState:1,lastJoystickState:{},joystickNamePool:{},recordJoystickState:function (joystick, state) {
        // Standardize button state.
        var buttons = new Array(state.buttons.length);
        for (var i = 0; i < state.buttons.length; i++) {
          buttons[i] = SDL.getJoystickButtonState(state.buttons[i]);
        }
  
        SDL.lastJoystickState[joystick] = {
          buttons: buttons,
          axes: state.axes.slice(0),
          timestamp: state.timestamp,
          index: state.index,
          id: state.id
        };
      },getJoystickButtonState:function (button) {
        if (typeof button === 'object') {
          // Current gamepad API editor's draft (Firefox Nightly)
          // https://dvcs.w3.org/hg/gamepad/raw-file/default/gamepad.html#idl-def-GamepadButton
          return button.pressed;
        } else {
          // Current gamepad API working draft (Firefox / Chrome Stable)
          // http://www.w3.org/TR/2012/WD-gamepad-20120529/#gamepad-interface
          return button > 0;
        }
      },queryJoysticks:function () {
        for (var joystick in SDL.lastJoystickState) {
          var state = SDL.getGamepad(joystick - 1);
          var prevState = SDL.lastJoystickState[joystick];
          // Check only if the timestamp has differed.
          // NOTE: Timestamp is not available in Firefox.
          if (typeof state.timestamp !== 'number' || state.timestamp !== prevState.timestamp) {
            var i;
            for (i = 0; i < state.buttons.length; i++) {
              var buttonState = SDL.getJoystickButtonState(state.buttons[i]);
              // NOTE: The previous state already has a boolean representation of
              //       its button, so no need to standardize its button state here.
              if (buttonState !== prevState.buttons[i]) {
                // Insert button-press event.
                SDL.events.push({
                  type: buttonState ? 'joystick_button_down' : 'joystick_button_up',
                  joystick: joystick,
                  index: joystick - 1,
                  button: i
                });
              }
            }
            for (i = 0; i < state.axes.length; i++) {
              if (state.axes[i] !== prevState.axes[i]) {
                // Insert axes-change event.
                SDL.events.push({
                  type: 'joystick_axis_motion',
                  joystick: joystick,
                  index: joystick - 1,
                  axis: i,
                  value: state.axes[i]
                });
              }
            }
  
            SDL.recordJoystickState(joystick, state);
          }
        }
      },joystickAxisValueConversion:function (value) {
        // Ensures that 0 is 0, 1 is 32767, and -1 is 32768.
        return Math.ceil(((value+1) * 32767.5) - 32768);
      },getGamepads:function () {
        var fcn = navigator.getGamepads || navigator.webkitGamepads || navigator.mozGamepads || navigator.gamepads || navigator.webkitGetGamepads;
        if (fcn !== undefined) {
          // The function must be applied on the navigator object.
          return fcn.apply(navigator);
        } else {
          return [];
        }
      },getGamepad:function (deviceIndex) {
        var gamepads = SDL.getGamepads();
        if (gamepads.length > deviceIndex && deviceIndex >= 0) {
          return gamepads[deviceIndex];
        }
        return null;
      }};function _SDL_SetVideoMode(width, height, depth, flags) {
      ['touchstart', 'touchend', 'touchmove', 'mousedown', 'mouseup', 'mousemove', 'DOMMouseScroll', 'mousewheel', 'wheel', 'mouseout'].forEach(function(event) {
        Module['canvas'].addEventListener(event, SDL.receiveEvent, true);
      });
  
      var canvas = Module['canvas'];
  
      // (0,0) means 'use fullscreen' in native; in Emscripten, use the current canvas size.
      if (width == 0 && height == 0) {
        width = canvas.width;
        height = canvas.height;
      }
  
      if (!SDL.addedResizeListener) {
        SDL.addedResizeListener = true;
        Browser.resizeListeners.push(function(w, h) {
          if (!SDL.settingVideoMode) {
            SDL.receiveEvent({
              type: 'resize',
              w: w,
              h: h
            });
          }
        });
      }
  
      if (width !== canvas.width || height !== canvas.height) {
        SDL.settingVideoMode = true; // SetVideoMode itself should not trigger resize events
        Browser.setCanvasSize(width, height);
        SDL.settingVideoMode = false;
      }
  
      // Free the old surface first if there is one
      if (SDL.screen) {
        SDL.freeSurface(SDL.screen);
        assert(!SDL.screen);
      }
  
      if (SDL.GL) flags = flags | 0x04000000; // SDL_OPENGL - if we are using GL, then later calls to SetVideoMode may not mention GL, but we do need it. Once in GL mode, we never leave it.
  
      SDL.screen = SDL.makeSurface(width, height, flags, true, 'screen');
  
      return SDL.screen;
    }

  
  function _open(path, oflag, varargs) {
      // int open(const char *path, int oflag, ...);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/open.html
      var mode = HEAP32[((varargs)>>2)];
      path = Pointer_stringify(path);
      try {
        var stream = FS.open(path, oflag, mode);
        return stream.fd;
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _fopen(filename, mode) {
      // FILE *fopen(const char *restrict filename, const char *restrict mode);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fopen.html
      var flags;
      mode = Pointer_stringify(mode);
      if (mode[0] == 'r') {
        if (mode.indexOf('+') != -1) {
          flags = 2;
        } else {
          flags = 0;
        }
      } else if (mode[0] == 'w') {
        if (mode.indexOf('+') != -1) {
          flags = 2;
        } else {
          flags = 1;
        }
        flags |= 64;
        flags |= 512;
      } else if (mode[0] == 'a') {
        if (mode.indexOf('+') != -1) {
          flags = 2;
        } else {
          flags = 1;
        }
        flags |= 64;
        flags |= 1024;
      } else {
        ___setErrNo(ERRNO_CODES.EINVAL);
        return 0;
      }
      var fd = _open(filename, flags, allocate([0x1FF, 0, 0, 0], 'i32', ALLOC_STACK));  // All creation permissions.
      return fd === -1 ? 0 : FS.getPtrForStream(FS.getStream(fd));
    }

  function _glDrawArrays(mode, first, count) {
  
      GLctx.drawArrays(mode, first, count);
  
    }


  function ___assert_fail(condition, filename, line, func) {
      ABORT = true;
      throw 'Assertion failed: ' + Pointer_stringify(condition) + ', at: ' + [filename ? Pointer_stringify(filename) : 'unknown filename', line, func ? Pointer_stringify(func) : 'unknown function'] + ' at ' + stackTrace();
    }

  function _SDL_PollEvent(ptr) {
      return SDL.pollEvent(ptr);
    }

  function _glClear(x0) { GLctx.clear(x0) }

  function _glActiveTexture(x0) { GLctx.activeTexture(x0) }

  function _glEnableVertexAttribArray(index) {
      GLctx.enableVertexAttribArray(index);
    }

  function _glBindBuffer(target, buffer) {
      var bufferObj = buffer ? GL.buffers[buffer] : null;
  
  
      GLctx.bindBuffer(target, bufferObj);
    }

  function _glCompileShader(shader) {
      GLctx.compileShader(GL.shaders[shader]);
    }

  function _sysconf(name) {
      // long sysconf(int name);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/sysconf.html
      switch(name) {
        case 30: return PAGE_SIZE;
        case 132:
        case 133:
        case 12:
        case 137:
        case 138:
        case 15:
        case 235:
        case 16:
        case 17:
        case 18:
        case 19:
        case 20:
        case 149:
        case 13:
        case 10:
        case 236:
        case 153:
        case 9:
        case 21:
        case 22:
        case 159:
        case 154:
        case 14:
        case 77:
        case 78:
        case 139:
        case 80:
        case 81:
        case 79:
        case 82:
        case 68:
        case 67:
        case 164:
        case 11:
        case 29:
        case 47:
        case 48:
        case 95:
        case 52:
        case 51:
        case 46:
          return 200809;
        case 27:
        case 246:
        case 127:
        case 128:
        case 23:
        case 24:
        case 160:
        case 161:
        case 181:
        case 182:
        case 242:
        case 183:
        case 184:
        case 243:
        case 244:
        case 245:
        case 165:
        case 178:
        case 179:
        case 49:
        case 50:
        case 168:
        case 169:
        case 175:
        case 170:
        case 171:
        case 172:
        case 97:
        case 76:
        case 32:
        case 173:
        case 35:
          return -1;
        case 176:
        case 177:
        case 7:
        case 155:
        case 8:
        case 157:
        case 125:
        case 126:
        case 92:
        case 93:
        case 129:
        case 130:
        case 131:
        case 94:
        case 91:
          return 1;
        case 74:
        case 60:
        case 69:
        case 70:
        case 4:
          return 1024;
        case 31:
        case 42:
        case 72:
          return 32;
        case 87:
        case 26:
        case 33:
          return 2147483647;
        case 34:
        case 1:
          return 47839;
        case 38:
        case 36:
          return 99;
        case 43:
        case 37:
          return 2048;
        case 0: return 2097152;
        case 3: return 65536;
        case 28: return 32768;
        case 44: return 32767;
        case 75: return 16384;
        case 39: return 1000;
        case 89: return 700;
        case 71: return 256;
        case 40: return 255;
        case 2: return 100;
        case 180: return 64;
        case 25: return 20;
        case 5: return 16;
        case 6: return 6;
        case 73: return 4;
        case 84: {
          if (typeof navigator === 'object') return navigator['hardwareConcurrency'] || 1;
          return 1;
        }
      }
      ___setErrNo(ERRNO_CODES.EINVAL);
      return -1;
    }

   
  Module["_bitshift64Lshr"] = _bitshift64Lshr;

  
  
  
  
  function _mkport() { throw 'TODO' }var SOCKFS={mount:function (mount) {
        // If Module['websocket'] has already been defined (e.g. for configuring
        // the subprotocol/url) use that, if not initialise it to a new object.
        Module['websocket'] = (Module['websocket'] && 
                               ('object' === typeof Module['websocket'])) ? Module['websocket'] : {};
  
        // Add the Event registration mechanism to the exported websocket configuration
        // object so we can register network callbacks from native JavaScript too.
        // For more documentation see system/include/emscripten/emscripten.h
        Module['websocket']._callbacks = {};
        Module['websocket']['on'] = function(event, callback) {
  	    if ('function' === typeof callback) {
  		  this._callbacks[event] = callback;
          }
  	    return this;
        };
  
        Module['websocket'].emit = function(event, param) {
  	    if ('function' === typeof this._callbacks[event]) {
  		  this._callbacks[event].call(this, param);
          }
        };
  
        // If debug is enabled register simple default logging callbacks for each Event.
  
        return FS.createNode(null, '/', 16384 | 511 /* 0777 */, 0);
      },createSocket:function (family, type, protocol) {
        var streaming = type == 1;
        if (protocol) {
          assert(streaming == (protocol == 6)); // if SOCK_STREAM, must be tcp
        }
  
        // create our internal socket structure
        var sock = {
          family: family,
          type: type,
          protocol: protocol,
          server: null,
          error: null, // Used in getsockopt for SOL_SOCKET/SO_ERROR test
          peers: {},
          pending: [],
          recv_queue: [],
          sock_ops: SOCKFS.websocket_sock_ops
        };
  
        // create the filesystem node to store the socket structure
        var name = SOCKFS.nextname();
        var node = FS.createNode(SOCKFS.root, name, 49152, 0);
        node.sock = sock;
  
        // and the wrapping stream that enables library functions such
        // as read and write to indirectly interact with the socket
        var stream = FS.createStream({
          path: name,
          node: node,
          flags: FS.modeStringToFlags('r+'),
          seekable: false,
          stream_ops: SOCKFS.stream_ops
        });
  
        // map the new stream to the socket structure (sockets have a 1:1
        // relationship with a stream)
        sock.stream = stream;
  
        return sock;
      },getSocket:function (fd) {
        var stream = FS.getStream(fd);
        if (!stream || !FS.isSocket(stream.node.mode)) {
          return null;
        }
        return stream.node.sock;
      },stream_ops:{poll:function (stream) {
          var sock = stream.node.sock;
          return sock.sock_ops.poll(sock);
        },ioctl:function (stream, request, varargs) {
          var sock = stream.node.sock;
          return sock.sock_ops.ioctl(sock, request, varargs);
        },read:function (stream, buffer, offset, length, position /* ignored */) {
          var sock = stream.node.sock;
          var msg = sock.sock_ops.recvmsg(sock, length);
          if (!msg) {
            // socket is closed
            return 0;
          }
          buffer.set(msg.buffer, offset);
          return msg.buffer.length;
        },write:function (stream, buffer, offset, length, position /* ignored */) {
          var sock = stream.node.sock;
          return sock.sock_ops.sendmsg(sock, buffer, offset, length);
        },close:function (stream) {
          var sock = stream.node.sock;
          sock.sock_ops.close(sock);
        }},nextname:function () {
        if (!SOCKFS.nextname.current) {
          SOCKFS.nextname.current = 0;
        }
        return 'socket[' + (SOCKFS.nextname.current++) + ']';
      },websocket_sock_ops:{createPeer:function (sock, addr, port) {
          var ws;
  
          if (typeof addr === 'object') {
            ws = addr;
            addr = null;
            port = null;
          }
  
          if (ws) {
            // for sockets that've already connected (e.g. we're the server)
            // we can inspect the _socket property for the address
            if (ws._socket) {
              addr = ws._socket.remoteAddress;
              port = ws._socket.remotePort;
            }
            // if we're just now initializing a connection to the remote,
            // inspect the url property
            else {
              var result = /ws[s]?:\/\/([^:]+):(\d+)/.exec(ws.url);
              if (!result) {
                throw new Error('WebSocket URL must be in the format ws(s)://address:port');
              }
              addr = result[1];
              port = parseInt(result[2], 10);
            }
          } else {
            // create the actual websocket object and connect
            try {
              // runtimeConfig gets set to true if WebSocket runtime configuration is available.
              var runtimeConfig = (Module['websocket'] && ('object' === typeof Module['websocket']));
  
              // The default value is 'ws://' the replace is needed because the compiler replaces '//' comments with '#'
              // comments without checking context, so we'd end up with ws:#, the replace swaps the '#' for '//' again.
              var url = 'ws:#'.replace('#', '//');
  
              if (runtimeConfig) {
                if ('string' === typeof Module['websocket']['url']) {
                  url = Module['websocket']['url']; // Fetch runtime WebSocket URL config.
                }
              }
  
              if (url === 'ws://' || url === 'wss://') { // Is the supplied URL config just a prefix, if so complete it.
                var parts = addr.split('/');
                url = url + parts[0] + ":" + port + "/" + parts.slice(1).join('/');
              }
  
              // Make the WebSocket subprotocol (Sec-WebSocket-Protocol) default to binary if no configuration is set.
              var subProtocols = 'binary'; // The default value is 'binary'
  
              if (runtimeConfig) {
                if ('string' === typeof Module['websocket']['subprotocol']) {
                  subProtocols = Module['websocket']['subprotocol']; // Fetch runtime WebSocket subprotocol config.
                }
              }
  
              // The regex trims the string (removes spaces at the beginning and end, then splits the string by
              // <any space>,<any space> into an Array. Whitespace removal is important for Websockify and ws.
              subProtocols = subProtocols.replace(/^ +| +$/g,"").split(/ *, */);
  
              // The node ws library API for specifying optional subprotocol is slightly different than the browser's.
              var opts = ENVIRONMENT_IS_NODE ? {'protocol': subProtocols.toString()} : subProtocols;
  
              // If node we use the ws library.
              var WebSocket = ENVIRONMENT_IS_NODE ? require('ws') : window['WebSocket'];
              ws = new WebSocket(url, opts);
              ws.binaryType = 'arraybuffer';
            } catch (e) {
              throw new FS.ErrnoError(ERRNO_CODES.EHOSTUNREACH);
            }
          }
  
  
          var peer = {
            addr: addr,
            port: port,
            socket: ws,
            dgram_send_queue: []
          };
  
          SOCKFS.websocket_sock_ops.addPeer(sock, peer);
          SOCKFS.websocket_sock_ops.handlePeerEvents(sock, peer);
  
          // if this is a bound dgram socket, send the port number first to allow
          // us to override the ephemeral port reported to us by remotePort on the
          // remote end.
          if (sock.type === 2 && typeof sock.sport !== 'undefined') {
            peer.dgram_send_queue.push(new Uint8Array([
                255, 255, 255, 255,
                'p'.charCodeAt(0), 'o'.charCodeAt(0), 'r'.charCodeAt(0), 't'.charCodeAt(0),
                ((sock.sport & 0xff00) >> 8) , (sock.sport & 0xff)
            ]));
          }
  
          return peer;
        },getPeer:function (sock, addr, port) {
          return sock.peers[addr + ':' + port];
        },addPeer:function (sock, peer) {
          sock.peers[peer.addr + ':' + peer.port] = peer;
        },removePeer:function (sock, peer) {
          delete sock.peers[peer.addr + ':' + peer.port];
        },handlePeerEvents:function (sock, peer) {
          var first = true;
  
          var handleOpen = function () {
  
            Module['websocket'].emit('open', sock.stream.fd);
  
            try {
              var queued = peer.dgram_send_queue.shift();
              while (queued) {
                peer.socket.send(queued);
                queued = peer.dgram_send_queue.shift();
              }
            } catch (e) {
              // not much we can do here in the way of proper error handling as we've already
              // lied and said this data was sent. shut it down.
              peer.socket.close();
            }
          };
  
          function handleMessage(data) {
            assert(typeof data !== 'string' && data.byteLength !== undefined);  // must receive an ArrayBuffer
            data = new Uint8Array(data);  // make a typed array view on the array buffer
  
  
            // if this is the port message, override the peer's port with it
            var wasfirst = first;
            first = false;
            if (wasfirst &&
                data.length === 10 &&
                data[0] === 255 && data[1] === 255 && data[2] === 255 && data[3] === 255 &&
                data[4] === 'p'.charCodeAt(0) && data[5] === 'o'.charCodeAt(0) && data[6] === 'r'.charCodeAt(0) && data[7] === 't'.charCodeAt(0)) {
              // update the peer's port and it's key in the peer map
              var newport = ((data[8] << 8) | data[9]);
              SOCKFS.websocket_sock_ops.removePeer(sock, peer);
              peer.port = newport;
              SOCKFS.websocket_sock_ops.addPeer(sock, peer);
              return;
            }
  
            sock.recv_queue.push({ addr: peer.addr, port: peer.port, data: data });
            Module['websocket'].emit('message', sock.stream.fd);
          };
  
          if (ENVIRONMENT_IS_NODE) {
            peer.socket.on('open', handleOpen);
            peer.socket.on('message', function(data, flags) {
              if (!flags.binary) {
                return;
              }
              handleMessage((new Uint8Array(data)).buffer);  // copy from node Buffer -> ArrayBuffer
            });
            peer.socket.on('close', function() {
              Module['websocket'].emit('close', sock.stream.fd);
            });
            peer.socket.on('error', function(error) {
              // Although the ws library may pass errors that may be more descriptive than
              // ECONNREFUSED they are not necessarily the expected error code e.g. 
              // ENOTFOUND on getaddrinfo seems to be node.js specific, so using ECONNREFUSED
              // is still probably the most useful thing to do.
              sock.error = ERRNO_CODES.ECONNREFUSED; // Used in getsockopt for SOL_SOCKET/SO_ERROR test.
              Module['websocket'].emit('error', [sock.stream.fd, sock.error, 'ECONNREFUSED: Connection refused']);
              // don't throw
            });
          } else {
            peer.socket.onopen = handleOpen;
            peer.socket.onclose = function() {
              Module['websocket'].emit('close', sock.stream.fd);
            };
            peer.socket.onmessage = function peer_socket_onmessage(event) {
              handleMessage(event.data);
            };
            peer.socket.onerror = function(error) {
              // The WebSocket spec only allows a 'simple event' to be thrown on error,
              // so we only really know as much as ECONNREFUSED.
              sock.error = ERRNO_CODES.ECONNREFUSED; // Used in getsockopt for SOL_SOCKET/SO_ERROR test.
              Module['websocket'].emit('error', [sock.stream.fd, sock.error, 'ECONNREFUSED: Connection refused']);
            };
          }
        },poll:function (sock) {
          if (sock.type === 1 && sock.server) {
            // listen sockets should only say they're available for reading
            // if there are pending clients.
            return sock.pending.length ? (64 | 1) : 0;
          }
  
          var mask = 0;
          var dest = sock.type === 1 ?  // we only care about the socket state for connection-based sockets
            SOCKFS.websocket_sock_ops.getPeer(sock, sock.daddr, sock.dport) :
            null;
  
          if (sock.recv_queue.length ||
              !dest ||  // connection-less sockets are always ready to read
              (dest && dest.socket.readyState === dest.socket.CLOSING) ||
              (dest && dest.socket.readyState === dest.socket.CLOSED)) {  // let recv return 0 once closed
            mask |= (64 | 1);
          }
  
          if (!dest ||  // connection-less sockets are always ready to write
              (dest && dest.socket.readyState === dest.socket.OPEN)) {
            mask |= 4;
          }
  
          if ((dest && dest.socket.readyState === dest.socket.CLOSING) ||
              (dest && dest.socket.readyState === dest.socket.CLOSED)) {
            mask |= 16;
          }
  
          return mask;
        },ioctl:function (sock, request, arg) {
          switch (request) {
            case 21531:
              var bytes = 0;
              if (sock.recv_queue.length) {
                bytes = sock.recv_queue[0].data.length;
              }
              HEAP32[((arg)>>2)]=bytes;
              return 0;
            default:
              return ERRNO_CODES.EINVAL;
          }
        },close:function (sock) {
          // if we've spawned a listen server, close it
          if (sock.server) {
            try {
              sock.server.close();
            } catch (e) {
            }
            sock.server = null;
          }
          // close any peer connections
          var peers = Object.keys(sock.peers);
          for (var i = 0; i < peers.length; i++) {
            var peer = sock.peers[peers[i]];
            try {
              peer.socket.close();
            } catch (e) {
            }
            SOCKFS.websocket_sock_ops.removePeer(sock, peer);
          }
          return 0;
        },bind:function (sock, addr, port) {
          if (typeof sock.saddr !== 'undefined' || typeof sock.sport !== 'undefined') {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);  // already bound
          }
          sock.saddr = addr;
          sock.sport = port || _mkport();
          // in order to emulate dgram sockets, we need to launch a listen server when
          // binding on a connection-less socket
          // note: this is only required on the server side
          if (sock.type === 2) {
            // close the existing server if it exists
            if (sock.server) {
              sock.server.close();
              sock.server = null;
            }
            // swallow error operation not supported error that occurs when binding in the
            // browser where this isn't supported
            try {
              sock.sock_ops.listen(sock, 0);
            } catch (e) {
              if (!(e instanceof FS.ErrnoError)) throw e;
              if (e.errno !== ERRNO_CODES.EOPNOTSUPP) throw e;
            }
          }
        },connect:function (sock, addr, port) {
          if (sock.server) {
            throw new FS.ErrnoError(ERRNO_CODES.EOPNOTSUPP);
          }
  
          // TODO autobind
          // if (!sock.addr && sock.type == 2) {
          // }
  
          // early out if we're already connected / in the middle of connecting
          if (typeof sock.daddr !== 'undefined' && typeof sock.dport !== 'undefined') {
            var dest = SOCKFS.websocket_sock_ops.getPeer(sock, sock.daddr, sock.dport);
            if (dest) {
              if (dest.socket.readyState === dest.socket.CONNECTING) {
                throw new FS.ErrnoError(ERRNO_CODES.EALREADY);
              } else {
                throw new FS.ErrnoError(ERRNO_CODES.EISCONN);
              }
            }
          }
  
          // add the socket to our peer list and set our
          // destination address / port to match
          var peer = SOCKFS.websocket_sock_ops.createPeer(sock, addr, port);
          sock.daddr = peer.addr;
          sock.dport = peer.port;
  
          // always "fail" in non-blocking mode
          throw new FS.ErrnoError(ERRNO_CODES.EINPROGRESS);
        },listen:function (sock, backlog) {
          if (!ENVIRONMENT_IS_NODE) {
            throw new FS.ErrnoError(ERRNO_CODES.EOPNOTSUPP);
          }
          if (sock.server) {
             throw new FS.ErrnoError(ERRNO_CODES.EINVAL);  // already listening
          }
          var WebSocketServer = require('ws').Server;
          var host = sock.saddr;
          sock.server = new WebSocketServer({
            host: host,
            port: sock.sport
            // TODO support backlog
          });
          Module['websocket'].emit('listen', sock.stream.fd); // Send Event with listen fd.
  
          sock.server.on('connection', function(ws) {
            if (sock.type === 1) {
              var newsock = SOCKFS.createSocket(sock.family, sock.type, sock.protocol);
  
              // create a peer on the new socket
              var peer = SOCKFS.websocket_sock_ops.createPeer(newsock, ws);
              newsock.daddr = peer.addr;
              newsock.dport = peer.port;
  
              // push to queue for accept to pick up
              sock.pending.push(newsock);
              Module['websocket'].emit('connection', newsock.stream.fd);
            } else {
              // create a peer on the listen socket so calling sendto
              // with the listen socket and an address will resolve
              // to the correct client
              SOCKFS.websocket_sock_ops.createPeer(sock, ws);
              Module['websocket'].emit('connection', sock.stream.fd);
            }
          });
          sock.server.on('closed', function() {
            Module['websocket'].emit('close', sock.stream.fd);
            sock.server = null;
          });
          sock.server.on('error', function(error) {
            // Although the ws library may pass errors that may be more descriptive than
            // ECONNREFUSED they are not necessarily the expected error code e.g. 
            // ENOTFOUND on getaddrinfo seems to be node.js specific, so using EHOSTUNREACH
            // is still probably the most useful thing to do. This error shouldn't
            // occur in a well written app as errors should get trapped in the compiled
            // app's own getaddrinfo call.
            sock.error = ERRNO_CODES.EHOSTUNREACH; // Used in getsockopt for SOL_SOCKET/SO_ERROR test.
            Module['websocket'].emit('error', [sock.stream.fd, sock.error, 'EHOSTUNREACH: Host is unreachable']);
            // don't throw
          });
        },accept:function (listensock) {
          if (!listensock.server) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          var newsock = listensock.pending.shift();
          newsock.stream.flags = listensock.stream.flags;
          return newsock;
        },getname:function (sock, peer) {
          var addr, port;
          if (peer) {
            if (sock.daddr === undefined || sock.dport === undefined) {
              throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN);
            }
            addr = sock.daddr;
            port = sock.dport;
          } else {
            // TODO saddr and sport will be set for bind()'d UDP sockets, but what
            // should we be returning for TCP sockets that've been connect()'d?
            addr = sock.saddr || 0;
            port = sock.sport || 0;
          }
          return { addr: addr, port: port };
        },sendmsg:function (sock, buffer, offset, length, addr, port) {
          if (sock.type === 2) {
            // connection-less sockets will honor the message address,
            // and otherwise fall back to the bound destination address
            if (addr === undefined || port === undefined) {
              addr = sock.daddr;
              port = sock.dport;
            }
            // if there was no address to fall back to, error out
            if (addr === undefined || port === undefined) {
              throw new FS.ErrnoError(ERRNO_CODES.EDESTADDRREQ);
            }
          } else {
            // connection-based sockets will only use the bound
            addr = sock.daddr;
            port = sock.dport;
          }
  
          // find the peer for the destination address
          var dest = SOCKFS.websocket_sock_ops.getPeer(sock, addr, port);
  
          // early out if not connected with a connection-based socket
          if (sock.type === 1) {
            if (!dest || dest.socket.readyState === dest.socket.CLOSING || dest.socket.readyState === dest.socket.CLOSED) {
              throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN);
            } else if (dest.socket.readyState === dest.socket.CONNECTING) {
              throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
            }
          }
  
          // create a copy of the incoming data to send, as the WebSocket API
          // doesn't work entirely with an ArrayBufferView, it'll just send
          // the entire underlying buffer
          var data;
          if (buffer instanceof Array || buffer instanceof ArrayBuffer) {
            data = buffer.slice(offset, offset + length);
          } else {  // ArrayBufferView
            data = buffer.buffer.slice(buffer.byteOffset + offset, buffer.byteOffset + offset + length);
          }
  
          // if we're emulating a connection-less dgram socket and don't have
          // a cached connection, queue the buffer to send upon connect and
          // lie, saying the data was sent now.
          if (sock.type === 2) {
            if (!dest || dest.socket.readyState !== dest.socket.OPEN) {
              // if we're not connected, open a new connection
              if (!dest || dest.socket.readyState === dest.socket.CLOSING || dest.socket.readyState === dest.socket.CLOSED) {
                dest = SOCKFS.websocket_sock_ops.createPeer(sock, addr, port);
              }
              dest.dgram_send_queue.push(data);
              return length;
            }
          }
  
          try {
            // send the actual data
            dest.socket.send(data);
            return length;
          } catch (e) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
        },recvmsg:function (sock, length) {
          // http://pubs.opengroup.org/onlinepubs/7908799/xns/recvmsg.html
          if (sock.type === 1 && sock.server) {
            // tcp servers should not be recv()'ing on the listen socket
            throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN);
          }
  
          var queued = sock.recv_queue.shift();
          if (!queued) {
            if (sock.type === 1) {
              var dest = SOCKFS.websocket_sock_ops.getPeer(sock, sock.daddr, sock.dport);
  
              if (!dest) {
                // if we have a destination address but are not connected, error out
                throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN);
              }
              else if (dest.socket.readyState === dest.socket.CLOSING || dest.socket.readyState === dest.socket.CLOSED) {
                // return null if the socket has closed
                return null;
              }
              else {
                // else, our socket is in a valid state but truly has nothing available
                throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
              }
            } else {
              throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
            }
          }
  
          // queued.data will be an ArrayBuffer if it's unadulterated, but if it's
          // requeued TCP data it'll be an ArrayBufferView
          var queuedLength = queued.data.byteLength || queued.data.length;
          var queuedOffset = queued.data.byteOffset || 0;
          var queuedBuffer = queued.data.buffer || queued.data;
          var bytesRead = Math.min(length, queuedLength);
          var res = {
            buffer: new Uint8Array(queuedBuffer, queuedOffset, bytesRead),
            addr: queued.addr,
            port: queued.port
          };
  
  
          // push back any unread data for TCP connections
          if (sock.type === 1 && bytesRead < queuedLength) {
            var bytesRemaining = queuedLength - bytesRead;
            queued.data = new Uint8Array(queuedBuffer, queuedOffset + bytesRead, bytesRemaining);
            sock.recv_queue.unshift(queued);
          }
  
          return res;
        }}};function _recv(fd, buf, len, flags) {
      var sock = SOCKFS.getSocket(fd);
      if (!sock) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      // TODO honor flags
      return _read(fd, buf, len);
    }
  
  function _pread(fildes, buf, nbyte, offset) {
      // ssize_t pread(int fildes, void *buf, size_t nbyte, off_t offset);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/read.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      try {
        var slab = HEAP8;
        return FS.read(stream, slab, buf, nbyte, offset);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _read(fildes, buf, nbyte) {
      // ssize_t read(int fildes, void *buf, size_t nbyte);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/read.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
  
  
      try {
        var slab = HEAP8;
        return FS.read(stream, slab, buf, nbyte);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _fread(ptr, size, nitems, stream) {
      // size_t fread(void *restrict ptr, size_t size, size_t nitems, FILE *restrict stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fread.html
      var bytesToRead = nitems * size;
      if (bytesToRead == 0) {
        return 0;
      }
      var bytesRead = 0;
      var streamObj = FS.getStreamFromPtr(stream);
      if (!streamObj) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return 0;
      }
      while (streamObj.ungotten.length && bytesToRead > 0) {
        HEAP8[((ptr++)>>0)]=streamObj.ungotten.pop();
        bytesToRead--;
        bytesRead++;
      }
      var err = _read(streamObj.fd, ptr, bytesToRead);
      if (err == -1) {
        if (streamObj) streamObj.error = true;
        return 0;
      }
      bytesRead += err;
      if (bytesRead < bytesToRead) streamObj.eof = true;
      return (bytesRead / size)|0;
    }

  function _glBufferData(target, size, data, usage) {
      switch (usage) { // fix usages, WebGL only has *_DRAW
        case 0x88E1: // GL_STREAM_READ
        case 0x88E2: // GL_STREAM_COPY
          usage = 0x88E0; // GL_STREAM_DRAW
          break;
        case 0x88E5: // GL_STATIC_READ
        case 0x88E6: // GL_STATIC_COPY
          usage = 0x88E4; // GL_STATIC_DRAW
          break;
        case 0x88E9: // GL_DYNAMIC_READ
        case 0x88EA: // GL_DYNAMIC_COPY
          usage = 0x88E8; // GL_DYNAMIC_DRAW
          break;
      }
      if (!data) {
        GLctx.bufferData(target, size, usage);
      } else {
        GLctx.bufferData(target, HEAPU8.subarray(data, data+size), usage);
      }
    }

  var _cos=Math_cos;

  function _SDL_WM_SetCaption(title, icon) {
      if (title && typeof Module['setWindowTitle'] !== 'undefined') {
        Module['setWindowTitle'](Pointer_stringify(title));
      }
      icon = icon && Pointer_stringify(icon);
    }

  
  function _emscripten_memcpy_big(dest, src, num) {
      HEAPU8.set(HEAPU8.subarray(src, src+num), dest);
      return dest;
    } 
  Module["_memcpy"] = _memcpy;

  var _llvm_pow_f64=Math_pow;

  function _sbrk(bytes) {
      // Implement a Linux-like 'memory area' for our 'process'.
      // Changes the size of the memory area by |bytes|; returns the
      // address of the previous top ('break') of the memory area
      // We control the "dynamic" memory - DYNAMIC_BASE to DYNAMICTOP
      var self = _sbrk;
      if (!self.called) {
        DYNAMICTOP = alignMemoryPage(DYNAMICTOP); // make sure we start out aligned
        self.called = true;
        assert(Runtime.dynamicAlloc);
        self.alloc = Runtime.dynamicAlloc;
        Runtime.dynamicAlloc = function() { abort('cannot dynamically allocate, sbrk now has control') };
      }
      var ret = DYNAMICTOP;
      if (bytes != 0) {
        var success = self.alloc(bytes);
        if (!success) return -1 >>> 0; // sbrk failure code
      }
      return ret;  // Previous break location.
    }

  function _glGenTextures(n, textures) {
      for (var i = 0; i < n; i++) {
        var texture = GLctx.createTexture();
        if (!texture) {
          GL.recordError(0x0502 /* GL_INVALID_OPERATION */); // GLES + EGL specs don't specify what should happen here, so best to issue an error and create IDs with 0.
          while(i < n) HEAP32[(((textures)+(i++*4))>>2)]=0;
          return;
        }
        var id = GL.getNewId(GL.textures);
        texture.name = id;
        GL.textures[id] = texture;
        HEAP32[(((textures)+(i*4))>>2)]=id;
      }
    }

  function ___errno_location() {
      return ___errno_state;
    }

  var _BItoD=true;

  var _sin=Math_sin;

  function _glCreateShader(shaderType) {
      var id = GL.getNewId(GL.shaders);
      GL.shaders[id] = GLctx.createShader(shaderType);
      return id;
    }

  function _glUniform1i(location, v0) {
      location = GL.uniforms[location];
      GLctx.uniform1i(location, v0);
    }

  function _glTexImage2D(target, level, internalFormat, width, height, border, format, type, pixels) {
      if (pixels) {
        var data = GL.getTexPixelData(type, format, width, height, pixels, internalFormat);
        pixels = data.pixels;
        internalFormat = data.internalFormat;
      } else {
        pixels = null;
      }
      GLctx.texImage2D(target, level, internalFormat, width, height, border, format, type, pixels);
    }

  function _glGetProgramInfoLog(program, maxLength, length, infoLog) {
      var log = GLctx.getProgramInfoLog(GL.programs[program]);
      // Work around a bug in Chromium which causes getProgramInfoLog to return null: https://code.google.com/p/chromium/issues/detail?id=111337
      // Note that this makes glGetProgramInfoLog behavior to be inconsistent. If an error occurs, GL functions should not write anything
      // to the output parameters, however with this workaround in place, we will always write an empty string out to 'infoLog', even if an
      // error did occur.
      if (!log) log = "";
  
      log = log.substr(0, maxLength - 1);
      if (maxLength > 0 && infoLog) {
        writeStringToMemory(log, infoLog);
        if (length) HEAP32[((length)>>2)]=log.length;
      } else {
        if (length) HEAP32[((length)>>2)]=0;
      }
    }

   
  Module["_memset"] = _memset;

  function _glGetProgramiv(program, pname, p) {
      if (pname == 0x8B84) { // GL_INFO_LOG_LENGTH
        HEAP32[((p)>>2)]=GLctx.getProgramInfoLog(GL.programs[program]).length + 1;
      } else if (pname == 0x8B87 /* GL_ACTIVE_UNIFORM_MAX_LENGTH */) {
        var ptable = GL.programInfos[program];
        if (ptable) {
          HEAP32[((p)>>2)]=ptable.maxUniformLength;
          return;
        } else if (program < GL.counter) {
          GL.recordError(0x0502 /* GL_INVALID_OPERATION */);
        } else {
          GL.recordError(0x0501 /* GL_INVALID_VALUE */);
        }
      } else if (pname == 0x8B8A /* GL_ACTIVE_ATTRIBUTE_MAX_LENGTH */) {
        var ptable = GL.programInfos[program];
        if (ptable) {
          if (ptable.maxAttributeLength == -1) {
            var program = GL.programs[program];
            var numAttribs = GLctx.getProgramParameter(program, GLctx.ACTIVE_ATTRIBUTES);
            ptable.maxAttributeLength = 0; // Spec says if there are no active attribs, 0 must be returned.
            for(var i = 0; i < numAttribs; ++i) {
              var activeAttrib = GLctx.getActiveAttrib(program, i);
              ptable.maxAttributeLength = Math.max(ptable.maxAttributeLength, activeAttrib.name.length+1);
            }
          }
          HEAP32[((p)>>2)]=ptable.maxAttributeLength;
          return;
        } else if (program < GL.counter) {
          GL.recordError(0x0502 /* GL_INVALID_OPERATION */);
        } else {
          GL.recordError(0x0501 /* GL_INVALID_VALUE */);
        }
      } else {
        HEAP32[((p)>>2)]=GLctx.getProgramParameter(GL.programs[program], pname);
      }
    }

  function _glVertexAttribPointer(index, size, type, normalized, stride, ptr) {
      GLctx.vertexAttribPointer(index, size, type, normalized, stride, ptr);
    }

  function _glGetShaderInfoLog(shader, maxLength, length, infoLog) {
      var log = GLctx.getShaderInfoLog(GL.shaders[shader]);
      // Work around a bug in Chromium which causes getShaderInfoLog to return null
      if (!log) log = '(unknown error)';
      log = log.substr(0, maxLength - 1);
      if (maxLength > 0 && infoLog) {
        writeStringToMemory(log, infoLog);
        if (length) HEAP32[((length)>>2)]=log.length;
      } else {
        if (length) HEAP32[((length)>>2)]=0;
      }
    }

   
  Module["_bitshift64Shl"] = _bitshift64Shl;

  function _abort() {
      Module['abort']();
    }

  
  
  
  function _send(fd, buf, len, flags) {
      var sock = SOCKFS.getSocket(fd);
      if (!sock) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      // TODO honor flags
      return _write(fd, buf, len);
    }
  
  function _pwrite(fildes, buf, nbyte, offset) {
      // ssize_t pwrite(int fildes, const void *buf, size_t nbyte, off_t offset);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/write.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      try {
        var slab = HEAP8;
        return FS.write(stream, slab, buf, nbyte, offset);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _write(fildes, buf, nbyte) {
      // ssize_t write(int fildes, const void *buf, size_t nbyte);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/write.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
  
  
      try {
        var slab = HEAP8;
        return FS.write(stream, slab, buf, nbyte);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _fwrite(ptr, size, nitems, stream) {
      // size_t fwrite(const void *restrict ptr, size_t size, size_t nitems, FILE *restrict stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fwrite.html
      var bytesToWrite = nitems * size;
      if (bytesToWrite == 0) return 0;
      var fd = _fileno(stream);
      var bytesWritten = _write(fd, ptr, bytesToWrite);
      if (bytesWritten == -1) {
        var streamObj = FS.getStreamFromPtr(stream);
        if (streamObj) streamObj.error = true;
        return 0;
      } else {
        return (bytesWritten / size)|0;
      }
    }
  
  
   
  Module["_strlen"] = _strlen;
  
  function __reallyNegative(x) {
      return x < 0 || (x === 0 && (1/x) === -Infinity);
    }function __formatString(format, varargs) {
      assert((varargs & 7) === 0);
      var textIndex = format;
      var argIndex = 0;
      function getNextArg(type) {
        // NOTE: Explicitly ignoring type safety. Otherwise this fails:
        //       int x = 4; printf("%c\n", (char)x);
        var ret;
        argIndex = Runtime.prepVararg(argIndex, type);
        if (type === 'double') {
          ret = (HEAP32[((tempDoublePtr)>>2)]=HEAP32[(((varargs)+(argIndex))>>2)],HEAP32[(((tempDoublePtr)+(4))>>2)]=HEAP32[(((varargs)+((argIndex)+(4)))>>2)],(+(HEAPF64[(tempDoublePtr)>>3])));
          argIndex += 8;
        } else if (type == 'i64') {
          ret = [HEAP32[(((varargs)+(argIndex))>>2)],
                 HEAP32[(((varargs)+(argIndex+4))>>2)]];
  
          argIndex += 8;
        } else {
          assert((argIndex & 3) === 0);
          type = 'i32'; // varargs are always i32, i64, or double
          ret = HEAP32[(((varargs)+(argIndex))>>2)];
          argIndex += 4;
        }
        return ret;
      }
  
      var ret = [];
      var curr, next, currArg;
      while(1) {
        var startTextIndex = textIndex;
        curr = HEAP8[((textIndex)>>0)];
        if (curr === 0) break;
        next = HEAP8[((textIndex+1)>>0)];
        if (curr == 37) {
          // Handle flags.
          var flagAlwaysSigned = false;
          var flagLeftAlign = false;
          var flagAlternative = false;
          var flagZeroPad = false;
          var flagPadSign = false;
          flagsLoop: while (1) {
            switch (next) {
              case 43:
                flagAlwaysSigned = true;
                break;
              case 45:
                flagLeftAlign = true;
                break;
              case 35:
                flagAlternative = true;
                break;
              case 48:
                if (flagZeroPad) {
                  break flagsLoop;
                } else {
                  flagZeroPad = true;
                  break;
                }
              case 32:
                flagPadSign = true;
                break;
              default:
                break flagsLoop;
            }
            textIndex++;
            next = HEAP8[((textIndex+1)>>0)];
          }
  
          // Handle width.
          var width = 0;
          if (next == 42) {
            width = getNextArg('i32');
            textIndex++;
            next = HEAP8[((textIndex+1)>>0)];
          } else {
            while (next >= 48 && next <= 57) {
              width = width * 10 + (next - 48);
              textIndex++;
              next = HEAP8[((textIndex+1)>>0)];
            }
          }
  
          // Handle precision.
          var precisionSet = false, precision = -1;
          if (next == 46) {
            precision = 0;
            precisionSet = true;
            textIndex++;
            next = HEAP8[((textIndex+1)>>0)];
            if (next == 42) {
              precision = getNextArg('i32');
              textIndex++;
            } else {
              while(1) {
                var precisionChr = HEAP8[((textIndex+1)>>0)];
                if (precisionChr < 48 ||
                    precisionChr > 57) break;
                precision = precision * 10 + (precisionChr - 48);
                textIndex++;
              }
            }
            next = HEAP8[((textIndex+1)>>0)];
          }
          if (precision < 0) {
            precision = 6; // Standard default.
            precisionSet = false;
          }
  
          // Handle integer sizes. WARNING: These assume a 32-bit architecture!
          var argSize;
          switch (String.fromCharCode(next)) {
            case 'h':
              var nextNext = HEAP8[((textIndex+2)>>0)];
              if (nextNext == 104) {
                textIndex++;
                argSize = 1; // char (actually i32 in varargs)
              } else {
                argSize = 2; // short (actually i32 in varargs)
              }
              break;
            case 'l':
              var nextNext = HEAP8[((textIndex+2)>>0)];
              if (nextNext == 108) {
                textIndex++;
                argSize = 8; // long long
              } else {
                argSize = 4; // long
              }
              break;
            case 'L': // long long
            case 'q': // int64_t
            case 'j': // intmax_t
              argSize = 8;
              break;
            case 'z': // size_t
            case 't': // ptrdiff_t
            case 'I': // signed ptrdiff_t or unsigned size_t
              argSize = 4;
              break;
            default:
              argSize = null;
          }
          if (argSize) textIndex++;
          next = HEAP8[((textIndex+1)>>0)];
  
          // Handle type specifier.
          switch (String.fromCharCode(next)) {
            case 'd': case 'i': case 'u': case 'o': case 'x': case 'X': case 'p': {
              // Integer.
              var signed = next == 100 || next == 105;
              argSize = argSize || 4;
              var currArg = getNextArg('i' + (argSize * 8));
              var origArg = currArg;
              var argText;
              // Flatten i64-1 [low, high] into a (slightly rounded) double
              if (argSize == 8) {
                currArg = Runtime.makeBigInt(currArg[0], currArg[1], next == 117);
              }
              // Truncate to requested size.
              if (argSize <= 4) {
                var limit = Math.pow(256, argSize) - 1;
                currArg = (signed ? reSign : unSign)(currArg & limit, argSize * 8);
              }
              // Format the number.
              var currAbsArg = Math.abs(currArg);
              var prefix = '';
              if (next == 100 || next == 105) {
                if (argSize == 8 && i64Math) argText = i64Math.stringify(origArg[0], origArg[1], null); else
                argText = reSign(currArg, 8 * argSize, 1).toString(10);
              } else if (next == 117) {
                if (argSize == 8 && i64Math) argText = i64Math.stringify(origArg[0], origArg[1], true); else
                argText = unSign(currArg, 8 * argSize, 1).toString(10);
                currArg = Math.abs(currArg);
              } else if (next == 111) {
                argText = (flagAlternative ? '0' : '') + currAbsArg.toString(8);
              } else if (next == 120 || next == 88) {
                prefix = (flagAlternative && currArg != 0) ? '0x' : '';
                if (argSize == 8 && i64Math) {
                  if (origArg[1]) {
                    argText = (origArg[1]>>>0).toString(16);
                    var lower = (origArg[0]>>>0).toString(16);
                    while (lower.length < 8) lower = '0' + lower;
                    argText += lower;
                  } else {
                    argText = (origArg[0]>>>0).toString(16);
                  }
                } else
                if (currArg < 0) {
                  // Represent negative numbers in hex as 2's complement.
                  currArg = -currArg;
                  argText = (currAbsArg - 1).toString(16);
                  var buffer = [];
                  for (var i = 0; i < argText.length; i++) {
                    buffer.push((0xF - parseInt(argText[i], 16)).toString(16));
                  }
                  argText = buffer.join('');
                  while (argText.length < argSize * 2) argText = 'f' + argText;
                } else {
                  argText = currAbsArg.toString(16);
                }
                if (next == 88) {
                  prefix = prefix.toUpperCase();
                  argText = argText.toUpperCase();
                }
              } else if (next == 112) {
                if (currAbsArg === 0) {
                  argText = '(nil)';
                } else {
                  prefix = '0x';
                  argText = currAbsArg.toString(16);
                }
              }
              if (precisionSet) {
                while (argText.length < precision) {
                  argText = '0' + argText;
                }
              }
  
              // Add sign if needed
              if (currArg >= 0) {
                if (flagAlwaysSigned) {
                  prefix = '+' + prefix;
                } else if (flagPadSign) {
                  prefix = ' ' + prefix;
                }
              }
  
              // Move sign to prefix so we zero-pad after the sign
              if (argText.charAt(0) == '-') {
                prefix = '-' + prefix;
                argText = argText.substr(1);
              }
  
              // Add padding.
              while (prefix.length + argText.length < width) {
                if (flagLeftAlign) {
                  argText += ' ';
                } else {
                  if (flagZeroPad) {
                    argText = '0' + argText;
                  } else {
                    prefix = ' ' + prefix;
                  }
                }
              }
  
              // Insert the result into the buffer.
              argText = prefix + argText;
              argText.split('').forEach(function(chr) {
                ret.push(chr.charCodeAt(0));
              });
              break;
            }
            case 'f': case 'F': case 'e': case 'E': case 'g': case 'G': {
              // Float.
              var currArg = getNextArg('double');
              var argText;
              if (isNaN(currArg)) {
                argText = 'nan';
                flagZeroPad = false;
              } else if (!isFinite(currArg)) {
                argText = (currArg < 0 ? '-' : '') + 'inf';
                flagZeroPad = false;
              } else {
                var isGeneral = false;
                var effectivePrecision = Math.min(precision, 20);
  
                // Convert g/G to f/F or e/E, as per:
                // http://pubs.opengroup.org/onlinepubs/9699919799/functions/printf.html
                if (next == 103 || next == 71) {
                  isGeneral = true;
                  precision = precision || 1;
                  var exponent = parseInt(currArg.toExponential(effectivePrecision).split('e')[1], 10);
                  if (precision > exponent && exponent >= -4) {
                    next = ((next == 103) ? 'f' : 'F').charCodeAt(0);
                    precision -= exponent + 1;
                  } else {
                    next = ((next == 103) ? 'e' : 'E').charCodeAt(0);
                    precision--;
                  }
                  effectivePrecision = Math.min(precision, 20);
                }
  
                if (next == 101 || next == 69) {
                  argText = currArg.toExponential(effectivePrecision);
                  // Make sure the exponent has at least 2 digits.
                  if (/[eE][-+]\d$/.test(argText)) {
                    argText = argText.slice(0, -1) + '0' + argText.slice(-1);
                  }
                } else if (next == 102 || next == 70) {
                  argText = currArg.toFixed(effectivePrecision);
                  if (currArg === 0 && __reallyNegative(currArg)) {
                    argText = '-' + argText;
                  }
                }
  
                var parts = argText.split('e');
                if (isGeneral && !flagAlternative) {
                  // Discard trailing zeros and periods.
                  while (parts[0].length > 1 && parts[0].indexOf('.') != -1 &&
                         (parts[0].slice(-1) == '0' || parts[0].slice(-1) == '.')) {
                    parts[0] = parts[0].slice(0, -1);
                  }
                } else {
                  // Make sure we have a period in alternative mode.
                  if (flagAlternative && argText.indexOf('.') == -1) parts[0] += '.';
                  // Zero pad until required precision.
                  while (precision > effectivePrecision++) parts[0] += '0';
                }
                argText = parts[0] + (parts.length > 1 ? 'e' + parts[1] : '');
  
                // Capitalize 'E' if needed.
                if (next == 69) argText = argText.toUpperCase();
  
                // Add sign.
                if (currArg >= 0) {
                  if (flagAlwaysSigned) {
                    argText = '+' + argText;
                  } else if (flagPadSign) {
                    argText = ' ' + argText;
                  }
                }
              }
  
              // Add padding.
              while (argText.length < width) {
                if (flagLeftAlign) {
                  argText += ' ';
                } else {
                  if (flagZeroPad && (argText[0] == '-' || argText[0] == '+')) {
                    argText = argText[0] + '0' + argText.slice(1);
                  } else {
                    argText = (flagZeroPad ? '0' : ' ') + argText;
                  }
                }
              }
  
              // Adjust case.
              if (next < 97) argText = argText.toUpperCase();
  
              // Insert the result into the buffer.
              argText.split('').forEach(function(chr) {
                ret.push(chr.charCodeAt(0));
              });
              break;
            }
            case 's': {
              // String.
              var arg = getNextArg('i8*');
              var argLength = arg ? _strlen(arg) : '(null)'.length;
              if (precisionSet) argLength = Math.min(argLength, precision);
              if (!flagLeftAlign) {
                while (argLength < width--) {
                  ret.push(32);
                }
              }
              if (arg) {
                for (var i = 0; i < argLength; i++) {
                  ret.push(HEAPU8[((arg++)>>0)]);
                }
              } else {
                ret = ret.concat(intArrayFromString('(null)'.substr(0, argLength), true));
              }
              if (flagLeftAlign) {
                while (argLength < width--) {
                  ret.push(32);
                }
              }
              break;
            }
            case 'c': {
              // Character.
              if (flagLeftAlign) ret.push(getNextArg('i8'));
              while (--width > 0) {
                ret.push(32);
              }
              if (!flagLeftAlign) ret.push(getNextArg('i8'));
              break;
            }
            case 'n': {
              // Write the length written so far to the next parameter.
              var ptr = getNextArg('i32*');
              HEAP32[((ptr)>>2)]=ret.length;
              break;
            }
            case '%': {
              // Literal percent sign.
              ret.push(curr);
              break;
            }
            default: {
              // Unknown specifiers remain untouched.
              for (var i = startTextIndex; i < textIndex + 2; i++) {
                ret.push(HEAP8[((i)>>0)]);
              }
            }
          }
          textIndex += 2;
          // TODO: Support a/A (hex float) and m (last error) specifiers.
          // TODO: Support %1${specifier} for arg selection.
        } else {
          ret.push(curr);
          textIndex += 1;
        }
      }
      return ret;
    }function _fprintf(stream, format, varargs) {
      // int fprintf(FILE *restrict stream, const char *restrict format, ...);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/printf.html
      var result = __formatString(format, varargs);
      var stack = Runtime.stackSave();
      var ret = _fwrite(allocate(result, 'i8', ALLOC_STACK), 1, result.length, stream);
      Runtime.stackRestore(stack);
      return ret;
    }

  function _glGetUniformLocation(program, name) {
      name = Pointer_stringify(name);
  
      var arrayOffset = 0;
      // If user passed an array accessor "[index]", parse the array index off the accessor.
      if (name.indexOf(']', name.length-1) !== -1) {
        var ls = name.lastIndexOf('[');
        var arrayIndex = name.slice(ls+1, -1);
        if (arrayIndex.length > 0) {
          arrayOffset = parseInt(arrayIndex);
          if (arrayOffset < 0) {
            return -1;
          }
        }
        name = name.slice(0, ls);
      }
  
      var ptable = GL.programInfos[program];
      if (!ptable) {
        return -1;
      }
      var utable = ptable.uniforms;
      var uniformInfo = utable[name]; // returns pair [ dimension_of_uniform_array, uniform_location ]
      if (uniformInfo && arrayOffset < uniformInfo[0]) { // Check if user asked for an out-of-bounds element, i.e. for 'vec4 colors[3];' user could ask for 'colors[10]' which should return -1.
        return uniformInfo[1]+arrayOffset;
      } else {
        return -1;
      }
    }


  function _glEnable(x0) { GLctx.enable(x0) }

  function _feof(stream) {
      // int feof(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/feof.html
      stream = FS.getStreamFromPtr(stream);
      return Number(stream && stream.eof);
    }

  
  function _lseek(fildes, offset, whence) {
      // off_t lseek(int fildes, off_t offset, int whence);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/lseek.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      try {
        return FS.llseek(stream, offset, whence);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _fseek(stream, offset, whence) {
      // int fseek(FILE *stream, long offset, int whence);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fseek.html
      var fd = _fileno(stream);
      var ret = _lseek(fd, offset, whence);
      if (ret == -1) {
        return -1;
      }
      stream = FS.getStreamFromPtr(stream);
      stream.eof = false;
      return 0;
    }

  var _sqrt=Math_sqrt;

  function _glGenBuffers(n, buffers) {
      for (var i = 0; i < n; i++) {
        var buffer = GLctx.createBuffer();
        if (!buffer) {
          GL.recordError(0x0502 /* GL_INVALID_OPERATION */);
          while(i < n) HEAP32[(((buffers)+(i++*4))>>2)]=0;
          return;
        }
        var id = GL.getNewId(GL.buffers);
        buffer.name = id;
        GL.buffers[id] = buffer;
        HEAP32[(((buffers)+(i*4))>>2)]=id;
      }
    }

  function _glDeleteProgram(id) {
      if (!id) return;
      var program = GL.programs[id];
      if (!program) { // glDeleteProgram actually signals an error when deleting a nonexisting object, unlike some other GL delete functions.
        GL.recordError(0x0501 /* GL_INVALID_VALUE */);
        return;
      }
      GLctx.deleteProgram(program);
      program.name = 0;
      GL.programs[id] = null;
      GL.programInfos[id] = null;
    }


  function _glGetAttribLocation(program, name) {
      program = GL.programs[program];
      name = Pointer_stringify(name);
      return GLctx.getAttribLocation(program, name);
    }

  function _glAttachShader(program, shader) {
      GLctx.attachShader(GL.programs[program],
                              GL.shaders[shader]);
    }

  function _glDeleteShader(id) {
      if (!id) return;
      var shader = GL.shaders[id];
      if (!shader) { // glDeleteShader actually signals an error when deleting a nonexisting object, unlike some other GL delete functions.
        GL.recordError(0x0501 /* GL_INVALID_VALUE */);
        return;
      }
      GLctx.deleteShader(shader);
      GL.shaders[id] = null;
    }

  function _glBlendFunc(x0, x1) { GLctx.blendFunc(x0, x1) }

  function _glCreateProgram() {
      var id = GL.getNewId(GL.programs);
      var program = GLctx.createProgram();
      program.name = id;
      GL.programs[id] = program;
      return id;
    }


  function _glDepthMask(x0) { GLctx.depthMask(x0) }

  function _printf(format, varargs) {
      // int printf(const char *restrict format, ...);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/printf.html
      var stdout = HEAP32[((_stdout)>>2)];
      return _fprintf(stdout, format, varargs);
    }

  function _SDL_GL_SwapBuffers() {
      if (Browser.doSwapBuffers) Browser.doSwapBuffers(); // in workers, this is used to send out a buffered frame
    }

  function _SDL_Init(initFlags) {
      SDL.startTime = Date.now();
      SDL.initFlags = initFlags;
  
      // capture all key events. we just keep down and up, but also capture press to prevent default actions
      if (!Module['doNotCaptureKeyboard']) {
        var keyboardListeningElement = Module['keyboardListeningElement'] || document;
        keyboardListeningElement.addEventListener("keydown", SDL.receiveEvent);
        keyboardListeningElement.addEventListener("keyup", SDL.receiveEvent);
        keyboardListeningElement.addEventListener("keypress", SDL.receiveEvent);
        window.addEventListener("focus", SDL.receiveEvent);
        window.addEventListener("blur", SDL.receiveEvent);
        document.addEventListener("visibilitychange", SDL.receiveEvent);
      }
  
      if (initFlags & 0x200) {
        // SDL_INIT_JOYSTICK
        // Firefox will not give us Joystick data unless we register this NOP
        // callback.
        // https://bugzilla.mozilla.org/show_bug.cgi?id=936104
        addEventListener("gamepadconnected", function() {});
      }
  
      window.addEventListener("unload", SDL.receiveEvent);
      SDL.keyboardState = _malloc(0x10000); // Our SDL needs 512, but 64K is safe for older SDLs
      _memset(SDL.keyboardState, 0, 0x10000);
      // Initialize this structure carefully for closure
      SDL.DOMEventToSDLEvent['keydown']    = 0x300  /* SDL_KEYDOWN */;
      SDL.DOMEventToSDLEvent['keyup']      = 0x301  /* SDL_KEYUP */;
      SDL.DOMEventToSDLEvent['keypress']   = 0x303  /* SDL_TEXTINPUT */;
      SDL.DOMEventToSDLEvent['mousedown']  = 0x401  /* SDL_MOUSEBUTTONDOWN */;
      SDL.DOMEventToSDLEvent['mouseup']    = 0x402  /* SDL_MOUSEBUTTONUP */;
      SDL.DOMEventToSDLEvent['mousemove']  = 0x400  /* SDL_MOUSEMOTION */;
      SDL.DOMEventToSDLEvent['wheel']      = 0x403  /* SDL_MOUSEWHEEL */; 
      SDL.DOMEventToSDLEvent['touchstart'] = 0x700  /* SDL_FINGERDOWN */;
      SDL.DOMEventToSDLEvent['touchend']   = 0x701  /* SDL_FINGERUP */;
      SDL.DOMEventToSDLEvent['touchmove']  = 0x702  /* SDL_FINGERMOTION */;
      SDL.DOMEventToSDLEvent['unload']     = 0x100  /* SDL_QUIT */;
      SDL.DOMEventToSDLEvent['resize']     = 0x7001 /* SDL_VIDEORESIZE/SDL_EVENT_COMPAT2 */;
      SDL.DOMEventToSDLEvent['visibilitychange'] = 0x200 /* SDL_WINDOWEVENT */;
      SDL.DOMEventToSDLEvent['focus']      = 0x200 /* SDL_WINDOWEVENT */;
      SDL.DOMEventToSDLEvent['blur']       = 0x200 /* SDL_WINDOWEVENT */;
  
      // These are not technically DOM events; the HTML gamepad API is poll-based.
      // However, we define them here, as the rest of the SDL code assumes that
      // all SDL events originate as DOM events.
      SDL.DOMEventToSDLEvent['joystick_axis_motion'] = 0x600 /* SDL_JOYAXISMOTION */;
      SDL.DOMEventToSDLEvent['joystick_button_down'] = 0x603 /* SDL_JOYBUTTONDOWN */;
      SDL.DOMEventToSDLEvent['joystick_button_up'] = 0x604 /* SDL_JOYBUTTONUP */;
      return 0; // success
    }

  var _abs=Math_abs;

  var _atan2=Math_atan2;

  function _glGenerateMipmap(x0) { GLctx.generateMipmap(x0) }

  function _time(ptr) {
      var ret = (Date.now()/1000)|0;
      if (ptr) {
        HEAP32[((ptr)>>2)]=ret;
      }
      return ret;
    }

  function _glGetShaderiv(shader, pname, p) {
      if (pname == 0x8B84) { // GL_INFO_LOG_LENGTH
        var log = GLctx.getShaderInfoLog(GL.shaders[shader]);
        // Work around a bug in Chromium which causes getShaderInfoLog to return null: https://code.google.com/p/chromium/issues/detail?id=111337
        if (!log) log = '(unknown error)';
        HEAP32[((p)>>2)]=log.length + 1;
      } else {
        HEAP32[((p)>>2)]=GLctx.getShaderParameter(GL.shaders[shader], pname);
      }
    }

var GLctx; GL.init()
FS.staticInit();__ATINIT__.unshift({ func: function() { if (!Module["noFSInit"] && !FS.init.initialized) FS.init() } });__ATMAIN__.push({ func: function() { FS.ignorePermissions = false } });__ATEXIT__.push({ func: function() { FS.quit() } });Module["FS_createFolder"] = FS.createFolder;Module["FS_createPath"] = FS.createPath;Module["FS_createDataFile"] = FS.createDataFile;Module["FS_createPreloadedFile"] = FS.createPreloadedFile;Module["FS_createLazyFile"] = FS.createLazyFile;Module["FS_createLink"] = FS.createLink;Module["FS_createDevice"] = FS.createDevice;
___errno_state = Runtime.staticAlloc(4); HEAP32[((___errno_state)>>2)]=0;
__ATINIT__.unshift({ func: function() { TTY.init() } });__ATEXIT__.push({ func: function() { TTY.shutdown() } });
if (ENVIRONMENT_IS_NODE) { var fs = require("fs"); var NODEJS_PATH = require("path"); NODEFS.staticInit(); }
Module["requestFullScreen"] = function Module_requestFullScreen(lockPointer, resizeCanvas, vrDevice) { Browser.requestFullScreen(lockPointer, resizeCanvas, vrDevice) };
  Module["requestAnimationFrame"] = function Module_requestAnimationFrame(func) { Browser.requestAnimationFrame(func) };
  Module["setCanvasSize"] = function Module_setCanvasSize(width, height, noUpdates) { Browser.setCanvasSize(width, height, noUpdates) };
  Module["pauseMainLoop"] = function Module_pauseMainLoop() { Browser.mainLoop.pause() };
  Module["resumeMainLoop"] = function Module_resumeMainLoop() { Browser.mainLoop.resume() };
  Module["getUserMedia"] = function Module_getUserMedia() { Browser.getUserMedia() }
  Module["createContext"] = function Module_createContext(canvas, useWebGL, setInModule, webGLContextAttributes) { return Browser.createContext(canvas, useWebGL, setInModule, webGLContextAttributes) }
___buildEnvironment(ENV);
__ATINIT__.push({ func: function() { SOCKFS.root = FS.mount(SOCKFS, {}, null); } });
STACK_BASE = STACKTOP = Runtime.alignMemory(STATICTOP);

staticSealed = true; // seal the static portion of memory

STACK_MAX = STACK_BASE + TOTAL_STACK;

DYNAMIC_BASE = DYNAMICTOP = Runtime.alignMemory(STACK_MAX);

assert(DYNAMIC_BASE < TOTAL_MEMORY, "TOTAL_MEMORY not big enough for stack");

 var cttz_i8 = allocate([8,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,7,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0], "i8", ALLOC_DYNAMIC);


function nullFunc_iiii(x) { Module["printErr"]("Invalid function pointer called with signature 'iiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info."); abort(x) }

function nullFunc_vii(x) { Module["printErr"]("Invalid function pointer called with signature 'vii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info."); abort(x) }

function nullFunc_ii(x) { Module["printErr"]("Invalid function pointer called with signature 'ii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info."); abort(x) }

function nullFunc_viii(x) { Module["printErr"]("Invalid function pointer called with signature 'viii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info."); abort(x) }

function nullFunc_v(x) { Module["printErr"]("Invalid function pointer called with signature 'v'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info."); abort(x) }

function nullFunc_viiiiii(x) { Module["printErr"]("Invalid function pointer called with signature 'viiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info."); abort(x) }

function nullFunc_iiiiii(x) { Module["printErr"]("Invalid function pointer called with signature 'iiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info."); abort(x) }

function nullFunc_viiii(x) { Module["printErr"]("Invalid function pointer called with signature 'viiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info."); abort(x) }

function invoke_iiii(index,a1,a2,a3) {
  try {
    return Module["dynCall_iiii"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_vii(index,a1,a2) {
  try {
    Module["dynCall_vii"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_ii(index,a1) {
  try {
    return Module["dynCall_ii"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viii(index,a1,a2,a3) {
  try {
    Module["dynCall_viii"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_v(index) {
  try {
    Module["dynCall_v"](index);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiii(index,a1,a2,a3,a4,a5,a6) {
  try {
    Module["dynCall_viiiiii"](index,a1,a2,a3,a4,a5,a6);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiiii(index,a1,a2,a3,a4,a5) {
  try {
    return Module["dynCall_iiiiii"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiii(index,a1,a2,a3,a4) {
  try {
    Module["dynCall_viiii"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

Module.asmGlobalArg = { "Math": Math, "Int8Array": Int8Array, "Int16Array": Int16Array, "Int32Array": Int32Array, "Uint8Array": Uint8Array, "Uint16Array": Uint16Array, "Uint32Array": Uint32Array, "Float32Array": Float32Array, "Float64Array": Float64Array, "NaN": NaN, "Infinity": Infinity };
Module.asmLibraryArg = { "abort": abort, "assert": assert, "nullFunc_iiii": nullFunc_iiii, "nullFunc_vii": nullFunc_vii, "nullFunc_ii": nullFunc_ii, "nullFunc_viii": nullFunc_viii, "nullFunc_v": nullFunc_v, "nullFunc_viiiiii": nullFunc_viiiiii, "nullFunc_iiiiii": nullFunc_iiiiii, "nullFunc_viiii": nullFunc_viiii, "invoke_iiii": invoke_iiii, "invoke_vii": invoke_vii, "invoke_ii": invoke_ii, "invoke_viii": invoke_viii, "invoke_v": invoke_v, "invoke_viiiiii": invoke_viiiiii, "invoke_iiiiii": invoke_iiiiii, "invoke_viiii": invoke_viiii, "_glUseProgram": _glUseProgram, "_fread": _fread, "_SDL_RWFromFile": _SDL_RWFromFile, "___assert_fail": ___assert_fail, "_glDeleteProgram": _glDeleteProgram, "_glBindBuffer": _glBindBuffer, "_glGetShaderInfoLog": _glGetShaderInfoLog, "_emscripten_set_main_loop_timing": _emscripten_set_main_loop_timing, "_sbrk": _sbrk, "_glBlendFunc": _glBlendFunc, "_glGetAttribLocation": _glGetAttribLocation, "_Mix_PlayChannel": _Mix_PlayChannel, "_TTF_RenderText_Solid": _TTF_RenderText_Solid, "_sysconf": _sysconf, "_close": _close, "_Mix_PlayMusic": _Mix_PlayMusic, "_cos": _cos, "_Mix_FreeChunk": _Mix_FreeChunk, "_write": _write, "_fsync": _fsync, "_glGenBuffers": _glGenBuffers, "_glShaderSource": _glShaderSource, "_Mix_HaltMusic": _Mix_HaltMusic, "_TTF_FontHeight": _TTF_FontHeight, "_glGenerateMipmap": _glGenerateMipmap, "_glVertexAttribPointer": _glVertexAttribPointer, "_send": _send, "_atan2": _atan2, "_glGetProgramInfoLog": _glGetProgramInfoLog, "_SDL_GetTicks": _SDL_GetTicks, "_glDepthMask": _glDepthMask, "_SDL_LockSurface": _SDL_LockSurface, "_sin": _sin, "___setErrNo": ___setErrNo, "_abs": _abs, "_glEnable": _glEnable, "_printf": _printf, "_glGenTextures": _glGenTextures, "_glGetString": _glGetString, "_glewInit": _glewInit, "_glAttachShader": _glAttachShader, "_glCreateProgram": _glCreateProgram, "_mkport": _mkport, "_read": _read, "_SDL_SetVideoMode": _SDL_SetVideoMode, "_fwrite": _fwrite, "_time": _time, "_fprintf": _fprintf, "_SDL_UpperBlitScaled": _SDL_UpperBlitScaled, "_putenv": _putenv, "_llvm_pow_f64": _llvm_pow_f64, "_IMG_Load": _IMG_Load, "_lseek": _lseek, "___buildEnvironment": ___buildEnvironment, "_pwrite": _pwrite, "_glBindTexture": _glBindTexture, "_open": _open, "_glClearColor": _glClearColor, "_SDL_Init": _SDL_Init, "_glUniform1i": _glUniform1i, "_glDrawArrays": _glDrawArrays, "_glCreateShader": _glCreateShader, "_fseek": _fseek, "_getenv": _getenv, "_fclose": _fclose, "_SDL_UpperBlit": _SDL_UpperBlit, "_SDL_PauseAudio": _SDL_PauseAudio, "_glActiveTexture": _glActiveTexture, "_recv": _recv, "_glCompileShader": _glCompileShader, "_glEnableVertexAttribArray": _glEnableVertexAttribArray, "_abort": _abort, "_glBufferData": _glBufferData, "_glTexImage2D": _glTexImage2D, "_fopen": _fopen, "_glDeleteShader": _glDeleteShader, "_glGetProgramiv": _glGetProgramiv, "_SDL_CloseAudio": _SDL_CloseAudio, "_fflush": _fflush, "_SDL_FreeRW": _SDL_FreeRW, "__reallyNegative": __reallyNegative, "_SDL_PollEvent": _SDL_PollEvent, "_glGetUniformLocation": _glGetUniformLocation, "_glClear": _glClear, "_fileno": _fileno, "_Mix_LoadWAV_RW": _Mix_LoadWAV_RW, "_SDL_WM_SetCaption": _SDL_WM_SetCaption, "_IMG_Load_RW": _IMG_Load_RW, "_glGetShaderiv": _glGetShaderiv, "_pread": _pread, "_TTF_SizeText": _TTF_SizeText, "_glLinkProgram": _glLinkProgram, "_feof": _feof, "_emscripten_memcpy_big": _emscripten_memcpy_big, "_emscripten_set_main_loop": _emscripten_set_main_loop, "___errno_location": ___errno_location, "_SDL_GL_SwapBuffers": _SDL_GL_SwapBuffers, "__formatString": __formatString, "_sqrt": _sqrt, "_SDL_RWFromConstMem": _SDL_RWFromConstMem, "STACKTOP": STACKTOP, "STACK_MAX": STACK_MAX, "tempDoublePtr": tempDoublePtr, "ABORT": ABORT, "cttz_i8": cttz_i8, "_stderr": _stderr };
// EMSCRIPTEN_START_ASM
var asm = (function(global, env, buffer) {
  'almost asm';
  
  var HEAP8 = new global.Int8Array(buffer);
  var HEAP16 = new global.Int16Array(buffer);
  var HEAP32 = new global.Int32Array(buffer);
  var HEAPU8 = new global.Uint8Array(buffer);
  var HEAPU16 = new global.Uint16Array(buffer);
  var HEAPU32 = new global.Uint32Array(buffer);
  var HEAPF32 = new global.Float32Array(buffer);
  var HEAPF64 = new global.Float64Array(buffer);


  var STACKTOP=env.STACKTOP|0;
  var STACK_MAX=env.STACK_MAX|0;
  var tempDoublePtr=env.tempDoublePtr|0;
  var ABORT=env.ABORT|0;
  var cttz_i8=env.cttz_i8|0;
  var _stderr=env._stderr|0;

  var __THREW__ = 0;
  var threwValue = 0;
  var setjmpId = 0;
  var undef = 0;
  var nan = global.NaN, inf = global.Infinity;
  var tempInt = 0, tempBigInt = 0, tempBigIntP = 0, tempBigIntS = 0, tempBigIntR = 0.0, tempBigIntI = 0, tempBigIntD = 0, tempValue = 0, tempDouble = 0.0;

  var tempRet0 = 0;
  var tempRet1 = 0;
  var tempRet2 = 0;
  var tempRet3 = 0;
  var tempRet4 = 0;
  var tempRet5 = 0;
  var tempRet6 = 0;
  var tempRet7 = 0;
  var tempRet8 = 0;
  var tempRet9 = 0;
  var Math_floor=global.Math.floor;
  var Math_abs=global.Math.abs;
  var Math_sqrt=global.Math.sqrt;
  var Math_pow=global.Math.pow;
  var Math_cos=global.Math.cos;
  var Math_sin=global.Math.sin;
  var Math_tan=global.Math.tan;
  var Math_acos=global.Math.acos;
  var Math_asin=global.Math.asin;
  var Math_atan=global.Math.atan;
  var Math_atan2=global.Math.atan2;
  var Math_exp=global.Math.exp;
  var Math_log=global.Math.log;
  var Math_ceil=global.Math.ceil;
  var Math_imul=global.Math.imul;
  var Math_min=global.Math.min;
  var Math_clz32=global.Math.clz32;
  var abort=env.abort;
  var assert=env.assert;
  var nullFunc_iiii=env.nullFunc_iiii;
  var nullFunc_vii=env.nullFunc_vii;
  var nullFunc_ii=env.nullFunc_ii;
  var nullFunc_viii=env.nullFunc_viii;
  var nullFunc_v=env.nullFunc_v;
  var nullFunc_viiiiii=env.nullFunc_viiiiii;
  var nullFunc_iiiiii=env.nullFunc_iiiiii;
  var nullFunc_viiii=env.nullFunc_viiii;
  var invoke_iiii=env.invoke_iiii;
  var invoke_vii=env.invoke_vii;
  var invoke_ii=env.invoke_ii;
  var invoke_viii=env.invoke_viii;
  var invoke_v=env.invoke_v;
  var invoke_viiiiii=env.invoke_viiiiii;
  var invoke_iiiiii=env.invoke_iiiiii;
  var invoke_viiii=env.invoke_viiii;
  var _glUseProgram=env._glUseProgram;
  var _fread=env._fread;
  var _SDL_RWFromFile=env._SDL_RWFromFile;
  var ___assert_fail=env.___assert_fail;
  var _glDeleteProgram=env._glDeleteProgram;
  var _glBindBuffer=env._glBindBuffer;
  var _glGetShaderInfoLog=env._glGetShaderInfoLog;
  var _emscripten_set_main_loop_timing=env._emscripten_set_main_loop_timing;
  var _sbrk=env._sbrk;
  var _glBlendFunc=env._glBlendFunc;
  var _glGetAttribLocation=env._glGetAttribLocation;
  var _Mix_PlayChannel=env._Mix_PlayChannel;
  var _TTF_RenderText_Solid=env._TTF_RenderText_Solid;
  var _sysconf=env._sysconf;
  var _close=env._close;
  var _Mix_PlayMusic=env._Mix_PlayMusic;
  var _cos=env._cos;
  var _Mix_FreeChunk=env._Mix_FreeChunk;
  var _write=env._write;
  var _fsync=env._fsync;
  var _glGenBuffers=env._glGenBuffers;
  var _glShaderSource=env._glShaderSource;
  var _Mix_HaltMusic=env._Mix_HaltMusic;
  var _TTF_FontHeight=env._TTF_FontHeight;
  var _glGenerateMipmap=env._glGenerateMipmap;
  var _glVertexAttribPointer=env._glVertexAttribPointer;
  var _send=env._send;
  var _atan2=env._atan2;
  var _glGetProgramInfoLog=env._glGetProgramInfoLog;
  var _SDL_GetTicks=env._SDL_GetTicks;
  var _glDepthMask=env._glDepthMask;
  var _SDL_LockSurface=env._SDL_LockSurface;
  var _sin=env._sin;
  var ___setErrNo=env.___setErrNo;
  var _abs=env._abs;
  var _glEnable=env._glEnable;
  var _printf=env._printf;
  var _glGenTextures=env._glGenTextures;
  var _glGetString=env._glGetString;
  var _glewInit=env._glewInit;
  var _glAttachShader=env._glAttachShader;
  var _glCreateProgram=env._glCreateProgram;
  var _mkport=env._mkport;
  var _read=env._read;
  var _SDL_SetVideoMode=env._SDL_SetVideoMode;
  var _fwrite=env._fwrite;
  var _time=env._time;
  var _fprintf=env._fprintf;
  var _SDL_UpperBlitScaled=env._SDL_UpperBlitScaled;
  var _putenv=env._putenv;
  var _llvm_pow_f64=env._llvm_pow_f64;
  var _IMG_Load=env._IMG_Load;
  var _lseek=env._lseek;
  var ___buildEnvironment=env.___buildEnvironment;
  var _pwrite=env._pwrite;
  var _glBindTexture=env._glBindTexture;
  var _open=env._open;
  var _glClearColor=env._glClearColor;
  var _SDL_Init=env._SDL_Init;
  var _glUniform1i=env._glUniform1i;
  var _glDrawArrays=env._glDrawArrays;
  var _glCreateShader=env._glCreateShader;
  var _fseek=env._fseek;
  var _getenv=env._getenv;
  var _fclose=env._fclose;
  var _SDL_UpperBlit=env._SDL_UpperBlit;
  var _SDL_PauseAudio=env._SDL_PauseAudio;
  var _glActiveTexture=env._glActiveTexture;
  var _recv=env._recv;
  var _glCompileShader=env._glCompileShader;
  var _glEnableVertexAttribArray=env._glEnableVertexAttribArray;
  var _abort=env._abort;
  var _glBufferData=env._glBufferData;
  var _glTexImage2D=env._glTexImage2D;
  var _fopen=env._fopen;
  var _glDeleteShader=env._glDeleteShader;
  var _glGetProgramiv=env._glGetProgramiv;
  var _SDL_CloseAudio=env._SDL_CloseAudio;
  var _fflush=env._fflush;
  var _SDL_FreeRW=env._SDL_FreeRW;
  var __reallyNegative=env.__reallyNegative;
  var _SDL_PollEvent=env._SDL_PollEvent;
  var _glGetUniformLocation=env._glGetUniformLocation;
  var _glClear=env._glClear;
  var _fileno=env._fileno;
  var _Mix_LoadWAV_RW=env._Mix_LoadWAV_RW;
  var _SDL_WM_SetCaption=env._SDL_WM_SetCaption;
  var _IMG_Load_RW=env._IMG_Load_RW;
  var _glGetShaderiv=env._glGetShaderiv;
  var _pread=env._pread;
  var _TTF_SizeText=env._TTF_SizeText;
  var _glLinkProgram=env._glLinkProgram;
  var _feof=env._feof;
  var _emscripten_memcpy_big=env._emscripten_memcpy_big;
  var _emscripten_set_main_loop=env._emscripten_set_main_loop;
  var ___errno_location=env.___errno_location;
  var _SDL_GL_SwapBuffers=env._SDL_GL_SwapBuffers;
  var __formatString=env.__formatString;
  var _sqrt=env._sqrt;
  var _SDL_RWFromConstMem=env._SDL_RWFromConstMem;
  var tempFloat = 0.0;

// EMSCRIPTEN_START_FUNCS
function stackAlloc(size) {
  size = size|0;
  var ret = 0;
  ret = STACKTOP;
  STACKTOP = (STACKTOP + size)|0;
  STACKTOP = (STACKTOP + 15)&-16;
if ((STACKTOP|0) >= (STACK_MAX|0)) abort();

  return ret|0;
}
function stackSave() {
  return STACKTOP|0;
}
function stackRestore(top) {
  top = top|0;
  STACKTOP = top;
}

function setThrew(threw, value) {
  threw = threw|0;
  value = value|0;
  if ((__THREW__|0) == 0) {
    __THREW__ = threw;
    threwValue = value;
  }
}
function copyTempFloat(ptr) {
  ptr = ptr|0;
  HEAP8[tempDoublePtr>>0] = HEAP8[ptr>>0];
  HEAP8[tempDoublePtr+1>>0] = HEAP8[ptr+1>>0];
  HEAP8[tempDoublePtr+2>>0] = HEAP8[ptr+2>>0];
  HEAP8[tempDoublePtr+3>>0] = HEAP8[ptr+3>>0];
}
function copyTempDouble(ptr) {
  ptr = ptr|0;
  HEAP8[tempDoublePtr>>0] = HEAP8[ptr>>0];
  HEAP8[tempDoublePtr+1>>0] = HEAP8[ptr+1>>0];
  HEAP8[tempDoublePtr+2>>0] = HEAP8[ptr+2>>0];
  HEAP8[tempDoublePtr+3>>0] = HEAP8[ptr+3>>0];
  HEAP8[tempDoublePtr+4>>0] = HEAP8[ptr+4>>0];
  HEAP8[tempDoublePtr+5>>0] = HEAP8[ptr+5>>0];
  HEAP8[tempDoublePtr+6>>0] = HEAP8[ptr+6>>0];
  HEAP8[tempDoublePtr+7>>0] = HEAP8[ptr+7>>0];
}
function setTempRet0(value) {
  value = value|0;
  tempRet0 = value;
}
function getTempRet0() {
  return tempRet0|0;
}

function _sdl_update() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $event = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $event = sp;
 dest=$event+0|0; stop=dest+48|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0)); //@line 17 "src/sprites/sdl_sprites.c"
 while(1) {
  $0 = (_SDL_PollEvent(($event|0))|0); //@line 18 "src/sprites/sdl_sprites.c"
  $1 = ($0|0)!=(0); //@line 18 "src/sprites/sdl_sprites.c"
  if (!($1)) {
   break;
  }
  $2 = HEAP32[$event>>2]|0; //@line 19 "src/sprites/sdl_sprites.c"
  $3 = ($2|0)==(256); //@line 19 "src/sprites/sdl_sprites.c"
  if ($3) {
   HEAP8[8>>0] = 0; //@line 19 "src/sprites/sdl_sprites.c"
  }
  $4 = HEAP32[$event>>2]|0; //@line 20 "src/sprites/sdl_sprites.c"
  $5 = ($4|0)==(1024); //@line 20 "src/sprites/sdl_sprites.c"
  if ($5) {
   $6 = (($event) + 20|0); //@line 21 "src/sprites/sdl_sprites.c"
   $7 = HEAP32[$6>>2]|0; //@line 21 "src/sprites/sdl_sprites.c"
   $8 = (($event) + 24|0); //@line 21 "src/sprites/sdl_sprites.c"
   $9 = HEAP32[$8>>2]|0; //@line 21 "src/sprites/sdl_sprites.c"
   _updateMouse($7,$9); //@line 21 "src/sprites/sdl_sprites.c"
  }
 }
 _update(); //@line 24 "src/sprites/sdl_sprites.c"
 _render(); //@line 25 "src/sprites/sdl_sprites.c"
 STACKTOP = sp;return; //@line 26 "src/sprites/sdl_sprites.c"
}
function _updateMouse($x,$y) {
 $x = $x|0;
 $y = $y|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0.0, $4 = 0, $5 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $x;
 $1 = $y;
 $2 = $0; //@line 102 "src/sprites/sprite.c"
 $3 = (+_s2p($2)); //@line 102 "src/sprites/sprite.c"
 HEAPF32[6944>>2] = $3; //@line 102 "src/sprites/sprite.c"
 $4 = $1; //@line 103 "src/sprites/sprite.c"
 $5 = (+_s2p($4)); //@line 103 "src/sprites/sprite.c"
 HEAPF32[6952>>2] = $5; //@line 103 "src/sprites/sprite.c"
 STACKTOP = sp;return; //@line 104 "src/sprites/sprite.c"
}
function _main() {
 var $0 = 0, $1 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vararg_buffer = sp;
 $0 = 0;
 (_SDL_Init(65535)|0); //@line 34 "src/sprites/sdl_sprites.c"
 _SDL_WM_SetCaption((16|0),(0|0)); //@line 35 "src/sprites/sdl_sprites.c"
 (_SDL_SetVideoMode(800,800,32,67108864)|0); //@line 36 "src/sprites/sdl_sprites.c"
 (_glewInit()|0); //@line 37 "src/sprites/sdl_sprites.c"
 $1 = (_glGetString(7938)|0); //@line 38 "src/sprites/sdl_sprites.c"
 HEAP32[$vararg_buffer>>2] = $1; //@line 38 "src/sprites/sdl_sprites.c"
 (_printf((32|0),($vararg_buffer|0))|0); //@line 38 "src/sprites/sdl_sprites.c"
 _init(); //@line 39 "src/sprites/sdl_sprites.c"
 _emscripten_set_main_loop((4|0),0,0); //@line 41 "src/sprites/sdl_sprites.c"
 STACKTOP = sp;return 0; //@line 46 "src/sprites/sdl_sprites.c"
}
function _setupProgram($vertexSource,$vertexSourceSize,$fragmentSource,$fragmentSourceSize) {
 $vertexSource = $vertexSource|0;
 $vertexSourceSize = $vertexSourceSize|0;
 $fragmentSource = $fragmentSource|0;
 $fragmentSourceSize = $fragmentSourceSize|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $fragmentShader = 0, $fs = 0, $length = 0, $program = 0;
 var $shader_ok = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer3 = 0, $vertexShader = 0, $vs = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vararg_buffer3 = sp + 16|0;
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 $vs = sp + 44|0;
 $fs = sp + 40|0;
 $shader_ok = sp + 28|0;
 $0 = $vertexSource;
 $1 = $vertexSourceSize;
 $2 = $fragmentSource;
 $3 = $fragmentSourceSize;
 $4 = $0; //@line 46 "src/sprites/../puun/gf/gl_help.c"
 HEAP32[$vs>>2] = $4; //@line 46 "src/sprites/../puun/gf/gl_help.c"
 $5 = $2; //@line 47 "src/sprites/../puun/gf/gl_help.c"
 HEAP32[$fs>>2] = $5; //@line 47 "src/sprites/../puun/gf/gl_help.c"
 $6 = (_glCreateShader(35633)|0); //@line 48 "src/sprites/../puun/gf/gl_help.c"
 $vertexShader = $6; //@line 48 "src/sprites/../puun/gf/gl_help.c"
 $7 = (_glCreateShader(35632)|0); //@line 49 "src/sprites/../puun/gf/gl_help.c"
 $fragmentShader = $7; //@line 49 "src/sprites/../puun/gf/gl_help.c"
 $8 = $vertexShader; //@line 52 "src/sprites/../puun/gf/gl_help.c"
 _glShaderSource(($8|0),1,($vs|0),(0|0)); //@line 52 "src/sprites/../puun/gf/gl_help.c"
 $9 = $vertexShader; //@line 53 "src/sprites/../puun/gf/gl_help.c"
 _glCompileShader(($9|0)); //@line 53 "src/sprites/../puun/gf/gl_help.c"
 $10 = $vertexShader; //@line 54 "src/sprites/../puun/gf/gl_help.c"
 _glGetShaderiv(($10|0),35713,($shader_ok|0)); //@line 54 "src/sprites/../puun/gf/gl_help.c"
 $11 = HEAP32[$shader_ok>>2]|0; //@line 55 "src/sprites/../puun/gf/gl_help.c"
 $12 = ($11|0)==(0); //@line 55 "src/sprites/../puun/gf/gl_help.c"
 if ($12) {
  $length = 1000; //@line 56 "src/sprites/../puun/gf/gl_help.c"
  (_printf((56|0),($vararg_buffer|0))|0); //@line 57 "src/sprites/../puun/gf/gl_help.c"
  $13 = $vertexShader; //@line 59 "src/sprites/../puun/gf/gl_help.c"
  _show_info_log($13,5,6); //@line 59 "src/sprites/../puun/gf/gl_help.c"
  $14 = $vertexShader; //@line 60 "src/sprites/../puun/gf/gl_help.c"
  _glDeleteShader(($14|0)); //@line 60 "src/sprites/../puun/gf/gl_help.c"
 }
 $15 = $fragmentShader; //@line 63 "src/sprites/../puun/gf/gl_help.c"
 _glShaderSource(($15|0),1,($fs|0),(0|0)); //@line 63 "src/sprites/../puun/gf/gl_help.c"
 $16 = $fragmentShader; //@line 64 "src/sprites/../puun/gf/gl_help.c"
 _glCompileShader(($16|0)); //@line 64 "src/sprites/../puun/gf/gl_help.c"
 $17 = $fragmentShader; //@line 65 "src/sprites/../puun/gf/gl_help.c"
 _glGetShaderiv(($17|0),35713,($shader_ok|0)); //@line 65 "src/sprites/../puun/gf/gl_help.c"
 $18 = HEAP32[$shader_ok>>2]|0; //@line 67 "src/sprites/../puun/gf/gl_help.c"
 $19 = ($18|0)!=(0); //@line 67 "src/sprites/../puun/gf/gl_help.c"
 if (!($19)) {
  $20 = HEAP32[_stderr>>2]|0; //@line 68 "src/sprites/../puun/gf/gl_help.c"
  (_fprintf(($20|0),(96|0),($vararg_buffer1|0))|0); //@line 68 "src/sprites/../puun/gf/gl_help.c"
  $21 = $fragmentShader; //@line 69 "src/sprites/../puun/gf/gl_help.c"
  _show_info_log($21,5,7); //@line 69 "src/sprites/../puun/gf/gl_help.c"
  $22 = $fragmentShader; //@line 70 "src/sprites/../puun/gf/gl_help.c"
  _glDeleteShader(($22|0)); //@line 70 "src/sprites/../puun/gf/gl_help.c"
 }
 $23 = (_glCreateProgram()|0); //@line 73 "src/sprites/../puun/gf/gl_help.c"
 $program = $23; //@line 73 "src/sprites/../puun/gf/gl_help.c"
 $24 = $program; //@line 74 "src/sprites/../puun/gf/gl_help.c"
 $25 = $vertexShader; //@line 74 "src/sprites/../puun/gf/gl_help.c"
 _glAttachShader(($24|0),($25|0)); //@line 74 "src/sprites/../puun/gf/gl_help.c"
 $26 = $program; //@line 75 "src/sprites/../puun/gf/gl_help.c"
 $27 = $fragmentShader; //@line 75 "src/sprites/../puun/gf/gl_help.c"
 _glAttachShader(($26|0),($27|0)); //@line 75 "src/sprites/../puun/gf/gl_help.c"
 $28 = $program; //@line 76 "src/sprites/../puun/gf/gl_help.c"
 _glLinkProgram(($28|0)); //@line 76 "src/sprites/../puun/gf/gl_help.c"
 $29 = $program; //@line 78 "src/sprites/../puun/gf/gl_help.c"
 _glGetProgramiv(($29|0),35714,($shader_ok|0)); //@line 78 "src/sprites/../puun/gf/gl_help.c"
 $30 = HEAP32[$shader_ok>>2]|0; //@line 79 "src/sprites/../puun/gf/gl_help.c"
 $31 = ($30|0)!=(0); //@line 79 "src/sprites/../puun/gf/gl_help.c"
 if ($31) {
  $35 = $program; //@line 84 "src/sprites/../puun/gf/gl_help.c"
  STACKTOP = sp;return ($35|0); //@line 84 "src/sprites/../puun/gf/gl_help.c"
 }
 $32 = HEAP32[_stderr>>2]|0; //@line 80 "src/sprites/../puun/gf/gl_help.c"
 (_fprintf(($32|0),(136|0),($vararg_buffer3|0))|0); //@line 80 "src/sprites/../puun/gf/gl_help.c"
 $33 = $vertexShader; //@line 81 "src/sprites/../puun/gf/gl_help.c"
 _show_info_log($33,5,6); //@line 81 "src/sprites/../puun/gf/gl_help.c"
 $34 = $program; //@line 82 "src/sprites/../puun/gf/gl_help.c"
 _glDeleteProgram(($34|0)); //@line 82 "src/sprites/../puun/gf/gl_help.c"
 $35 = $program; //@line 84 "src/sprites/../puun/gf/gl_help.c"
 STACKTOP = sp;return ($35|0); //@line 84 "src/sprites/../puun/gf/gl_help.c"
}
function _setupTexture_Any($data,$x,$y,$internalFormat,$format) {
 $data = $data|0;
 $x = $x|0;
 $y = $y|0;
 $internalFormat = $internalFormat|0;
 $format = $format|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $id = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $id = sp;
 $0 = $data;
 $1 = $x;
 $2 = $y;
 $3 = $internalFormat;
 $4 = $format;
 _glGenTextures(1,($id|0)); //@line 90 "src/sprites/../puun/gf/gl_help.c"
 $5 = HEAP32[$id>>2]|0; //@line 92 "src/sprites/../puun/gf/gl_help.c"
 _glBindTexture(3553,($5|0)); //@line 92 "src/sprites/../puun/gf/gl_help.c"
 $6 = $3; //@line 93 "src/sprites/../puun/gf/gl_help.c"
 $7 = $1; //@line 93 "src/sprites/../puun/gf/gl_help.c"
 $8 = $2; //@line 93 "src/sprites/../puun/gf/gl_help.c"
 $9 = $4; //@line 93 "src/sprites/../puun/gf/gl_help.c"
 $10 = $0; //@line 93 "src/sprites/../puun/gf/gl_help.c"
 _glTexImage2D(3553,0,($6|0),($7|0),($8|0),0,($9|0),5121,($10|0)); //@line 93 "src/sprites/../puun/gf/gl_help.c"
 _glGenerateMipmap(3553); //@line 98 "src/sprites/../puun/gf/gl_help.c"
 $11 = HEAP32[$id>>2]|0; //@line 99 "src/sprites/../puun/gf/gl_help.c"
 STACKTOP = sp;return ($11|0); //@line 99 "src/sprites/../puun/gf/gl_help.c"
}
function _setupTexture($data,$x,$y) {
 $data = $data|0;
 $x = $x|0;
 $y = $y|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $data;
 $1 = $x;
 $2 = $y;
 $3 = $0; //@line 103 "src/sprites/../puun/gf/gl_help.c"
 $4 = $1; //@line 103 "src/sprites/../puun/gf/gl_help.c"
 $5 = $2; //@line 103 "src/sprites/../puun/gf/gl_help.c"
 $6 = (_setupTexture_Any($3,$4,$5,6408,6408)|0); //@line 103 "src/sprites/../puun/gf/gl_help.c"
 STACKTOP = sp;return ($6|0); //@line 103 "src/sprites/../puun/gf/gl_help.c"
}
function _stbi_load($filename,$x,$y,$comp,$req_comp) {
 $filename = $filename|0;
 $x = $x|0;
 $y = $y|0;
 $comp = $comp|0;
 $req_comp = $req_comp|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, $f = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $filename;
 $2 = $x;
 $3 = $y;
 $4 = $comp;
 $5 = $req_comp;
 $6 = $1; //@line 1030 "src/sprites/../puun/gf/../../other/stb_image.h"
 $7 = (_stbi__fopen($6,184)|0); //@line 1030 "src/sprites/../puun/gf/../../other/stb_image.h"
 $f = $7; //@line 1030 "src/sprites/../puun/gf/../../other/stb_image.h"
 $8 = $f; //@line 1032 "src/sprites/../puun/gf/../../other/stb_image.h"
 $9 = ($8|0)!=(0|0); //@line 1032 "src/sprites/../puun/gf/../../other/stb_image.h"
 if ($9) {
  $13 = $f; //@line 1033 "src/sprites/../puun/gf/../../other/stb_image.h"
  $14 = $2; //@line 1033 "src/sprites/../puun/gf/../../other/stb_image.h"
  $15 = $3; //@line 1033 "src/sprites/../puun/gf/../../other/stb_image.h"
  $16 = $4; //@line 1033 "src/sprites/../puun/gf/../../other/stb_image.h"
  $17 = $5; //@line 1033 "src/sprites/../puun/gf/../../other/stb_image.h"
  $18 = (_stbi_load_from_file($13,$14,$15,$16,$17)|0); //@line 1033 "src/sprites/../puun/gf/../../other/stb_image.h"
  $result = $18; //@line 1033 "src/sprites/../puun/gf/../../other/stb_image.h"
  $19 = $f; //@line 1034 "src/sprites/../puun/gf/../../other/stb_image.h"
  (_fclose(($19|0))|0); //@line 1034 "src/sprites/../puun/gf/../../other/stb_image.h"
  $20 = $result; //@line 1035 "src/sprites/../puun/gf/../../other/stb_image.h"
  $0 = $20; //@line 1035 "src/sprites/../puun/gf/../../other/stb_image.h"
  $21 = $0; //@line 1036 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($21|0); //@line 1036 "src/sprites/../puun/gf/../../other/stb_image.h"
 } else {
  $10 = (_stbi__err(192)|0); //@line 1032 "src/sprites/../puun/gf/../../other/stb_image.h"
  $11 = ($10|0)!=(0); //@line 1032 "src/sprites/../puun/gf/../../other/stb_image.h"
  $12 = $11 ? 0 : 0; //@line 1032 "src/sprites/../puun/gf/../../other/stb_image.h"
  $0 = $12; //@line 1032 "src/sprites/../puun/gf/../../other/stb_image.h"
  $21 = $0; //@line 1036 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($21|0); //@line 1036 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 return (0)|0;
}
function _stbi_load_from_file($f,$x,$y,$comp,$req_comp) {
 $f = $f|0;
 $x = $x|0;
 $y = $y|0;
 $comp = $comp|0;
 $req_comp = $req_comp|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, $result = 0, $s = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 208|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $s = sp;
 $0 = $f;
 $1 = $x;
 $2 = $y;
 $3 = $comp;
 $4 = $req_comp;
 $5 = $0; //@line 1042 "src/sprites/../puun/gf/../../other/stb_image.h"
 _stbi__start_file($s,$5); //@line 1042 "src/sprites/../puun/gf/../../other/stb_image.h"
 $6 = $1; //@line 1043 "src/sprites/../puun/gf/../../other/stb_image.h"
 $7 = $2; //@line 1043 "src/sprites/../puun/gf/../../other/stb_image.h"
 $8 = $3; //@line 1043 "src/sprites/../puun/gf/../../other/stb_image.h"
 $9 = $4; //@line 1043 "src/sprites/../puun/gf/../../other/stb_image.h"
 $10 = (_stbi__load_flip($s,$6,$7,$8,$9)|0); //@line 1043 "src/sprites/../puun/gf/../../other/stb_image.h"
 $result = $10; //@line 1043 "src/sprites/../puun/gf/../../other/stb_image.h"
 $11 = $result; //@line 1044 "src/sprites/../puun/gf/../../other/stb_image.h"
 $12 = ($11|0)!=(0|0); //@line 1044 "src/sprites/../puun/gf/../../other/stb_image.h"
 if (!($12)) {
  $22 = $result; //@line 1048 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($22|0); //@line 1048 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $13 = $0; //@line 1046 "src/sprites/../puun/gf/../../other/stb_image.h"
 $14 = (($s) + 172|0); //@line 1046 "src/sprites/../puun/gf/../../other/stb_image.h"
 $15 = HEAP32[$14>>2]|0; //@line 1046 "src/sprites/../puun/gf/../../other/stb_image.h"
 $16 = (($s) + 168|0); //@line 1046 "src/sprites/../puun/gf/../../other/stb_image.h"
 $17 = HEAP32[$16>>2]|0; //@line 1046 "src/sprites/../puun/gf/../../other/stb_image.h"
 $18 = $15; //@line 1046 "src/sprites/../puun/gf/../../other/stb_image.h"
 $19 = $17; //@line 1046 "src/sprites/../puun/gf/../../other/stb_image.h"
 $20 = (($18) - ($19))|0; //@line 1046 "src/sprites/../puun/gf/../../other/stb_image.h"
 $21 = (0 - ($20))|0; //@line 1046 "src/sprites/../puun/gf/../../other/stb_image.h"
 (_fseek(($13|0),($21|0),1)|0); //@line 1046 "src/sprites/../puun/gf/../../other/stb_image.h"
 $22 = $result; //@line 1048 "src/sprites/../puun/gf/../../other/stb_image.h"
 STACKTOP = sp;return ($22|0); //@line 1048 "src/sprites/../puun/gf/../../other/stb_image.h"
}
function _stbi_zlib_decode_malloc_guesssize_headerflag($buffer,$len,$initial_size,$outlen,$parse_header) {
 $buffer = $buffer|0;
 $len = $len|0;
 $initial_size = $initial_size|0;
 $outlen = $outlen|0;
 $parse_header = $parse_header|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $a = 0, $p = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 4112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $a = sp + 8|0;
 $1 = $buffer;
 $2 = $len;
 $3 = $initial_size;
 $4 = $outlen;
 $5 = $parse_header;
 $6 = $3; //@line 3830 "src/sprites/../puun/gf/../../other/stb_image.h"
 $7 = (_stbi__malloc($6)|0); //@line 3830 "src/sprites/../puun/gf/../../other/stb_image.h"
 $p = $7; //@line 3830 "src/sprites/../puun/gf/../../other/stb_image.h"
 $8 = $p; //@line 3831 "src/sprites/../puun/gf/../../other/stb_image.h"
 $9 = ($8|0)==(0|0); //@line 3831 "src/sprites/../puun/gf/../../other/stb_image.h"
 if ($9) {
  $0 = 0; //@line 3831 "src/sprites/../puun/gf/../../other/stb_image.h"
  $34 = $0; //@line 3841 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($34|0); //@line 3841 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $10 = $1; //@line 3832 "src/sprites/../puun/gf/../../other/stb_image.h"
 HEAP32[$a>>2] = $10; //@line 3832 "src/sprites/../puun/gf/../../other/stb_image.h"
 $11 = $1; //@line 3833 "src/sprites/../puun/gf/../../other/stb_image.h"
 $12 = $2; //@line 3833 "src/sprites/../puun/gf/../../other/stb_image.h"
 $13 = (($11) + ($12)|0); //@line 3833 "src/sprites/../puun/gf/../../other/stb_image.h"
 $14 = (($a) + 4|0); //@line 3833 "src/sprites/../puun/gf/../../other/stb_image.h"
 HEAP32[$14>>2] = $13; //@line 3833 "src/sprites/../puun/gf/../../other/stb_image.h"
 $15 = $p; //@line 3834 "src/sprites/../puun/gf/../../other/stb_image.h"
 $16 = $3; //@line 3834 "src/sprites/../puun/gf/../../other/stb_image.h"
 $17 = $5; //@line 3834 "src/sprites/../puun/gf/../../other/stb_image.h"
 $18 = (_stbi__do_zlib($a,$15,$16,1,$17)|0); //@line 3834 "src/sprites/../puun/gf/../../other/stb_image.h"
 $19 = ($18|0)!=(0); //@line 3834 "src/sprites/../puun/gf/../../other/stb_image.h"
 if (!($19)) {
  $32 = (($a) + 20|0); //@line 3838 "src/sprites/../puun/gf/../../other/stb_image.h"
  $33 = HEAP32[$32>>2]|0; //@line 3838 "src/sprites/../puun/gf/../../other/stb_image.h"
  _free($33); //@line 3838 "src/sprites/../puun/gf/../../other/stb_image.h"
  $0 = 0; //@line 3839 "src/sprites/../puun/gf/../../other/stb_image.h"
  $34 = $0; //@line 3841 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($34|0); //@line 3841 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $20 = $4; //@line 3835 "src/sprites/../puun/gf/../../other/stb_image.h"
 $21 = ($20|0)!=(0|0); //@line 3835 "src/sprites/../puun/gf/../../other/stb_image.h"
 if ($21) {
  $22 = (($a) + 16|0); //@line 3835 "src/sprites/../puun/gf/../../other/stb_image.h"
  $23 = HEAP32[$22>>2]|0; //@line 3835 "src/sprites/../puun/gf/../../other/stb_image.h"
  $24 = (($a) + 20|0); //@line 3835 "src/sprites/../puun/gf/../../other/stb_image.h"
  $25 = HEAP32[$24>>2]|0; //@line 3835 "src/sprites/../puun/gf/../../other/stb_image.h"
  $26 = $23; //@line 3835 "src/sprites/../puun/gf/../../other/stb_image.h"
  $27 = $25; //@line 3835 "src/sprites/../puun/gf/../../other/stb_image.h"
  $28 = (($26) - ($27))|0; //@line 3835 "src/sprites/../puun/gf/../../other/stb_image.h"
  $29 = $4; //@line 3835 "src/sprites/../puun/gf/../../other/stb_image.h"
  HEAP32[$29>>2] = $28; //@line 3835 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $30 = (($a) + 20|0); //@line 3836 "src/sprites/../puun/gf/../../other/stb_image.h"
 $31 = HEAP32[$30>>2]|0; //@line 3836 "src/sprites/../puun/gf/../../other/stb_image.h"
 $0 = $31; //@line 3836 "src/sprites/../puun/gf/../../other/stb_image.h"
 $34 = $0; //@line 3841 "src/sprites/../puun/gf/../../other/stb_image.h"
 STACKTOP = sp;return ($34|0); //@line 3841 "src/sprites/../puun/gf/../../other/stb_image.h"
}
function _square_traslate($square,$x,$y) {
 $square = $square|0;
 $x = +$x;
 $y = +$y;
 var $0 = 0, $1 = 0.0, $2 = 0.0, $3 = 0.0, $4 = 0, $5 = 0.0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $square;
 $1 = $x;
 $2 = $y;
 $3 = $1; //@line 13 "src/sprites/../puun/gf/square2.c"
 $4 = $0; //@line 13 "src/sprites/../puun/gf/square2.c"
 HEAPF32[$4>>2] = $3; //@line 13 "src/sprites/../puun/gf/square2.c"
 $5 = $2; //@line 14 "src/sprites/../puun/gf/square2.c"
 $6 = $0; //@line 14 "src/sprites/../puun/gf/square2.c"
 $7 = (($6) + 4|0); //@line 14 "src/sprites/../puun/gf/square2.c"
 HEAPF32[$7>>2] = $5; //@line 14 "src/sprites/../puun/gf/square2.c"
 STACKTOP = sp;return; //@line 15 "src/sprites/../puun/gf/square2.c"
}
function _square_rotate($square,$angle) {
 $square = $square|0;
 $angle = +$angle;
 var $0 = 0, $1 = 0.0, $2 = 0.0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $square;
 $1 = $angle;
 $2 = $1; //@line 17 "src/sprites/../puun/gf/square2.c"
 $3 = $0; //@line 17 "src/sprites/../puun/gf/square2.c"
 $4 = (($3) + 12|0); //@line 17 "src/sprites/../puun/gf/square2.c"
 HEAPF32[$4>>2] = $2; //@line 17 "src/sprites/../puun/gf/square2.c"
 STACKTOP = sp;return; //@line 18 "src/sprites/../puun/gf/square2.c"
}
function _create_square_list($agg$result,$program,$squares) {
 $agg$result = $agg$result|0;
 $program = $program|0;
 $squares = $squares|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $sl = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $sl = sp;
 $0 = $program;
 $1 = $squares;
 ;HEAP32[$sl+0>>2]=0|0;HEAP32[$sl+4>>2]=0|0;HEAP32[$sl+8>>2]=0|0;HEAP32[$sl+12>>2]=0|0; //@line 22 "src/sprites/../puun/gf/square2.c"
 $2 = $1; //@line 23 "src/sprites/../puun/gf/square2.c"
 HEAP32[$sl>>2] = $2; //@line 23 "src/sprites/../puun/gf/square2.c"
 $3 = (($sl) + 4|0); //@line 24 "src/sprites/../puun/gf/square2.c"
 HEAP32[$3>>2] = 0; //@line 24 "src/sprites/../puun/gf/square2.c"
 $4 = $0; //@line 26 "src/sprites/../puun/gf/square2.c"
 $5 = (($sl) + 8|0); //@line 26 "src/sprites/../puun/gf/square2.c"
 HEAP8[$5>>0] = $4; //@line 26 "src/sprites/../puun/gf/square2.c"
 $6 = (($sl) + 12|0); //@line 27 "src/sprites/../puun/gf/square2.c"
 _glGenBuffers(1,($6|0)); //@line 27 "src/sprites/../puun/gf/square2.c"
 ;HEAP32[$agg$result+0>>2]=HEAP32[$sl+0>>2]|0;HEAP32[$agg$result+4>>2]=HEAP32[$sl+4>>2]|0;HEAP32[$agg$result+8>>2]=HEAP32[$sl+8>>2]|0;HEAP32[$agg$result+12>>2]=HEAP32[$sl+12>>2]|0; //@line 29 "src/sprites/../puun/gf/square2.c"
 STACKTOP = sp;return; //@line 29 "src/sprites/../puun/gf/square2.c"
}
function _squareList_update_pos($sl,$d) {
 $sl = $sl|0;
 $d = $d|0;
 var $0 = 0, $1 = 0, $10 = 0.0, $100 = 0.0, $101 = 0.0, $102 = 0.0, $103 = 0.0, $104 = 0.0, $105 = 0.0, $106 = 0.0, $107 = 0.0, $108 = 0.0, $109 = 0.0, $11 = 0.0, $110 = 0, $111 = 0.0, $112 = 0.0, $113 = 0.0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0.0, $12 = 0.0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0.0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0.0, $139 = 0, $14 = 0.0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0.0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0.0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0.0, $160 = 0.0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0.0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0.0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0.0, $180 = 0, $181 = 0.0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0.0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0.0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0.0, $204 = 0, $205 = 0;
 var $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0.0, $210 = 0.0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0.0, $218 = 0, $219 = 0, $22 = 0.0, $220 = 0, $221 = 0, $222 = 0, $223 = 0;
 var $224 = 0.0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0.0, $240 = 0.0, $241 = 0;
 var $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0.0, $247 = 0, $248 = 0, $249 = 0, $25 = 0.0, $250 = 0, $251 = 0, $252 = 0, $253 = 0.0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0.0;
 var $260 = 0.0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0.0, $268 = 0, $269 = 0, $27 = 0.0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0;
 var $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0.0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0.0, $29 = 0.0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0.0;
 var $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0.0, $300 = 0, $301 = 0, $302 = 0, $303 = 0.0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0.0, $310 = 0.0, $311 = 0, $312 = 0, $313 = 0;
 var $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0.0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0.0, $327 = 0, $328 = 0, $329 = 0, $33 = 0.0, $330 = 0, $331 = 0;
 var $332 = 0.0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0.0, $34 = 0.0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0.0, $347 = 0, $348 = 0, $349 = 0, $35 = 0.0;
 var $350 = 0, $351 = 0, $352 = 0, $353 = 0.0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0.0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0;
 var $369 = 0, $37 = 0.0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0.0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0;
 var $387 = 0, $388 = 0, $389 = 0, $39 = 0.0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0.0, $400 = 0, $401 = 0, $402 = 0, $41 = 0.0;
 var $42 = 0.0, $43 = 0.0, $44 = 0.0, $45 = 0.0, $46 = 0.0, $47 = 0.0, $48 = 0.0, $49 = 0.0, $5 = 0, $50 = 0, $51 = 0.0, $52 = 0.0, $53 = 0.0, $54 = 0.0, $55 = 0.0, $56 = 0.0, $57 = 0.0, $58 = 0.0, $59 = 0.0, $6 = 0;
 var $60 = 0.0, $61 = 0.0, $62 = 0.0, $63 = 0.0, $64 = 0.0, $65 = 0.0, $66 = 0.0, $67 = 0.0, $68 = 0.0, $69 = 0.0, $7 = 0, $70 = 0, $71 = 0.0, $72 = 0.0, $73 = 0.0, $74 = 0.0, $75 = 0.0, $76 = 0.0, $77 = 0.0, $78 = 0.0;
 var $79 = 0.0, $8 = 0, $80 = 0.0, $81 = 0.0, $82 = 0.0, $83 = 0.0, $84 = 0.0, $85 = 0.0, $86 = 0.0, $87 = 0.0, $88 = 0.0, $89 = 0.0, $9 = 0, $90 = 0, $91 = 0.0, $92 = 0.0, $93 = 0.0, $94 = 0.0, $95 = 0.0, $96 = 0.0;
 var $97 = 0.0, $98 = 0.0, $99 = 0.0, $blx = 0.0, $bly = 0.0, $brx = 0.0, $bry = 0.0, $by = 0.0, $co = 0.0, $data = 0, $dataI = 0, $i = 0, $lx = 0.0, $pos = 0, $rx = 0.0, $s = 0, $scale = 0, $si = 0.0, $stride = 0, $tlx = 0.0;
 var $tly = 0.0, $trx = 0.0, $try = 0.0, $ty = 0.0, $uv = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $s = sp + 72|0;
 $0 = $d;
 $1 = $0; //@line 34 "src/sprites/../puun/gf/square2.c"
 $data = $1; //@line 34 "src/sprites/../puun/gf/square2.c"
 $i = 0; //@line 37 "src/sprites/../puun/gf/square2.c"
 $dataI = 0; //@line 37 "src/sprites/../puun/gf/square2.c"
 while(1) {
  $2 = $i; //@line 37 "src/sprites/../puun/gf/square2.c"
  $3 = (($sl) + 4|0); //@line 37 "src/sprites/../puun/gf/square2.c"
  $4 = HEAP32[$3>>2]|0; //@line 37 "src/sprites/../puun/gf/square2.c"
  $5 = ($2|0)<($4|0); //@line 37 "src/sprites/../puun/gf/square2.c"
  if (!($5)) {
   break;
  }
  $6 = $i; //@line 38 "src/sprites/../puun/gf/square2.c"
  $7 = HEAP32[$sl>>2]|0; //@line 38 "src/sprites/../puun/gf/square2.c"
  $8 = (($7) + (($6*40)|0)|0); //@line 38 "src/sprites/../puun/gf/square2.c"
  dest=$s+0|0; src=$8+0|0; stop=dest+40|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0)); //@line 38 "src/sprites/../puun/gf/square2.c"
  $9 = (($s) + 16|0); //@line 39 "src/sprites/../puun/gf/square2.c"
  $10 = +HEAPF32[$9>>2]; //@line 39 "src/sprites/../puun/gf/square2.c"
  $11 = -$10; //@line 39 "src/sprites/../puun/gf/square2.c"
  $12 = $11 / 2.0; //@line 39 "src/sprites/../puun/gf/square2.c"
  $lx = $12; //@line 39 "src/sprites/../puun/gf/square2.c"
  $13 = (($s) + 20|0); //@line 39 "src/sprites/../puun/gf/square2.c"
  $14 = +HEAPF32[$13>>2]; //@line 39 "src/sprites/../puun/gf/square2.c"
  $15 = -$14; //@line 39 "src/sprites/../puun/gf/square2.c"
  $16 = $15 / 2.0; //@line 39 "src/sprites/../puun/gf/square2.c"
  $by = $16; //@line 39 "src/sprites/../puun/gf/square2.c"
  $17 = (($s) + 16|0); //@line 39 "src/sprites/../puun/gf/square2.c"
  $18 = +HEAPF32[$17>>2]; //@line 39 "src/sprites/../puun/gf/square2.c"
  $19 = $18 / 2.0; //@line 39 "src/sprites/../puun/gf/square2.c"
  $rx = $19; //@line 39 "src/sprites/../puun/gf/square2.c"
  $20 = (($s) + 20|0); //@line 39 "src/sprites/../puun/gf/square2.c"
  $21 = +HEAPF32[$20>>2]; //@line 39 "src/sprites/../puun/gf/square2.c"
  $22 = $21 / 2.0; //@line 39 "src/sprites/../puun/gf/square2.c"
  $ty = $22; //@line 39 "src/sprites/../puun/gf/square2.c"
  $23 = (($s) + 12|0); //@line 41 "src/sprites/../puun/gf/square2.c"
  $24 = +HEAPF32[$23>>2]; //@line 41 "src/sprites/../puun/gf/square2.c"
  $25 = $24; //@line 41 "src/sprites/../puun/gf/square2.c"
  $26 = (+Math_cos((+$25))); //@line 41 "src/sprites/../puun/gf/square2.c"
  $27 = $26; //@line 41 "src/sprites/../puun/gf/square2.c"
  $co = $27; //@line 41 "src/sprites/../puun/gf/square2.c"
  $28 = (($s) + 12|0); //@line 42 "src/sprites/../puun/gf/square2.c"
  $29 = +HEAPF32[$28>>2]; //@line 42 "src/sprites/../puun/gf/square2.c"
  $30 = $29; //@line 42 "src/sprites/../puun/gf/square2.c"
  $31 = (+Math_sin((+$30))); //@line 42 "src/sprites/../puun/gf/square2.c"
  $32 = $31; //@line 42 "src/sprites/../puun/gf/square2.c"
  $si = $32; //@line 42 "src/sprites/../puun/gf/square2.c"
  $33 = $co; //@line 43 "src/sprites/../puun/gf/square2.c"
  $34 = $lx; //@line 43 "src/sprites/../puun/gf/square2.c"
  $35 = $33 * $34; //@line 43 "src/sprites/../puun/gf/square2.c"
  $36 = $si; //@line 43 "src/sprites/../puun/gf/square2.c"
  $37 = $by; //@line 43 "src/sprites/../puun/gf/square2.c"
  $38 = $36 * $37; //@line 43 "src/sprites/../puun/gf/square2.c"
  $39 = $35 + $38; //@line 43 "src/sprites/../puun/gf/square2.c"
  $40 = +HEAPF32[$s>>2]; //@line 43 "src/sprites/../puun/gf/square2.c"
  $41 = $39 + $40; //@line 43 "src/sprites/../puun/gf/square2.c"
  $blx = $41; //@line 43 "src/sprites/../puun/gf/square2.c"
  $42 = $si; //@line 44 "src/sprites/../puun/gf/square2.c"
  $43 = -$42; //@line 44 "src/sprites/../puun/gf/square2.c"
  $44 = $lx; //@line 44 "src/sprites/../puun/gf/square2.c"
  $45 = $43 * $44; //@line 44 "src/sprites/../puun/gf/square2.c"
  $46 = $co; //@line 44 "src/sprites/../puun/gf/square2.c"
  $47 = $by; //@line 44 "src/sprites/../puun/gf/square2.c"
  $48 = $46 * $47; //@line 44 "src/sprites/../puun/gf/square2.c"
  $49 = $45 + $48; //@line 44 "src/sprites/../puun/gf/square2.c"
  $50 = (($s) + 4|0); //@line 44 "src/sprites/../puun/gf/square2.c"
  $51 = +HEAPF32[$50>>2]; //@line 44 "src/sprites/../puun/gf/square2.c"
  $52 = $49 + $51; //@line 44 "src/sprites/../puun/gf/square2.c"
  $bly = $52; //@line 44 "src/sprites/../puun/gf/square2.c"
  $53 = $co; //@line 45 "src/sprites/../puun/gf/square2.c"
  $54 = $rx; //@line 45 "src/sprites/../puun/gf/square2.c"
  $55 = $53 * $54; //@line 45 "src/sprites/../puun/gf/square2.c"
  $56 = $si; //@line 45 "src/sprites/../puun/gf/square2.c"
  $57 = $by; //@line 45 "src/sprites/../puun/gf/square2.c"
  $58 = $56 * $57; //@line 45 "src/sprites/../puun/gf/square2.c"
  $59 = $55 + $58; //@line 45 "src/sprites/../puun/gf/square2.c"
  $60 = +HEAPF32[$s>>2]; //@line 45 "src/sprites/../puun/gf/square2.c"
  $61 = $59 + $60; //@line 45 "src/sprites/../puun/gf/square2.c"
  $brx = $61; //@line 45 "src/sprites/../puun/gf/square2.c"
  $62 = $si; //@line 46 "src/sprites/../puun/gf/square2.c"
  $63 = -$62; //@line 46 "src/sprites/../puun/gf/square2.c"
  $64 = $rx; //@line 46 "src/sprites/../puun/gf/square2.c"
  $65 = $63 * $64; //@line 46 "src/sprites/../puun/gf/square2.c"
  $66 = $co; //@line 46 "src/sprites/../puun/gf/square2.c"
  $67 = $by; //@line 46 "src/sprites/../puun/gf/square2.c"
  $68 = $66 * $67; //@line 46 "src/sprites/../puun/gf/square2.c"
  $69 = $65 + $68; //@line 46 "src/sprites/../puun/gf/square2.c"
  $70 = (($s) + 4|0); //@line 46 "src/sprites/../puun/gf/square2.c"
  $71 = +HEAPF32[$70>>2]; //@line 46 "src/sprites/../puun/gf/square2.c"
  $72 = $69 + $71; //@line 46 "src/sprites/../puun/gf/square2.c"
  $bry = $72; //@line 46 "src/sprites/../puun/gf/square2.c"
  $73 = $co; //@line 47 "src/sprites/../puun/gf/square2.c"
  $74 = $lx; //@line 47 "src/sprites/../puun/gf/square2.c"
  $75 = $73 * $74; //@line 47 "src/sprites/../puun/gf/square2.c"
  $76 = $si; //@line 47 "src/sprites/../puun/gf/square2.c"
  $77 = $ty; //@line 47 "src/sprites/../puun/gf/square2.c"
  $78 = $76 * $77; //@line 47 "src/sprites/../puun/gf/square2.c"
  $79 = $75 + $78; //@line 47 "src/sprites/../puun/gf/square2.c"
  $80 = +HEAPF32[$s>>2]; //@line 47 "src/sprites/../puun/gf/square2.c"
  $81 = $79 + $80; //@line 47 "src/sprites/../puun/gf/square2.c"
  $tlx = $81; //@line 47 "src/sprites/../puun/gf/square2.c"
  $82 = $si; //@line 48 "src/sprites/../puun/gf/square2.c"
  $83 = -$82; //@line 48 "src/sprites/../puun/gf/square2.c"
  $84 = $lx; //@line 48 "src/sprites/../puun/gf/square2.c"
  $85 = $83 * $84; //@line 48 "src/sprites/../puun/gf/square2.c"
  $86 = $co; //@line 48 "src/sprites/../puun/gf/square2.c"
  $87 = $ty; //@line 48 "src/sprites/../puun/gf/square2.c"
  $88 = $86 * $87; //@line 48 "src/sprites/../puun/gf/square2.c"
  $89 = $85 + $88; //@line 48 "src/sprites/../puun/gf/square2.c"
  $90 = (($s) + 4|0); //@line 48 "src/sprites/../puun/gf/square2.c"
  $91 = +HEAPF32[$90>>2]; //@line 48 "src/sprites/../puun/gf/square2.c"
  $92 = $89 + $91; //@line 48 "src/sprites/../puun/gf/square2.c"
  $tly = $92; //@line 48 "src/sprites/../puun/gf/square2.c"
  $93 = $co; //@line 49 "src/sprites/../puun/gf/square2.c"
  $94 = $rx; //@line 49 "src/sprites/../puun/gf/square2.c"
  $95 = $93 * $94; //@line 49 "src/sprites/../puun/gf/square2.c"
  $96 = $si; //@line 49 "src/sprites/../puun/gf/square2.c"
  $97 = $ty; //@line 49 "src/sprites/../puun/gf/square2.c"
  $98 = $96 * $97; //@line 49 "src/sprites/../puun/gf/square2.c"
  $99 = $95 + $98; //@line 49 "src/sprites/../puun/gf/square2.c"
  $100 = +HEAPF32[$s>>2]; //@line 49 "src/sprites/../puun/gf/square2.c"
  $101 = $99 + $100; //@line 49 "src/sprites/../puun/gf/square2.c"
  $trx = $101; //@line 49 "src/sprites/../puun/gf/square2.c"
  $102 = $si; //@line 50 "src/sprites/../puun/gf/square2.c"
  $103 = -$102; //@line 50 "src/sprites/../puun/gf/square2.c"
  $104 = $rx; //@line 50 "src/sprites/../puun/gf/square2.c"
  $105 = $103 * $104; //@line 50 "src/sprites/../puun/gf/square2.c"
  $106 = $co; //@line 50 "src/sprites/../puun/gf/square2.c"
  $107 = $ty; //@line 50 "src/sprites/../puun/gf/square2.c"
  $108 = $106 * $107; //@line 50 "src/sprites/../puun/gf/square2.c"
  $109 = $105 + $108; //@line 50 "src/sprites/../puun/gf/square2.c"
  $110 = (($s) + 4|0); //@line 50 "src/sprites/../puun/gf/square2.c"
  $111 = +HEAPF32[$110>>2]; //@line 50 "src/sprites/../puun/gf/square2.c"
  $112 = $109 + $111; //@line 50 "src/sprites/../puun/gf/square2.c"
  $try = $112; //@line 50 "src/sprites/../puun/gf/square2.c"
  $113 = $blx; //@line 53 "src/sprites/../puun/gf/square2.c"
  $114 = $dataI; //@line 53 "src/sprites/../puun/gf/square2.c"
  $115 = $data; //@line 53 "src/sprites/../puun/gf/square2.c"
  $116 = (($115) + ($114<<2)|0); //@line 53 "src/sprites/../puun/gf/square2.c"
  HEAPF32[$116>>2] = $113; //@line 53 "src/sprites/../puun/gf/square2.c"
  $117 = $dataI; //@line 53 "src/sprites/../puun/gf/square2.c"
  $118 = (($117) + 1)|0; //@line 53 "src/sprites/../puun/gf/square2.c"
  $dataI = $118; //@line 53 "src/sprites/../puun/gf/square2.c"
  $119 = $bly; //@line 54 "src/sprites/../puun/gf/square2.c"
  $120 = $dataI; //@line 54 "src/sprites/../puun/gf/square2.c"
  $121 = $data; //@line 54 "src/sprites/../puun/gf/square2.c"
  $122 = (($121) + ($120<<2)|0); //@line 54 "src/sprites/../puun/gf/square2.c"
  HEAPF32[$122>>2] = $119; //@line 54 "src/sprites/../puun/gf/square2.c"
  $123 = $dataI; //@line 54 "src/sprites/../puun/gf/square2.c"
  $124 = (($123) + 1)|0; //@line 54 "src/sprites/../puun/gf/square2.c"
  $dataI = $124; //@line 54 "src/sprites/../puun/gf/square2.c"
  $125 = $dataI; //@line 55 "src/sprites/../puun/gf/square2.c"
  $126 = $data; //@line 55 "src/sprites/../puun/gf/square2.c"
  $127 = (($126) + ($125<<2)|0); //@line 55 "src/sprites/../puun/gf/square2.c"
  HEAPF32[$127>>2] = 0.0; //@line 55 "src/sprites/../puun/gf/square2.c"
  $128 = $dataI; //@line 55 "src/sprites/../puun/gf/square2.c"
  $129 = (($128) + 1)|0; //@line 55 "src/sprites/../puun/gf/square2.c"
  $dataI = $129; //@line 55 "src/sprites/../puun/gf/square2.c"
  $130 = (($s) + 24|0); //@line 58 "src/sprites/../puun/gf/square2.c"
  $131 = +HEAPF32[$130>>2]; //@line 58 "src/sprites/../puun/gf/square2.c"
  $132 = $dataI; //@line 58 "src/sprites/../puun/gf/square2.c"
  $133 = $data; //@line 58 "src/sprites/../puun/gf/square2.c"
  $134 = (($133) + ($132<<2)|0); //@line 58 "src/sprites/../puun/gf/square2.c"
  HEAPF32[$134>>2] = $131; //@line 58 "src/sprites/../puun/gf/square2.c"
  $135 = $dataI; //@line 58 "src/sprites/../puun/gf/square2.c"
  $136 = (($135) + 1)|0; //@line 58 "src/sprites/../puun/gf/square2.c"
  $dataI = $136; //@line 58 "src/sprites/../puun/gf/square2.c"
  $137 = (($s) + 36|0); //@line 59 "src/sprites/../puun/gf/square2.c"
  $138 = +HEAPF32[$137>>2]; //@line 59 "src/sprites/../puun/gf/square2.c"
  $139 = $dataI; //@line 59 "src/sprites/../puun/gf/square2.c"
  $140 = $data; //@line 59 "src/sprites/../puun/gf/square2.c"
  $141 = (($140) + ($139<<2)|0); //@line 59 "src/sprites/../puun/gf/square2.c"
  HEAPF32[$141>>2] = $138; //@line 59 "src/sprites/../puun/gf/square2.c"
  $142 = $dataI; //@line 59 "src/sprites/../puun/gf/square2.c"
  $143 = (($142) + 1)|0; //@line 59 "src/sprites/../puun/gf/square2.c"
  $dataI = $143; //@line 59 "src/sprites/../puun/gf/square2.c"
  $144 = $dataI; //@line 62 "src/sprites/../puun/gf/square2.c"
  $145 = $data; //@line 62 "src/sprites/../puun/gf/square2.c"
  $146 = (($145) + ($144<<2)|0); //@line 62 "src/sprites/../puun/gf/square2.c"
  HEAPF32[$146>>2] = 1.0; //@line 62 "src/sprites/../puun/gf/square2.c"
  $147 = $dataI; //@line 62 "src/sprites/../puun/gf/square2.c"
  $148 = (($147) + 1)|0; //@line 62 "src/sprites/../puun/gf/square2.c"
  $dataI = $148; //@line 62 "src/sprites/../puun/gf/square2.c"
  $149 = $dataI; //@line 63 "src/sprites/../puun/gf/square2.c"
  $150 = $data; //@line 63 "src/sprites/../puun/gf/square2.c"
  $151 = (($150) + ($149<<2)|0); //@line 63 "src/sprites/../puun/gf/square2.c"
  HEAPF32[$151>>2] = 1.0; //@line 63 "src/sprites/../puun/gf/square2.c"
  $152 = $dataI; //@line 63 "src/sprites/../puun/gf/square2.c"
  $153 = (($152) + 1)|0; //@line 63 "src/sprites/../puun/gf/square2.c"
  $dataI = $153; //@line 63 "src/sprites/../puun/gf/square2.c"
  $154 = $brx; //@line 67 "src/sprites/../puun/gf/square2.c"
  $155 = $dataI; //@line 67 "src/sprites/../puun/gf/square2.c"
  $156 = $data; //@line 67 "src/sprites/../puun/gf/square2.c"
  $157 = (($156) + ($155<<2)|0); //@line 67 "src/sprites/../puun/gf/square2.c"
  HEAPF32[$157>>2] = $154; //@line 67 "src/sprites/../puun/gf/square2.c"
  $158 = $dataI; //@line 67 "src/sprites/../puun/gf/square2.c"
  $159 = (($158) + 1)|0; //@line 67 "src/sprites/../puun/gf/square2.c"
  $dataI = $159; //@line 67 "src/sprites/../puun/gf/square2.c"
  $160 = $bry; //@line 68 "src/sprites/../puun/gf/square2.c"
  $161 = $dataI; //@line 68 "src/sprites/../puun/gf/square2.c"
  $162 = $data; //@line 68 "src/sprites/../puun/gf/square2.c"
  $163 = (($162) + ($161<<2)|0); //@line 68 "src/sprites/../puun/gf/square2.c"
  HEAPF32[$163>>2] = $160; //@line 68 "src/sprites/../puun/gf/square2.c"
  $164 = $dataI; //@line 68 "src/sprites/../puun/gf/square2.c"
  $165 = (($164) + 1)|0; //@line 68 "src/sprites/../puun/gf/square2.c"
  $dataI = $165; //@line 68 "src/sprites/../puun/gf/square2.c"
  $166 = (($s) + 8|0); //@line 69 "src/sprites/../puun/gf/square2.c"
  $167 = +HEAPF32[$166>>2]; //@line 69 "src/sprites/../puun/gf/square2.c"
  $168 = $dataI; //@line 69 "src/sprites/../puun/gf/square2.c"
  $169 = $data; //@line 69 "src/sprites/../puun/gf/square2.c"
  $170 = (($169) + ($168<<2)|0); //@line 69 "src/sprites/../puun/gf/square2.c"
  HEAPF32[$170>>2] = $167; //@line 69 "src/sprites/../puun/gf/square2.c"
  $171 = $dataI; //@line 69 "src/sprites/../puun/gf/square2.c"
  $172 = (($171) + 1)|0; //@line 69 "src/sprites/../puun/gf/square2.c"
  $dataI = $172; //@line 69 "src/sprites/../puun/gf/square2.c"
  $173 = (($s) + 32|0); //@line 72 "src/sprites/../puun/gf/square2.c"
  $174 = +HEAPF32[$173>>2]; //@line 72 "src/sprites/../puun/gf/square2.c"
  $175 = $dataI; //@line 72 "src/sprites/../puun/gf/square2.c"
  $176 = $data; //@line 72 "src/sprites/../puun/gf/square2.c"
  $177 = (($176) + ($175<<2)|0); //@line 72 "src/sprites/../puun/gf/square2.c"
  HEAPF32[$177>>2] = $174; //@line 72 "src/sprites/../puun/gf/square2.c"
  $178 = $dataI; //@line 72 "src/sprites/../puun/gf/square2.c"
  $179 = (($178) + 1)|0; //@line 72 "src/sprites/../puun/gf/square2.c"
  $dataI = $179; //@line 72 "src/sprites/../puun/gf/square2.c"
  $180 = (($s) + 36|0); //@line 73 "src/sprites/../puun/gf/square2.c"
  $181 = +HEAPF32[$180>>2]; //@line 73 "src/sprites/../puun/gf/square2.c"
  $182 = $dataI; //@line 73 "src/sprites/../puun/gf/square2.c"
  $183 = $data; //@line 73 "src/sprites/../puun/gf/square2.c"
  $184 = (($183) + ($182<<2)|0); //@line 73 "src/sprites/../puun/gf/square2.c"
  HEAPF32[$184>>2] = $181; //@line 73 "src/sprites/../puun/gf/square2.c"
  $185 = $dataI; //@line 73 "src/sprites/../puun/gf/square2.c"
  $186 = (($185) + 1)|0; //@line 73 "src/sprites/../puun/gf/square2.c"
  $dataI = $186; //@line 73 "src/sprites/../puun/gf/square2.c"
  $187 = $dataI; //@line 76 "src/sprites/../puun/gf/square2.c"
  $188 = $data; //@line 76 "src/sprites/../puun/gf/square2.c"
  $189 = (($188) + ($187<<2)|0); //@line 76 "src/sprites/../puun/gf/square2.c"
  HEAPF32[$189>>2] = 1.0; //@line 76 "src/sprites/../puun/gf/square2.c"
  $190 = $dataI; //@line 76 "src/sprites/../puun/gf/square2.c"
  $191 = (($190) + 1)|0; //@line 76 "src/sprites/../puun/gf/square2.c"
  $dataI = $191; //@line 76 "src/sprites/../puun/gf/square2.c"
  $192 = $dataI; //@line 77 "src/sprites/../puun/gf/square2.c"
  $193 = $data; //@line 77 "src/sprites/../puun/gf/square2.c"
  $194 = (($193) + ($192<<2)|0); //@line 77 "src/sprites/../puun/gf/square2.c"
  HEAPF32[$194>>2] = 1.0; //@line 77 "src/sprites/../puun/gf/square2.c"
  $195 = $dataI; //@line 77 "src/sprites/../puun/gf/square2.c"
  $196 = (($195) + 1)|0; //@line 77 "src/sprites/../puun/gf/square2.c"
  $dataI = $196; //@line 77 "src/sprites/../puun/gf/square2.c"
  $197 = $tlx; //@line 81 "src/sprites/../puun/gf/square2.c"
  $198 = $dataI; //@line 81 "src/sprites/../puun/gf/square2.c"
  $199 = $data; //@line 81 "src/sprites/../puun/gf/square2.c"
  $200 = (($199) + ($198<<2)|0); //@line 81 "src/sprites/../puun/gf/square2.c"
  HEAPF32[$200>>2] = $197; //@line 81 "src/sprites/../puun/gf/square2.c"
  $201 = $dataI; //@line 81 "src/sprites/../puun/gf/square2.c"
  $202 = (($201) + 1)|0; //@line 81 "src/sprites/../puun/gf/square2.c"
  $dataI = $202; //@line 81 "src/sprites/../puun/gf/square2.c"
  $203 = $tly; //@line 82 "src/sprites/../puun/gf/square2.c"
  $204 = $dataI; //@line 82 "src/sprites/../puun/gf/square2.c"
  $205 = $data; //@line 82 "src/sprites/../puun/gf/square2.c"
  $206 = (($205) + ($204<<2)|0); //@line 82 "src/sprites/../puun/gf/square2.c"
  HEAPF32[$206>>2] = $203; //@line 82 "src/sprites/../puun/gf/square2.c"
  $207 = $dataI; //@line 82 "src/sprites/../puun/gf/square2.c"
  $208 = (($207) + 1)|0; //@line 82 "src/sprites/../puun/gf/square2.c"
  $dataI = $208; //@line 82 "src/sprites/../puun/gf/square2.c"
  $209 = (($s) + 8|0); //@line 83 "src/sprites/../puun/gf/square2.c"
  $210 = +HEAPF32[$209>>2]; //@line 83 "src/sprites/../puun/gf/square2.c"
  $211 = $dataI; //@line 83 "src/sprites/../puun/gf/square2.c"
  $212 = $data; //@line 83 "src/sprites/../puun/gf/square2.c"
  $213 = (($212) + ($211<<2)|0); //@line 83 "src/sprites/../puun/gf/square2.c"
  HEAPF32[$213>>2] = $210; //@line 83 "src/sprites/../puun/gf/square2.c"
  $214 = $dataI; //@line 83 "src/sprites/../puun/gf/square2.c"
  $215 = (($214) + 1)|0; //@line 83 "src/sprites/../puun/gf/square2.c"
  $dataI = $215; //@line 83 "src/sprites/../puun/gf/square2.c"
  $216 = (($s) + 24|0); //@line 86 "src/sprites/../puun/gf/square2.c"
  $217 = +HEAPF32[$216>>2]; //@line 86 "src/sprites/../puun/gf/square2.c"
  $218 = $dataI; //@line 86 "src/sprites/../puun/gf/square2.c"
  $219 = $data; //@line 86 "src/sprites/../puun/gf/square2.c"
  $220 = (($219) + ($218<<2)|0); //@line 86 "src/sprites/../puun/gf/square2.c"
  HEAPF32[$220>>2] = $217; //@line 86 "src/sprites/../puun/gf/square2.c"
  $221 = $dataI; //@line 86 "src/sprites/../puun/gf/square2.c"
  $222 = (($221) + 1)|0; //@line 86 "src/sprites/../puun/gf/square2.c"
  $dataI = $222; //@line 86 "src/sprites/../puun/gf/square2.c"
  $223 = (($s) + 28|0); //@line 87 "src/sprites/../puun/gf/square2.c"
  $224 = +HEAPF32[$223>>2]; //@line 87 "src/sprites/../puun/gf/square2.c"
  $225 = $dataI; //@line 87 "src/sprites/../puun/gf/square2.c"
  $226 = $data; //@line 87 "src/sprites/../puun/gf/square2.c"
  $227 = (($226) + ($225<<2)|0); //@line 87 "src/sprites/../puun/gf/square2.c"
  HEAPF32[$227>>2] = $224; //@line 87 "src/sprites/../puun/gf/square2.c"
  $228 = $dataI; //@line 87 "src/sprites/../puun/gf/square2.c"
  $229 = (($228) + 1)|0; //@line 87 "src/sprites/../puun/gf/square2.c"
  $dataI = $229; //@line 87 "src/sprites/../puun/gf/square2.c"
  $230 = $dataI; //@line 90 "src/sprites/../puun/gf/square2.c"
  $231 = $data; //@line 90 "src/sprites/../puun/gf/square2.c"
  $232 = (($231) + ($230<<2)|0); //@line 90 "src/sprites/../puun/gf/square2.c"
  HEAPF32[$232>>2] = 1.0; //@line 90 "src/sprites/../puun/gf/square2.c"
  $233 = $dataI; //@line 90 "src/sprites/../puun/gf/square2.c"
  $234 = (($233) + 1)|0; //@line 90 "src/sprites/../puun/gf/square2.c"
  $dataI = $234; //@line 90 "src/sprites/../puun/gf/square2.c"
  $235 = $dataI; //@line 91 "src/sprites/../puun/gf/square2.c"
  $236 = $data; //@line 91 "src/sprites/../puun/gf/square2.c"
  $237 = (($236) + ($235<<2)|0); //@line 91 "src/sprites/../puun/gf/square2.c"
  HEAPF32[$237>>2] = 1.0; //@line 91 "src/sprites/../puun/gf/square2.c"
  $238 = $dataI; //@line 91 "src/sprites/../puun/gf/square2.c"
  $239 = (($238) + 1)|0; //@line 91 "src/sprites/../puun/gf/square2.c"
  $dataI = $239; //@line 91 "src/sprites/../puun/gf/square2.c"
  $240 = $brx; //@line 95 "src/sprites/../puun/gf/square2.c"
  $241 = $dataI; //@line 95 "src/sprites/../puun/gf/square2.c"
  $242 = $data; //@line 95 "src/sprites/../puun/gf/square2.c"
  $243 = (($242) + ($241<<2)|0); //@line 95 "src/sprites/../puun/gf/square2.c"
  HEAPF32[$243>>2] = $240; //@line 95 "src/sprites/../puun/gf/square2.c"
  $244 = $dataI; //@line 95 "src/sprites/../puun/gf/square2.c"
  $245 = (($244) + 1)|0; //@line 95 "src/sprites/../puun/gf/square2.c"
  $dataI = $245; //@line 95 "src/sprites/../puun/gf/square2.c"
  $246 = $bry; //@line 96 "src/sprites/../puun/gf/square2.c"
  $247 = $dataI; //@line 96 "src/sprites/../puun/gf/square2.c"
  $248 = $data; //@line 96 "src/sprites/../puun/gf/square2.c"
  $249 = (($248) + ($247<<2)|0); //@line 96 "src/sprites/../puun/gf/square2.c"
  HEAPF32[$249>>2] = $246; //@line 96 "src/sprites/../puun/gf/square2.c"
  $250 = $dataI; //@line 96 "src/sprites/../puun/gf/square2.c"
  $251 = (($250) + 1)|0; //@line 96 "src/sprites/../puun/gf/square2.c"
  $dataI = $251; //@line 96 "src/sprites/../puun/gf/square2.c"
  $252 = (($s) + 8|0); //@line 97 "src/sprites/../puun/gf/square2.c"
  $253 = +HEAPF32[$252>>2]; //@line 97 "src/sprites/../puun/gf/square2.c"
  $254 = $dataI; //@line 97 "src/sprites/../puun/gf/square2.c"
  $255 = $data; //@line 97 "src/sprites/../puun/gf/square2.c"
  $256 = (($255) + ($254<<2)|0); //@line 97 "src/sprites/../puun/gf/square2.c"
  HEAPF32[$256>>2] = $253; //@line 97 "src/sprites/../puun/gf/square2.c"
  $257 = $dataI; //@line 97 "src/sprites/../puun/gf/square2.c"
  $258 = (($257) + 1)|0; //@line 97 "src/sprites/../puun/gf/square2.c"
  $dataI = $258; //@line 97 "src/sprites/../puun/gf/square2.c"
  $259 = (($s) + 32|0); //@line 100 "src/sprites/../puun/gf/square2.c"
  $260 = +HEAPF32[$259>>2]; //@line 100 "src/sprites/../puun/gf/square2.c"
  $261 = $dataI; //@line 100 "src/sprites/../puun/gf/square2.c"
  $262 = $data; //@line 100 "src/sprites/../puun/gf/square2.c"
  $263 = (($262) + ($261<<2)|0); //@line 100 "src/sprites/../puun/gf/square2.c"
  HEAPF32[$263>>2] = $260; //@line 100 "src/sprites/../puun/gf/square2.c"
  $264 = $dataI; //@line 100 "src/sprites/../puun/gf/square2.c"
  $265 = (($264) + 1)|0; //@line 100 "src/sprites/../puun/gf/square2.c"
  $dataI = $265; //@line 100 "src/sprites/../puun/gf/square2.c"
  $266 = (($s) + 36|0); //@line 101 "src/sprites/../puun/gf/square2.c"
  $267 = +HEAPF32[$266>>2]; //@line 101 "src/sprites/../puun/gf/square2.c"
  $268 = $dataI; //@line 101 "src/sprites/../puun/gf/square2.c"
  $269 = $data; //@line 101 "src/sprites/../puun/gf/square2.c"
  $270 = (($269) + ($268<<2)|0); //@line 101 "src/sprites/../puun/gf/square2.c"
  HEAPF32[$270>>2] = $267; //@line 101 "src/sprites/../puun/gf/square2.c"
  $271 = $dataI; //@line 101 "src/sprites/../puun/gf/square2.c"
  $272 = (($271) + 1)|0; //@line 101 "src/sprites/../puun/gf/square2.c"
  $dataI = $272; //@line 101 "src/sprites/../puun/gf/square2.c"
  $273 = $dataI; //@line 104 "src/sprites/../puun/gf/square2.c"
  $274 = $data; //@line 104 "src/sprites/../puun/gf/square2.c"
  $275 = (($274) + ($273<<2)|0); //@line 104 "src/sprites/../puun/gf/square2.c"
  HEAPF32[$275>>2] = 1.0; //@line 104 "src/sprites/../puun/gf/square2.c"
  $276 = $dataI; //@line 104 "src/sprites/../puun/gf/square2.c"
  $277 = (($276) + 1)|0; //@line 104 "src/sprites/../puun/gf/square2.c"
  $dataI = $277; //@line 104 "src/sprites/../puun/gf/square2.c"
  $278 = $dataI; //@line 105 "src/sprites/../puun/gf/square2.c"
  $279 = $data; //@line 105 "src/sprites/../puun/gf/square2.c"
  $280 = (($279) + ($278<<2)|0); //@line 105 "src/sprites/../puun/gf/square2.c"
  HEAPF32[$280>>2] = 1.0; //@line 105 "src/sprites/../puun/gf/square2.c"
  $281 = $dataI; //@line 105 "src/sprites/../puun/gf/square2.c"
  $282 = (($281) + 1)|0; //@line 105 "src/sprites/../puun/gf/square2.c"
  $dataI = $282; //@line 105 "src/sprites/../puun/gf/square2.c"
  $283 = $tlx; //@line 109 "src/sprites/../puun/gf/square2.c"
  $284 = $dataI; //@line 109 "src/sprites/../puun/gf/square2.c"
  $285 = $data; //@line 109 "src/sprites/../puun/gf/square2.c"
  $286 = (($285) + ($284<<2)|0); //@line 109 "src/sprites/../puun/gf/square2.c"
  HEAPF32[$286>>2] = $283; //@line 109 "src/sprites/../puun/gf/square2.c"
  $287 = $dataI; //@line 109 "src/sprites/../puun/gf/square2.c"
  $288 = (($287) + 1)|0; //@line 109 "src/sprites/../puun/gf/square2.c"
  $dataI = $288; //@line 109 "src/sprites/../puun/gf/square2.c"
  $289 = $tly; //@line 110 "src/sprites/../puun/gf/square2.c"
  $290 = $dataI; //@line 110 "src/sprites/../puun/gf/square2.c"
  $291 = $data; //@line 110 "src/sprites/../puun/gf/square2.c"
  $292 = (($291) + ($290<<2)|0); //@line 110 "src/sprites/../puun/gf/square2.c"
  HEAPF32[$292>>2] = $289; //@line 110 "src/sprites/../puun/gf/square2.c"
  $293 = $dataI; //@line 110 "src/sprites/../puun/gf/square2.c"
  $294 = (($293) + 1)|0; //@line 110 "src/sprites/../puun/gf/square2.c"
  $dataI = $294; //@line 110 "src/sprites/../puun/gf/square2.c"
  $295 = (($s) + 8|0); //@line 111 "src/sprites/../puun/gf/square2.c"
  $296 = +HEAPF32[$295>>2]; //@line 111 "src/sprites/../puun/gf/square2.c"
  $297 = $dataI; //@line 111 "src/sprites/../puun/gf/square2.c"
  $298 = $data; //@line 111 "src/sprites/../puun/gf/square2.c"
  $299 = (($298) + ($297<<2)|0); //@line 111 "src/sprites/../puun/gf/square2.c"
  HEAPF32[$299>>2] = $296; //@line 111 "src/sprites/../puun/gf/square2.c"
  $300 = $dataI; //@line 111 "src/sprites/../puun/gf/square2.c"
  $301 = (($300) + 1)|0; //@line 111 "src/sprites/../puun/gf/square2.c"
  $dataI = $301; //@line 111 "src/sprites/../puun/gf/square2.c"
  $302 = (($s) + 24|0); //@line 114 "src/sprites/../puun/gf/square2.c"
  $303 = +HEAPF32[$302>>2]; //@line 114 "src/sprites/../puun/gf/square2.c"
  $304 = $dataI; //@line 114 "src/sprites/../puun/gf/square2.c"
  $305 = $data; //@line 114 "src/sprites/../puun/gf/square2.c"
  $306 = (($305) + ($304<<2)|0); //@line 114 "src/sprites/../puun/gf/square2.c"
  HEAPF32[$306>>2] = $303; //@line 114 "src/sprites/../puun/gf/square2.c"
  $307 = $dataI; //@line 114 "src/sprites/../puun/gf/square2.c"
  $308 = (($307) + 1)|0; //@line 114 "src/sprites/../puun/gf/square2.c"
  $dataI = $308; //@line 114 "src/sprites/../puun/gf/square2.c"
  $309 = (($s) + 28|0); //@line 115 "src/sprites/../puun/gf/square2.c"
  $310 = +HEAPF32[$309>>2]; //@line 115 "src/sprites/../puun/gf/square2.c"
  $311 = $dataI; //@line 115 "src/sprites/../puun/gf/square2.c"
  $312 = $data; //@line 115 "src/sprites/../puun/gf/square2.c"
  $313 = (($312) + ($311<<2)|0); //@line 115 "src/sprites/../puun/gf/square2.c"
  HEAPF32[$313>>2] = $310; //@line 115 "src/sprites/../puun/gf/square2.c"
  $314 = $dataI; //@line 115 "src/sprites/../puun/gf/square2.c"
  $315 = (($314) + 1)|0; //@line 115 "src/sprites/../puun/gf/square2.c"
  $dataI = $315; //@line 115 "src/sprites/../puun/gf/square2.c"
  $316 = $dataI; //@line 118 "src/sprites/../puun/gf/square2.c"
  $317 = $data; //@line 118 "src/sprites/../puun/gf/square2.c"
  $318 = (($317) + ($316<<2)|0); //@line 118 "src/sprites/../puun/gf/square2.c"
  HEAPF32[$318>>2] = 1.0; //@line 118 "src/sprites/../puun/gf/square2.c"
  $319 = $dataI; //@line 118 "src/sprites/../puun/gf/square2.c"
  $320 = (($319) + 1)|0; //@line 118 "src/sprites/../puun/gf/square2.c"
  $dataI = $320; //@line 118 "src/sprites/../puun/gf/square2.c"
  $321 = $dataI; //@line 119 "src/sprites/../puun/gf/square2.c"
  $322 = $data; //@line 119 "src/sprites/../puun/gf/square2.c"
  $323 = (($322) + ($321<<2)|0); //@line 119 "src/sprites/../puun/gf/square2.c"
  HEAPF32[$323>>2] = 1.0; //@line 119 "src/sprites/../puun/gf/square2.c"
  $324 = $dataI; //@line 119 "src/sprites/../puun/gf/square2.c"
  $325 = (($324) + 1)|0; //@line 119 "src/sprites/../puun/gf/square2.c"
  $dataI = $325; //@line 119 "src/sprites/../puun/gf/square2.c"
  $326 = $trx; //@line 123 "src/sprites/../puun/gf/square2.c"
  $327 = $dataI; //@line 123 "src/sprites/../puun/gf/square2.c"
  $328 = $data; //@line 123 "src/sprites/../puun/gf/square2.c"
  $329 = (($328) + ($327<<2)|0); //@line 123 "src/sprites/../puun/gf/square2.c"
  HEAPF32[$329>>2] = $326; //@line 123 "src/sprites/../puun/gf/square2.c"
  $330 = $dataI; //@line 123 "src/sprites/../puun/gf/square2.c"
  $331 = (($330) + 1)|0; //@line 123 "src/sprites/../puun/gf/square2.c"
  $dataI = $331; //@line 123 "src/sprites/../puun/gf/square2.c"
  $332 = $try; //@line 124 "src/sprites/../puun/gf/square2.c"
  $333 = $dataI; //@line 124 "src/sprites/../puun/gf/square2.c"
  $334 = $data; //@line 124 "src/sprites/../puun/gf/square2.c"
  $335 = (($334) + ($333<<2)|0); //@line 124 "src/sprites/../puun/gf/square2.c"
  HEAPF32[$335>>2] = $332; //@line 124 "src/sprites/../puun/gf/square2.c"
  $336 = $dataI; //@line 124 "src/sprites/../puun/gf/square2.c"
  $337 = (($336) + 1)|0; //@line 124 "src/sprites/../puun/gf/square2.c"
  $dataI = $337; //@line 124 "src/sprites/../puun/gf/square2.c"
  $338 = (($s) + 8|0); //@line 125 "src/sprites/../puun/gf/square2.c"
  $339 = +HEAPF32[$338>>2]; //@line 125 "src/sprites/../puun/gf/square2.c"
  $340 = $dataI; //@line 125 "src/sprites/../puun/gf/square2.c"
  $341 = $data; //@line 125 "src/sprites/../puun/gf/square2.c"
  $342 = (($341) + ($340<<2)|0); //@line 125 "src/sprites/../puun/gf/square2.c"
  HEAPF32[$342>>2] = $339; //@line 125 "src/sprites/../puun/gf/square2.c"
  $343 = $dataI; //@line 125 "src/sprites/../puun/gf/square2.c"
  $344 = (($343) + 1)|0; //@line 125 "src/sprites/../puun/gf/square2.c"
  $dataI = $344; //@line 125 "src/sprites/../puun/gf/square2.c"
  $345 = (($s) + 32|0); //@line 128 "src/sprites/../puun/gf/square2.c"
  $346 = +HEAPF32[$345>>2]; //@line 128 "src/sprites/../puun/gf/square2.c"
  $347 = $dataI; //@line 128 "src/sprites/../puun/gf/square2.c"
  $348 = $data; //@line 128 "src/sprites/../puun/gf/square2.c"
  $349 = (($348) + ($347<<2)|0); //@line 128 "src/sprites/../puun/gf/square2.c"
  HEAPF32[$349>>2] = $346; //@line 128 "src/sprites/../puun/gf/square2.c"
  $350 = $dataI; //@line 128 "src/sprites/../puun/gf/square2.c"
  $351 = (($350) + 1)|0; //@line 128 "src/sprites/../puun/gf/square2.c"
  $dataI = $351; //@line 128 "src/sprites/../puun/gf/square2.c"
  $352 = (($s) + 28|0); //@line 129 "src/sprites/../puun/gf/square2.c"
  $353 = +HEAPF32[$352>>2]; //@line 129 "src/sprites/../puun/gf/square2.c"
  $354 = $dataI; //@line 129 "src/sprites/../puun/gf/square2.c"
  $355 = $data; //@line 129 "src/sprites/../puun/gf/square2.c"
  $356 = (($355) + ($354<<2)|0); //@line 129 "src/sprites/../puun/gf/square2.c"
  HEAPF32[$356>>2] = $353; //@line 129 "src/sprites/../puun/gf/square2.c"
  $357 = $dataI; //@line 129 "src/sprites/../puun/gf/square2.c"
  $358 = (($357) + 1)|0; //@line 129 "src/sprites/../puun/gf/square2.c"
  $dataI = $358; //@line 129 "src/sprites/../puun/gf/square2.c"
  $359 = $dataI; //@line 132 "src/sprites/../puun/gf/square2.c"
  $360 = $data; //@line 132 "src/sprites/../puun/gf/square2.c"
  $361 = (($360) + ($359<<2)|0); //@line 132 "src/sprites/../puun/gf/square2.c"
  HEAPF32[$361>>2] = 1.0; //@line 132 "src/sprites/../puun/gf/square2.c"
  $362 = $dataI; //@line 132 "src/sprites/../puun/gf/square2.c"
  $363 = (($362) + 1)|0; //@line 132 "src/sprites/../puun/gf/square2.c"
  $dataI = $363; //@line 132 "src/sprites/../puun/gf/square2.c"
  $364 = $dataI; //@line 133 "src/sprites/../puun/gf/square2.c"
  $365 = $data; //@line 133 "src/sprites/../puun/gf/square2.c"
  $366 = (($365) + ($364<<2)|0); //@line 133 "src/sprites/../puun/gf/square2.c"
  HEAPF32[$366>>2] = 1.0; //@line 133 "src/sprites/../puun/gf/square2.c"
  $367 = $dataI; //@line 133 "src/sprites/../puun/gf/square2.c"
  $368 = (($367) + 1)|0; //@line 133 "src/sprites/../puun/gf/square2.c"
  $dataI = $368; //@line 133 "src/sprites/../puun/gf/square2.c"
  $369 = $i; //@line 37 "src/sprites/../puun/gf/square2.c"
  $370 = (($369) + 1)|0; //@line 37 "src/sprites/../puun/gf/square2.c"
  $i = $370; //@line 37 "src/sprites/../puun/gf/square2.c"
 }
 $371 = (($sl) + 8|0); //@line 137 "src/sprites/../puun/gf/square2.c"
 $372 = HEAP8[$371>>0]|0; //@line 137 "src/sprites/../puun/gf/square2.c"
 $373 = $372&255; //@line 137 "src/sprites/../puun/gf/square2.c"
 $374 = (_glGetAttribLocation(($373|0),(240|0))|0); //@line 137 "src/sprites/../puun/gf/square2.c"
 $pos = $374; //@line 137 "src/sprites/../puun/gf/square2.c"
 $375 = (($sl) + 8|0); //@line 138 "src/sprites/../puun/gf/square2.c"
 $376 = HEAP8[$375>>0]|0; //@line 138 "src/sprites/../puun/gf/square2.c"
 $377 = $376&255; //@line 138 "src/sprites/../puun/gf/square2.c"
 $378 = (_glGetAttribLocation(($377|0),(256|0))|0); //@line 138 "src/sprites/../puun/gf/square2.c"
 $uv = $378; //@line 138 "src/sprites/../puun/gf/square2.c"
 $379 = (($sl) + 8|0); //@line 139 "src/sprites/../puun/gf/square2.c"
 $380 = HEAP8[$379>>0]|0; //@line 139 "src/sprites/../puun/gf/square2.c"
 $381 = $380&255; //@line 139 "src/sprites/../puun/gf/square2.c"
 $382 = (_glGetAttribLocation(($381|0),(264|0))|0); //@line 139 "src/sprites/../puun/gf/square2.c"
 $scale = $382; //@line 139 "src/sprites/../puun/gf/square2.c"
 $stride = 28; //@line 141 "src/sprites/../puun/gf/square2.c"
 $383 = (($sl) + 12|0); //@line 143 "src/sprites/../puun/gf/square2.c"
 $384 = HEAP32[$383>>2]|0; //@line 143 "src/sprites/../puun/gf/square2.c"
 _glBindBuffer(34962,($384|0)); //@line 143 "src/sprites/../puun/gf/square2.c"
 $385 = (($sl) + 4|0); //@line 144 "src/sprites/../puun/gf/square2.c"
 $386 = HEAP32[$385>>2]|0; //@line 144 "src/sprites/../puun/gf/square2.c"
 $387 = ($386*6)|0; //@line 144 "src/sprites/../puun/gf/square2.c"
 $388 = ($387*7)|0; //@line 144 "src/sprites/../puun/gf/square2.c"
 $389 = $388<<2; //@line 144 "src/sprites/../puun/gf/square2.c"
 $390 = $data; //@line 144 "src/sprites/../puun/gf/square2.c"
 _glBufferData(34962,($389|0),($390|0),35048); //@line 144 "src/sprites/../puun/gf/square2.c"
 $391 = $pos; //@line 146 "src/sprites/../puun/gf/square2.c"
 $392 = $stride; //@line 146 "src/sprites/../puun/gf/square2.c"
 $393 = $392&255; //@line 146 "src/sprites/../puun/gf/square2.c"
 _glVertexAttribPointer(($391|0),3,5126,0,($393|0),(0|0)); //@line 146 "src/sprites/../puun/gf/square2.c"
 $394 = $pos; //@line 148 "src/sprites/../puun/gf/square2.c"
 _glEnableVertexAttribArray(($394|0)); //@line 148 "src/sprites/../puun/gf/square2.c"
 $395 = $uv; //@line 149 "src/sprites/../puun/gf/square2.c"
 $396 = $stride; //@line 149 "src/sprites/../puun/gf/square2.c"
 $397 = $396&255; //@line 149 "src/sprites/../puun/gf/square2.c"
 _glVertexAttribPointer(($395|0),2,5126,0,($397|0),((12)|0)); //@line 149 "src/sprites/../puun/gf/square2.c"
 $398 = $uv; //@line 151 "src/sprites/../puun/gf/square2.c"
 _glEnableVertexAttribArray(($398|0)); //@line 151 "src/sprites/../puun/gf/square2.c"
 $399 = $scale; //@line 152 "src/sprites/../puun/gf/square2.c"
 $400 = $stride; //@line 152 "src/sprites/../puun/gf/square2.c"
 $401 = $400&255; //@line 152 "src/sprites/../puun/gf/square2.c"
 _glVertexAttribPointer(($399|0),2,5126,0,($401|0),((20)|0)); //@line 152 "src/sprites/../puun/gf/square2.c"
 $402 = $scale; //@line 154 "src/sprites/../puun/gf/square2.c"
 _glEnableVertexAttribArray(($402|0)); //@line 154 "src/sprites/../puun/gf/square2.c"
 STACKTOP = sp;return; //@line 155 "src/sprites/../puun/gf/square2.c"
}
function _loadSpriteSheet($loc) {
 $loc = $loc|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $Image = 0;
 var $ImageId = 0, $data = 0, $id = 0, $n = 0, $sheet = 0, $x = 0, $y = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $x = sp + 32|0;
 $y = sp + 28|0;
 $n = sp + 24|0;
 $data = sp + 12|0;
 $sheet = sp;
 $0 = $loc;
 $1 = $0; //@line 26 "src/sprites/../puun/gf/sprite.c"
 $2 = (_stbi_load($1,$x,$y,$n,0)|0); //@line 26 "src/sprites/../puun/gf/sprite.c"
 $Image = $2; //@line 26 "src/sprites/../puun/gf/sprite.c"
 $3 = $Image; //@line 27 "src/sprites/../puun/gf/sprite.c"
 $4 = HEAP32[$x>>2]|0; //@line 27 "src/sprites/../puun/gf/sprite.c"
 $5 = HEAP32[$y>>2]|0; //@line 27 "src/sprites/../puun/gf/sprite.c"
 $6 = (_setupTexture($3,$4,$5)|0); //@line 27 "src/sprites/../puun/gf/sprite.c"
 $ImageId = $6; //@line 27 "src/sprites/../puun/gf/sprite.c"
 ;HEAP32[$data+0>>2]=0|0;HEAP32[$data+4>>2]=0|0;HEAP32[$data+8>>2]=0|0; //@line 29 "src/sprites/../puun/gf/sprite.c"
 $7 = $ImageId; //@line 30 "src/sprites/../puun/gf/sprite.c"
 HEAP32[$data>>2] = $7; //@line 30 "src/sprites/../puun/gf/sprite.c"
 $8 = HEAP32[6416>>2]|0; //@line 31 "src/sprites/../puun/gf/sprite.c"
 $id = $8; //@line 31 "src/sprites/../puun/gf/sprite.c"
 ;HEAP32[$sheet+0>>2]=0|0;HEAP32[$sheet+4>>2]=0|0; //@line 32 "src/sprites/../puun/gf/sprite.c"
 $9 = $id; //@line 33 "src/sprites/../puun/gf/sprite.c"
 HEAP32[$sheet>>2] = $9; //@line 33 "src/sprites/../puun/gf/sprite.c"
 $10 = (($data) + 4|0); //@line 34 "src/sprites/../puun/gf/sprite.c"
 ;HEAP32[$10+0>>2]=HEAP32[$sheet+0>>2]|0;HEAP32[$10+4>>2]=HEAP32[$sheet+4>>2]|0; //@line 34 "src/sprites/../puun/gf/sprite.c"
 $11 = $id; //@line 36 "src/sprites/../puun/gf/sprite.c"
 $12 = (272 + (($11*12)|0)|0); //@line 36 "src/sprites/../puun/gf/sprite.c"
 ;HEAP32[$12+0>>2]=HEAP32[$data+0>>2]|0;HEAP32[$12+4>>2]=HEAP32[$data+4>>2]|0;HEAP32[$12+8>>2]=HEAP32[$data+8>>2]|0; //@line 36 "src/sprites/../puun/gf/sprite.c"
 $13 = $id; //@line 37 "src/sprites/../puun/gf/sprite.c"
 $14 = (($13) + 1)|0; //@line 37 "src/sprites/../puun/gf/sprite.c"
 $id = $14; //@line 37 "src/sprites/../puun/gf/sprite.c"
 $15 = $id; //@line 38 "src/sprites/../puun/gf/sprite.c"
 $16 = (($15) - 1)|0; //@line 38 "src/sprites/../puun/gf/sprite.c"
 $17 = (272 + (($16*12)|0)|0); //@line 38 "src/sprites/../puun/gf/sprite.c"
 $18 = (($17) + 4|0); //@line 38 "src/sprites/../puun/gf/sprite.c"
 STACKTOP = sp;return ($18|0); //@line 38 "src/sprites/../puun/gf/sprite.c"
}
function _spritesFromSheet($agg$result,$s,$squares) {
 $agg$result = $agg$result|0;
 $s = $s|0;
 $squares = $squares|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $fs = 0, $sl = 0, $splist = 0, $vs = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 464|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vs = sp + 272|0;
 $fs = sp + 44|0;
 $sl = sp + 24|0;
 $splist = sp;
 $0 = $squares;
 _memcpy(($vs|0),(6424|0),186)|0; //@line 42 "src/sprites/../puun/gf/sprite.c"
 _memcpy(($fs|0),(6616|0),228)|0; //@line 46 "src/sprites/../puun/gf/sprite.c"
 $1 = (_setupProgram($vs,0,$fs,0)|0); //@line 53 "src/sprites/../puun/gf/sprite.c"
 HEAP32[6848>>2] = $1; //@line 53 "src/sprites/../puun/gf/sprite.c"
 $2 = HEAP32[6848>>2]|0; //@line 54 "src/sprites/../puun/gf/sprite.c"
 $3 = $2&255; //@line 54 "src/sprites/../puun/gf/sprite.c"
 $4 = $0; //@line 54 "src/sprites/../puun/gf/sprite.c"
 _create_square_list($sl,$3,$4); //@line 54 "src/sprites/../puun/gf/sprite.c"
 ;HEAP32[$splist+0>>2]=0|0;HEAP32[$splist+4>>2]=0|0;HEAP32[$splist+8>>2]=0|0;HEAP32[$splist+12>>2]=0|0;HEAP32[$splist+16>>2]=0|0; //@line 56 "src/sprites/../puun/gf/sprite.c"
 ;HEAP32[$splist+0>>2]=HEAP32[$sl+0>>2]|0;HEAP32[$splist+4>>2]=HEAP32[$sl+4>>2]|0;HEAP32[$splist+8>>2]=HEAP32[$sl+8>>2]|0;HEAP32[$splist+12>>2]=HEAP32[$sl+12>>2]|0; //@line 57 "src/sprites/../puun/gf/sprite.c"
 $5 = HEAP32[$s>>2]|0; //@line 58 "src/sprites/../puun/gf/sprite.c"
 $6 = (272 + (($5*12)|0)|0); //@line 58 "src/sprites/../puun/gf/sprite.c"
 $7 = HEAP32[$6>>2]|0; //@line 58 "src/sprites/../puun/gf/sprite.c"
 $8 = (($splist) + 16|0); //@line 58 "src/sprites/../puun/gf/sprite.c"
 HEAP32[$8>>2] = $7; //@line 58 "src/sprites/../puun/gf/sprite.c"
 ;HEAP32[$agg$result+0>>2]=HEAP32[$splist+0>>2]|0;HEAP32[$agg$result+4>>2]=HEAP32[$splist+4>>2]|0;HEAP32[$agg$result+8>>2]=HEAP32[$splist+8>>2]|0;HEAP32[$agg$result+12>>2]=HEAP32[$splist+12>>2]|0;HEAP32[$agg$result+16>>2]=HEAP32[$splist+16>>2]|0; //@line 59 "src/sprites/../puun/gf/sprite.c"
 STACKTOP = sp;return; //@line 59 "src/sprites/../puun/gf/sprite.c"
}
function _renderSpriteList($sl) {
 $sl = $sl|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($sl) + 8|0); //@line 63 "src/sprites/../puun/gf/sprite.c"
 $1 = HEAP8[$0>>0]|0; //@line 63 "src/sprites/../puun/gf/sprite.c"
 $2 = $1&255; //@line 63 "src/sprites/../puun/gf/sprite.c"
 _glUseProgram(($2|0)); //@line 63 "src/sprites/../puun/gf/sprite.c"
 _glActiveTexture(33984); //@line 65 "src/sprites/../puun/gf/sprite.c"
 $3 = (($sl) + 16|0); //@line 66 "src/sprites/../puun/gf/sprite.c"
 $4 = HEAP32[$3>>2]|0; //@line 66 "src/sprites/../puun/gf/sprite.c"
 _glBindTexture(3553,($4|0)); //@line 66 "src/sprites/../puun/gf/sprite.c"
 $5 = (($sl) + 8|0); //@line 68 "src/sprites/../puun/gf/sprite.c"
 $6 = HEAP8[$5>>0]|0; //@line 68 "src/sprites/../puun/gf/sprite.c"
 $7 = $6&255; //@line 68 "src/sprites/../puun/gf/sprite.c"
 $8 = (_glGetUniformLocation(($7|0),(6856|0))|0); //@line 68 "src/sprites/../puun/gf/sprite.c"
 _glUniform1i(($8|0),0); //@line 67 "src/sprites/../puun/gf/sprite.c"
 $9 = (($sl) + 4|0); //@line 72 "src/sprites/../puun/gf/sprite.c"
 $10 = HEAP32[$9>>2]|0; //@line 72 "src/sprites/../puun/gf/sprite.c"
 $11 = ($10*6)|0; //@line 72 "src/sprites/../puun/gf/sprite.c"
 _glDrawArrays(4,0,($11|0)); //@line 72 "src/sprites/../puun/gf/sprite.c"
 return; //@line 73 "src/sprites/../puun/gf/sprite.c"
}
function _render() {
 var $Sprites$byval_copy = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $Sprites$byval_copy = sp;
 _glClearColor(1.0,1.0,1.0,1.0); //@line 37 "src/sprites/sprite.c"
 _glClear(16640); //@line 38 "src/sprites/sprite.c"
 ;HEAP32[$Sprites$byval_copy+0>>2]=HEAP32[6864+0>>2]|0;HEAP32[$Sprites$byval_copy+4>>2]=HEAP32[6864+4>>2]|0;HEAP32[$Sprites$byval_copy+8>>2]=HEAP32[6864+8>>2]|0;HEAP32[$Sprites$byval_copy+12>>2]=HEAP32[6864+12>>2]|0;HEAP32[$Sprites$byval_copy+16>>2]=HEAP32[6864+16>>2]|0; //@line 40 "src/sprites/sprite.c"
 _renderSpriteList($Sprites$byval_copy); //@line 40 "src/sprites/sprite.c"
 _SDL_GL_SwapBuffers(); //@line 45 "src/sprites/sprite.c"
 STACKTOP = sp;return; //@line 46 "src/sprites/sprite.c"
}
function _init() {
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $d = 0, $s = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 64|0;
 $0 = sp + 40|0;
 $s = sp;
 HEAP8[8>>0] = 1; //@line 51 "src/sprites/sprite.c"
 $1 = (_malloc(4000)|0); //@line 52 "src/sprites/sprite.c"
 HEAP32[6888>>2] = $1; //@line 52 "src/sprites/sprite.c"
 $2 = (_malloc(160)|0); //@line 53 "src/sprites/sprite.c"
 $d = $2; //@line 53 "src/sprites/sprite.c"
 $3 = (_loadSpriteSheet(6896)|0); //@line 54 "src/sprites/sprite.c"
 HEAP32[6920>>2] = $3; //@line 54 "src/sprites/sprite.c"
 $4 = HEAP32[6920>>2]|0; //@line 55 "src/sprites/sprite.c"
 $5 = $d; //@line 55 "src/sprites/sprite.c"
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[$4+0>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$4+4>>2]|0; //@line 55 "src/sprites/sprite.c"
 _spritesFromSheet($0,$$byval_copy,$5); //@line 55 "src/sprites/sprite.c"
 ;HEAP32[6864+0>>2]=HEAP32[$0+0>>2]|0;HEAP32[6864+4>>2]=HEAP32[$0+4>>2]|0;HEAP32[6864+8>>2]=HEAP32[$0+8>>2]|0;HEAP32[6864+12>>2]=HEAP32[$0+12>>2]|0;HEAP32[6864+16>>2]=HEAP32[$0+16>>2]|0; //@line 55 "src/sprites/sprite.c"
 _glEnable(3042); //@line 57 "src/sprites/sprite.c"
 _glBlendFunc(770,771); //@line 58 "src/sprites/sprite.c"
 _glDepthMask(1); //@line 59 "src/sprites/sprite.c"
 dest=$s+0|0; stop=dest+40|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0)); //@line 62 "src/sprites/sprite.c"
 $6 = (($s) + 16|0); //@line 63 "src/sprites/sprite.c"
 HEAPF32[$6>>2] = 0.80000001192092896; //@line 63 "src/sprites/sprite.c"
 $7 = (($s) + 20|0); //@line 63 "src/sprites/sprite.c"
 HEAPF32[$7>>2] = 0.10000000149011612; //@line 63 "src/sprites/sprite.c"
 $8 = (($s) + 24|0); //@line 64 "src/sprites/sprite.c"
 HEAPF32[$8>>2] = 0.0; //@line 64 "src/sprites/sprite.c"
 $9 = (($s) + 32|0); //@line 64 "src/sprites/sprite.c"
 HEAPF32[$9>>2] = 0.5; //@line 64 "src/sprites/sprite.c"
 $10 = (($s) + 28|0); //@line 65 "src/sprites/sprite.c"
 HEAPF32[$10>>2] = 0.0; //@line 65 "src/sprites/sprite.c"
 $11 = (($s) + 36|0); //@line 65 "src/sprites/sprite.c"
 HEAPF32[$11>>2] = 0.19140625; //@line 65 "src/sprites/sprite.c"
 $12 = (($s) + 8|0); //@line 66 "src/sprites/sprite.c"
 HEAPF32[$12>>2] = 0.80000001192092896; //@line 66 "src/sprites/sprite.c"
 $13 = HEAP32[6864>>2]|0; //@line 67 "src/sprites/sprite.c"
 dest=$13+0|0; src=$s+0|0; stop=dest+40|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0)); //@line 67 "src/sprites/sprite.c"
 $14 = (($s) + 16|0); //@line 68 "src/sprites/sprite.c"
 HEAPF32[$14>>2] = 0.20000000298023224; //@line 68 "src/sprites/sprite.c"
 $15 = (($s) + 20|0); //@line 68 "src/sprites/sprite.c"
 HEAPF32[$15>>2] = 0.20000000298023224; //@line 68 "src/sprites/sprite.c"
 $16 = (($s) + 24|0); //@line 69 "src/sprites/sprite.c"
 HEAPF32[$16>>2] = 0.5; //@line 69 "src/sprites/sprite.c"
 $17 = (($s) + 32|0); //@line 69 "src/sprites/sprite.c"
 HEAPF32[$17>>2] = 0.75; //@line 69 "src/sprites/sprite.c"
 $18 = (($s) + 28|0); //@line 70 "src/sprites/sprite.c"
 HEAPF32[$18>>2] = 0.0; //@line 70 "src/sprites/sprite.c"
 $19 = (($s) + 36|0); //@line 70 "src/sprites/sprite.c"
 HEAPF32[$19>>2] = 0.5; //@line 70 "src/sprites/sprite.c"
 $20 = (($s) + 8|0); //@line 71 "src/sprites/sprite.c"
 HEAPF32[$20>>2] = 0.0; //@line 71 "src/sprites/sprite.c"
 $21 = HEAP32[6864>>2]|0; //@line 72 "src/sprites/sprite.c"
 $22 = (($21) + 40|0); //@line 72 "src/sprites/sprite.c"
 dest=$22+0|0; src=$s+0|0; stop=dest+40|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0)); //@line 72 "src/sprites/sprite.c"
 HEAP32[((6864 + 4|0))>>2] = 2; //@line 73 "src/sprites/sprite.c"
 $23 = HEAP32[6864>>2]|0; //@line 75 "src/sprites/sprite.c"
 HEAP32[6928>>2] = $23; //@line 75 "src/sprites/sprite.c"
 $24 = HEAP32[6864>>2]|0; //@line 76 "src/sprites/sprite.c"
 $25 = (($24) + 40|0); //@line 76 "src/sprites/sprite.c"
 HEAP32[6936>>2] = $25; //@line 76 "src/sprites/sprite.c"
 STACKTOP = sp;return; //@line 78 "src/sprites/sprite.c"
}
function _s2p($screen) {
 $screen = $screen|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0.0, $5 = 0.0, $6 = 0.0, $7 = 0.0, $s = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $screen;
 $1 = $0; //@line 81 "src/sprites/sprite.c"
 $2 = (($1) - 400)|0; //@line 81 "src/sprites/sprite.c"
 $0 = $2; //@line 81 "src/sprites/sprite.c"
 $3 = $0; //@line 82 "src/sprites/sprite.c"
 $4 = (+($3|0)); //@line 82 "src/sprites/sprite.c"
 $s = $4; //@line 82 "src/sprites/sprite.c"
 $5 = $s; //@line 83 "src/sprites/sprite.c"
 $6 = $5 / 400.0; //@line 83 "src/sprites/sprite.c"
 $s = $6; //@line 83 "src/sprites/sprite.c"
 $7 = $s; //@line 84 "src/sprites/sprite.c"
 STACKTOP = sp;return (+$7); //@line 84 "src/sprites/sprite.c"
}
function _bounce($wallDegree,$vx,$vy,$av,$incVel) {
 $wallDegree = +$wallDegree;
 $vx = $vx|0;
 $vy = $vy|0;
 $av = $av|0;
 $incVel = +$incVel;
 var $0 = 0.0, $1 = 0, $10 = 0.0, $11 = 0.0, $12 = 0.0, $13 = 0, $14 = 0.0, $15 = 0, $16 = 0.0, $17 = 0.0, $18 = 0, $19 = 0.0, $2 = 0, $20 = 0, $21 = 0.0, $22 = 0.0, $23 = 0.0, $24 = 0.0, $25 = 0.0, $26 = 0.0;
 var $27 = 0.0, $28 = 0.0, $29 = 0.0, $3 = 0, $30 = 0.0, $31 = 0.0, $32 = 0.0, $33 = 0.0, $34 = 0.0, $35 = 0.0, $36 = 0.0, $37 = 0.0, $38 = 0.0, $39 = 0.0, $4 = 0.0, $40 = 0.0, $41 = 0.0, $42 = 0.0, $43 = 0.0, $44 = 0.0;
 var $45 = 0.0, $46 = 0.0, $47 = 0.0, $48 = 0.0, $49 = 0.0, $5 = 0, $50 = 0, $51 = 0.0, $52 = 0.0, $53 = 0.0, $54 = 0, $6 = 0.0, $7 = 0.0, $8 = 0, $9 = 0.0, $c = 0.0, $in = 0.0, $n = 0.0, $out = 0.0, $s = 0.0;
 var $vel = 0.0, $vvx = 0.0, $vvy = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $wallDegree;
 $1 = $vx;
 $2 = $vy;
 $3 = $av;
 $4 = $incVel;
 $5 = $2; //@line 88 "src/sprites/sprite.c"
 $6 = +HEAPF32[$5>>2]; //@line 88 "src/sprites/sprite.c"
 $7 = $6; //@line 88 "src/sprites/sprite.c"
 $8 = $1; //@line 88 "src/sprites/sprite.c"
 $9 = +HEAPF32[$8>>2]; //@line 88 "src/sprites/sprite.c"
 $10 = $9; //@line 88 "src/sprites/sprite.c"
 $11 = (+Math_atan2((+$7),(+$10))); //@line 88 "src/sprites/sprite.c"
 $12 = $11; //@line 88 "src/sprites/sprite.c"
 $in = $12; //@line 88 "src/sprites/sprite.c"
 $13 = $1; //@line 89 "src/sprites/sprite.c"
 $14 = +HEAPF32[$13>>2]; //@line 89 "src/sprites/sprite.c"
 $15 = $1; //@line 89 "src/sprites/sprite.c"
 $16 = +HEAPF32[$15>>2]; //@line 89 "src/sprites/sprite.c"
 $17 = $14 * $16; //@line 89 "src/sprites/sprite.c"
 $18 = $2; //@line 89 "src/sprites/sprite.c"
 $19 = +HEAPF32[$18>>2]; //@line 89 "src/sprites/sprite.c"
 $20 = $2; //@line 89 "src/sprites/sprite.c"
 $21 = +HEAPF32[$20>>2]; //@line 89 "src/sprites/sprite.c"
 $22 = $19 * $21; //@line 89 "src/sprites/sprite.c"
 $23 = $17 + $22; //@line 89 "src/sprites/sprite.c"
 $24 = $23; //@line 89 "src/sprites/sprite.c"
 $25 = (+Math_sqrt((+$24))); //@line 89 "src/sprites/sprite.c"
 $26 = $25; //@line 89 "src/sprites/sprite.c"
 $vel = $26; //@line 89 "src/sprites/sprite.c"
 $27 = $0; //@line 90 "src/sprites/sprite.c"
 $n = $27; //@line 90 "src/sprites/sprite.c"
 $28 = $n; //@line 91 "src/sprites/sprite.c"
 $29 = $n; //@line 91 "src/sprites/sprite.c"
 $30 = $28 + $29; //@line 91 "src/sprites/sprite.c"
 $31 = $in; //@line 91 "src/sprites/sprite.c"
 $32 = $30 - $31; //@line 91 "src/sprites/sprite.c"
 $out = $32; //@line 91 "src/sprites/sprite.c"
 $33 = $out; //@line 92 "src/sprites/sprite.c"
 $34 = $33; //@line 92 "src/sprites/sprite.c"
 $35 = (+Math_sin((+$34))); //@line 92 "src/sprites/sprite.c"
 $36 = $35; //@line 92 "src/sprites/sprite.c"
 $s = $36; //@line 92 "src/sprites/sprite.c"
 $37 = $out; //@line 92 "src/sprites/sprite.c"
 $38 = $37; //@line 92 "src/sprites/sprite.c"
 $39 = (+Math_cos((+$38))); //@line 92 "src/sprites/sprite.c"
 $40 = $39; //@line 92 "src/sprites/sprite.c"
 $c = $40; //@line 92 "src/sprites/sprite.c"
 $41 = $vel; //@line 93 "src/sprites/sprite.c"
 $42 = $c; //@line 93 "src/sprites/sprite.c"
 $43 = $41 * $42; //@line 93 "src/sprites/sprite.c"
 $vvx = $43; //@line 93 "src/sprites/sprite.c"
 $44 = $vel; //@line 94 "src/sprites/sprite.c"
 $45 = $s; //@line 94 "src/sprites/sprite.c"
 $46 = $44 * $45; //@line 94 "src/sprites/sprite.c"
 $vvy = $46; //@line 94 "src/sprites/sprite.c"
 $47 = $vvx; //@line 95 "src/sprites/sprite.c"
 $48 = $4; //@line 95 "src/sprites/sprite.c"
 $49 = $47 * $48; //@line 95 "src/sprites/sprite.c"
 $50 = $1; //@line 95 "src/sprites/sprite.c"
 HEAPF32[$50>>2] = $49; //@line 95 "src/sprites/sprite.c"
 $51 = $vvy; //@line 95 "src/sprites/sprite.c"
 $52 = $4; //@line 95 "src/sprites/sprite.c"
 $53 = $51 * $52; //@line 95 "src/sprites/sprite.c"
 $54 = $2; //@line 95 "src/sprites/sprite.c"
 HEAPF32[$54>>2] = $53; //@line 95 "src/sprites/sprite.c"
 STACKTOP = sp;return; //@line 96 "src/sprites/sprite.c"
}
function _update() {
 var $$byval_copy = 0, $0 = 0.0, $1 = 0.0, $10 = 0.0, $11 = 0.0, $12 = 0.0, $13 = 0.0, $14 = 0.0, $15 = 0.0, $16 = 0.0, $17 = 0.0, $18 = 0.0, $19 = 0.0, $2 = 0.0, $20 = 0.0, $21 = 0, $22 = 0.0, $23 = 0, $24 = 0.0, $25 = 0.0;
 var $26 = 0, $27 = 0.0, $28 = 0.0, $29 = 0, $3 = 0.0, $30 = 0.0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0.0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0.0, $40 = 0.0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0.0, $46 = 0, $47 = 0.0, $48 = 0, $49 = 0, $5 = 0.0, $50 = 0, $51 = 0, $52 = 0.0, $53 = 0.0, $54 = 0.0, $55 = 0.0, $56 = 0.0, $57 = 0, $58 = 0.0, $59 = 0.0, $6 = 0.0, $60 = 0.0, $61 = 0.0;
 var $62 = 0.0, $63 = 0, $64 = 0.0, $65 = 0.0, $66 = 0.0, $67 = 0.0, $68 = 0.0, $69 = 0, $7 = 0.0, $70 = 0.0, $71 = 0.0, $72 = 0.0, $73 = 0.0, $74 = 0.0, $75 = 0, $76 = 0.0, $77 = 0.0, $78 = 0.0, $79 = 0.0, $8 = 0.0;
 var $80 = 0, $81 = 0, $9 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp;
 $0 = +HEAPF32[7000>>2]; //@line 112 "src/sprites/sprite.c"
 $1 = $0; //@line 112 "src/sprites/sprite.c"
 $2 = $1 * 0.01; //@line 112 "src/sprites/sprite.c"
 $3 = +HEAPF32[6960>>2]; //@line 112 "src/sprites/sprite.c"
 $4 = $3; //@line 112 "src/sprites/sprite.c"
 $5 = $4 + $2; //@line 112 "src/sprites/sprite.c"
 $6 = $5; //@line 112 "src/sprites/sprite.c"
 HEAPF32[6960>>2] = $6; //@line 112 "src/sprites/sprite.c"
 $7 = +HEAPF32[6968>>2]; //@line 113 "src/sprites/sprite.c"
 $8 = $7; //@line 113 "src/sprites/sprite.c"
 $9 = 0.01 * $8; //@line 113 "src/sprites/sprite.c"
 $10 = +HEAPF32[6984>>2]; //@line 113 "src/sprites/sprite.c"
 $11 = $10; //@line 113 "src/sprites/sprite.c"
 $12 = $11 + $9; //@line 113 "src/sprites/sprite.c"
 $13 = $12; //@line 113 "src/sprites/sprite.c"
 HEAPF32[6984>>2] = $13; //@line 113 "src/sprites/sprite.c"
 $14 = +HEAPF32[6976>>2]; //@line 113 "src/sprites/sprite.c"
 $15 = $14; //@line 113 "src/sprites/sprite.c"
 $16 = 0.01 * $15; //@line 113 "src/sprites/sprite.c"
 $17 = +HEAPF32[6992>>2]; //@line 113 "src/sprites/sprite.c"
 $18 = $17; //@line 113 "src/sprites/sprite.c"
 $19 = $18 + $16; //@line 113 "src/sprites/sprite.c"
 $20 = $19; //@line 113 "src/sprites/sprite.c"
 HEAPF32[6992>>2] = $20; //@line 113 "src/sprites/sprite.c"
 $21 = HEAP32[6936>>2]|0; //@line 114 "src/sprites/sprite.c"
 $22 = +HEAPF32[6960>>2]; //@line 114 "src/sprites/sprite.c"
 _square_rotate($21,$22); //@line 114 "src/sprites/sprite.c"
 $23 = HEAP32[6936>>2]|0; //@line 115 "src/sprites/sprite.c"
 $24 = +HEAPF32[6984>>2]; //@line 115 "src/sprites/sprite.c"
 $25 = +HEAPF32[6992>>2]; //@line 115 "src/sprites/sprite.c"
 _square_traslate($23,$24,$25); //@line 115 "src/sprites/sprite.c"
 $26 = HEAP32[6928>>2]|0; //@line 117 "src/sprites/sprite.c"
 $27 = +HEAPF32[6944>>2]; //@line 117 "src/sprites/sprite.c"
 $28 = +HEAPF32[7016>>2]; //@line 117 "src/sprites/sprite.c"
 _square_traslate($26,$27,$28); //@line 117 "src/sprites/sprite.c"
 $29 = HEAP32[6928>>2]|0; //@line 118 "src/sprites/sprite.c"
 $30 = +HEAPF32[6952>>2]; //@line 118 "src/sprites/sprite.c"
 _square_rotate($29,$30); //@line 118 "src/sprites/sprite.c"
 $31 = HEAP32[6888>>2]|0; //@line 120 "src/sprites/sprite.c"
 ;HEAP32[$$byval_copy+0>>2]=HEAP32[6864+0>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[6864+4>>2]|0;HEAP32[$$byval_copy+8>>2]=HEAP32[6864+8>>2]|0;HEAP32[$$byval_copy+12>>2]=HEAP32[6864+12>>2]|0; //@line 120 "src/sprites/sprite.c"
 _squareList_update_pos($$byval_copy,$31); //@line 120 "src/sprites/sprite.c"
 $32 = HEAP8[7008>>0]|0; //@line 123 "src/sprites/sprite.c"
 $33 = $32 << 24 >> 24; //@line 123 "src/sprites/sprite.c"
 $34 = ($33|0)!=(1); //@line 123 "src/sprites/sprite.c"
 if ($34) {
  $35 = +HEAPF32[6984>>2]; //@line 123 "src/sprites/sprite.c"
  $36 = $35 < -1.0; //@line 123 "src/sprites/sprite.c"
  if ($36) {
   _bounce(1.5707999467849731,6968,6976,7000,1.0); //@line 123 "src/sprites/sprite.c"
   HEAP8[7008>>0] = 1; //@line 123 "src/sprites/sprite.c"
  }
 }
 $37 = HEAP8[7008>>0]|0; //@line 124 "src/sprites/sprite.c"
 $38 = $37 << 24 >> 24; //@line 124 "src/sprites/sprite.c"
 $39 = ($38|0)!=(2); //@line 124 "src/sprites/sprite.c"
 if ($39) {
  $40 = +HEAPF32[6984>>2]; //@line 124 "src/sprites/sprite.c"
  $41 = $40 > 1.0; //@line 124 "src/sprites/sprite.c"
  if ($41) {
   _bounce(-1.5707999467849731,6968,6976,7000,1.0); //@line 124 "src/sprites/sprite.c"
   HEAP8[7008>>0] = 2; //@line 124 "src/sprites/sprite.c"
  }
 }
 $42 = HEAP8[7008>>0]|0; //@line 125 "src/sprites/sprite.c"
 $43 = $42 << 24 >> 24; //@line 125 "src/sprites/sprite.c"
 $44 = ($43|0)!=(3); //@line 125 "src/sprites/sprite.c"
 if ($44) {
  $45 = +HEAPF32[6992>>2]; //@line 125 "src/sprites/sprite.c"
  $46 = $45 > 1.0; //@line 125 "src/sprites/sprite.c"
  if ($46) {
   _bounce(-3.1415998935699463,6968,6976,7000,1.0); //@line 125 "src/sprites/sprite.c"
   HEAP8[7008>>0] = 3; //@line 125 "src/sprites/sprite.c"
  }
 }
 $47 = +HEAPF32[6992>>2]; //@line 126 "src/sprites/sprite.c"
 $48 = $47 < -1.0; //@line 126 "src/sprites/sprite.c"
 if ($48) {
  _die(); //@line 127 "src/sprites/sprite.c"
 }
 $49 = HEAP8[7008>>0]|0; //@line 129 "src/sprites/sprite.c"
 $50 = $49 << 24 >> 24; //@line 129 "src/sprites/sprite.c"
 $51 = ($50|0)!=(4); //@line 129 "src/sprites/sprite.c"
 if (!($51)) {
  STACKTOP = sp;return; //@line 134 "src/sprites/sprite.c"
 }
 $52 = +HEAPF32[6984>>2]; //@line 129 "src/sprites/sprite.c"
 $53 = $52; //@line 129 "src/sprites/sprite.c"
 $54 = +HEAPF32[6944>>2]; //@line 129 "src/sprites/sprite.c"
 $55 = $54; //@line 129 "src/sprites/sprite.c"
 $56 = $55 + 0.40000000000000002; //@line 129 "src/sprites/sprite.c"
 $57 = $53 <= $56; //@line 129 "src/sprites/sprite.c"
 if (!($57)) {
  STACKTOP = sp;return; //@line 134 "src/sprites/sprite.c"
 }
 $58 = +HEAPF32[6984>>2]; //@line 129 "src/sprites/sprite.c"
 $59 = $58; //@line 129 "src/sprites/sprite.c"
 $60 = +HEAPF32[6944>>2]; //@line 129 "src/sprites/sprite.c"
 $61 = $60; //@line 129 "src/sprites/sprite.c"
 $62 = $61 - 0.40000000000000002; //@line 129 "src/sprites/sprite.c"
 $63 = $59 >= $62; //@line 129 "src/sprites/sprite.c"
 if (!($63)) {
  STACKTOP = sp;return; //@line 134 "src/sprites/sprite.c"
 }
 $64 = +HEAPF32[6992>>2]; //@line 129 "src/sprites/sprite.c"
 $65 = $64; //@line 129 "src/sprites/sprite.c"
 $66 = +HEAPF32[7016>>2]; //@line 129 "src/sprites/sprite.c"
 $67 = $66; //@line 129 "src/sprites/sprite.c"
 $68 = $67 + 0.050000000000000003; //@line 129 "src/sprites/sprite.c"
 $69 = $65 <= $68; //@line 129 "src/sprites/sprite.c"
 if (!($69)) {
  STACKTOP = sp;return; //@line 134 "src/sprites/sprite.c"
 }
 $70 = +HEAPF32[6992>>2]; //@line 129 "src/sprites/sprite.c"
 $71 = $70; //@line 129 "src/sprites/sprite.c"
 $72 = +HEAPF32[7016>>2]; //@line 129 "src/sprites/sprite.c"
 $73 = $72; //@line 129 "src/sprites/sprite.c"
 $74 = $73 - 0.050000000000000003; //@line 129 "src/sprites/sprite.c"
 $75 = $71 >= $74; //@line 129 "src/sprites/sprite.c"
 if (!($75)) {
  STACKTOP = sp;return; //@line 134 "src/sprites/sprite.c"
 }
 $76 = +HEAPF32[6952>>2]; //@line 130 "src/sprites/sprite.c"
 $77 = $76; //@line 130 "src/sprites/sprite.c"
 $78 = 0.0 - $77; //@line 130 "src/sprites/sprite.c"
 $79 = $78; //@line 130 "src/sprites/sprite.c"
 _bounce($79,6968,6976,7000,1.2000000476837158); //@line 130 "src/sprites/sprite.c"
 HEAP8[7008>>0] = 4; //@line 131 "src/sprites/sprite.c"
 $80 = HEAP32[7024>>2]|0; //@line 132 "src/sprites/sprite.c"
 $81 = (($80) + 1)|0; //@line 132 "src/sprites/sprite.c"
 HEAP32[7024>>2] = $81; //@line 132 "src/sprites/sprite.c"
 STACKTOP = sp;return; //@line 134 "src/sprites/sprite.c"
}
function _die() {
 var $0 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vararg_buffer = sp; //@line 138 "src/sprites/sprite.c"
 HEAP8[8>>0] = 0; //@line 138 "src/sprites/sprite.c"
 $0 = HEAP32[7024>>2]|0; //@line 139 "src/sprites/sprite.c"
 HEAP32[$vararg_buffer>>2] = $0; //@line 139 "src/sprites/sprite.c"
 (_printf((7032|0),($vararg_buffer|0))|0); //@line 139 "src/sprites/sprite.c"
 STACKTOP = sp;return; //@line 141 "src/sprites/sprite.c"
}
function _show_info_log($object,$glGet__iv,$glGet__InfoLog) {
 $object = $object|0;
 $glGet__iv = $glGet__iv|0;
 $glGet__InfoLog = $glGet__InfoLog|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $log = 0, $log_length = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vararg_buffer = sp;
 $log_length = sp + 8|0;
 $0 = $object;
 $1 = $glGet__iv;
 $2 = $glGet__InfoLog;
 $3 = $1; //@line 38 "src/sprites/../puun/gf/gl_help.c"
 $4 = $0; //@line 38 "src/sprites/../puun/gf/gl_help.c"
 FUNCTION_TABLE_viii[$3 & 15]($4,35716,$log_length); //@line 38 "src/sprites/../puun/gf/gl_help.c"
 $5 = HEAP32[$log_length>>2]|0; //@line 39 "src/sprites/../puun/gf/gl_help.c"
 $6 = (_malloc($5)|0); //@line 39 "src/sprites/../puun/gf/gl_help.c"
 $log = $6; //@line 39 "src/sprites/../puun/gf/gl_help.c"
 $7 = $2; //@line 40 "src/sprites/../puun/gf/gl_help.c"
 $8 = $0; //@line 40 "src/sprites/../puun/gf/gl_help.c"
 $9 = HEAP32[$log_length>>2]|0; //@line 40 "src/sprites/../puun/gf/gl_help.c"
 $10 = $log; //@line 40 "src/sprites/../puun/gf/gl_help.c"
 FUNCTION_TABLE_viiii[$7 & 7]($8,$9,0,$10); //@line 40 "src/sprites/../puun/gf/gl_help.c"
 $11 = HEAP32[_stderr>>2]|0; //@line 41 "src/sprites/../puun/gf/gl_help.c"
 $12 = $log; //@line 41 "src/sprites/../puun/gf/gl_help.c"
 HEAP32[$vararg_buffer>>2] = $12; //@line 41 "src/sprites/../puun/gf/gl_help.c"
 (_fprintf(($11|0),(10728|0),($vararg_buffer|0))|0); //@line 41 "src/sprites/../puun/gf/gl_help.c"
 $13 = $log; //@line 42 "src/sprites/../puun/gf/gl_help.c"
 _free($13); //@line 42 "src/sprites/../puun/gf/gl_help.c"
 STACKTOP = sp;return; //@line 43 "src/sprites/../puun/gf/gl_help.c"
}
function _stbi__fopen($filename,$mode) {
 $filename = $filename|0;
 $mode = $mode|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $f = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $filename;
 $1 = $mode;
 $2 = $0; //@line 1022 "src/sprites/../puun/gf/../../other/stb_image.h"
 $3 = $1; //@line 1022 "src/sprites/../puun/gf/../../other/stb_image.h"
 $4 = (_fopen(($2|0),($3|0))|0); //@line 1022 "src/sprites/../puun/gf/../../other/stb_image.h"
 $f = $4; //@line 1022 "src/sprites/../puun/gf/../../other/stb_image.h"
 $5 = $f; //@line 1024 "src/sprites/../puun/gf/../../other/stb_image.h"
 STACKTOP = sp;return ($5|0); //@line 1024 "src/sprites/../puun/gf/../../other/stb_image.h"
}
function _stbi__err($str) {
 $str = $str|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $str;
 $1 = $0; //@line 882 "src/sprites/../puun/gf/../../other/stb_image.h"
 HEAP32[168>>2] = $1; //@line 882 "src/sprites/../puun/gf/../../other/stb_image.h"
 STACKTOP = sp;return 0; //@line 883 "src/sprites/../puun/gf/../../other/stb_image.h"
}
function _stbi__start_file($s,$f) {
 $s = $s|0;
 $f = $f|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $s;
 $1 = $f;
 $2 = $0; //@line 803 "src/sprites/../puun/gf/../../other/stb_image.h"
 $3 = $1; //@line 803 "src/sprites/../puun/gf/../../other/stb_image.h"
 _stbi__start_callbacks($2,10712,$3); //@line 803 "src/sprites/../puun/gf/../../other/stb_image.h"
 STACKTOP = sp;return; //@line 804 "src/sprites/../puun/gf/../../other/stb_image.h"
}
function _stbi__load_flip($s,$x,$y,$comp,$req_comp) {
 $s = $s|0;
 $x = $x|0;
 $y = $y|0;
 $comp = $comp|0;
 $req_comp = $req_comp|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $col = 0, $depth = 0, $h = 0, $result = 0, $row = 0;
 var $temp = 0, $w = 0, $z = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $s;
 $1 = $x;
 $2 = $y;
 $3 = $comp;
 $4 = $req_comp;
 $5 = $0; //@line 968 "src/sprites/../puun/gf/../../other/stb_image.h"
 $6 = $1; //@line 968 "src/sprites/../puun/gf/../../other/stb_image.h"
 $7 = $2; //@line 968 "src/sprites/../puun/gf/../../other/stb_image.h"
 $8 = $3; //@line 968 "src/sprites/../puun/gf/../../other/stb_image.h"
 $9 = $4; //@line 968 "src/sprites/../puun/gf/../../other/stb_image.h"
 $10 = (_stbi__load_main($5,$6,$7,$8,$9)|0); //@line 968 "src/sprites/../puun/gf/../../other/stb_image.h"
 $result = $10; //@line 968 "src/sprites/../puun/gf/../../other/stb_image.h"
 $11 = HEAP32[176>>2]|0; //@line 970 "src/sprites/../puun/gf/../../other/stb_image.h"
 $12 = ($11|0)!=(0); //@line 970 "src/sprites/../puun/gf/../../other/stb_image.h"
 if (!($12)) {
  $94 = $result; //@line 988 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($94|0); //@line 988 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $13 = $result; //@line 970 "src/sprites/../puun/gf/../../other/stb_image.h"
 $14 = ($13|0)!=(0|0); //@line 970 "src/sprites/../puun/gf/../../other/stb_image.h"
 if (!($14)) {
  $94 = $result; //@line 988 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($94|0); //@line 988 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $15 = $1; //@line 971 "src/sprites/../puun/gf/../../other/stb_image.h"
 $16 = HEAP32[$15>>2]|0; //@line 971 "src/sprites/../puun/gf/../../other/stb_image.h"
 $w = $16; //@line 971 "src/sprites/../puun/gf/../../other/stb_image.h"
 $17 = $2; //@line 971 "src/sprites/../puun/gf/../../other/stb_image.h"
 $18 = HEAP32[$17>>2]|0; //@line 971 "src/sprites/../puun/gf/../../other/stb_image.h"
 $h = $18; //@line 971 "src/sprites/../puun/gf/../../other/stb_image.h"
 $19 = $4; //@line 972 "src/sprites/../puun/gf/../../other/stb_image.h"
 $20 = ($19|0)!=(0); //@line 972 "src/sprites/../puun/gf/../../other/stb_image.h"
 if ($20) {
  $21 = $4; //@line 972 "src/sprites/../puun/gf/../../other/stb_image.h"
  $24 = $21;
 } else {
  $22 = $3; //@line 972 "src/sprites/../puun/gf/../../other/stb_image.h"
  $23 = HEAP32[$22>>2]|0; //@line 972 "src/sprites/../puun/gf/../../other/stb_image.h"
  $24 = $23;
 }
 $depth = $24; //@line 972 "src/sprites/../puun/gf/../../other/stb_image.h"
 $row = 0; //@line 977 "src/sprites/../puun/gf/../../other/stb_image.h"
 while(1) {
  $25 = $row; //@line 977 "src/sprites/../puun/gf/../../other/stb_image.h"
  $26 = $h; //@line 977 "src/sprites/../puun/gf/../../other/stb_image.h"
  $27 = $26 >> 1; //@line 977 "src/sprites/../puun/gf/../../other/stb_image.h"
  $28 = ($25|0)<($27|0); //@line 977 "src/sprites/../puun/gf/../../other/stb_image.h"
  if (!($28)) {
   break;
  }
  $col = 0; //@line 978 "src/sprites/../puun/gf/../../other/stb_image.h"
  while(1) {
   $29 = $col; //@line 978 "src/sprites/../puun/gf/../../other/stb_image.h"
   $30 = $w; //@line 978 "src/sprites/../puun/gf/../../other/stb_image.h"
   $31 = ($29|0)<($30|0); //@line 978 "src/sprites/../puun/gf/../../other/stb_image.h"
   if (!($31)) {
    break;
   }
   $z = 0; //@line 979 "src/sprites/../puun/gf/../../other/stb_image.h"
   while(1) {
    $32 = $z; //@line 979 "src/sprites/../puun/gf/../../other/stb_image.h"
    $33 = $depth; //@line 979 "src/sprites/../puun/gf/../../other/stb_image.h"
    $34 = ($32|0)<($33|0); //@line 979 "src/sprites/../puun/gf/../../other/stb_image.h"
    if (!($34)) {
     break;
    }
    $35 = $row; //@line 980 "src/sprites/../puun/gf/../../other/stb_image.h"
    $36 = $w; //@line 980 "src/sprites/../puun/gf/../../other/stb_image.h"
    $37 = Math_imul($35, $36)|0; //@line 980 "src/sprites/../puun/gf/../../other/stb_image.h"
    $38 = $col; //@line 980 "src/sprites/../puun/gf/../../other/stb_image.h"
    $39 = (($37) + ($38))|0; //@line 980 "src/sprites/../puun/gf/../../other/stb_image.h"
    $40 = $depth; //@line 980 "src/sprites/../puun/gf/../../other/stb_image.h"
    $41 = Math_imul($39, $40)|0; //@line 980 "src/sprites/../puun/gf/../../other/stb_image.h"
    $42 = $z; //@line 980 "src/sprites/../puun/gf/../../other/stb_image.h"
    $43 = (($41) + ($42))|0; //@line 980 "src/sprites/../puun/gf/../../other/stb_image.h"
    $44 = $result; //@line 980 "src/sprites/../puun/gf/../../other/stb_image.h"
    $45 = (($44) + ($43)|0); //@line 980 "src/sprites/../puun/gf/../../other/stb_image.h"
    $46 = HEAP8[$45>>0]|0; //@line 980 "src/sprites/../puun/gf/../../other/stb_image.h"
    $temp = $46; //@line 980 "src/sprites/../puun/gf/../../other/stb_image.h"
    $47 = $h; //@line 981 "src/sprites/../puun/gf/../../other/stb_image.h"
    $48 = $row; //@line 981 "src/sprites/../puun/gf/../../other/stb_image.h"
    $49 = (($47) - ($48))|0; //@line 981 "src/sprites/../puun/gf/../../other/stb_image.h"
    $50 = (($49) - 1)|0; //@line 981 "src/sprites/../puun/gf/../../other/stb_image.h"
    $51 = $w; //@line 981 "src/sprites/../puun/gf/../../other/stb_image.h"
    $52 = Math_imul($50, $51)|0; //@line 981 "src/sprites/../puun/gf/../../other/stb_image.h"
    $53 = $col; //@line 981 "src/sprites/../puun/gf/../../other/stb_image.h"
    $54 = (($52) + ($53))|0; //@line 981 "src/sprites/../puun/gf/../../other/stb_image.h"
    $55 = $depth; //@line 981 "src/sprites/../puun/gf/../../other/stb_image.h"
    $56 = Math_imul($54, $55)|0; //@line 981 "src/sprites/../puun/gf/../../other/stb_image.h"
    $57 = $z; //@line 981 "src/sprites/../puun/gf/../../other/stb_image.h"
    $58 = (($56) + ($57))|0; //@line 981 "src/sprites/../puun/gf/../../other/stb_image.h"
    $59 = $result; //@line 981 "src/sprites/../puun/gf/../../other/stb_image.h"
    $60 = (($59) + ($58)|0); //@line 981 "src/sprites/../puun/gf/../../other/stb_image.h"
    $61 = HEAP8[$60>>0]|0; //@line 981 "src/sprites/../puun/gf/../../other/stb_image.h"
    $62 = $row; //@line 981 "src/sprites/../puun/gf/../../other/stb_image.h"
    $63 = $w; //@line 981 "src/sprites/../puun/gf/../../other/stb_image.h"
    $64 = Math_imul($62, $63)|0; //@line 981 "src/sprites/../puun/gf/../../other/stb_image.h"
    $65 = $col; //@line 981 "src/sprites/../puun/gf/../../other/stb_image.h"
    $66 = (($64) + ($65))|0; //@line 981 "src/sprites/../puun/gf/../../other/stb_image.h"
    $67 = $depth; //@line 981 "src/sprites/../puun/gf/../../other/stb_image.h"
    $68 = Math_imul($66, $67)|0; //@line 981 "src/sprites/../puun/gf/../../other/stb_image.h"
    $69 = $z; //@line 981 "src/sprites/../puun/gf/../../other/stb_image.h"
    $70 = (($68) + ($69))|0; //@line 981 "src/sprites/../puun/gf/../../other/stb_image.h"
    $71 = $result; //@line 981 "src/sprites/../puun/gf/../../other/stb_image.h"
    $72 = (($71) + ($70)|0); //@line 981 "src/sprites/../puun/gf/../../other/stb_image.h"
    HEAP8[$72>>0] = $61; //@line 981 "src/sprites/../puun/gf/../../other/stb_image.h"
    $73 = $temp; //@line 982 "src/sprites/../puun/gf/../../other/stb_image.h"
    $74 = $h; //@line 982 "src/sprites/../puun/gf/../../other/stb_image.h"
    $75 = $row; //@line 982 "src/sprites/../puun/gf/../../other/stb_image.h"
    $76 = (($74) - ($75))|0; //@line 982 "src/sprites/../puun/gf/../../other/stb_image.h"
    $77 = (($76) - 1)|0; //@line 982 "src/sprites/../puun/gf/../../other/stb_image.h"
    $78 = $w; //@line 982 "src/sprites/../puun/gf/../../other/stb_image.h"
    $79 = Math_imul($77, $78)|0; //@line 982 "src/sprites/../puun/gf/../../other/stb_image.h"
    $80 = $col; //@line 982 "src/sprites/../puun/gf/../../other/stb_image.h"
    $81 = (($79) + ($80))|0; //@line 982 "src/sprites/../puun/gf/../../other/stb_image.h"
    $82 = $depth; //@line 982 "src/sprites/../puun/gf/../../other/stb_image.h"
    $83 = Math_imul($81, $82)|0; //@line 982 "src/sprites/../puun/gf/../../other/stb_image.h"
    $84 = $z; //@line 982 "src/sprites/../puun/gf/../../other/stb_image.h"
    $85 = (($83) + ($84))|0; //@line 982 "src/sprites/../puun/gf/../../other/stb_image.h"
    $86 = $result; //@line 982 "src/sprites/../puun/gf/../../other/stb_image.h"
    $87 = (($86) + ($85)|0); //@line 982 "src/sprites/../puun/gf/../../other/stb_image.h"
    HEAP8[$87>>0] = $73; //@line 982 "src/sprites/../puun/gf/../../other/stb_image.h"
    $88 = $z; //@line 979 "src/sprites/../puun/gf/../../other/stb_image.h"
    $89 = (($88) + 1)|0; //@line 979 "src/sprites/../puun/gf/../../other/stb_image.h"
    $z = $89; //@line 979 "src/sprites/../puun/gf/../../other/stb_image.h"
   }
   $90 = $col; //@line 978 "src/sprites/../puun/gf/../../other/stb_image.h"
   $91 = (($90) + 1)|0; //@line 978 "src/sprites/../puun/gf/../../other/stb_image.h"
   $col = $91; //@line 978 "src/sprites/../puun/gf/../../other/stb_image.h"
  }
  $92 = $row; //@line 977 "src/sprites/../puun/gf/../../other/stb_image.h"
  $93 = (($92) + 1)|0; //@line 977 "src/sprites/../puun/gf/../../other/stb_image.h"
  $row = $93; //@line 977 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $94 = $result; //@line 988 "src/sprites/../puun/gf/../../other/stb_image.h"
 STACKTOP = sp;return ($94|0); //@line 988 "src/sprites/../puun/gf/../../other/stb_image.h"
}
function _stbi__start_callbacks($s,$c,$user) {
 $s = $s|0;
 $c = $c|0;
 $user = $user|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $s;
 $1 = $c;
 $2 = $user;
 $3 = $0; //@line 769 "src/sprites/../puun/gf/../../other/stb_image.h"
 $4 = (($3) + 16|0); //@line 769 "src/sprites/../puun/gf/../../other/stb_image.h"
 $5 = $1; //@line 769 "src/sprites/../puun/gf/../../other/stb_image.h"
 ;HEAP32[$4+0>>2]=HEAP32[$5+0>>2]|0;HEAP32[$4+4>>2]=HEAP32[$5+4>>2]|0;HEAP32[$4+8>>2]=HEAP32[$5+8>>2]|0; //@line 769 "src/sprites/../puun/gf/../../other/stb_image.h"
 $6 = $2; //@line 770 "src/sprites/../puun/gf/../../other/stb_image.h"
 $7 = $0; //@line 770 "src/sprites/../puun/gf/../../other/stb_image.h"
 $8 = (($7) + 28|0); //@line 770 "src/sprites/../puun/gf/../../other/stb_image.h"
 HEAP32[$8>>2] = $6; //@line 770 "src/sprites/../puun/gf/../../other/stb_image.h"
 $9 = $0; //@line 771 "src/sprites/../puun/gf/../../other/stb_image.h"
 $10 = (($9) + 36|0); //@line 771 "src/sprites/../puun/gf/../../other/stb_image.h"
 HEAP32[$10>>2] = 128; //@line 771 "src/sprites/../puun/gf/../../other/stb_image.h"
 $11 = $0; //@line 772 "src/sprites/../puun/gf/../../other/stb_image.h"
 $12 = (($11) + 32|0); //@line 772 "src/sprites/../puun/gf/../../other/stb_image.h"
 HEAP32[$12>>2] = 1; //@line 772 "src/sprites/../puun/gf/../../other/stb_image.h"
 $13 = $0; //@line 773 "src/sprites/../puun/gf/../../other/stb_image.h"
 $14 = (($13) + 40|0); //@line 773 "src/sprites/../puun/gf/../../other/stb_image.h"
 $15 = $0; //@line 773 "src/sprites/../puun/gf/../../other/stb_image.h"
 $16 = (($15) + 176|0); //@line 773 "src/sprites/../puun/gf/../../other/stb_image.h"
 HEAP32[$16>>2] = $14; //@line 773 "src/sprites/../puun/gf/../../other/stb_image.h"
 $17 = $0; //@line 774 "src/sprites/../puun/gf/../../other/stb_image.h"
 _stbi__refill_buffer($17); //@line 774 "src/sprites/../puun/gf/../../other/stb_image.h"
 STACKTOP = sp;return; //@line 775 "src/sprites/../puun/gf/../../other/stb_image.h"
}
function _stbi__hdr_test($s) {
 $s = $s|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $r = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $s;
 $1 = $0; //@line 5787 "src/sprites/../puun/gf/../../other/stb_image.h"
 $2 = (_stbi__hdr_test_core($1)|0); //@line 5787 "src/sprites/../puun/gf/../../other/stb_image.h"
 $r = $2; //@line 5787 "src/sprites/../puun/gf/../../other/stb_image.h"
 $3 = $0; //@line 5788 "src/sprites/../puun/gf/../../other/stb_image.h"
 _stbi__rewind($3); //@line 5788 "src/sprites/../puun/gf/../../other/stb_image.h"
 $4 = $r; //@line 5789 "src/sprites/../puun/gf/../../other/stb_image.h"
 STACKTOP = sp;return ($4|0); //@line 5789 "src/sprites/../puun/gf/../../other/stb_image.h"
}
function _stbi__malloc($size) {
 $size = $size|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $size;
 $1 = $0; //@line 888 "src/sprites/../puun/gf/../../other/stb_image.h"
 $2 = (_malloc($1)|0); //@line 888 "src/sprites/../puun/gf/../../other/stb_image.h"
 STACKTOP = sp;return ($2|0); //@line 888 "src/sprites/../puun/gf/../../other/stb_image.h"
}
function _stbi__do_zlib($a,$obuf,$olen,$exp,$parse_header) {
 $a = $a|0;
 $obuf = $obuf|0;
 $olen = $olen|0;
 $exp = $exp|0;
 $parse_header = $parse_header|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $a;
 $1 = $obuf;
 $2 = $olen;
 $3 = $exp;
 $4 = $parse_header;
 $5 = $1; //@line 3798 "src/sprites/../puun/gf/../../other/stb_image.h"
 $6 = $0; //@line 3798 "src/sprites/../puun/gf/../../other/stb_image.h"
 $7 = (($6) + 20|0); //@line 3798 "src/sprites/../puun/gf/../../other/stb_image.h"
 HEAP32[$7>>2] = $5; //@line 3798 "src/sprites/../puun/gf/../../other/stb_image.h"
 $8 = $1; //@line 3799 "src/sprites/../puun/gf/../../other/stb_image.h"
 $9 = $0; //@line 3799 "src/sprites/../puun/gf/../../other/stb_image.h"
 $10 = (($9) + 16|0); //@line 3799 "src/sprites/../puun/gf/../../other/stb_image.h"
 HEAP32[$10>>2] = $8; //@line 3799 "src/sprites/../puun/gf/../../other/stb_image.h"
 $11 = $1; //@line 3800 "src/sprites/../puun/gf/../../other/stb_image.h"
 $12 = $2; //@line 3800 "src/sprites/../puun/gf/../../other/stb_image.h"
 $13 = (($11) + ($12)|0); //@line 3800 "src/sprites/../puun/gf/../../other/stb_image.h"
 $14 = $0; //@line 3800 "src/sprites/../puun/gf/../../other/stb_image.h"
 $15 = (($14) + 24|0); //@line 3800 "src/sprites/../puun/gf/../../other/stb_image.h"
 HEAP32[$15>>2] = $13; //@line 3800 "src/sprites/../puun/gf/../../other/stb_image.h"
 $16 = $3; //@line 3801 "src/sprites/../puun/gf/../../other/stb_image.h"
 $17 = $0; //@line 3801 "src/sprites/../puun/gf/../../other/stb_image.h"
 $18 = (($17) + 28|0); //@line 3801 "src/sprites/../puun/gf/../../other/stb_image.h"
 HEAP32[$18>>2] = $16; //@line 3801 "src/sprites/../puun/gf/../../other/stb_image.h"
 $19 = $0; //@line 3803 "src/sprites/../puun/gf/../../other/stb_image.h"
 $20 = $4; //@line 3803 "src/sprites/../puun/gf/../../other/stb_image.h"
 $21 = (_stbi__parse_zlib($19,$20)|0); //@line 3803 "src/sprites/../puun/gf/../../other/stb_image.h"
 STACKTOP = sp;return ($21|0); //@line 3803 "src/sprites/../puun/gf/../../other/stb_image.h"
}
function _stbi__get16le($s) {
 $s = $s|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $z = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $s;
 $1 = $0; //@line 1289 "src/sprites/../puun/gf/../../other/stb_image.h"
 $2 = (_stbi__get8($1)|0); //@line 1289 "src/sprites/../puun/gf/../../other/stb_image.h"
 $3 = $2&255; //@line 1289 "src/sprites/../puun/gf/../../other/stb_image.h"
 $z = $3; //@line 1289 "src/sprites/../puun/gf/../../other/stb_image.h"
 $4 = $z; //@line 1290 "src/sprites/../puun/gf/../../other/stb_image.h"
 $5 = $0; //@line 1290 "src/sprites/../puun/gf/../../other/stb_image.h"
 $6 = (_stbi__get8($5)|0); //@line 1290 "src/sprites/../puun/gf/../../other/stb_image.h"
 $7 = $6&255; //@line 1290 "src/sprites/../puun/gf/../../other/stb_image.h"
 $8 = $7 << 8; //@line 1290 "src/sprites/../puun/gf/../../other/stb_image.h"
 $9 = (($4) + ($8))|0; //@line 1290 "src/sprites/../puun/gf/../../other/stb_image.h"
 STACKTOP = sp;return ($9|0); //@line 1290 "src/sprites/../puun/gf/../../other/stb_image.h"
}
function _stbi__skip($s,$n) {
 $s = $s|0;
 $n = $n|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $blen = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $s;
 $1 = $n;
 $2 = $1; //@line 1236 "src/sprites/../puun/gf/../../other/stb_image.h"
 $3 = ($2|0)<(0); //@line 1236 "src/sprites/../puun/gf/../../other/stb_image.h"
 if ($3) {
  $4 = $0; //@line 1237 "src/sprites/../puun/gf/../../other/stb_image.h"
  $5 = (($4) + 172|0); //@line 1237 "src/sprites/../puun/gf/../../other/stb_image.h"
  $6 = HEAP32[$5>>2]|0; //@line 1237 "src/sprites/../puun/gf/../../other/stb_image.h"
  $7 = $0; //@line 1237 "src/sprites/../puun/gf/../../other/stb_image.h"
  $8 = (($7) + 168|0); //@line 1237 "src/sprites/../puun/gf/../../other/stb_image.h"
  HEAP32[$8>>2] = $6; //@line 1237 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return; //@line 1249 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $9 = $0; //@line 1240 "src/sprites/../puun/gf/../../other/stb_image.h"
 $10 = (($9) + 16|0); //@line 1240 "src/sprites/../puun/gf/../../other/stb_image.h"
 $11 = HEAP32[$10>>2]|0; //@line 1240 "src/sprites/../puun/gf/../../other/stb_image.h"
 $12 = ($11|0)!=(0|0); //@line 1240 "src/sprites/../puun/gf/../../other/stb_image.h"
 do {
  if ($12) {
   $13 = $0; //@line 1241 "src/sprites/../puun/gf/../../other/stb_image.h"
   $14 = (($13) + 172|0); //@line 1241 "src/sprites/../puun/gf/../../other/stb_image.h"
   $15 = HEAP32[$14>>2]|0; //@line 1241 "src/sprites/../puun/gf/../../other/stb_image.h"
   $16 = $0; //@line 1241 "src/sprites/../puun/gf/../../other/stb_image.h"
   $17 = (($16) + 168|0); //@line 1241 "src/sprites/../puun/gf/../../other/stb_image.h"
   $18 = HEAP32[$17>>2]|0; //@line 1241 "src/sprites/../puun/gf/../../other/stb_image.h"
   $19 = $15; //@line 1241 "src/sprites/../puun/gf/../../other/stb_image.h"
   $20 = $18; //@line 1241 "src/sprites/../puun/gf/../../other/stb_image.h"
   $21 = (($19) - ($20))|0; //@line 1241 "src/sprites/../puun/gf/../../other/stb_image.h"
   $blen = $21; //@line 1241 "src/sprites/../puun/gf/../../other/stb_image.h"
   $22 = $blen; //@line 1242 "src/sprites/../puun/gf/../../other/stb_image.h"
   $23 = $1; //@line 1242 "src/sprites/../puun/gf/../../other/stb_image.h"
   $24 = ($22|0)<($23|0); //@line 1242 "src/sprites/../puun/gf/../../other/stb_image.h"
   if (!($24)) {
    break;
   }
   $25 = $0; //@line 1243 "src/sprites/../puun/gf/../../other/stb_image.h"
   $26 = (($25) + 172|0); //@line 1243 "src/sprites/../puun/gf/../../other/stb_image.h"
   $27 = HEAP32[$26>>2]|0; //@line 1243 "src/sprites/../puun/gf/../../other/stb_image.h"
   $28 = $0; //@line 1243 "src/sprites/../puun/gf/../../other/stb_image.h"
   $29 = (($28) + 168|0); //@line 1243 "src/sprites/../puun/gf/../../other/stb_image.h"
   HEAP32[$29>>2] = $27; //@line 1243 "src/sprites/../puun/gf/../../other/stb_image.h"
   $30 = $0; //@line 1244 "src/sprites/../puun/gf/../../other/stb_image.h"
   $31 = (($30) + 16|0); //@line 1244 "src/sprites/../puun/gf/../../other/stb_image.h"
   $32 = (($31) + 4|0); //@line 1244 "src/sprites/../puun/gf/../../other/stb_image.h"
   $33 = HEAP32[$32>>2]|0; //@line 1244 "src/sprites/../puun/gf/../../other/stb_image.h"
   $34 = $0; //@line 1244 "src/sprites/../puun/gf/../../other/stb_image.h"
   $35 = (($34) + 28|0); //@line 1244 "src/sprites/../puun/gf/../../other/stb_image.h"
   $36 = HEAP32[$35>>2]|0; //@line 1244 "src/sprites/../puun/gf/../../other/stb_image.h"
   $37 = $1; //@line 1244 "src/sprites/../puun/gf/../../other/stb_image.h"
   $38 = $blen; //@line 1244 "src/sprites/../puun/gf/../../other/stb_image.h"
   $39 = (($37) - ($38))|0; //@line 1244 "src/sprites/../puun/gf/../../other/stb_image.h"
   FUNCTION_TABLE_vii[$33 & 3]($36,$39); //@line 1244 "src/sprites/../puun/gf/../../other/stb_image.h"
   STACKTOP = sp;return; //@line 1249 "src/sprites/../puun/gf/../../other/stb_image.h"
  }
 } while(0);
 $40 = $1; //@line 1248 "src/sprites/../puun/gf/../../other/stb_image.h"
 $41 = $0; //@line 1248 "src/sprites/../puun/gf/../../other/stb_image.h"
 $42 = (($41) + 168|0); //@line 1248 "src/sprites/../puun/gf/../../other/stb_image.h"
 $43 = HEAP32[$42>>2]|0; //@line 1248 "src/sprites/../puun/gf/../../other/stb_image.h"
 $44 = (($43) + ($40)|0); //@line 1248 "src/sprites/../puun/gf/../../other/stb_image.h"
 HEAP32[$42>>2] = $44; //@line 1248 "src/sprites/../puun/gf/../../other/stb_image.h"
 STACKTOP = sp;return; //@line 1249 "src/sprites/../puun/gf/../../other/stb_image.h"
}
function _stbi__rewind($s) {
 $s = $s|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $s;
 $1 = $0; //@line 815 "src/sprites/../puun/gf/../../other/stb_image.h"
 $2 = (($1) + 176|0); //@line 815 "src/sprites/../puun/gf/../../other/stb_image.h"
 $3 = HEAP32[$2>>2]|0; //@line 815 "src/sprites/../puun/gf/../../other/stb_image.h"
 $4 = $0; //@line 815 "src/sprites/../puun/gf/../../other/stb_image.h"
 $5 = (($4) + 168|0); //@line 815 "src/sprites/../puun/gf/../../other/stb_image.h"
 HEAP32[$5>>2] = $3; //@line 815 "src/sprites/../puun/gf/../../other/stb_image.h"
 STACKTOP = sp;return; //@line 816 "src/sprites/../puun/gf/../../other/stb_image.h"
}
function _stbi__get8($s) {
 $s = $s|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $s;
 $2 = $1; //@line 1213 "src/sprites/../puun/gf/../../other/stb_image.h"
 $3 = (($2) + 168|0); //@line 1213 "src/sprites/../puun/gf/../../other/stb_image.h"
 $4 = HEAP32[$3>>2]|0; //@line 1213 "src/sprites/../puun/gf/../../other/stb_image.h"
 $5 = $1; //@line 1213 "src/sprites/../puun/gf/../../other/stb_image.h"
 $6 = (($5) + 172|0); //@line 1213 "src/sprites/../puun/gf/../../other/stb_image.h"
 $7 = HEAP32[$6>>2]|0; //@line 1213 "src/sprites/../puun/gf/../../other/stb_image.h"
 $8 = ($4>>>0)<($7>>>0); //@line 1213 "src/sprites/../puun/gf/../../other/stb_image.h"
 if ($8) {
  $9 = $1; //@line 1214 "src/sprites/../puun/gf/../../other/stb_image.h"
  $10 = (($9) + 168|0); //@line 1214 "src/sprites/../puun/gf/../../other/stb_image.h"
  $11 = HEAP32[$10>>2]|0; //@line 1214 "src/sprites/../puun/gf/../../other/stb_image.h"
  $12 = (($11) + 1|0); //@line 1214 "src/sprites/../puun/gf/../../other/stb_image.h"
  HEAP32[$10>>2] = $12; //@line 1214 "src/sprites/../puun/gf/../../other/stb_image.h"
  $13 = HEAP8[$11>>0]|0; //@line 1214 "src/sprites/../puun/gf/../../other/stb_image.h"
  $0 = $13; //@line 1214 "src/sprites/../puun/gf/../../other/stb_image.h"
  $24 = $0; //@line 1220 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($24|0); //@line 1220 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $14 = $1; //@line 1215 "src/sprites/../puun/gf/../../other/stb_image.h"
 $15 = (($14) + 32|0); //@line 1215 "src/sprites/../puun/gf/../../other/stb_image.h"
 $16 = HEAP32[$15>>2]|0; //@line 1215 "src/sprites/../puun/gf/../../other/stb_image.h"
 $17 = ($16|0)!=(0); //@line 1215 "src/sprites/../puun/gf/../../other/stb_image.h"
 if ($17) {
  $18 = $1; //@line 1216 "src/sprites/../puun/gf/../../other/stb_image.h"
  _stbi__refill_buffer($18); //@line 1216 "src/sprites/../puun/gf/../../other/stb_image.h"
  $19 = $1; //@line 1217 "src/sprites/../puun/gf/../../other/stb_image.h"
  $20 = (($19) + 168|0); //@line 1217 "src/sprites/../puun/gf/../../other/stb_image.h"
  $21 = HEAP32[$20>>2]|0; //@line 1217 "src/sprites/../puun/gf/../../other/stb_image.h"
  $22 = (($21) + 1|0); //@line 1217 "src/sprites/../puun/gf/../../other/stb_image.h"
  HEAP32[$20>>2] = $22; //@line 1217 "src/sprites/../puun/gf/../../other/stb_image.h"
  $23 = HEAP8[$21>>0]|0; //@line 1217 "src/sprites/../puun/gf/../../other/stb_image.h"
  $0 = $23; //@line 1217 "src/sprites/../puun/gf/../../other/stb_image.h"
  $24 = $0; //@line 1220 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($24|0); //@line 1220 "src/sprites/../puun/gf/../../other/stb_image.h"
 } else {
  $0 = 0; //@line 1219 "src/sprites/../puun/gf/../../other/stb_image.h"
  $24 = $0; //@line 1220 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($24|0); //@line 1220 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 return (0)|0;
}
function _stbi__refill_buffer($s) {
 $s = $s|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $n = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $s;
 $1 = $0; //@line 1197 "src/sprites/../puun/gf/../../other/stb_image.h"
 $2 = (($1) + 16|0); //@line 1197 "src/sprites/../puun/gf/../../other/stb_image.h"
 $3 = HEAP32[$2>>2]|0; //@line 1197 "src/sprites/../puun/gf/../../other/stb_image.h"
 $4 = $0; //@line 1197 "src/sprites/../puun/gf/../../other/stb_image.h"
 $5 = (($4) + 28|0); //@line 1197 "src/sprites/../puun/gf/../../other/stb_image.h"
 $6 = HEAP32[$5>>2]|0; //@line 1197 "src/sprites/../puun/gf/../../other/stb_image.h"
 $7 = $0; //@line 1197 "src/sprites/../puun/gf/../../other/stb_image.h"
 $8 = (($7) + 40|0); //@line 1197 "src/sprites/../puun/gf/../../other/stb_image.h"
 $9 = $0; //@line 1197 "src/sprites/../puun/gf/../../other/stb_image.h"
 $10 = (($9) + 36|0); //@line 1197 "src/sprites/../puun/gf/../../other/stb_image.h"
 $11 = HEAP32[$10>>2]|0; //@line 1197 "src/sprites/../puun/gf/../../other/stb_image.h"
 $12 = (FUNCTION_TABLE_iiii[$3 & 1]($6,$8,$11)|0); //@line 1197 "src/sprites/../puun/gf/../../other/stb_image.h"
 $n = $12; //@line 1197 "src/sprites/../puun/gf/../../other/stb_image.h"
 $13 = $n; //@line 1198 "src/sprites/../puun/gf/../../other/stb_image.h"
 $14 = ($13|0)==(0); //@line 1198 "src/sprites/../puun/gf/../../other/stb_image.h"
 if ($14) {
  $15 = $0; //@line 1201 "src/sprites/../puun/gf/../../other/stb_image.h"
  $16 = (($15) + 32|0); //@line 1201 "src/sprites/../puun/gf/../../other/stb_image.h"
  HEAP32[$16>>2] = 0; //@line 1201 "src/sprites/../puun/gf/../../other/stb_image.h"
  $17 = $0; //@line 1202 "src/sprites/../puun/gf/../../other/stb_image.h"
  $18 = (($17) + 40|0); //@line 1202 "src/sprites/../puun/gf/../../other/stb_image.h"
  $19 = $0; //@line 1202 "src/sprites/../puun/gf/../../other/stb_image.h"
  $20 = (($19) + 168|0); //@line 1202 "src/sprites/../puun/gf/../../other/stb_image.h"
  HEAP32[$20>>2] = $18; //@line 1202 "src/sprites/../puun/gf/../../other/stb_image.h"
  $21 = $0; //@line 1203 "src/sprites/../puun/gf/../../other/stb_image.h"
  $22 = (($21) + 40|0); //@line 1203 "src/sprites/../puun/gf/../../other/stb_image.h"
  $23 = (($22) + 1|0); //@line 1203 "src/sprites/../puun/gf/../../other/stb_image.h"
  $24 = $0; //@line 1203 "src/sprites/../puun/gf/../../other/stb_image.h"
  $25 = (($24) + 172|0); //@line 1203 "src/sprites/../puun/gf/../../other/stb_image.h"
  HEAP32[$25>>2] = $23; //@line 1203 "src/sprites/../puun/gf/../../other/stb_image.h"
  $26 = $0; //@line 1204 "src/sprites/../puun/gf/../../other/stb_image.h"
  $27 = (($26) + 168|0); //@line 1204 "src/sprites/../puun/gf/../../other/stb_image.h"
  $28 = HEAP32[$27>>2]|0; //@line 1204 "src/sprites/../puun/gf/../../other/stb_image.h"
  HEAP8[$28>>0] = 0; //@line 1204 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return; //@line 1209 "src/sprites/../puun/gf/../../other/stb_image.h"
 } else {
  $29 = $0; //@line 1206 "src/sprites/../puun/gf/../../other/stb_image.h"
  $30 = (($29) + 40|0); //@line 1206 "src/sprites/../puun/gf/../../other/stb_image.h"
  $31 = $0; //@line 1206 "src/sprites/../puun/gf/../../other/stb_image.h"
  $32 = (($31) + 168|0); //@line 1206 "src/sprites/../puun/gf/../../other/stb_image.h"
  HEAP32[$32>>2] = $30; //@line 1206 "src/sprites/../puun/gf/../../other/stb_image.h"
  $33 = $0; //@line 1207 "src/sprites/../puun/gf/../../other/stb_image.h"
  $34 = (($33) + 40|0); //@line 1207 "src/sprites/../puun/gf/../../other/stb_image.h"
  $35 = $n; //@line 1207 "src/sprites/../puun/gf/../../other/stb_image.h"
  $36 = (($34) + ($35)|0); //@line 1207 "src/sprites/../puun/gf/../../other/stb_image.h"
  $37 = $0; //@line 1207 "src/sprites/../puun/gf/../../other/stb_image.h"
  $38 = (($37) + 172|0); //@line 1207 "src/sprites/../puun/gf/../../other/stb_image.h"
  HEAP32[$38>>2] = $36; //@line 1207 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return; //@line 1209 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
}
function _stbi__hdr_gettoken($z,$buffer) {
 $z = $z|0;
 $buffer = $buffer|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $c = 0, $len = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $z;
 $1 = $buffer;
 $len = 0; //@line 5795 "src/sprites/../puun/gf/../../other/stb_image.h"
 $c = 0; //@line 5796 "src/sprites/../puun/gf/../../other/stb_image.h"
 $2 = $0; //@line 5798 "src/sprites/../puun/gf/../../other/stb_image.h"
 $3 = (_stbi__get8($2)|0); //@line 5798 "src/sprites/../puun/gf/../../other/stb_image.h"
 $c = $3; //@line 5798 "src/sprites/../puun/gf/../../other/stb_image.h"
 while(1) {
  $4 = $0; //@line 5800 "src/sprites/../puun/gf/../../other/stb_image.h"
  $5 = (_stbi__at_eof($4)|0); //@line 5800 "src/sprites/../puun/gf/../../other/stb_image.h"
  $6 = ($5|0)!=(0); //@line 5800 "src/sprites/../puun/gf/../../other/stb_image.h"
  if ($6) {
   $30 = 0;
  } else {
   $7 = $c; //@line 5800 "src/sprites/../puun/gf/../../other/stb_image.h"
   $8 = $7 << 24 >> 24; //@line 5800 "src/sprites/../puun/gf/../../other/stb_image.h"
   $9 = ($8|0)!=(10); //@line 5800 "src/sprites/../puun/gf/../../other/stb_image.h"
   $30 = $9;
  }
  if (!($30)) {
   label = 13;
   break;
  }
  $10 = $c; //@line 5801 "src/sprites/../puun/gf/../../other/stb_image.h"
  $11 = $len; //@line 5801 "src/sprites/../puun/gf/../../other/stb_image.h"
  $12 = (($11) + 1)|0; //@line 5801 "src/sprites/../puun/gf/../../other/stb_image.h"
  $len = $12; //@line 5801 "src/sprites/../puun/gf/../../other/stb_image.h"
  $13 = $1; //@line 5801 "src/sprites/../puun/gf/../../other/stb_image.h"
  $14 = (($13) + ($11)|0); //@line 5801 "src/sprites/../puun/gf/../../other/stb_image.h"
  HEAP8[$14>>0] = $10; //@line 5801 "src/sprites/../puun/gf/../../other/stb_image.h"
  $15 = $len; //@line 5802 "src/sprites/../puun/gf/../../other/stb_image.h"
  $16 = ($15|0)==(1023); //@line 5802 "src/sprites/../puun/gf/../../other/stb_image.h"
  if ($16) {
   break;
  }
  $24 = $0; //@line 5808 "src/sprites/../puun/gf/../../other/stb_image.h"
  $25 = (_stbi__get8($24)|0); //@line 5808 "src/sprites/../puun/gf/../../other/stb_image.h"
  $c = $25; //@line 5808 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 if ((label|0) == 13) {
  $26 = $len; //@line 5811 "src/sprites/../puun/gf/../../other/stb_image.h"
  $27 = $1; //@line 5811 "src/sprites/../puun/gf/../../other/stb_image.h"
  $28 = (($27) + ($26)|0); //@line 5811 "src/sprites/../puun/gf/../../other/stb_image.h"
  HEAP8[$28>>0] = 0; //@line 5811 "src/sprites/../puun/gf/../../other/stb_image.h"
  $29 = $1; //@line 5812 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($29|0); //@line 5812 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 while(1) {
  $17 = $0; //@line 5804 "src/sprites/../puun/gf/../../other/stb_image.h"
  $18 = (_stbi__at_eof($17)|0); //@line 5804 "src/sprites/../puun/gf/../../other/stb_image.h"
  $19 = ($18|0)!=(0); //@line 5804 "src/sprites/../puun/gf/../../other/stb_image.h"
  if ($19) {
   $31 = 0;
  } else {
   $20 = $0; //@line 5804 "src/sprites/../puun/gf/../../other/stb_image.h"
   $21 = (_stbi__get8($20)|0); //@line 5804 "src/sprites/../puun/gf/../../other/stb_image.h"
   $22 = $21&255; //@line 5804 "src/sprites/../puun/gf/../../other/stb_image.h"
   $23 = ($22|0)!=(10); //@line 5804 "src/sprites/../puun/gf/../../other/stb_image.h"
   $31 = $23;
  }
  if (!($31)) {
   break;
  }
 }
 $26 = $len; //@line 5811 "src/sprites/../puun/gf/../../other/stb_image.h"
 $27 = $1; //@line 5811 "src/sprites/../puun/gf/../../other/stb_image.h"
 $28 = (($27) + ($26)|0); //@line 5811 "src/sprites/../puun/gf/../../other/stb_image.h"
 HEAP8[$28>>0] = 0; //@line 5811 "src/sprites/../puun/gf/../../other/stb_image.h"
 $29 = $1; //@line 5812 "src/sprites/../puun/gf/../../other/stb_image.h"
 STACKTOP = sp;return ($29|0); //@line 5812 "src/sprites/../puun/gf/../../other/stb_image.h"
}
function _stbi__at_eof($s) {
 $s = $s|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $s;
 $2 = $1; //@line 1224 "src/sprites/../puun/gf/../../other/stb_image.h"
 $3 = (($2) + 16|0); //@line 1224 "src/sprites/../puun/gf/../../other/stb_image.h"
 $4 = HEAP32[$3>>2]|0; //@line 1224 "src/sprites/../puun/gf/../../other/stb_image.h"
 $5 = ($4|0)!=(0|0); //@line 1224 "src/sprites/../puun/gf/../../other/stb_image.h"
 do {
  if ($5) {
   $6 = $1; //@line 1225 "src/sprites/../puun/gf/../../other/stb_image.h"
   $7 = (($6) + 16|0); //@line 1225 "src/sprites/../puun/gf/../../other/stb_image.h"
   $8 = (($7) + 8|0); //@line 1225 "src/sprites/../puun/gf/../../other/stb_image.h"
   $9 = HEAP32[$8>>2]|0; //@line 1225 "src/sprites/../puun/gf/../../other/stb_image.h"
   $10 = $1; //@line 1225 "src/sprites/../puun/gf/../../other/stb_image.h"
   $11 = (($10) + 28|0); //@line 1225 "src/sprites/../puun/gf/../../other/stb_image.h"
   $12 = HEAP32[$11>>2]|0; //@line 1225 "src/sprites/../puun/gf/../../other/stb_image.h"
   $13 = (FUNCTION_TABLE_ii[$9 & 3]($12)|0); //@line 1225 "src/sprites/../puun/gf/../../other/stb_image.h"
   $14 = ($13|0)!=(0); //@line 1225 "src/sprites/../puun/gf/../../other/stb_image.h"
   if (!($14)) {
    $0 = 0; //@line 1225 "src/sprites/../puun/gf/../../other/stb_image.h"
    $27 = $0; //@line 1232 "src/sprites/../puun/gf/../../other/stb_image.h"
    STACKTOP = sp;return ($27|0); //@line 1232 "src/sprites/../puun/gf/../../other/stb_image.h"
   }
   $15 = $1; //@line 1228 "src/sprites/../puun/gf/../../other/stb_image.h"
   $16 = (($15) + 32|0); //@line 1228 "src/sprites/../puun/gf/../../other/stb_image.h"
   $17 = HEAP32[$16>>2]|0; //@line 1228 "src/sprites/../puun/gf/../../other/stb_image.h"
   $18 = ($17|0)==(0); //@line 1228 "src/sprites/../puun/gf/../../other/stb_image.h"
   if (!($18)) {
    break;
   }
   $0 = 1; //@line 1228 "src/sprites/../puun/gf/../../other/stb_image.h"
   $27 = $0; //@line 1232 "src/sprites/../puun/gf/../../other/stb_image.h"
   STACKTOP = sp;return ($27|0); //@line 1232 "src/sprites/../puun/gf/../../other/stb_image.h"
  }
 } while(0);
 $19 = $1; //@line 1231 "src/sprites/../puun/gf/../../other/stb_image.h"
 $20 = (($19) + 168|0); //@line 1231 "src/sprites/../puun/gf/../../other/stb_image.h"
 $21 = HEAP32[$20>>2]|0; //@line 1231 "src/sprites/../puun/gf/../../other/stb_image.h"
 $22 = $1; //@line 1231 "src/sprites/../puun/gf/../../other/stb_image.h"
 $23 = (($22) + 172|0); //@line 1231 "src/sprites/../puun/gf/../../other/stb_image.h"
 $24 = HEAP32[$23>>2]|0; //@line 1231 "src/sprites/../puun/gf/../../other/stb_image.h"
 $25 = ($21>>>0)>=($24>>>0); //@line 1231 "src/sprites/../puun/gf/../../other/stb_image.h"
 $26 = $25&1; //@line 1231 "src/sprites/../puun/gf/../../other/stb_image.h"
 $0 = $26; //@line 1231 "src/sprites/../puun/gf/../../other/stb_image.h"
 $27 = $0; //@line 1232 "src/sprites/../puun/gf/../../other/stb_image.h"
 STACKTOP = sp;return ($27|0); //@line 1232 "src/sprites/../puun/gf/../../other/stb_image.h"
}
function _stbi__pnm_info($s,$x,$y,$comp) {
 $s = $s|0;
 $x = $x|0;
 $y = $y|0;
 $comp = $comp|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, $c = 0, $maxv = 0, $p = 0, $t = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $c = sp + 26|0;
 $1 = $s;
 $2 = $x;
 $3 = $y;
 $4 = $comp;
 $5 = $1; //@line 6182 "src/sprites/../puun/gf/../../other/stb_image.h"
 _stbi__rewind($5); //@line 6182 "src/sprites/../puun/gf/../../other/stb_image.h"
 $6 = $1; //@line 6185 "src/sprites/../puun/gf/../../other/stb_image.h"
 $7 = (_stbi__get8($6)|0); //@line 6185 "src/sprites/../puun/gf/../../other/stb_image.h"
 $p = $7; //@line 6185 "src/sprites/../puun/gf/../../other/stb_image.h"
 $8 = $1; //@line 6186 "src/sprites/../puun/gf/../../other/stb_image.h"
 $9 = (_stbi__get8($8)|0); //@line 6186 "src/sprites/../puun/gf/../../other/stb_image.h"
 $t = $9; //@line 6186 "src/sprites/../puun/gf/../../other/stb_image.h"
 $10 = $p; //@line 6187 "src/sprites/../puun/gf/../../other/stb_image.h"
 $11 = $10 << 24 >> 24; //@line 6187 "src/sprites/../puun/gf/../../other/stb_image.h"
 $12 = ($11|0)!=(80); //@line 6187 "src/sprites/../puun/gf/../../other/stb_image.h"
 do {
  if (!($12)) {
   $13 = $t; //@line 6187 "src/sprites/../puun/gf/../../other/stb_image.h"
   $14 = $13 << 24 >> 24; //@line 6187 "src/sprites/../puun/gf/../../other/stb_image.h"
   $15 = ($14|0)!=(53); //@line 6187 "src/sprites/../puun/gf/../../other/stb_image.h"
   if ($15) {
    $16 = $t; //@line 6187 "src/sprites/../puun/gf/../../other/stb_image.h"
    $17 = $16 << 24 >> 24; //@line 6187 "src/sprites/../puun/gf/../../other/stb_image.h"
    $18 = ($17|0)!=(54); //@line 6187 "src/sprites/../puun/gf/../../other/stb_image.h"
    if ($18) {
     break;
    }
   }
   $20 = $t; //@line 6192 "src/sprites/../puun/gf/../../other/stb_image.h"
   $21 = $20 << 24 >> 24; //@line 6192 "src/sprites/../puun/gf/../../other/stb_image.h"
   $22 = ($21|0)==(54); //@line 6192 "src/sprites/../puun/gf/../../other/stb_image.h"
   $23 = $22 ? 3 : 1; //@line 6192 "src/sprites/../puun/gf/../../other/stb_image.h"
   $24 = $4; //@line 6192 "src/sprites/../puun/gf/../../other/stb_image.h"
   HEAP32[$24>>2] = $23; //@line 6192 "src/sprites/../puun/gf/../../other/stb_image.h"
   $25 = $1; //@line 6194 "src/sprites/../puun/gf/../../other/stb_image.h"
   $26 = (_stbi__get8($25)|0); //@line 6194 "src/sprites/../puun/gf/../../other/stb_image.h"
   HEAP8[$c>>0] = $26; //@line 6194 "src/sprites/../puun/gf/../../other/stb_image.h"
   $27 = $1; //@line 6195 "src/sprites/../puun/gf/../../other/stb_image.h"
   _stbi__pnm_skip_whitespace($27,$c); //@line 6195 "src/sprites/../puun/gf/../../other/stb_image.h"
   $28 = $1; //@line 6197 "src/sprites/../puun/gf/../../other/stb_image.h"
   $29 = (_stbi__pnm_getinteger($28,$c)|0); //@line 6197 "src/sprites/../puun/gf/../../other/stb_image.h"
   $30 = $2; //@line 6197 "src/sprites/../puun/gf/../../other/stb_image.h"
   HEAP32[$30>>2] = $29; //@line 6197 "src/sprites/../puun/gf/../../other/stb_image.h"
   $31 = $1; //@line 6198 "src/sprites/../puun/gf/../../other/stb_image.h"
   _stbi__pnm_skip_whitespace($31,$c); //@line 6198 "src/sprites/../puun/gf/../../other/stb_image.h"
   $32 = $1; //@line 6200 "src/sprites/../puun/gf/../../other/stb_image.h"
   $33 = (_stbi__pnm_getinteger($32,$c)|0); //@line 6200 "src/sprites/../puun/gf/../../other/stb_image.h"
   $34 = $3; //@line 6200 "src/sprites/../puun/gf/../../other/stb_image.h"
   HEAP32[$34>>2] = $33; //@line 6200 "src/sprites/../puun/gf/../../other/stb_image.h"
   $35 = $1; //@line 6201 "src/sprites/../puun/gf/../../other/stb_image.h"
   _stbi__pnm_skip_whitespace($35,$c); //@line 6201 "src/sprites/../puun/gf/../../other/stb_image.h"
   $36 = $1; //@line 6203 "src/sprites/../puun/gf/../../other/stb_image.h"
   $37 = (_stbi__pnm_getinteger($36,$c)|0); //@line 6203 "src/sprites/../puun/gf/../../other/stb_image.h"
   $maxv = $37; //@line 6203 "src/sprites/../puun/gf/../../other/stb_image.h"
   $38 = $maxv; //@line 6205 "src/sprites/../puun/gf/../../other/stb_image.h"
   $39 = ($38|0)>(255); //@line 6205 "src/sprites/../puun/gf/../../other/stb_image.h"
   if ($39) {
    $40 = (_stbi__err(7136)|0); //@line 6206 "src/sprites/../puun/gf/../../other/stb_image.h"
    $0 = $40; //@line 6206 "src/sprites/../puun/gf/../../other/stb_image.h"
    $41 = $0; //@line 6209 "src/sprites/../puun/gf/../../other/stb_image.h"
    STACKTOP = sp;return ($41|0); //@line 6209 "src/sprites/../puun/gf/../../other/stb_image.h"
   } else {
    $0 = 1; //@line 6208 "src/sprites/../puun/gf/../../other/stb_image.h"
    $41 = $0; //@line 6209 "src/sprites/../puun/gf/../../other/stb_image.h"
    STACKTOP = sp;return ($41|0); //@line 6209 "src/sprites/../puun/gf/../../other/stb_image.h"
   }
  }
 } while(0);
 $19 = $1; //@line 6188 "src/sprites/../puun/gf/../../other/stb_image.h"
 _stbi__rewind($19); //@line 6188 "src/sprites/../puun/gf/../../other/stb_image.h"
 $0 = 0; //@line 6189 "src/sprites/../puun/gf/../../other/stb_image.h"
 $41 = $0; //@line 6209 "src/sprites/../puun/gf/../../other/stb_image.h"
 STACKTOP = sp;return ($41|0); //@line 6209 "src/sprites/../puun/gf/../../other/stb_image.h"
}
function _stbi__pnm_getinteger($s,$c) {
 $s = $s|0;
 $c = $c|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $value = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $s;
 $1 = $c;
 $value = 0; //@line 6167 "src/sprites/../puun/gf/../../other/stb_image.h"
 while(1) {
  $2 = $0; //@line 6169 "src/sprites/../puun/gf/../../other/stb_image.h"
  $3 = (_stbi__at_eof($2)|0); //@line 6169 "src/sprites/../puun/gf/../../other/stb_image.h"
  $4 = ($3|0)!=(0); //@line 6169 "src/sprites/../puun/gf/../../other/stb_image.h"
  if ($4) {
   $20 = 0;
  } else {
   $5 = $1; //@line 6169 "src/sprites/../puun/gf/../../other/stb_image.h"
   $6 = HEAP8[$5>>0]|0; //@line 6169 "src/sprites/../puun/gf/../../other/stb_image.h"
   $7 = (_stbi__pnm_isdigit($6)|0); //@line 6169 "src/sprites/../puun/gf/../../other/stb_image.h"
   $8 = ($7|0)!=(0); //@line 6169 "src/sprites/../puun/gf/../../other/stb_image.h"
   $20 = $8;
  }
  if (!($20)) {
   break;
  }
  $9 = $value; //@line 6170 "src/sprites/../puun/gf/../../other/stb_image.h"
  $10 = ($9*10)|0; //@line 6170 "src/sprites/../puun/gf/../../other/stb_image.h"
  $11 = $1; //@line 6170 "src/sprites/../puun/gf/../../other/stb_image.h"
  $12 = HEAP8[$11>>0]|0; //@line 6170 "src/sprites/../puun/gf/../../other/stb_image.h"
  $13 = $12 << 24 >> 24; //@line 6170 "src/sprites/../puun/gf/../../other/stb_image.h"
  $14 = (($13) - 48)|0; //@line 6170 "src/sprites/../puun/gf/../../other/stb_image.h"
  $15 = (($10) + ($14))|0; //@line 6170 "src/sprites/../puun/gf/../../other/stb_image.h"
  $value = $15; //@line 6170 "src/sprites/../puun/gf/../../other/stb_image.h"
  $16 = $0; //@line 6171 "src/sprites/../puun/gf/../../other/stb_image.h"
  $17 = (_stbi__get8($16)|0); //@line 6171 "src/sprites/../puun/gf/../../other/stb_image.h"
  $18 = $1; //@line 6171 "src/sprites/../puun/gf/../../other/stb_image.h"
  HEAP8[$18>>0] = $17; //@line 6171 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $19 = $value; //@line 6174 "src/sprites/../puun/gf/../../other/stb_image.h"
 STACKTOP = sp;return ($19|0); //@line 6174 "src/sprites/../puun/gf/../../other/stb_image.h"
}
function _stbi__pnm_isdigit($c) {
 $c = $c|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $c;
 $1 = $0; //@line 6162 "src/sprites/../puun/gf/../../other/stb_image.h"
 $2 = $1 << 24 >> 24; //@line 6162 "src/sprites/../puun/gf/../../other/stb_image.h"
 $3 = ($2|0)>=(48); //@line 6162 "src/sprites/../puun/gf/../../other/stb_image.h"
 if ($3) {
  $4 = $0; //@line 6162 "src/sprites/../puun/gf/../../other/stb_image.h"
  $5 = $4 << 24 >> 24; //@line 6162 "src/sprites/../puun/gf/../../other/stb_image.h"
  $6 = ($5|0)<=(57); //@line 6162 "src/sprites/../puun/gf/../../other/stb_image.h"
  $8 = $6;
 } else {
  $8 = 0;
 }
 $7 = $8&1; //@line 6162 "src/sprites/../puun/gf/../../other/stb_image.h"
 STACKTOP = sp;return ($7|0); //@line 6162 "src/sprites/../puun/gf/../../other/stb_image.h"
}
function _stbi__pnm_skip_whitespace($s,$c) {
 $s = $s|0;
 $c = $c|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $s;
 $1 = $c;
 while(1) {
  $2 = $0; //@line 6156 "src/sprites/../puun/gf/../../other/stb_image.h"
  $3 = (_stbi__at_eof($2)|0); //@line 6156 "src/sprites/../puun/gf/../../other/stb_image.h"
  $4 = ($3|0)!=(0); //@line 6156 "src/sprites/../puun/gf/../../other/stb_image.h"
  if ($4) {
   $12 = 0;
  } else {
   $5 = $1; //@line 6156 "src/sprites/../puun/gf/../../other/stb_image.h"
   $6 = HEAP8[$5>>0]|0; //@line 6156 "src/sprites/../puun/gf/../../other/stb_image.h"
   $7 = (_stbi__pnm_isspace($6)|0); //@line 6156 "src/sprites/../puun/gf/../../other/stb_image.h"
   $8 = ($7|0)!=(0); //@line 6156 "src/sprites/../puun/gf/../../other/stb_image.h"
   $12 = $8;
  }
  if (!($12)) {
   break;
  }
  $9 = $0; //@line 6157 "src/sprites/../puun/gf/../../other/stb_image.h"
  $10 = (_stbi__get8($9)|0); //@line 6157 "src/sprites/../puun/gf/../../other/stb_image.h"
  $11 = $1; //@line 6157 "src/sprites/../puun/gf/../../other/stb_image.h"
  HEAP8[$11>>0] = $10; //@line 6157 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 STACKTOP = sp;return; //@line 6158 "src/sprites/../puun/gf/../../other/stb_image.h"
}
function _stbi__pnm_isspace($c) {
 $c = $c|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $c;
 $1 = $0; //@line 6151 "src/sprites/../puun/gf/../../other/stb_image.h"
 $2 = $1 << 24 >> 24; //@line 6151 "src/sprites/../puun/gf/../../other/stb_image.h"
 $3 = ($2|0)==(32); //@line 6151 "src/sprites/../puun/gf/../../other/stb_image.h"
 if ($3) {
  $20 = 1;
 } else {
  $4 = $0; //@line 6151 "src/sprites/../puun/gf/../../other/stb_image.h"
  $5 = $4 << 24 >> 24; //@line 6151 "src/sprites/../puun/gf/../../other/stb_image.h"
  $6 = ($5|0)==(9); //@line 6151 "src/sprites/../puun/gf/../../other/stb_image.h"
  if ($6) {
   $20 = 1;
  } else {
   $7 = $0; //@line 6151 "src/sprites/../puun/gf/../../other/stb_image.h"
   $8 = $7 << 24 >> 24; //@line 6151 "src/sprites/../puun/gf/../../other/stb_image.h"
   $9 = ($8|0)==(10); //@line 6151 "src/sprites/../puun/gf/../../other/stb_image.h"
   if ($9) {
    $20 = 1;
   } else {
    $10 = $0; //@line 6151 "src/sprites/../puun/gf/../../other/stb_image.h"
    $11 = $10 << 24 >> 24; //@line 6151 "src/sprites/../puun/gf/../../other/stb_image.h"
    $12 = ($11|0)==(11); //@line 6151 "src/sprites/../puun/gf/../../other/stb_image.h"
    if ($12) {
     $20 = 1;
    } else {
     $13 = $0; //@line 6151 "src/sprites/../puun/gf/../../other/stb_image.h"
     $14 = $13 << 24 >> 24; //@line 6151 "src/sprites/../puun/gf/../../other/stb_image.h"
     $15 = ($14|0)==(12); //@line 6151 "src/sprites/../puun/gf/../../other/stb_image.h"
     if ($15) {
      $20 = 1;
     } else {
      $16 = $0; //@line 6151 "src/sprites/../puun/gf/../../other/stb_image.h"
      $17 = $16 << 24 >> 24; //@line 6151 "src/sprites/../puun/gf/../../other/stb_image.h"
      $18 = ($17|0)==(13); //@line 6151 "src/sprites/../puun/gf/../../other/stb_image.h"
      $20 = $18;
     }
    }
   }
  }
 }
 $19 = $20&1; //@line 6151 "src/sprites/../puun/gf/../../other/stb_image.h"
 STACKTOP = sp;return ($19|0); //@line 6151 "src/sprites/../puun/gf/../../other/stb_image.h"
}
function _stbi__get16be($s) {
 $s = $s|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $z = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $s;
 $1 = $0; //@line 1277 "src/sprites/../puun/gf/../../other/stb_image.h"
 $2 = (_stbi__get8($1)|0); //@line 1277 "src/sprites/../puun/gf/../../other/stb_image.h"
 $3 = $2&255; //@line 1277 "src/sprites/../puun/gf/../../other/stb_image.h"
 $z = $3; //@line 1277 "src/sprites/../puun/gf/../../other/stb_image.h"
 $4 = $z; //@line 1278 "src/sprites/../puun/gf/../../other/stb_image.h"
 $5 = $4 << 8; //@line 1278 "src/sprites/../puun/gf/../../other/stb_image.h"
 $6 = $0; //@line 1278 "src/sprites/../puun/gf/../../other/stb_image.h"
 $7 = (_stbi__get8($6)|0); //@line 1278 "src/sprites/../puun/gf/../../other/stb_image.h"
 $8 = $7&255; //@line 1278 "src/sprites/../puun/gf/../../other/stb_image.h"
 $9 = (($5) + ($8))|0; //@line 1278 "src/sprites/../puun/gf/../../other/stb_image.h"
 STACKTOP = sp;return ($9|0); //@line 1278 "src/sprites/../puun/gf/../../other/stb_image.h"
}
function _stbi__get32be($s) {
 $s = $s|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $z = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $s;
 $1 = $0; //@line 1283 "src/sprites/../puun/gf/../../other/stb_image.h"
 $2 = (_stbi__get16be($1)|0); //@line 1283 "src/sprites/../puun/gf/../../other/stb_image.h"
 $z = $2; //@line 1283 "src/sprites/../puun/gf/../../other/stb_image.h"
 $3 = $z; //@line 1284 "src/sprites/../puun/gf/../../other/stb_image.h"
 $4 = $3 << 16; //@line 1284 "src/sprites/../puun/gf/../../other/stb_image.h"
 $5 = $0; //@line 1284 "src/sprites/../puun/gf/../../other/stb_image.h"
 $6 = (_stbi__get16be($5)|0); //@line 1284 "src/sprites/../puun/gf/../../other/stb_image.h"
 $7 = (($4) + ($6))|0; //@line 1284 "src/sprites/../puun/gf/../../other/stb_image.h"
 STACKTOP = sp;return ($7|0); //@line 1284 "src/sprites/../puun/gf/../../other/stb_image.h"
}
function _stbi__get32le($s) {
 $s = $s|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $z = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $s;
 $1 = $0; //@line 1295 "src/sprites/../puun/gf/../../other/stb_image.h"
 $2 = (_stbi__get16le($1)|0); //@line 1295 "src/sprites/../puun/gf/../../other/stb_image.h"
 $z = $2; //@line 1295 "src/sprites/../puun/gf/../../other/stb_image.h"
 $3 = $z; //@line 1296 "src/sprites/../puun/gf/../../other/stb_image.h"
 $4 = $0; //@line 1296 "src/sprites/../puun/gf/../../other/stb_image.h"
 $5 = (_stbi__get16le($4)|0); //@line 1296 "src/sprites/../puun/gf/../../other/stb_image.h"
 $6 = $5 << 16; //@line 1296 "src/sprites/../puun/gf/../../other/stb_image.h"
 $7 = (($3) + ($6))|0; //@line 1296 "src/sprites/../puun/gf/../../other/stb_image.h"
 STACKTOP = sp;return ($7|0); //@line 1296 "src/sprites/../puun/gf/../../other/stb_image.h"
}
function _stbi__gif_header($s,$g,$comp,$is_info) {
 $s = $s|0;
 $g = $g|0;
 $comp = $comp|0;
 $is_info = $is_info|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $8 = 0, $9 = 0, $version = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $s;
 $2 = $g;
 $3 = $comp;
 $4 = $is_info;
 $5 = $1; //@line 5483 "src/sprites/../puun/gf/../../other/stb_image.h"
 $6 = (_stbi__get8($5)|0); //@line 5483 "src/sprites/../puun/gf/../../other/stb_image.h"
 $7 = $6&255; //@line 5483 "src/sprites/../puun/gf/../../other/stb_image.h"
 $8 = ($7|0)!=(71); //@line 5483 "src/sprites/../puun/gf/../../other/stb_image.h"
 if (!($8)) {
  $9 = $1; //@line 5483 "src/sprites/../puun/gf/../../other/stb_image.h"
  $10 = (_stbi__get8($9)|0); //@line 5483 "src/sprites/../puun/gf/../../other/stb_image.h"
  $11 = $10&255; //@line 5483 "src/sprites/../puun/gf/../../other/stb_image.h"
  $12 = ($11|0)!=(73); //@line 5483 "src/sprites/../puun/gf/../../other/stb_image.h"
  if (!($12)) {
   $13 = $1; //@line 5483 "src/sprites/../puun/gf/../../other/stb_image.h"
   $14 = (_stbi__get8($13)|0); //@line 5483 "src/sprites/../puun/gf/../../other/stb_image.h"
   $15 = $14&255; //@line 5483 "src/sprites/../puun/gf/../../other/stb_image.h"
   $16 = ($15|0)!=(70); //@line 5483 "src/sprites/../puun/gf/../../other/stb_image.h"
   if (!($16)) {
    $17 = $1; //@line 5483 "src/sprites/../puun/gf/../../other/stb_image.h"
    $18 = (_stbi__get8($17)|0); //@line 5483 "src/sprites/../puun/gf/../../other/stb_image.h"
    $19 = $18&255; //@line 5483 "src/sprites/../puun/gf/../../other/stb_image.h"
    $20 = ($19|0)!=(56); //@line 5483 "src/sprites/../puun/gf/../../other/stb_image.h"
    if (!($20)) {
     $22 = $1; //@line 5486 "src/sprites/../puun/gf/../../other/stb_image.h"
     $23 = (_stbi__get8($22)|0); //@line 5486 "src/sprites/../puun/gf/../../other/stb_image.h"
     $version = $23; //@line 5486 "src/sprites/../puun/gf/../../other/stb_image.h"
     $24 = $version; //@line 5487 "src/sprites/../puun/gf/../../other/stb_image.h"
     $25 = $24&255; //@line 5487 "src/sprites/../puun/gf/../../other/stb_image.h"
     $26 = ($25|0)!=(55); //@line 5487 "src/sprites/../puun/gf/../../other/stb_image.h"
     if ($26) {
      $27 = $version; //@line 5487 "src/sprites/../puun/gf/../../other/stb_image.h"
      $28 = $27&255; //@line 5487 "src/sprites/../puun/gf/../../other/stb_image.h"
      $29 = ($28|0)!=(57); //@line 5487 "src/sprites/../puun/gf/../../other/stb_image.h"
      if ($29) {
       $30 = (_stbi__err(7152)|0); //@line 5487 "src/sprites/../puun/gf/../../other/stb_image.h"
       $0 = $30; //@line 5487 "src/sprites/../puun/gf/../../other/stb_image.h"
       $78 = $0; //@line 5506 "src/sprites/../puun/gf/../../other/stb_image.h"
       STACKTOP = sp;return ($78|0); //@line 5506 "src/sprites/../puun/gf/../../other/stb_image.h"
      }
     }
     $31 = $1; //@line 5488 "src/sprites/../puun/gf/../../other/stb_image.h"
     $32 = (_stbi__get8($31)|0); //@line 5488 "src/sprites/../puun/gf/../../other/stb_image.h"
     $33 = $32&255; //@line 5488 "src/sprites/../puun/gf/../../other/stb_image.h"
     $34 = ($33|0)!=(97); //@line 5488 "src/sprites/../puun/gf/../../other/stb_image.h"
     if ($34) {
      $35 = (_stbi__err(7152)|0); //@line 5488 "src/sprites/../puun/gf/../../other/stb_image.h"
      $0 = $35; //@line 5488 "src/sprites/../puun/gf/../../other/stb_image.h"
      $78 = $0; //@line 5506 "src/sprites/../puun/gf/../../other/stb_image.h"
      STACKTOP = sp;return ($78|0); //@line 5506 "src/sprites/../puun/gf/../../other/stb_image.h"
     }
     HEAP32[168>>2] = 7160; //@line 5490 "src/sprites/../puun/gf/../../other/stb_image.h"
     $36 = $1; //@line 5491 "src/sprites/../puun/gf/../../other/stb_image.h"
     $37 = (_stbi__get16le($36)|0); //@line 5491 "src/sprites/../puun/gf/../../other/stb_image.h"
     $38 = $2; //@line 5491 "src/sprites/../puun/gf/../../other/stb_image.h"
     HEAP32[$38>>2] = $37; //@line 5491 "src/sprites/../puun/gf/../../other/stb_image.h"
     $39 = $1; //@line 5492 "src/sprites/../puun/gf/../../other/stb_image.h"
     $40 = (_stbi__get16le($39)|0); //@line 5492 "src/sprites/../puun/gf/../../other/stb_image.h"
     $41 = $2; //@line 5492 "src/sprites/../puun/gf/../../other/stb_image.h"
     $42 = (($41) + 4|0); //@line 5492 "src/sprites/../puun/gf/../../other/stb_image.h"
     HEAP32[$42>>2] = $40; //@line 5492 "src/sprites/../puun/gf/../../other/stb_image.h"
     $43 = $1; //@line 5493 "src/sprites/../puun/gf/../../other/stb_image.h"
     $44 = (_stbi__get8($43)|0); //@line 5493 "src/sprites/../puun/gf/../../other/stb_image.h"
     $45 = $44&255; //@line 5493 "src/sprites/../puun/gf/../../other/stb_image.h"
     $46 = $2; //@line 5493 "src/sprites/../puun/gf/../../other/stb_image.h"
     $47 = (($46) + 12|0); //@line 5493 "src/sprites/../puun/gf/../../other/stb_image.h"
     HEAP32[$47>>2] = $45; //@line 5493 "src/sprites/../puun/gf/../../other/stb_image.h"
     $48 = $1; //@line 5494 "src/sprites/../puun/gf/../../other/stb_image.h"
     $49 = (_stbi__get8($48)|0); //@line 5494 "src/sprites/../puun/gf/../../other/stb_image.h"
     $50 = $49&255; //@line 5494 "src/sprites/../puun/gf/../../other/stb_image.h"
     $51 = $2; //@line 5494 "src/sprites/../puun/gf/../../other/stb_image.h"
     $52 = (($51) + 16|0); //@line 5494 "src/sprites/../puun/gf/../../other/stb_image.h"
     HEAP32[$52>>2] = $50; //@line 5494 "src/sprites/../puun/gf/../../other/stb_image.h"
     $53 = $1; //@line 5495 "src/sprites/../puun/gf/../../other/stb_image.h"
     $54 = (_stbi__get8($53)|0); //@line 5495 "src/sprites/../puun/gf/../../other/stb_image.h"
     $55 = $54&255; //@line 5495 "src/sprites/../puun/gf/../../other/stb_image.h"
     $56 = $2; //@line 5495 "src/sprites/../puun/gf/../../other/stb_image.h"
     $57 = (($56) + 20|0); //@line 5495 "src/sprites/../puun/gf/../../other/stb_image.h"
     HEAP32[$57>>2] = $55; //@line 5495 "src/sprites/../puun/gf/../../other/stb_image.h"
     $58 = $2; //@line 5496 "src/sprites/../puun/gf/../../other/stb_image.h"
     $59 = (($58) + 24|0); //@line 5496 "src/sprites/../puun/gf/../../other/stb_image.h"
     HEAP32[$59>>2] = -1; //@line 5496 "src/sprites/../puun/gf/../../other/stb_image.h"
     $60 = $3; //@line 5498 "src/sprites/../puun/gf/../../other/stb_image.h"
     $61 = ($60|0)!=(0|0); //@line 5498 "src/sprites/../puun/gf/../../other/stb_image.h"
     if ($61) {
      $62 = $3; //@line 5498 "src/sprites/../puun/gf/../../other/stb_image.h"
      HEAP32[$62>>2] = 4; //@line 5498 "src/sprites/../puun/gf/../../other/stb_image.h"
     }
     $63 = $4; //@line 5500 "src/sprites/../puun/gf/../../other/stb_image.h"
     $64 = ($63|0)!=(0); //@line 5500 "src/sprites/../puun/gf/../../other/stb_image.h"
     if ($64) {
      $0 = 1; //@line 5500 "src/sprites/../puun/gf/../../other/stb_image.h"
      $78 = $0; //@line 5506 "src/sprites/../puun/gf/../../other/stb_image.h"
      STACKTOP = sp;return ($78|0); //@line 5506 "src/sprites/../puun/gf/../../other/stb_image.h"
     }
     $65 = $2; //@line 5502 "src/sprites/../puun/gf/../../other/stb_image.h"
     $66 = (($65) + 12|0); //@line 5502 "src/sprites/../puun/gf/../../other/stb_image.h"
     $67 = HEAP32[$66>>2]|0; //@line 5502 "src/sprites/../puun/gf/../../other/stb_image.h"
     $68 = $67 & 128; //@line 5502 "src/sprites/../puun/gf/../../other/stb_image.h"
     $69 = ($68|0)!=(0); //@line 5502 "src/sprites/../puun/gf/../../other/stb_image.h"
     if ($69) {
      $70 = $1; //@line 5503 "src/sprites/../puun/gf/../../other/stb_image.h"
      $71 = $2; //@line 5503 "src/sprites/../puun/gf/../../other/stb_image.h"
      $72 = (($71) + 32|0); //@line 5503 "src/sprites/../puun/gf/../../other/stb_image.h"
      $73 = $2; //@line 5503 "src/sprites/../puun/gf/../../other/stb_image.h"
      $74 = (($73) + 12|0); //@line 5503 "src/sprites/../puun/gf/../../other/stb_image.h"
      $75 = HEAP32[$74>>2]|0; //@line 5503 "src/sprites/../puun/gf/../../other/stb_image.h"
      $76 = $75 & 7; //@line 5503 "src/sprites/../puun/gf/../../other/stb_image.h"
      $77 = 2 << $76; //@line 5503 "src/sprites/../puun/gf/../../other/stb_image.h"
      _stbi__gif_parse_colortable($70,$72,$77,-1); //@line 5503 "src/sprites/../puun/gf/../../other/stb_image.h"
     }
     $0 = 1; //@line 5505 "src/sprites/../puun/gf/../../other/stb_image.h"
     $78 = $0; //@line 5506 "src/sprites/../puun/gf/../../other/stb_image.h"
     STACKTOP = sp;return ($78|0); //@line 5506 "src/sprites/../puun/gf/../../other/stb_image.h"
    }
   }
  }
 }
 $21 = (_stbi__err(7152)|0); //@line 5484 "src/sprites/../puun/gf/../../other/stb_image.h"
 $0 = $21; //@line 5484 "src/sprites/../puun/gf/../../other/stb_image.h"
 $78 = $0; //@line 5506 "src/sprites/../puun/gf/../../other/stb_image.h"
 STACKTOP = sp;return ($78|0); //@line 5506 "src/sprites/../puun/gf/../../other/stb_image.h"
}
function _stbi__gif_parse_colortable($s,$pal,$num_entries,$transp) {
 $s = $s|0;
 $pal = $pal|0;
 $num_entries = $num_entries|0;
 $transp = $transp|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $s;
 $1 = $pal;
 $2 = $num_entries;
 $3 = $transp;
 $i = 0; //@line 5472 "src/sprites/../puun/gf/../../other/stb_image.h"
 while(1) {
  $4 = $i; //@line 5472 "src/sprites/../puun/gf/../../other/stb_image.h"
  $5 = $2; //@line 5472 "src/sprites/../puun/gf/../../other/stb_image.h"
  $6 = ($4|0)<($5|0); //@line 5472 "src/sprites/../puun/gf/../../other/stb_image.h"
  if (!($6)) {
   break;
  }
  $7 = $0; //@line 5473 "src/sprites/../puun/gf/../../other/stb_image.h"
  $8 = (_stbi__get8($7)|0); //@line 5473 "src/sprites/../puun/gf/../../other/stb_image.h"
  $9 = $i; //@line 5473 "src/sprites/../puun/gf/../../other/stb_image.h"
  $10 = $1; //@line 5473 "src/sprites/../puun/gf/../../other/stb_image.h"
  $11 = (($10) + ($9<<2)|0); //@line 5473 "src/sprites/../puun/gf/../../other/stb_image.h"
  $12 = (($11) + 2|0); //@line 5473 "src/sprites/../puun/gf/../../other/stb_image.h"
  HEAP8[$12>>0] = $8; //@line 5473 "src/sprites/../puun/gf/../../other/stb_image.h"
  $13 = $0; //@line 5474 "src/sprites/../puun/gf/../../other/stb_image.h"
  $14 = (_stbi__get8($13)|0); //@line 5474 "src/sprites/../puun/gf/../../other/stb_image.h"
  $15 = $i; //@line 5474 "src/sprites/../puun/gf/../../other/stb_image.h"
  $16 = $1; //@line 5474 "src/sprites/../puun/gf/../../other/stb_image.h"
  $17 = (($16) + ($15<<2)|0); //@line 5474 "src/sprites/../puun/gf/../../other/stb_image.h"
  $18 = (($17) + 1|0); //@line 5474 "src/sprites/../puun/gf/../../other/stb_image.h"
  HEAP8[$18>>0] = $14; //@line 5474 "src/sprites/../puun/gf/../../other/stb_image.h"
  $19 = $0; //@line 5475 "src/sprites/../puun/gf/../../other/stb_image.h"
  $20 = (_stbi__get8($19)|0); //@line 5475 "src/sprites/../puun/gf/../../other/stb_image.h"
  $21 = $i; //@line 5475 "src/sprites/../puun/gf/../../other/stb_image.h"
  $22 = $1; //@line 5475 "src/sprites/../puun/gf/../../other/stb_image.h"
  $23 = (($22) + ($21<<2)|0); //@line 5475 "src/sprites/../puun/gf/../../other/stb_image.h"
  HEAP8[$23>>0] = $20; //@line 5475 "src/sprites/../puun/gf/../../other/stb_image.h"
  $24 = $3; //@line 5476 "src/sprites/../puun/gf/../../other/stb_image.h"
  $25 = $i; //@line 5476 "src/sprites/../puun/gf/../../other/stb_image.h"
  $26 = ($24|0)==($25|0); //@line 5476 "src/sprites/../puun/gf/../../other/stb_image.h"
  $27 = $26 ? 0 : 255; //@line 5476 "src/sprites/../puun/gf/../../other/stb_image.h"
  $28 = $27&255; //@line 5476 "src/sprites/../puun/gf/../../other/stb_image.h"
  $29 = $i; //@line 5476 "src/sprites/../puun/gf/../../other/stb_image.h"
  $30 = $1; //@line 5476 "src/sprites/../puun/gf/../../other/stb_image.h"
  $31 = (($30) + ($29<<2)|0); //@line 5476 "src/sprites/../puun/gf/../../other/stb_image.h"
  $32 = (($31) + 3|0); //@line 5476 "src/sprites/../puun/gf/../../other/stb_image.h"
  HEAP8[$32>>0] = $28; //@line 5476 "src/sprites/../puun/gf/../../other/stb_image.h"
  $33 = $i; //@line 5472 "src/sprites/../puun/gf/../../other/stb_image.h"
  $34 = (($33) + 1)|0; //@line 5472 "src/sprites/../puun/gf/../../other/stb_image.h"
  $i = $34; //@line 5472 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 STACKTOP = sp;return; //@line 5478 "src/sprites/../puun/gf/../../other/stb_image.h"
}
function _stbi__parse_png_file($z,$scan,$req_comp) {
 $z = $z|0;
 $scan = $scan|0;
 $req_comp = $req_comp|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0;
 var $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0;
 var $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0;
 var $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0;
 var $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0;
 var $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0;
 var $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0;
 var $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0;
 var $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0;
 var $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0;
 var $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0;
 var $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0;
 var $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0;
 var $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0;
 var $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0;
 var $459 = 0, $46 = 0, $460 = 0, $461 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0;
 var $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0;
 var $98 = 0, $99 = 0, $bpl = 0, $c = 0, $color = 0, $comp = 0, $depth = 0, $filter = 0, $first = 0, $has_trans = 0, $i = 0, $idata_limit = 0, $interlace = 0, $ioff = 0, $is_iphone = 0, $k = 0, $p = 0, $pal_img_n = 0, $pal_len = 0, $palette = 0;
 var $raw_len = 0, $s = 0, $tc = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1136|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $palette = sp + 104|0;
 $tc = sp + 92|0;
 $c = sp + 24|0;
 $raw_len = sp + 4|0;
 $1 = $z;
 $2 = $scan;
 $3 = $req_comp;
 $pal_img_n = 0; //@line 4298 "src/sprites/../puun/gf/../../other/stb_image.h"
 $has_trans = 0; //@line 4299 "src/sprites/../puun/gf/../../other/stb_image.h"
 $ioff = 0; //@line 4300 "src/sprites/../puun/gf/../../other/stb_image.h"
 $idata_limit = 0; //@line 4300 "src/sprites/../puun/gf/../../other/stb_image.h"
 $pal_len = 0; //@line 4300 "src/sprites/../puun/gf/../../other/stb_image.h"
 $first = 1; //@line 4301 "src/sprites/../puun/gf/../../other/stb_image.h"
 $interlace = 0; //@line 4301 "src/sprites/../puun/gf/../../other/stb_image.h"
 $color = 0; //@line 4301 "src/sprites/../puun/gf/../../other/stb_image.h"
 $depth = 0; //@line 4301 "src/sprites/../puun/gf/../../other/stb_image.h"
 $is_iphone = 0; //@line 4301 "src/sprites/../puun/gf/../../other/stb_image.h"
 $4 = $1; //@line 4302 "src/sprites/../puun/gf/../../other/stb_image.h"
 $5 = HEAP32[$4>>2]|0; //@line 4302 "src/sprites/../puun/gf/../../other/stb_image.h"
 $s = $5; //@line 4302 "src/sprites/../puun/gf/../../other/stb_image.h"
 $6 = $1; //@line 4304 "src/sprites/../puun/gf/../../other/stb_image.h"
 $7 = (($6) + 8|0); //@line 4304 "src/sprites/../puun/gf/../../other/stb_image.h"
 HEAP32[$7>>2] = 0; //@line 4304 "src/sprites/../puun/gf/../../other/stb_image.h"
 $8 = $1; //@line 4305 "src/sprites/../puun/gf/../../other/stb_image.h"
 $9 = (($8) + 4|0); //@line 4305 "src/sprites/../puun/gf/../../other/stb_image.h"
 HEAP32[$9>>2] = 0; //@line 4305 "src/sprites/../puun/gf/../../other/stb_image.h"
 $10 = $1; //@line 4306 "src/sprites/../puun/gf/../../other/stb_image.h"
 $11 = (($10) + 12|0); //@line 4306 "src/sprites/../puun/gf/../../other/stb_image.h"
 HEAP32[$11>>2] = 0; //@line 4306 "src/sprites/../puun/gf/../../other/stb_image.h"
 $12 = $s; //@line 4308 "src/sprites/../puun/gf/../../other/stb_image.h"
 $13 = (_stbi__check_png_header($12)|0); //@line 4308 "src/sprites/../puun/gf/../../other/stb_image.h"
 $14 = ($13|0)!=(0); //@line 4308 "src/sprites/../puun/gf/../../other/stb_image.h"
 if (!($14)) {
  $0 = 0; //@line 4308 "src/sprites/../puun/gf/../../other/stb_image.h"
  $461 = $0; //@line 4451 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($461|0); //@line 4451 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $15 = $2; //@line 4310 "src/sprites/../puun/gf/../../other/stb_image.h"
 $16 = ($15|0)==(1); //@line 4310 "src/sprites/../puun/gf/../../other/stb_image.h"
 if ($16) {
  $0 = 1; //@line 4310 "src/sprites/../puun/gf/../../other/stb_image.h"
  $461 = $0; //@line 4451 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($461|0); //@line 4451 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 while(1) {
  $17 = $s; //@line 4313 "src/sprites/../puun/gf/../../other/stb_image.h"
  _stbi__get_chunk_header($c,$17); //@line 4313 "src/sprites/../puun/gf/../../other/stb_image.h"
  $18 = (($c) + 4|0); //@line 4314 "src/sprites/../puun/gf/../../other/stb_image.h"
  $19 = HEAP32[$18>>2]|0; //@line 4314 "src/sprites/../puun/gf/../../other/stb_image.h"
  if ((($19|0) == 1229472850)) {
   $22 = $first; //@line 4321 "src/sprites/../puun/gf/../../other/stb_image.h"
   $23 = ($22|0)!=(0); //@line 4321 "src/sprites/../puun/gf/../../other/stb_image.h"
   if (!($23)) {
    label = 9;
    break;
   }
   $first = 0; //@line 4322 "src/sprites/../puun/gf/../../other/stb_image.h"
   $25 = HEAP32[$c>>2]|0; //@line 4323 "src/sprites/../puun/gf/../../other/stb_image.h"
   $26 = ($25|0)!=(13); //@line 4323 "src/sprites/../puun/gf/../../other/stb_image.h"
   if ($26) {
    label = 11;
    break;
   }
   $28 = $s; //@line 4324 "src/sprites/../puun/gf/../../other/stb_image.h"
   $29 = (_stbi__get32be($28)|0); //@line 4324 "src/sprites/../puun/gf/../../other/stb_image.h"
   $30 = $s; //@line 4324 "src/sprites/../puun/gf/../../other/stb_image.h"
   HEAP32[$30>>2] = $29; //@line 4324 "src/sprites/../puun/gf/../../other/stb_image.h"
   $31 = $s; //@line 4324 "src/sprites/../puun/gf/../../other/stb_image.h"
   $32 = HEAP32[$31>>2]|0; //@line 4324 "src/sprites/../puun/gf/../../other/stb_image.h"
   $33 = ($32>>>0)>(16777216); //@line 4324 "src/sprites/../puun/gf/../../other/stb_image.h"
   if ($33) {
    label = 13;
    break;
   }
   $35 = $s; //@line 4325 "src/sprites/../puun/gf/../../other/stb_image.h"
   $36 = (_stbi__get32be($35)|0); //@line 4325 "src/sprites/../puun/gf/../../other/stb_image.h"
   $37 = $s; //@line 4325 "src/sprites/../puun/gf/../../other/stb_image.h"
   $38 = (($37) + 4|0); //@line 4325 "src/sprites/../puun/gf/../../other/stb_image.h"
   HEAP32[$38>>2] = $36; //@line 4325 "src/sprites/../puun/gf/../../other/stb_image.h"
   $39 = $s; //@line 4325 "src/sprites/../puun/gf/../../other/stb_image.h"
   $40 = (($39) + 4|0); //@line 4325 "src/sprites/../puun/gf/../../other/stb_image.h"
   $41 = HEAP32[$40>>2]|0; //@line 4325 "src/sprites/../puun/gf/../../other/stb_image.h"
   $42 = ($41>>>0)>(16777216); //@line 4325 "src/sprites/../puun/gf/../../other/stb_image.h"
   if ($42) {
    label = 15;
    break;
   }
   $44 = $s; //@line 4326 "src/sprites/../puun/gf/../../other/stb_image.h"
   $45 = (_stbi__get8($44)|0); //@line 4326 "src/sprites/../puun/gf/../../other/stb_image.h"
   $46 = $45&255; //@line 4326 "src/sprites/../puun/gf/../../other/stb_image.h"
   $depth = $46; //@line 4326 "src/sprites/../puun/gf/../../other/stb_image.h"
   $47 = $depth; //@line 4326 "src/sprites/../puun/gf/../../other/stb_image.h"
   $48 = ($47|0)!=(1); //@line 4326 "src/sprites/../puun/gf/../../other/stb_image.h"
   if ($48) {
    $49 = $depth; //@line 4326 "src/sprites/../puun/gf/../../other/stb_image.h"
    $50 = ($49|0)!=(2); //@line 4326 "src/sprites/../puun/gf/../../other/stb_image.h"
    if ($50) {
     $51 = $depth; //@line 4326 "src/sprites/../puun/gf/../../other/stb_image.h"
     $52 = ($51|0)!=(4); //@line 4326 "src/sprites/../puun/gf/../../other/stb_image.h"
     if ($52) {
      $53 = $depth; //@line 4326 "src/sprites/../puun/gf/../../other/stb_image.h"
      $54 = ($53|0)!=(8); //@line 4326 "src/sprites/../puun/gf/../../other/stb_image.h"
      if ($54) {
       label = 20;
       break;
      }
     }
    }
   }
   $56 = $s; //@line 4327 "src/sprites/../puun/gf/../../other/stb_image.h"
   $57 = (_stbi__get8($56)|0); //@line 4327 "src/sprites/../puun/gf/../../other/stb_image.h"
   $58 = $57&255; //@line 4327 "src/sprites/../puun/gf/../../other/stb_image.h"
   $color = $58; //@line 4327 "src/sprites/../puun/gf/../../other/stb_image.h"
   $59 = $color; //@line 4327 "src/sprites/../puun/gf/../../other/stb_image.h"
   $60 = ($59|0)>(6); //@line 4327 "src/sprites/../puun/gf/../../other/stb_image.h"
   if ($60) {
    label = 22;
    break;
   }
   $62 = $color; //@line 4328 "src/sprites/../puun/gf/../../other/stb_image.h"
   $63 = ($62|0)==(3); //@line 4328 "src/sprites/../puun/gf/../../other/stb_image.h"
   if ($63) {
    $pal_img_n = 3; //@line 4328 "src/sprites/../puun/gf/../../other/stb_image.h"
   } else {
    $64 = $color; //@line 4328 "src/sprites/../puun/gf/../../other/stb_image.h"
    $65 = $64 & 1; //@line 4328 "src/sprites/../puun/gf/../../other/stb_image.h"
    $66 = ($65|0)!=(0); //@line 4328 "src/sprites/../puun/gf/../../other/stb_image.h"
    if ($66) {
     label = 26;
     break;
    }
   }
   $68 = $s; //@line 4329 "src/sprites/../puun/gf/../../other/stb_image.h"
   $69 = (_stbi__get8($68)|0); //@line 4329 "src/sprites/../puun/gf/../../other/stb_image.h"
   $70 = $69&255; //@line 4329 "src/sprites/../puun/gf/../../other/stb_image.h"
   $comp = $70; //@line 4329 "src/sprites/../puun/gf/../../other/stb_image.h"
   $71 = $comp; //@line 4329 "src/sprites/../puun/gf/../../other/stb_image.h"
   $72 = ($71|0)!=(0); //@line 4329 "src/sprites/../puun/gf/../../other/stb_image.h"
   if ($72) {
    label = 29;
    break;
   }
   $74 = $s; //@line 4330 "src/sprites/../puun/gf/../../other/stb_image.h"
   $75 = (_stbi__get8($74)|0); //@line 4330 "src/sprites/../puun/gf/../../other/stb_image.h"
   $76 = $75&255; //@line 4330 "src/sprites/../puun/gf/../../other/stb_image.h"
   $filter = $76; //@line 4330 "src/sprites/../puun/gf/../../other/stb_image.h"
   $77 = $filter; //@line 4330 "src/sprites/../puun/gf/../../other/stb_image.h"
   $78 = ($77|0)!=(0); //@line 4330 "src/sprites/../puun/gf/../../other/stb_image.h"
   if ($78) {
    label = 31;
    break;
   }
   $80 = $s; //@line 4331 "src/sprites/../puun/gf/../../other/stb_image.h"
   $81 = (_stbi__get8($80)|0); //@line 4331 "src/sprites/../puun/gf/../../other/stb_image.h"
   $82 = $81&255; //@line 4331 "src/sprites/../puun/gf/../../other/stb_image.h"
   $interlace = $82; //@line 4331 "src/sprites/../puun/gf/../../other/stb_image.h"
   $83 = $interlace; //@line 4331 "src/sprites/../puun/gf/../../other/stb_image.h"
   $84 = ($83|0)>(1); //@line 4331 "src/sprites/../puun/gf/../../other/stb_image.h"
   if ($84) {
    label = 33;
    break;
   }
   $86 = $s; //@line 4332 "src/sprites/../puun/gf/../../other/stb_image.h"
   $87 = HEAP32[$86>>2]|0; //@line 4332 "src/sprites/../puun/gf/../../other/stb_image.h"
   $88 = ($87|0)!=(0); //@line 4332 "src/sprites/../puun/gf/../../other/stb_image.h"
   if (!($88)) {
    label = 36;
    break;
   }
   $89 = $s; //@line 4332 "src/sprites/../puun/gf/../../other/stb_image.h"
   $90 = (($89) + 4|0); //@line 4332 "src/sprites/../puun/gf/../../other/stb_image.h"
   $91 = HEAP32[$90>>2]|0; //@line 4332 "src/sprites/../puun/gf/../../other/stb_image.h"
   $92 = ($91|0)!=(0); //@line 4332 "src/sprites/../puun/gf/../../other/stb_image.h"
   if (!($92)) {
    label = 36;
    break;
   }
   $94 = $pal_img_n; //@line 4333 "src/sprites/../puun/gf/../../other/stb_image.h"
   $95 = ($94<<24>>24)!=(0); //@line 4333 "src/sprites/../puun/gf/../../other/stb_image.h"
   if ($95) {
    $121 = $s; //@line 4340 "src/sprites/../puun/gf/../../other/stb_image.h"
    $122 = (($121) + 8|0); //@line 4340 "src/sprites/../puun/gf/../../other/stb_image.h"
    HEAP32[$122>>2] = 1; //@line 4340 "src/sprites/../puun/gf/../../other/stb_image.h"
    $123 = $s; //@line 4341 "src/sprites/../puun/gf/../../other/stb_image.h"
    $124 = HEAP32[$123>>2]|0; //@line 4341 "src/sprites/../puun/gf/../../other/stb_image.h"
    $125 = (1073741824 / ($124>>>0))&-1; //@line 4341 "src/sprites/../puun/gf/../../other/stb_image.h"
    $126 = (($125>>>0) / 4)&-1; //@line 4341 "src/sprites/../puun/gf/../../other/stb_image.h"
    $127 = $s; //@line 4341 "src/sprites/../puun/gf/../../other/stb_image.h"
    $128 = (($127) + 4|0); //@line 4341 "src/sprites/../puun/gf/../../other/stb_image.h"
    $129 = HEAP32[$128>>2]|0; //@line 4341 "src/sprites/../puun/gf/../../other/stb_image.h"
    $130 = ($126>>>0)<($129>>>0); //@line 4341 "src/sprites/../puun/gf/../../other/stb_image.h"
    if ($130) {
     label = 44;
     break;
    }
   } else {
    $96 = $color; //@line 4334 "src/sprites/../puun/gf/../../other/stb_image.h"
    $97 = $96 & 2; //@line 4334 "src/sprites/../puun/gf/../../other/stb_image.h"
    $98 = ($97|0)!=(0); //@line 4334 "src/sprites/../puun/gf/../../other/stb_image.h"
    $99 = $98 ? 3 : 1; //@line 4334 "src/sprites/../puun/gf/../../other/stb_image.h"
    $100 = $color; //@line 4334 "src/sprites/../puun/gf/../../other/stb_image.h"
    $101 = $100 & 4; //@line 4334 "src/sprites/../puun/gf/../../other/stb_image.h"
    $102 = ($101|0)!=(0); //@line 4334 "src/sprites/../puun/gf/../../other/stb_image.h"
    $103 = $102 ? 1 : 0; //@line 4334 "src/sprites/../puun/gf/../../other/stb_image.h"
    $104 = (($99) + ($103))|0; //@line 4334 "src/sprites/../puun/gf/../../other/stb_image.h"
    $105 = $s; //@line 4334 "src/sprites/../puun/gf/../../other/stb_image.h"
    $106 = (($105) + 8|0); //@line 4334 "src/sprites/../puun/gf/../../other/stb_image.h"
    HEAP32[$106>>2] = $104; //@line 4334 "src/sprites/../puun/gf/../../other/stb_image.h"
    $107 = $s; //@line 4335 "src/sprites/../puun/gf/../../other/stb_image.h"
    $108 = HEAP32[$107>>2]|0; //@line 4335 "src/sprites/../puun/gf/../../other/stb_image.h"
    $109 = (1073741824 / ($108>>>0))&-1; //@line 4335 "src/sprites/../puun/gf/../../other/stb_image.h"
    $110 = $s; //@line 4335 "src/sprites/../puun/gf/../../other/stb_image.h"
    $111 = (($110) + 8|0); //@line 4335 "src/sprites/../puun/gf/../../other/stb_image.h"
    $112 = HEAP32[$111>>2]|0; //@line 4335 "src/sprites/../puun/gf/../../other/stb_image.h"
    $113 = (($109>>>0) / ($112>>>0))&-1; //@line 4335 "src/sprites/../puun/gf/../../other/stb_image.h"
    $114 = $s; //@line 4335 "src/sprites/../puun/gf/../../other/stb_image.h"
    $115 = (($114) + 4|0); //@line 4335 "src/sprites/../puun/gf/../../other/stb_image.h"
    $116 = HEAP32[$115>>2]|0; //@line 4335 "src/sprites/../puun/gf/../../other/stb_image.h"
    $117 = ($113>>>0)<($116>>>0); //@line 4335 "src/sprites/../puun/gf/../../other/stb_image.h"
    if ($117) {
     label = 39;
     break;
    }
    $119 = $2; //@line 4336 "src/sprites/../puun/gf/../../other/stb_image.h"
    $120 = ($119|0)==(2); //@line 4336 "src/sprites/../puun/gf/../../other/stb_image.h"
    if ($120) {
     label = 41;
     break;
    }
   }
  } else if ((($19|0) == 1130840649)) {
   $is_iphone = 1; //@line 4316 "src/sprites/../puun/gf/../../other/stb_image.h"
   $20 = $s; //@line 4317 "src/sprites/../puun/gf/../../other/stb_image.h"
   $21 = HEAP32[$c>>2]|0; //@line 4317 "src/sprites/../puun/gf/../../other/stb_image.h"
   _stbi__skip($20,$21); //@line 4317 "src/sprites/../puun/gf/../../other/stb_image.h"
  } else if ((($19|0) == 1347179589)) {
   $132 = $first; //@line 4348 "src/sprites/../puun/gf/../../other/stb_image.h"
   $133 = ($132|0)!=(0); //@line 4348 "src/sprites/../puun/gf/../../other/stb_image.h"
   if ($133) {
    label = 48;
    break;
   }
   $135 = HEAP32[$c>>2]|0; //@line 4349 "src/sprites/../puun/gf/../../other/stb_image.h"
   $136 = ($135>>>0)>(768); //@line 4349 "src/sprites/../puun/gf/../../other/stb_image.h"
   if ($136) {
    label = 50;
    break;
   }
   $138 = HEAP32[$c>>2]|0; //@line 4350 "src/sprites/../puun/gf/../../other/stb_image.h"
   $139 = (($138>>>0) / 3)&-1; //@line 4350 "src/sprites/../puun/gf/../../other/stb_image.h"
   $pal_len = $139; //@line 4350 "src/sprites/../puun/gf/../../other/stb_image.h"
   $140 = $pal_len; //@line 4351 "src/sprites/../puun/gf/../../other/stb_image.h"
   $141 = ($140*3)|0; //@line 4351 "src/sprites/../puun/gf/../../other/stb_image.h"
   $142 = HEAP32[$c>>2]|0; //@line 4351 "src/sprites/../puun/gf/../../other/stb_image.h"
   $143 = ($141|0)!=($142|0); //@line 4351 "src/sprites/../puun/gf/../../other/stb_image.h"
   if ($143) {
    label = 52;
    break;
   }
   $i = 0; //@line 4352 "src/sprites/../puun/gf/../../other/stb_image.h"
   while(1) {
    $145 = $i; //@line 4352 "src/sprites/../puun/gf/../../other/stb_image.h"
    $146 = $pal_len; //@line 4352 "src/sprites/../puun/gf/../../other/stb_image.h"
    $147 = ($145>>>0)<($146>>>0); //@line 4352 "src/sprites/../puun/gf/../../other/stb_image.h"
    if (!($147)) {
     break;
    }
    $148 = $s; //@line 4353 "src/sprites/../puun/gf/../../other/stb_image.h"
    $149 = (_stbi__get8($148)|0); //@line 4353 "src/sprites/../puun/gf/../../other/stb_image.h"
    $150 = $i; //@line 4353 "src/sprites/../puun/gf/../../other/stb_image.h"
    $151 = $150<<2; //@line 4353 "src/sprites/../puun/gf/../../other/stb_image.h"
    $152 = (($151) + 0)|0; //@line 4353 "src/sprites/../puun/gf/../../other/stb_image.h"
    $153 = (($palette) + ($152)|0); //@line 4353 "src/sprites/../puun/gf/../../other/stb_image.h"
    HEAP8[$153>>0] = $149; //@line 4353 "src/sprites/../puun/gf/../../other/stb_image.h"
    $154 = $s; //@line 4354 "src/sprites/../puun/gf/../../other/stb_image.h"
    $155 = (_stbi__get8($154)|0); //@line 4354 "src/sprites/../puun/gf/../../other/stb_image.h"
    $156 = $i; //@line 4354 "src/sprites/../puun/gf/../../other/stb_image.h"
    $157 = $156<<2; //@line 4354 "src/sprites/../puun/gf/../../other/stb_image.h"
    $158 = (($157) + 1)|0; //@line 4354 "src/sprites/../puun/gf/../../other/stb_image.h"
    $159 = (($palette) + ($158)|0); //@line 4354 "src/sprites/../puun/gf/../../other/stb_image.h"
    HEAP8[$159>>0] = $155; //@line 4354 "src/sprites/../puun/gf/../../other/stb_image.h"
    $160 = $s; //@line 4355 "src/sprites/../puun/gf/../../other/stb_image.h"
    $161 = (_stbi__get8($160)|0); //@line 4355 "src/sprites/../puun/gf/../../other/stb_image.h"
    $162 = $i; //@line 4355 "src/sprites/../puun/gf/../../other/stb_image.h"
    $163 = $162<<2; //@line 4355 "src/sprites/../puun/gf/../../other/stb_image.h"
    $164 = (($163) + 2)|0; //@line 4355 "src/sprites/../puun/gf/../../other/stb_image.h"
    $165 = (($palette) + ($164)|0); //@line 4355 "src/sprites/../puun/gf/../../other/stb_image.h"
    HEAP8[$165>>0] = $161; //@line 4355 "src/sprites/../puun/gf/../../other/stb_image.h"
    $166 = $i; //@line 4356 "src/sprites/../puun/gf/../../other/stb_image.h"
    $167 = $166<<2; //@line 4356 "src/sprites/../puun/gf/../../other/stb_image.h"
    $168 = (($167) + 3)|0; //@line 4356 "src/sprites/../puun/gf/../../other/stb_image.h"
    $169 = (($palette) + ($168)|0); //@line 4356 "src/sprites/../puun/gf/../../other/stb_image.h"
    HEAP8[$169>>0] = -1; //@line 4356 "src/sprites/../puun/gf/../../other/stb_image.h"
    $170 = $i; //@line 4352 "src/sprites/../puun/gf/../../other/stb_image.h"
    $171 = (($170) + 1)|0; //@line 4352 "src/sprites/../puun/gf/../../other/stb_image.h"
    $i = $171; //@line 4352 "src/sprites/../puun/gf/../../other/stb_image.h"
   }
  } else if ((($19|0) == 1951551059)) {
   $172 = $first; //@line 4362 "src/sprites/../puun/gf/../../other/stb_image.h"
   $173 = ($172|0)!=(0); //@line 4362 "src/sprites/../puun/gf/../../other/stb_image.h"
   if ($173) {
    label = 59;
    break;
   }
   $175 = $1; //@line 4363 "src/sprites/../puun/gf/../../other/stb_image.h"
   $176 = (($175) + 4|0); //@line 4363 "src/sprites/../puun/gf/../../other/stb_image.h"
   $177 = HEAP32[$176>>2]|0; //@line 4363 "src/sprites/../puun/gf/../../other/stb_image.h"
   $178 = ($177|0)!=(0|0); //@line 4363 "src/sprites/../puun/gf/../../other/stb_image.h"
   if ($178) {
    label = 61;
    break;
   }
   $180 = $pal_img_n; //@line 4364 "src/sprites/../puun/gf/../../other/stb_image.h"
   $181 = ($180<<24>>24)!=(0); //@line 4364 "src/sprites/../puun/gf/../../other/stb_image.h"
   if ($181) {
    $182 = $2; //@line 4365 "src/sprites/../puun/gf/../../other/stb_image.h"
    $183 = ($182|0)==(2); //@line 4365 "src/sprites/../puun/gf/../../other/stb_image.h"
    if ($183) {
     label = 64;
     break;
    }
    $186 = $pal_len; //@line 4366 "src/sprites/../puun/gf/../../other/stb_image.h"
    $187 = ($186|0)==(0); //@line 4366 "src/sprites/../puun/gf/../../other/stb_image.h"
    if ($187) {
     label = 66;
     break;
    }
    $189 = HEAP32[$c>>2]|0; //@line 4367 "src/sprites/../puun/gf/../../other/stb_image.h"
    $190 = $pal_len; //@line 4367 "src/sprites/../puun/gf/../../other/stb_image.h"
    $191 = ($189>>>0)>($190>>>0); //@line 4367 "src/sprites/../puun/gf/../../other/stb_image.h"
    if ($191) {
     label = 68;
     break;
    }
    $pal_img_n = 4; //@line 4368 "src/sprites/../puun/gf/../../other/stb_image.h"
    $i = 0; //@line 4369 "src/sprites/../puun/gf/../../other/stb_image.h"
    while(1) {
     $193 = $i; //@line 4369 "src/sprites/../puun/gf/../../other/stb_image.h"
     $194 = HEAP32[$c>>2]|0; //@line 4369 "src/sprites/../puun/gf/../../other/stb_image.h"
     $195 = ($193>>>0)<($194>>>0); //@line 4369 "src/sprites/../puun/gf/../../other/stb_image.h"
     if (!($195)) {
      break;
     }
     $196 = $s; //@line 4370 "src/sprites/../puun/gf/../../other/stb_image.h"
     $197 = (_stbi__get8($196)|0); //@line 4370 "src/sprites/../puun/gf/../../other/stb_image.h"
     $198 = $i; //@line 4370 "src/sprites/../puun/gf/../../other/stb_image.h"
     $199 = $198<<2; //@line 4370 "src/sprites/../puun/gf/../../other/stb_image.h"
     $200 = (($199) + 3)|0; //@line 4370 "src/sprites/../puun/gf/../../other/stb_image.h"
     $201 = (($palette) + ($200)|0); //@line 4370 "src/sprites/../puun/gf/../../other/stb_image.h"
     HEAP8[$201>>0] = $197; //@line 4370 "src/sprites/../puun/gf/../../other/stb_image.h"
     $202 = $i; //@line 4369 "src/sprites/../puun/gf/../../other/stb_image.h"
     $203 = (($202) + 1)|0; //@line 4369 "src/sprites/../puun/gf/../../other/stb_image.h"
     $i = $203; //@line 4369 "src/sprites/../puun/gf/../../other/stb_image.h"
    }
   } else {
    $204 = $s; //@line 4372 "src/sprites/../puun/gf/../../other/stb_image.h"
    $205 = (($204) + 8|0); //@line 4372 "src/sprites/../puun/gf/../../other/stb_image.h"
    $206 = HEAP32[$205>>2]|0; //@line 4372 "src/sprites/../puun/gf/../../other/stb_image.h"
    $207 = $206 & 1; //@line 4372 "src/sprites/../puun/gf/../../other/stb_image.h"
    $208 = ($207|0)!=(0); //@line 4372 "src/sprites/../puun/gf/../../other/stb_image.h"
    if (!($208)) {
     label = 75;
     break;
    }
    $210 = HEAP32[$c>>2]|0; //@line 4373 "src/sprites/../puun/gf/../../other/stb_image.h"
    $211 = $s; //@line 4373 "src/sprites/../puun/gf/../../other/stb_image.h"
    $212 = (($211) + 8|0); //@line 4373 "src/sprites/../puun/gf/../../other/stb_image.h"
    $213 = HEAP32[$212>>2]|0; //@line 4373 "src/sprites/../puun/gf/../../other/stb_image.h"
    $214 = $213<<1; //@line 4373 "src/sprites/../puun/gf/../../other/stb_image.h"
    $215 = ($210|0)!=($214|0); //@line 4373 "src/sprites/../puun/gf/../../other/stb_image.h"
    if ($215) {
     label = 77;
     break;
    }
    $has_trans = 1; //@line 4374 "src/sprites/../puun/gf/../../other/stb_image.h"
    $k = 0; //@line 4375 "src/sprites/../puun/gf/../../other/stb_image.h"
    while(1) {
     $217 = $k; //@line 4375 "src/sprites/../puun/gf/../../other/stb_image.h"
     $218 = $s; //@line 4375 "src/sprites/../puun/gf/../../other/stb_image.h"
     $219 = (($218) + 8|0); //@line 4375 "src/sprites/../puun/gf/../../other/stb_image.h"
     $220 = HEAP32[$219>>2]|0; //@line 4375 "src/sprites/../puun/gf/../../other/stb_image.h"
     $221 = ($217|0)<($220|0); //@line 4375 "src/sprites/../puun/gf/../../other/stb_image.h"
     if (!($221)) {
      break;
     }
     $222 = $s; //@line 4376 "src/sprites/../puun/gf/../../other/stb_image.h"
     $223 = (_stbi__get16be($222)|0); //@line 4376 "src/sprites/../puun/gf/../../other/stb_image.h"
     $224 = $223 & 255; //@line 4376 "src/sprites/../puun/gf/../../other/stb_image.h"
     $225 = $224&255; //@line 4376 "src/sprites/../puun/gf/../../other/stb_image.h"
     $226 = $225&255; //@line 4376 "src/sprites/../puun/gf/../../other/stb_image.h"
     $227 = $depth; //@line 4376 "src/sprites/../puun/gf/../../other/stb_image.h"
     $228 = (7440 + ($227)|0); //@line 4376 "src/sprites/../puun/gf/../../other/stb_image.h"
     $229 = HEAP8[$228>>0]|0; //@line 4376 "src/sprites/../puun/gf/../../other/stb_image.h"
     $230 = $229&255; //@line 4376 "src/sprites/../puun/gf/../../other/stb_image.h"
     $231 = Math_imul($226, $230)|0; //@line 4376 "src/sprites/../puun/gf/../../other/stb_image.h"
     $232 = $231&255; //@line 4376 "src/sprites/../puun/gf/../../other/stb_image.h"
     $233 = $k; //@line 4376 "src/sprites/../puun/gf/../../other/stb_image.h"
     $234 = (($tc) + ($233)|0); //@line 4376 "src/sprites/../puun/gf/../../other/stb_image.h"
     HEAP8[$234>>0] = $232; //@line 4376 "src/sprites/../puun/gf/../../other/stb_image.h"
     $235 = $k; //@line 4375 "src/sprites/../puun/gf/../../other/stb_image.h"
     $236 = (($235) + 1)|0; //@line 4375 "src/sprites/../puun/gf/../../other/stb_image.h"
     $k = $236; //@line 4375 "src/sprites/../puun/gf/../../other/stb_image.h"
    }
   }
  } else if ((($19|0) == 1229209940)) {
   $237 = $first; //@line 4382 "src/sprites/../puun/gf/../../other/stb_image.h"
   $238 = ($237|0)!=(0); //@line 4382 "src/sprites/../puun/gf/../../other/stb_image.h"
   if ($238) {
    label = 85;
    break;
   }
   $240 = $pal_img_n; //@line 4383 "src/sprites/../puun/gf/../../other/stb_image.h"
   $241 = $240&255; //@line 4383 "src/sprites/../puun/gf/../../other/stb_image.h"
   $242 = ($241|0)!=(0); //@line 4383 "src/sprites/../puun/gf/../../other/stb_image.h"
   if ($242) {
    $243 = $pal_len; //@line 4383 "src/sprites/../puun/gf/../../other/stb_image.h"
    $244 = ($243|0)!=(0); //@line 4383 "src/sprites/../puun/gf/../../other/stb_image.h"
    if (!($244)) {
     label = 88;
     break;
    }
   }
   $246 = $2; //@line 4384 "src/sprites/../puun/gf/../../other/stb_image.h"
   $247 = ($246|0)==(2); //@line 4384 "src/sprites/../puun/gf/../../other/stb_image.h"
   if ($247) {
    label = 90;
    break;
   }
   $252 = $ioff; //@line 4385 "src/sprites/../puun/gf/../../other/stb_image.h"
   $253 = HEAP32[$c>>2]|0; //@line 4385 "src/sprites/../puun/gf/../../other/stb_image.h"
   $254 = (($252) + ($253))|0; //@line 4385 "src/sprites/../puun/gf/../../other/stb_image.h"
   $255 = $ioff; //@line 4385 "src/sprites/../puun/gf/../../other/stb_image.h"
   $256 = ($254|0)<($255|0); //@line 4385 "src/sprites/../puun/gf/../../other/stb_image.h"
   if ($256) {
    label = 92;
    break;
   }
   $257 = $ioff; //@line 4386 "src/sprites/../puun/gf/../../other/stb_image.h"
   $258 = HEAP32[$c>>2]|0; //@line 4386 "src/sprites/../puun/gf/../../other/stb_image.h"
   $259 = (($257) + ($258))|0; //@line 4386 "src/sprites/../puun/gf/../../other/stb_image.h"
   $260 = $idata_limit; //@line 4386 "src/sprites/../puun/gf/../../other/stb_image.h"
   $261 = ($259>>>0)>($260>>>0); //@line 4386 "src/sprites/../puun/gf/../../other/stb_image.h"
   if ($261) {
    $262 = $idata_limit; //@line 4388 "src/sprites/../puun/gf/../../other/stb_image.h"
    $263 = ($262|0)==(0); //@line 4388 "src/sprites/../puun/gf/../../other/stb_image.h"
    if ($263) {
     $264 = HEAP32[$c>>2]|0; //@line 4388 "src/sprites/../puun/gf/../../other/stb_image.h"
     $265 = ($264>>>0)>(4096); //@line 4388 "src/sprites/../puun/gf/../../other/stb_image.h"
     if ($265) {
      $266 = HEAP32[$c>>2]|0; //@line 4388 "src/sprites/../puun/gf/../../other/stb_image.h"
      $267 = $266;
     } else {
      $267 = 4096;
     }
     $idata_limit = $267; //@line 4388 "src/sprites/../puun/gf/../../other/stb_image.h"
    }
    while(1) {
     $268 = $ioff; //@line 4389 "src/sprites/../puun/gf/../../other/stb_image.h"
     $269 = HEAP32[$c>>2]|0; //@line 4389 "src/sprites/../puun/gf/../../other/stb_image.h"
     $270 = (($268) + ($269))|0; //@line 4389 "src/sprites/../puun/gf/../../other/stb_image.h"
     $271 = $idata_limit; //@line 4389 "src/sprites/../puun/gf/../../other/stb_image.h"
     $272 = ($270>>>0)>($271>>>0); //@line 4389 "src/sprites/../puun/gf/../../other/stb_image.h"
     if (!($272)) {
      break;
     }
     $273 = $idata_limit; //@line 4390 "src/sprites/../puun/gf/../../other/stb_image.h"
     $274 = $273<<1; //@line 4390 "src/sprites/../puun/gf/../../other/stb_image.h"
     $idata_limit = $274; //@line 4390 "src/sprites/../puun/gf/../../other/stb_image.h"
    }
    $275 = $1; //@line 4391 "src/sprites/../puun/gf/../../other/stb_image.h"
    $276 = (($275) + 4|0); //@line 4391 "src/sprites/../puun/gf/../../other/stb_image.h"
    $277 = HEAP32[$276>>2]|0; //@line 4391 "src/sprites/../puun/gf/../../other/stb_image.h"
    $278 = $idata_limit; //@line 4391 "src/sprites/../puun/gf/../../other/stb_image.h"
    $279 = (_realloc($277,$278)|0); //@line 4391 "src/sprites/../puun/gf/../../other/stb_image.h"
    $p = $279; //@line 4391 "src/sprites/../puun/gf/../../other/stb_image.h"
    $280 = $p; //@line 4391 "src/sprites/../puun/gf/../../other/stb_image.h"
    $281 = ($280|0)==(0|0); //@line 4391 "src/sprites/../puun/gf/../../other/stb_image.h"
    if ($281) {
     label = 103;
     break;
    }
    $283 = $p; //@line 4392 "src/sprites/../puun/gf/../../other/stb_image.h"
    $284 = $1; //@line 4392 "src/sprites/../puun/gf/../../other/stb_image.h"
    $285 = (($284) + 4|0); //@line 4392 "src/sprites/../puun/gf/../../other/stb_image.h"
    HEAP32[$285>>2] = $283; //@line 4392 "src/sprites/../puun/gf/../../other/stb_image.h"
   }
   $286 = $s; //@line 4394 "src/sprites/../puun/gf/../../other/stb_image.h"
   $287 = $1; //@line 4394 "src/sprites/../puun/gf/../../other/stb_image.h"
   $288 = (($287) + 4|0); //@line 4394 "src/sprites/../puun/gf/../../other/stb_image.h"
   $289 = HEAP32[$288>>2]|0; //@line 4394 "src/sprites/../puun/gf/../../other/stb_image.h"
   $290 = $ioff; //@line 4394 "src/sprites/../puun/gf/../../other/stb_image.h"
   $291 = (($289) + ($290)|0); //@line 4394 "src/sprites/../puun/gf/../../other/stb_image.h"
   $292 = HEAP32[$c>>2]|0; //@line 4394 "src/sprites/../puun/gf/../../other/stb_image.h"
   $293 = (_stbi__getn($286,$291,$292)|0); //@line 4394 "src/sprites/../puun/gf/../../other/stb_image.h"
   $294 = ($293|0)!=(0); //@line 4394 "src/sprites/../puun/gf/../../other/stb_image.h"
   if (!($294)) {
    label = 106;
    break;
   }
   $296 = HEAP32[$c>>2]|0; //@line 4395 "src/sprites/../puun/gf/../../other/stb_image.h"
   $297 = $ioff; //@line 4395 "src/sprites/../puun/gf/../../other/stb_image.h"
   $298 = (($297) + ($296))|0; //@line 4395 "src/sprites/../puun/gf/../../other/stb_image.h"
   $ioff = $298; //@line 4395 "src/sprites/../puun/gf/../../other/stb_image.h"
  } else if ((($19|0) == 1229278788)) {
   label = 108;
   break;
  } else {
   $430 = $first; //@line 4433 "src/sprites/../puun/gf/../../other/stb_image.h"
   $431 = ($430|0)!=(0); //@line 4433 "src/sprites/../puun/gf/../../other/stb_image.h"
   if ($431) {
    label = 140;
    break;
   }
   $433 = (($c) + 4|0); //@line 4434 "src/sprites/../puun/gf/../../other/stb_image.h"
   $434 = HEAP32[$433>>2]|0; //@line 4434 "src/sprites/../puun/gf/../../other/stb_image.h"
   $435 = $434 & 536870912; //@line 4434 "src/sprites/../puun/gf/../../other/stb_image.h"
   $436 = ($435|0)==(0); //@line 4434 "src/sprites/../puun/gf/../../other/stb_image.h"
   if ($436) {
    label = 142;
    break;
   }
   $458 = $s; //@line 4445 "src/sprites/../puun/gf/../../other/stb_image.h"
   $459 = HEAP32[$c>>2]|0; //@line 4445 "src/sprites/../puun/gf/../../other/stb_image.h"
   _stbi__skip($458,$459); //@line 4445 "src/sprites/../puun/gf/../../other/stb_image.h"
  }
  $460 = $s; //@line 4449 "src/sprites/../puun/gf/../../other/stb_image.h"
  (_stbi__get32be($460)|0); //@line 4449 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 switch (label|0) {
  case 9: {
   $24 = (_stbi__err(7168)|0); //@line 4321 "src/sprites/../puun/gf/../../other/stb_image.h"
   $0 = $24; //@line 4321 "src/sprites/../puun/gf/../../other/stb_image.h"
   $461 = $0; //@line 4451 "src/sprites/../puun/gf/../../other/stb_image.h"
   STACKTOP = sp;return ($461|0); //@line 4451 "src/sprites/../puun/gf/../../other/stb_image.h"
   break;
  }
  case 11: {
   $27 = (_stbi__err(7184)|0); //@line 4323 "src/sprites/../puun/gf/../../other/stb_image.h"
   $0 = $27; //@line 4323 "src/sprites/../puun/gf/../../other/stb_image.h"
   $461 = $0; //@line 4451 "src/sprites/../puun/gf/../../other/stb_image.h"
   STACKTOP = sp;return ($461|0); //@line 4451 "src/sprites/../puun/gf/../../other/stb_image.h"
   break;
  }
  case 13: {
   $34 = (_stbi__err(7200)|0); //@line 4324 "src/sprites/../puun/gf/../../other/stb_image.h"
   $0 = $34; //@line 4324 "src/sprites/../puun/gf/../../other/stb_image.h"
   $461 = $0; //@line 4451 "src/sprites/../puun/gf/../../other/stb_image.h"
   STACKTOP = sp;return ($461|0); //@line 4451 "src/sprites/../puun/gf/../../other/stb_image.h"
   break;
  }
  case 15: {
   $43 = (_stbi__err(7200)|0); //@line 4325 "src/sprites/../puun/gf/../../other/stb_image.h"
   $0 = $43; //@line 4325 "src/sprites/../puun/gf/../../other/stb_image.h"
   $461 = $0; //@line 4451 "src/sprites/../puun/gf/../../other/stb_image.h"
   STACKTOP = sp;return ($461|0); //@line 4451 "src/sprites/../puun/gf/../../other/stb_image.h"
   break;
  }
  case 20: {
   $55 = (_stbi__err(7216)|0); //@line 4326 "src/sprites/../puun/gf/../../other/stb_image.h"
   $0 = $55; //@line 4326 "src/sprites/../puun/gf/../../other/stb_image.h"
   $461 = $0; //@line 4451 "src/sprites/../puun/gf/../../other/stb_image.h"
   STACKTOP = sp;return ($461|0); //@line 4451 "src/sprites/../puun/gf/../../other/stb_image.h"
   break;
  }
  case 22: {
   $61 = (_stbi__err(7240)|0); //@line 4327 "src/sprites/../puun/gf/../../other/stb_image.h"
   $0 = $61; //@line 4327 "src/sprites/../puun/gf/../../other/stb_image.h"
   $461 = $0; //@line 4451 "src/sprites/../puun/gf/../../other/stb_image.h"
   STACKTOP = sp;return ($461|0); //@line 4451 "src/sprites/../puun/gf/../../other/stb_image.h"
   break;
  }
  case 26: {
   $67 = (_stbi__err(7240)|0); //@line 4328 "src/sprites/../puun/gf/../../other/stb_image.h"
   $0 = $67; //@line 4328 "src/sprites/../puun/gf/../../other/stb_image.h"
   $461 = $0; //@line 4451 "src/sprites/../puun/gf/../../other/stb_image.h"
   STACKTOP = sp;return ($461|0); //@line 4451 "src/sprites/../puun/gf/../../other/stb_image.h"
   break;
  }
  case 29: {
   $73 = (_stbi__err(7256)|0); //@line 4329 "src/sprites/../puun/gf/../../other/stb_image.h"
   $0 = $73; //@line 4329 "src/sprites/../puun/gf/../../other/stb_image.h"
   $461 = $0; //@line 4451 "src/sprites/../puun/gf/../../other/stb_image.h"
   STACKTOP = sp;return ($461|0); //@line 4451 "src/sprites/../puun/gf/../../other/stb_image.h"
   break;
  }
  case 31: {
   $79 = (_stbi__err(7272)|0); //@line 4330 "src/sprites/../puun/gf/../../other/stb_image.h"
   $0 = $79; //@line 4330 "src/sprites/../puun/gf/../../other/stb_image.h"
   $461 = $0; //@line 4451 "src/sprites/../puun/gf/../../other/stb_image.h"
   STACKTOP = sp;return ($461|0); //@line 4451 "src/sprites/../puun/gf/../../other/stb_image.h"
   break;
  }
  case 33: {
   $85 = (_stbi__err(7296)|0); //@line 4331 "src/sprites/../puun/gf/../../other/stb_image.h"
   $0 = $85; //@line 4331 "src/sprites/../puun/gf/../../other/stb_image.h"
   $461 = $0; //@line 4451 "src/sprites/../puun/gf/../../other/stb_image.h"
   STACKTOP = sp;return ($461|0); //@line 4451 "src/sprites/../puun/gf/../../other/stb_image.h"
   break;
  }
  case 36: {
   $93 = (_stbi__err(7320)|0); //@line 4332 "src/sprites/../puun/gf/../../other/stb_image.h"
   $0 = $93; //@line 4332 "src/sprites/../puun/gf/../../other/stb_image.h"
   $461 = $0; //@line 4451 "src/sprites/../puun/gf/../../other/stb_image.h"
   STACKTOP = sp;return ($461|0); //@line 4451 "src/sprites/../puun/gf/../../other/stb_image.h"
   break;
  }
  case 39: {
   $118 = (_stbi__err(7200)|0); //@line 4335 "src/sprites/../puun/gf/../../other/stb_image.h"
   $0 = $118; //@line 4335 "src/sprites/../puun/gf/../../other/stb_image.h"
   $461 = $0; //@line 4451 "src/sprites/../puun/gf/../../other/stb_image.h"
   STACKTOP = sp;return ($461|0); //@line 4451 "src/sprites/../puun/gf/../../other/stb_image.h"
   break;
  }
  case 41: {
   $0 = 1; //@line 4336 "src/sprites/../puun/gf/../../other/stb_image.h"
   $461 = $0; //@line 4451 "src/sprites/../puun/gf/../../other/stb_image.h"
   STACKTOP = sp;return ($461|0); //@line 4451 "src/sprites/../puun/gf/../../other/stb_image.h"
   break;
  }
  case 44: {
   $131 = (_stbi__err(7200)|0); //@line 4341 "src/sprites/../puun/gf/../../other/stb_image.h"
   $0 = $131; //@line 4341 "src/sprites/../puun/gf/../../other/stb_image.h"
   $461 = $0; //@line 4451 "src/sprites/../puun/gf/../../other/stb_image.h"
   STACKTOP = sp;return ($461|0); //@line 4451 "src/sprites/../puun/gf/../../other/stb_image.h"
   break;
  }
  case 48: {
   $134 = (_stbi__err(7336)|0); //@line 4348 "src/sprites/../puun/gf/../../other/stb_image.h"
   $0 = $134; //@line 4348 "src/sprites/../puun/gf/../../other/stb_image.h"
   $461 = $0; //@line 4451 "src/sprites/../puun/gf/../../other/stb_image.h"
   STACKTOP = sp;return ($461|0); //@line 4451 "src/sprites/../puun/gf/../../other/stb_image.h"
   break;
  }
  case 50: {
   $137 = (_stbi__err(7352)|0); //@line 4349 "src/sprites/../puun/gf/../../other/stb_image.h"
   $0 = $137; //@line 4349 "src/sprites/../puun/gf/../../other/stb_image.h"
   $461 = $0; //@line 4451 "src/sprites/../puun/gf/../../other/stb_image.h"
   STACKTOP = sp;return ($461|0); //@line 4451 "src/sprites/../puun/gf/../../other/stb_image.h"
   break;
  }
  case 52: {
   $144 = (_stbi__err(7352)|0); //@line 4351 "src/sprites/../puun/gf/../../other/stb_image.h"
   $0 = $144; //@line 4351 "src/sprites/../puun/gf/../../other/stb_image.h"
   $461 = $0; //@line 4451 "src/sprites/../puun/gf/../../other/stb_image.h"
   STACKTOP = sp;return ($461|0); //@line 4451 "src/sprites/../puun/gf/../../other/stb_image.h"
   break;
  }
  case 59: {
   $174 = (_stbi__err(7336)|0); //@line 4362 "src/sprites/../puun/gf/../../other/stb_image.h"
   $0 = $174; //@line 4362 "src/sprites/../puun/gf/../../other/stb_image.h"
   $461 = $0; //@line 4451 "src/sprites/../puun/gf/../../other/stb_image.h"
   STACKTOP = sp;return ($461|0); //@line 4451 "src/sprites/../puun/gf/../../other/stb_image.h"
   break;
  }
  case 61: {
   $179 = (_stbi__err(7368)|0); //@line 4363 "src/sprites/../puun/gf/../../other/stb_image.h"
   $0 = $179; //@line 4363 "src/sprites/../puun/gf/../../other/stb_image.h"
   $461 = $0; //@line 4451 "src/sprites/../puun/gf/../../other/stb_image.h"
   STACKTOP = sp;return ($461|0); //@line 4451 "src/sprites/../puun/gf/../../other/stb_image.h"
   break;
  }
  case 64: {
   $184 = $s; //@line 4365 "src/sprites/../puun/gf/../../other/stb_image.h"
   $185 = (($184) + 8|0); //@line 4365 "src/sprites/../puun/gf/../../other/stb_image.h"
   HEAP32[$185>>2] = 4; //@line 4365 "src/sprites/../puun/gf/../../other/stb_image.h"
   $0 = 1; //@line 4365 "src/sprites/../puun/gf/../../other/stb_image.h"
   $461 = $0; //@line 4451 "src/sprites/../puun/gf/../../other/stb_image.h"
   STACKTOP = sp;return ($461|0); //@line 4451 "src/sprites/../puun/gf/../../other/stb_image.h"
   break;
  }
  case 66: {
   $188 = (_stbi__err(7384)|0); //@line 4366 "src/sprites/../puun/gf/../../other/stb_image.h"
   $0 = $188; //@line 4366 "src/sprites/../puun/gf/../../other/stb_image.h"
   $461 = $0; //@line 4451 "src/sprites/../puun/gf/../../other/stb_image.h"
   STACKTOP = sp;return ($461|0); //@line 4451 "src/sprites/../puun/gf/../../other/stb_image.h"
   break;
  }
  case 68: {
   $192 = (_stbi__err(7408)|0); //@line 4367 "src/sprites/../puun/gf/../../other/stb_image.h"
   $0 = $192; //@line 4367 "src/sprites/../puun/gf/../../other/stb_image.h"
   $461 = $0; //@line 4451 "src/sprites/../puun/gf/../../other/stb_image.h"
   STACKTOP = sp;return ($461|0); //@line 4451 "src/sprites/../puun/gf/../../other/stb_image.h"
   break;
  }
  case 75: {
   $209 = (_stbi__err(7424)|0); //@line 4372 "src/sprites/../puun/gf/../../other/stb_image.h"
   $0 = $209; //@line 4372 "src/sprites/../puun/gf/../../other/stb_image.h"
   $461 = $0; //@line 4451 "src/sprites/../puun/gf/../../other/stb_image.h"
   STACKTOP = sp;return ($461|0); //@line 4451 "src/sprites/../puun/gf/../../other/stb_image.h"
   break;
  }
  case 77: {
   $216 = (_stbi__err(7408)|0); //@line 4373 "src/sprites/../puun/gf/../../other/stb_image.h"
   $0 = $216; //@line 4373 "src/sprites/../puun/gf/../../other/stb_image.h"
   $461 = $0; //@line 4451 "src/sprites/../puun/gf/../../other/stb_image.h"
   STACKTOP = sp;return ($461|0); //@line 4451 "src/sprites/../puun/gf/../../other/stb_image.h"
   break;
  }
  case 85: {
   $239 = (_stbi__err(7336)|0); //@line 4382 "src/sprites/../puun/gf/../../other/stb_image.h"
   $0 = $239; //@line 4382 "src/sprites/../puun/gf/../../other/stb_image.h"
   $461 = $0; //@line 4451 "src/sprites/../puun/gf/../../other/stb_image.h"
   STACKTOP = sp;return ($461|0); //@line 4451 "src/sprites/../puun/gf/../../other/stb_image.h"
   break;
  }
  case 88: {
   $245 = (_stbi__err(7456)|0); //@line 4383 "src/sprites/../puun/gf/../../other/stb_image.h"
   $0 = $245; //@line 4383 "src/sprites/../puun/gf/../../other/stb_image.h"
   $461 = $0; //@line 4451 "src/sprites/../puun/gf/../../other/stb_image.h"
   STACKTOP = sp;return ($461|0); //@line 4451 "src/sprites/../puun/gf/../../other/stb_image.h"
   break;
  }
  case 90: {
   $248 = $pal_img_n; //@line 4384 "src/sprites/../puun/gf/../../other/stb_image.h"
   $249 = $248&255; //@line 4384 "src/sprites/../puun/gf/../../other/stb_image.h"
   $250 = $s; //@line 4384 "src/sprites/../puun/gf/../../other/stb_image.h"
   $251 = (($250) + 8|0); //@line 4384 "src/sprites/../puun/gf/../../other/stb_image.h"
   HEAP32[$251>>2] = $249; //@line 4384 "src/sprites/../puun/gf/../../other/stb_image.h"
   $0 = 1; //@line 4384 "src/sprites/../puun/gf/../../other/stb_image.h"
   $461 = $0; //@line 4451 "src/sprites/../puun/gf/../../other/stb_image.h"
   STACKTOP = sp;return ($461|0); //@line 4451 "src/sprites/../puun/gf/../../other/stb_image.h"
   break;
  }
  case 92: {
   $0 = 0; //@line 4385 "src/sprites/../puun/gf/../../other/stb_image.h"
   $461 = $0; //@line 4451 "src/sprites/../puun/gf/../../other/stb_image.h"
   STACKTOP = sp;return ($461|0); //@line 4451 "src/sprites/../puun/gf/../../other/stb_image.h"
   break;
  }
  case 103: {
   $282 = (_stbi__err(7464)|0); //@line 4391 "src/sprites/../puun/gf/../../other/stb_image.h"
   $0 = $282; //@line 4391 "src/sprites/../puun/gf/../../other/stb_image.h"
   $461 = $0; //@line 4451 "src/sprites/../puun/gf/../../other/stb_image.h"
   STACKTOP = sp;return ($461|0); //@line 4451 "src/sprites/../puun/gf/../../other/stb_image.h"
   break;
  }
  case 106: {
   $295 = (_stbi__err(7480)|0); //@line 4394 "src/sprites/../puun/gf/../../other/stb_image.h"
   $0 = $295; //@line 4394 "src/sprites/../puun/gf/../../other/stb_image.h"
   $461 = $0; //@line 4451 "src/sprites/../puun/gf/../../other/stb_image.h"
   STACKTOP = sp;return ($461|0); //@line 4451 "src/sprites/../puun/gf/../../other/stb_image.h"
   break;
  }
  case 108: {
   $299 = $first; //@line 4401 "src/sprites/../puun/gf/../../other/stb_image.h"
   $300 = ($299|0)!=(0); //@line 4401 "src/sprites/../puun/gf/../../other/stb_image.h"
   if ($300) {
    $301 = (_stbi__err(7336)|0); //@line 4401 "src/sprites/../puun/gf/../../other/stb_image.h"
    $0 = $301; //@line 4401 "src/sprites/../puun/gf/../../other/stb_image.h"
    $461 = $0; //@line 4451 "src/sprites/../puun/gf/../../other/stb_image.h"
    STACKTOP = sp;return ($461|0); //@line 4451 "src/sprites/../puun/gf/../../other/stb_image.h"
   }
   $302 = $2; //@line 4402 "src/sprites/../puun/gf/../../other/stb_image.h"
   $303 = ($302|0)!=(0); //@line 4402 "src/sprites/../puun/gf/../../other/stb_image.h"
   if ($303) {
    $0 = 1; //@line 4402 "src/sprites/../puun/gf/../../other/stb_image.h"
    $461 = $0; //@line 4451 "src/sprites/../puun/gf/../../other/stb_image.h"
    STACKTOP = sp;return ($461|0); //@line 4451 "src/sprites/../puun/gf/../../other/stb_image.h"
   }
   $304 = $1; //@line 4403 "src/sprites/../puun/gf/../../other/stb_image.h"
   $305 = (($304) + 4|0); //@line 4403 "src/sprites/../puun/gf/../../other/stb_image.h"
   $306 = HEAP32[$305>>2]|0; //@line 4403 "src/sprites/../puun/gf/../../other/stb_image.h"
   $307 = ($306|0)==(0|0); //@line 4403 "src/sprites/../puun/gf/../../other/stb_image.h"
   if ($307) {
    $308 = (_stbi__err(7496)|0); //@line 4403 "src/sprites/../puun/gf/../../other/stb_image.h"
    $0 = $308; //@line 4403 "src/sprites/../puun/gf/../../other/stb_image.h"
    $461 = $0; //@line 4451 "src/sprites/../puun/gf/../../other/stb_image.h"
    STACKTOP = sp;return ($461|0); //@line 4451 "src/sprites/../puun/gf/../../other/stb_image.h"
   }
   $309 = $s; //@line 4405 "src/sprites/../puun/gf/../../other/stb_image.h"
   $310 = HEAP32[$309>>2]|0; //@line 4405 "src/sprites/../puun/gf/../../other/stb_image.h"
   $311 = $depth; //@line 4405 "src/sprites/../puun/gf/../../other/stb_image.h"
   $312 = Math_imul($310, $311)|0; //@line 4405 "src/sprites/../puun/gf/../../other/stb_image.h"
   $313 = (($312) + 7)|0; //@line 4405 "src/sprites/../puun/gf/../../other/stb_image.h"
   $314 = (($313>>>0) / 8)&-1; //@line 4405 "src/sprites/../puun/gf/../../other/stb_image.h"
   $bpl = $314; //@line 4405 "src/sprites/../puun/gf/../../other/stb_image.h"
   $315 = $bpl; //@line 4406 "src/sprites/../puun/gf/../../other/stb_image.h"
   $316 = $s; //@line 4406 "src/sprites/../puun/gf/../../other/stb_image.h"
   $317 = (($316) + 4|0); //@line 4406 "src/sprites/../puun/gf/../../other/stb_image.h"
   $318 = HEAP32[$317>>2]|0; //@line 4406 "src/sprites/../puun/gf/../../other/stb_image.h"
   $319 = Math_imul($315, $318)|0; //@line 4406 "src/sprites/../puun/gf/../../other/stb_image.h"
   $320 = $s; //@line 4406 "src/sprites/../puun/gf/../../other/stb_image.h"
   $321 = (($320) + 8|0); //@line 4406 "src/sprites/../puun/gf/../../other/stb_image.h"
   $322 = HEAP32[$321>>2]|0; //@line 4406 "src/sprites/../puun/gf/../../other/stb_image.h"
   $323 = Math_imul($319, $322)|0; //@line 4406 "src/sprites/../puun/gf/../../other/stb_image.h"
   $324 = $s; //@line 4406 "src/sprites/../puun/gf/../../other/stb_image.h"
   $325 = (($324) + 4|0); //@line 4406 "src/sprites/../puun/gf/../../other/stb_image.h"
   $326 = HEAP32[$325>>2]|0; //@line 4406 "src/sprites/../puun/gf/../../other/stb_image.h"
   $327 = (($323) + ($326))|0; //@line 4406 "src/sprites/../puun/gf/../../other/stb_image.h"
   HEAP32[$raw_len>>2] = $327; //@line 4406 "src/sprites/../puun/gf/../../other/stb_image.h"
   $328 = $1; //@line 4407 "src/sprites/../puun/gf/../../other/stb_image.h"
   $329 = (($328) + 4|0); //@line 4407 "src/sprites/../puun/gf/../../other/stb_image.h"
   $330 = HEAP32[$329>>2]|0; //@line 4407 "src/sprites/../puun/gf/../../other/stb_image.h"
   $331 = $ioff; //@line 4407 "src/sprites/../puun/gf/../../other/stb_image.h"
   $332 = HEAP32[$raw_len>>2]|0; //@line 4407 "src/sprites/../puun/gf/../../other/stb_image.h"
   $333 = $is_iphone; //@line 4407 "src/sprites/../puun/gf/../../other/stb_image.h"
   $334 = ($333|0)!=(0); //@line 4407 "src/sprites/../puun/gf/../../other/stb_image.h"
   $335 = $334 ^ 1; //@line 4407 "src/sprites/../puun/gf/../../other/stb_image.h"
   $336 = $335&1; //@line 4407 "src/sprites/../puun/gf/../../other/stb_image.h"
   $337 = (_stbi_zlib_decode_malloc_guesssize_headerflag($330,$331,$332,$raw_len,$336)|0); //@line 4407 "src/sprites/../puun/gf/../../other/stb_image.h"
   $338 = $1; //@line 4407 "src/sprites/../puun/gf/../../other/stb_image.h"
   $339 = (($338) + 8|0); //@line 4407 "src/sprites/../puun/gf/../../other/stb_image.h"
   HEAP32[$339>>2] = $337; //@line 4407 "src/sprites/../puun/gf/../../other/stb_image.h"
   $340 = $1; //@line 4408 "src/sprites/../puun/gf/../../other/stb_image.h"
   $341 = (($340) + 8|0); //@line 4408 "src/sprites/../puun/gf/../../other/stb_image.h"
   $342 = HEAP32[$341>>2]|0; //@line 4408 "src/sprites/../puun/gf/../../other/stb_image.h"
   $343 = ($342|0)==(0|0); //@line 4408 "src/sprites/../puun/gf/../../other/stb_image.h"
   if ($343) {
    $0 = 0; //@line 4408 "src/sprites/../puun/gf/../../other/stb_image.h"
    $461 = $0; //@line 4451 "src/sprites/../puun/gf/../../other/stb_image.h"
    STACKTOP = sp;return ($461|0); //@line 4451 "src/sprites/../puun/gf/../../other/stb_image.h"
   }
   $344 = $1; //@line 4409 "src/sprites/../puun/gf/../../other/stb_image.h"
   $345 = (($344) + 4|0); //@line 4409 "src/sprites/../puun/gf/../../other/stb_image.h"
   $346 = HEAP32[$345>>2]|0; //@line 4409 "src/sprites/../puun/gf/../../other/stb_image.h"
   _free($346); //@line 4409 "src/sprites/../puun/gf/../../other/stb_image.h"
   $347 = $1; //@line 4409 "src/sprites/../puun/gf/../../other/stb_image.h"
   $348 = (($347) + 4|0); //@line 4409 "src/sprites/../puun/gf/../../other/stb_image.h"
   HEAP32[$348>>2] = 0; //@line 4409 "src/sprites/../puun/gf/../../other/stb_image.h"
   $349 = $3; //@line 4410 "src/sprites/../puun/gf/../../other/stb_image.h"
   $350 = $s; //@line 4410 "src/sprites/../puun/gf/../../other/stb_image.h"
   $351 = (($350) + 8|0); //@line 4410 "src/sprites/../puun/gf/../../other/stb_image.h"
   $352 = HEAP32[$351>>2]|0; //@line 4410 "src/sprites/../puun/gf/../../other/stb_image.h"
   $353 = (($352) + 1)|0; //@line 4410 "src/sprites/../puun/gf/../../other/stb_image.h"
   $354 = ($349|0)==($353|0); //@line 4410 "src/sprites/../puun/gf/../../other/stb_image.h"
   if ($354) {
    $355 = $3; //@line 4410 "src/sprites/../puun/gf/../../other/stb_image.h"
    $356 = ($355|0)!=(3); //@line 4410 "src/sprites/../puun/gf/../../other/stb_image.h"
    if ($356) {
     $357 = $pal_img_n; //@line 4410 "src/sprites/../puun/gf/../../other/stb_image.h"
     $358 = ($357<<24>>24)!=(0); //@line 4410 "src/sprites/../puun/gf/../../other/stb_image.h"
     if ($358) {
      label = 119;
     } else {
      label = 120;
     }
    } else {
     label = 119;
    }
   } else {
    label = 119;
   }
   if ((label|0) == 119) {
    $359 = $has_trans; //@line 4410 "src/sprites/../puun/gf/../../other/stb_image.h"
    $360 = $359&255; //@line 4410 "src/sprites/../puun/gf/../../other/stb_image.h"
    $361 = ($360|0)!=(0); //@line 4410 "src/sprites/../puun/gf/../../other/stb_image.h"
    if ($361) {
     label = 120;
    } else {
     $368 = $s; //@line 4413 "src/sprites/../puun/gf/../../other/stb_image.h"
     $369 = (($368) + 8|0); //@line 4413 "src/sprites/../puun/gf/../../other/stb_image.h"
     $370 = HEAP32[$369>>2]|0; //@line 4413 "src/sprites/../puun/gf/../../other/stb_image.h"
     $371 = $s; //@line 4413 "src/sprites/../puun/gf/../../other/stb_image.h"
     $372 = (($371) + 12|0); //@line 4413 "src/sprites/../puun/gf/../../other/stb_image.h"
     HEAP32[$372>>2] = $370; //@line 4413 "src/sprites/../puun/gf/../../other/stb_image.h"
    }
   }
   if ((label|0) == 120) {
    $362 = $s; //@line 4411 "src/sprites/../puun/gf/../../other/stb_image.h"
    $363 = (($362) + 8|0); //@line 4411 "src/sprites/../puun/gf/../../other/stb_image.h"
    $364 = HEAP32[$363>>2]|0; //@line 4411 "src/sprites/../puun/gf/../../other/stb_image.h"
    $365 = (($364) + 1)|0; //@line 4411 "src/sprites/../puun/gf/../../other/stb_image.h"
    $366 = $s; //@line 4411 "src/sprites/../puun/gf/../../other/stb_image.h"
    $367 = (($366) + 12|0); //@line 4411 "src/sprites/../puun/gf/../../other/stb_image.h"
    HEAP32[$367>>2] = $365; //@line 4411 "src/sprites/../puun/gf/../../other/stb_image.h"
   }
   $373 = $1; //@line 4414 "src/sprites/../puun/gf/../../other/stb_image.h"
   $374 = $1; //@line 4414 "src/sprites/../puun/gf/../../other/stb_image.h"
   $375 = (($374) + 8|0); //@line 4414 "src/sprites/../puun/gf/../../other/stb_image.h"
   $376 = HEAP32[$375>>2]|0; //@line 4414 "src/sprites/../puun/gf/../../other/stb_image.h"
   $377 = HEAP32[$raw_len>>2]|0; //@line 4414 "src/sprites/../puun/gf/../../other/stb_image.h"
   $378 = $s; //@line 4414 "src/sprites/../puun/gf/../../other/stb_image.h"
   $379 = (($378) + 12|0); //@line 4414 "src/sprites/../puun/gf/../../other/stb_image.h"
   $380 = HEAP32[$379>>2]|0; //@line 4414 "src/sprites/../puun/gf/../../other/stb_image.h"
   $381 = $depth; //@line 4414 "src/sprites/../puun/gf/../../other/stb_image.h"
   $382 = $color; //@line 4414 "src/sprites/../puun/gf/../../other/stb_image.h"
   $383 = $interlace; //@line 4414 "src/sprites/../puun/gf/../../other/stb_image.h"
   $384 = (_stbi__create_png_image($373,$376,$377,$380,$381,$382,$383)|0); //@line 4414 "src/sprites/../puun/gf/../../other/stb_image.h"
   $385 = ($384|0)!=(0); //@line 4414 "src/sprites/../puun/gf/../../other/stb_image.h"
   if (!($385)) {
    $0 = 0; //@line 4414 "src/sprites/../puun/gf/../../other/stb_image.h"
    $461 = $0; //@line 4451 "src/sprites/../puun/gf/../../other/stb_image.h"
    STACKTOP = sp;return ($461|0); //@line 4451 "src/sprites/../puun/gf/../../other/stb_image.h"
   }
   $386 = $has_trans; //@line 4415 "src/sprites/../puun/gf/../../other/stb_image.h"
   $387 = ($386<<24>>24)!=(0); //@line 4415 "src/sprites/../puun/gf/../../other/stb_image.h"
   do {
    if ($387) {
     $388 = $1; //@line 4416 "src/sprites/../puun/gf/../../other/stb_image.h"
     $389 = $s; //@line 4416 "src/sprites/../puun/gf/../../other/stb_image.h"
     $390 = (($389) + 12|0); //@line 4416 "src/sprites/../puun/gf/../../other/stb_image.h"
     $391 = HEAP32[$390>>2]|0; //@line 4416 "src/sprites/../puun/gf/../../other/stb_image.h"
     $392 = (_stbi__compute_transparency($388,$tc,$391)|0); //@line 4416 "src/sprites/../puun/gf/../../other/stb_image.h"
     $393 = ($392|0)!=(0); //@line 4416 "src/sprites/../puun/gf/../../other/stb_image.h"
     if ($393) {
      break;
     }
     $0 = 0; //@line 4416 "src/sprites/../puun/gf/../../other/stb_image.h"
     $461 = $0; //@line 4451 "src/sprites/../puun/gf/../../other/stb_image.h"
     STACKTOP = sp;return ($461|0); //@line 4451 "src/sprites/../puun/gf/../../other/stb_image.h"
    }
   } while(0);
   $394 = $is_iphone; //@line 4417 "src/sprites/../puun/gf/../../other/stb_image.h"
   $395 = ($394|0)!=(0); //@line 4417 "src/sprites/../puun/gf/../../other/stb_image.h"
   if ($395) {
    $396 = HEAP32[232>>2]|0; //@line 4417 "src/sprites/../puun/gf/../../other/stb_image.h"
    $397 = ($396|0)!=(0); //@line 4417 "src/sprites/../puun/gf/../../other/stb_image.h"
    if ($397) {
     $398 = $s; //@line 4417 "src/sprites/../puun/gf/../../other/stb_image.h"
     $399 = (($398) + 12|0); //@line 4417 "src/sprites/../puun/gf/../../other/stb_image.h"
     $400 = HEAP32[$399>>2]|0; //@line 4417 "src/sprites/../puun/gf/../../other/stb_image.h"
     $401 = ($400|0)>(2); //@line 4417 "src/sprites/../puun/gf/../../other/stb_image.h"
     if ($401) {
      $402 = $1; //@line 4418 "src/sprites/../puun/gf/../../other/stb_image.h"
      _stbi__de_iphone($402); //@line 4418 "src/sprites/../puun/gf/../../other/stb_image.h"
     }
    }
   }
   $403 = $pal_img_n; //@line 4419 "src/sprites/../puun/gf/../../other/stb_image.h"
   $404 = ($403<<24>>24)!=(0); //@line 4419 "src/sprites/../puun/gf/../../other/stb_image.h"
   do {
    if ($404) {
     $405 = $pal_img_n; //@line 4421 "src/sprites/../puun/gf/../../other/stb_image.h"
     $406 = $405&255; //@line 4421 "src/sprites/../puun/gf/../../other/stb_image.h"
     $407 = $s; //@line 4421 "src/sprites/../puun/gf/../../other/stb_image.h"
     $408 = (($407) + 8|0); //@line 4421 "src/sprites/../puun/gf/../../other/stb_image.h"
     HEAP32[$408>>2] = $406; //@line 4421 "src/sprites/../puun/gf/../../other/stb_image.h"
     $409 = $pal_img_n; //@line 4422 "src/sprites/../puun/gf/../../other/stb_image.h"
     $410 = $409&255; //@line 4422 "src/sprites/../puun/gf/../../other/stb_image.h"
     $411 = $s; //@line 4422 "src/sprites/../puun/gf/../../other/stb_image.h"
     $412 = (($411) + 12|0); //@line 4422 "src/sprites/../puun/gf/../../other/stb_image.h"
     HEAP32[$412>>2] = $410; //@line 4422 "src/sprites/../puun/gf/../../other/stb_image.h"
     $413 = $3; //@line 4423 "src/sprites/../puun/gf/../../other/stb_image.h"
     $414 = ($413|0)>=(3); //@line 4423 "src/sprites/../puun/gf/../../other/stb_image.h"
     if ($414) {
      $415 = $3; //@line 4423 "src/sprites/../puun/gf/../../other/stb_image.h"
      $416 = $s; //@line 4423 "src/sprites/../puun/gf/../../other/stb_image.h"
      $417 = (($416) + 12|0); //@line 4423 "src/sprites/../puun/gf/../../other/stb_image.h"
      HEAP32[$417>>2] = $415; //@line 4423 "src/sprites/../puun/gf/../../other/stb_image.h"
     }
     $418 = $1; //@line 4424 "src/sprites/../puun/gf/../../other/stb_image.h"
     $419 = $pal_len; //@line 4424 "src/sprites/../puun/gf/../../other/stb_image.h"
     $420 = $s; //@line 4424 "src/sprites/../puun/gf/../../other/stb_image.h"
     $421 = (($420) + 12|0); //@line 4424 "src/sprites/../puun/gf/../../other/stb_image.h"
     $422 = HEAP32[$421>>2]|0; //@line 4424 "src/sprites/../puun/gf/../../other/stb_image.h"
     $423 = (_stbi__expand_png_palette($418,$palette,$419,$422)|0); //@line 4424 "src/sprites/../puun/gf/../../other/stb_image.h"
     $424 = ($423|0)!=(0); //@line 4424 "src/sprites/../puun/gf/../../other/stb_image.h"
     if ($424) {
      break;
     }
     $0 = 0; //@line 4425 "src/sprites/../puun/gf/../../other/stb_image.h"
     $461 = $0; //@line 4451 "src/sprites/../puun/gf/../../other/stb_image.h"
     STACKTOP = sp;return ($461|0); //@line 4451 "src/sprites/../puun/gf/../../other/stb_image.h"
    }
   } while(0);
   $425 = $1; //@line 4427 "src/sprites/../puun/gf/../../other/stb_image.h"
   $426 = (($425) + 8|0); //@line 4427 "src/sprites/../puun/gf/../../other/stb_image.h"
   $427 = HEAP32[$426>>2]|0; //@line 4427 "src/sprites/../puun/gf/../../other/stb_image.h"
   _free($427); //@line 4427 "src/sprites/../puun/gf/../../other/stb_image.h"
   $428 = $1; //@line 4427 "src/sprites/../puun/gf/../../other/stb_image.h"
   $429 = (($428) + 8|0); //@line 4427 "src/sprites/../puun/gf/../../other/stb_image.h"
   HEAP32[$429>>2] = 0; //@line 4427 "src/sprites/../puun/gf/../../other/stb_image.h"
   $0 = 1; //@line 4428 "src/sprites/../puun/gf/../../other/stb_image.h"
   $461 = $0; //@line 4451 "src/sprites/../puun/gf/../../other/stb_image.h"
   STACKTOP = sp;return ($461|0); //@line 4451 "src/sprites/../puun/gf/../../other/stb_image.h"
   break;
  }
  case 140: {
   $432 = (_stbi__err(7336)|0); //@line 4433 "src/sprites/../puun/gf/../../other/stb_image.h"
   $0 = $432; //@line 4433 "src/sprites/../puun/gf/../../other/stb_image.h"
   $461 = $0; //@line 4451 "src/sprites/../puun/gf/../../other/stb_image.h"
   STACKTOP = sp;return ($461|0); //@line 4451 "src/sprites/../puun/gf/../../other/stb_image.h"
   break;
  }
  case 142: {
   $437 = (($c) + 4|0); //@line 4438 "src/sprites/../puun/gf/../../other/stb_image.h"
   $438 = HEAP32[$437>>2]|0; //@line 4438 "src/sprites/../puun/gf/../../other/stb_image.h"
   $439 = $438 >>> 24; //@line 4438 "src/sprites/../puun/gf/../../other/stb_image.h"
   $440 = $439 & 255; //@line 4438 "src/sprites/../puun/gf/../../other/stb_image.h"
   $441 = $440&255; //@line 4438 "src/sprites/../puun/gf/../../other/stb_image.h"
   HEAP8[7504>>0] = $441; //@line 4438 "src/sprites/../puun/gf/../../other/stb_image.h"
   $442 = (($c) + 4|0); //@line 4439 "src/sprites/../puun/gf/../../other/stb_image.h"
   $443 = HEAP32[$442>>2]|0; //@line 4439 "src/sprites/../puun/gf/../../other/stb_image.h"
   $444 = $443 >>> 16; //@line 4439 "src/sprites/../puun/gf/../../other/stb_image.h"
   $445 = $444 & 255; //@line 4439 "src/sprites/../puun/gf/../../other/stb_image.h"
   $446 = $445&255; //@line 4439 "src/sprites/../puun/gf/../../other/stb_image.h"
   HEAP8[((7504 + 1|0))>>0] = $446; //@line 4439 "src/sprites/../puun/gf/../../other/stb_image.h"
   $447 = (($c) + 4|0); //@line 4440 "src/sprites/../puun/gf/../../other/stb_image.h"
   $448 = HEAP32[$447>>2]|0; //@line 4440 "src/sprites/../puun/gf/../../other/stb_image.h"
   $449 = $448 >>> 8; //@line 4440 "src/sprites/../puun/gf/../../other/stb_image.h"
   $450 = $449 & 255; //@line 4440 "src/sprites/../puun/gf/../../other/stb_image.h"
   $451 = $450&255; //@line 4440 "src/sprites/../puun/gf/../../other/stb_image.h"
   HEAP8[((7504 + 2|0))>>0] = $451; //@line 4440 "src/sprites/../puun/gf/../../other/stb_image.h"
   $452 = (($c) + 4|0); //@line 4441 "src/sprites/../puun/gf/../../other/stb_image.h"
   $453 = HEAP32[$452>>2]|0; //@line 4441 "src/sprites/../puun/gf/../../other/stb_image.h"
   $454 = $453 >>> 0; //@line 4441 "src/sprites/../puun/gf/../../other/stb_image.h"
   $455 = $454 & 255; //@line 4441 "src/sprites/../puun/gf/../../other/stb_image.h"
   $456 = $455&255; //@line 4441 "src/sprites/../puun/gf/../../other/stb_image.h"
   HEAP8[((7504 + 3|0))>>0] = $456; //@line 4441 "src/sprites/../puun/gf/../../other/stb_image.h"
   $457 = (_stbi__err(7504)|0); //@line 4443 "src/sprites/../puun/gf/../../other/stb_image.h"
   $0 = $457; //@line 4443 "src/sprites/../puun/gf/../../other/stb_image.h"
   $461 = $0; //@line 4451 "src/sprites/../puun/gf/../../other/stb_image.h"
   STACKTOP = sp;return ($461|0); //@line 4451 "src/sprites/../puun/gf/../../other/stb_image.h"
   break;
  }
 }
 return (0)|0;
}
function _stbi__expand_png_palette($a,$palette,$len,$pal_img_n) {
 $a = $a|0;
 $palette = $palette|0;
 $len = $len|0;
 $pal_img_n = $pal_img_n|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0;
 var $96 = 0, $97 = 0, $98 = 0, $99 = 0, $i = 0, $n = 0, $n1 = 0, $orig = 0, $p = 0, $pixel_count = 0, $temp_out = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $a;
 $2 = $palette;
 $3 = $len;
 $4 = $pal_img_n;
 $5 = $1; //@line 4204 "src/sprites/../puun/gf/../../other/stb_image.h"
 $6 = HEAP32[$5>>2]|0; //@line 4204 "src/sprites/../puun/gf/../../other/stb_image.h"
 $7 = HEAP32[$6>>2]|0; //@line 4204 "src/sprites/../puun/gf/../../other/stb_image.h"
 $8 = $1; //@line 4204 "src/sprites/../puun/gf/../../other/stb_image.h"
 $9 = HEAP32[$8>>2]|0; //@line 4204 "src/sprites/../puun/gf/../../other/stb_image.h"
 $10 = (($9) + 4|0); //@line 4204 "src/sprites/../puun/gf/../../other/stb_image.h"
 $11 = HEAP32[$10>>2]|0; //@line 4204 "src/sprites/../puun/gf/../../other/stb_image.h"
 $12 = Math_imul($7, $11)|0; //@line 4204 "src/sprites/../puun/gf/../../other/stb_image.h"
 $pixel_count = $12; //@line 4204 "src/sprites/../puun/gf/../../other/stb_image.h"
 $13 = $1; //@line 4205 "src/sprites/../puun/gf/../../other/stb_image.h"
 $14 = (($13) + 12|0); //@line 4205 "src/sprites/../puun/gf/../../other/stb_image.h"
 $15 = HEAP32[$14>>2]|0; //@line 4205 "src/sprites/../puun/gf/../../other/stb_image.h"
 $orig = $15; //@line 4205 "src/sprites/../puun/gf/../../other/stb_image.h"
 $16 = $pixel_count; //@line 4207 "src/sprites/../puun/gf/../../other/stb_image.h"
 $17 = $4; //@line 4207 "src/sprites/../puun/gf/../../other/stb_image.h"
 $18 = Math_imul($16, $17)|0; //@line 4207 "src/sprites/../puun/gf/../../other/stb_image.h"
 $19 = (_stbi__malloc($18)|0); //@line 4207 "src/sprites/../puun/gf/../../other/stb_image.h"
 $p = $19; //@line 4207 "src/sprites/../puun/gf/../../other/stb_image.h"
 $20 = $p; //@line 4208 "src/sprites/../puun/gf/../../other/stb_image.h"
 $21 = ($20|0)==(0|0); //@line 4208 "src/sprites/../puun/gf/../../other/stb_image.h"
 if ($21) {
  $22 = (_stbi__err(7464)|0); //@line 4208 "src/sprites/../puun/gf/../../other/stb_image.h"
  $0 = $22; //@line 4208 "src/sprites/../puun/gf/../../other/stb_image.h"
  $103 = $0; //@line 4237 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($103|0); //@line 4237 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $23 = $p; //@line 4211 "src/sprites/../puun/gf/../../other/stb_image.h"
 $temp_out = $23; //@line 4211 "src/sprites/../puun/gf/../../other/stb_image.h"
 $24 = $4; //@line 4213 "src/sprites/../puun/gf/../../other/stb_image.h"
 $25 = ($24|0)==(3); //@line 4213 "src/sprites/../puun/gf/../../other/stb_image.h"
 if ($25) {
  $i = 0; //@line 4214 "src/sprites/../puun/gf/../../other/stb_image.h"
  while(1) {
   $26 = $i; //@line 4214 "src/sprites/../puun/gf/../../other/stb_image.h"
   $27 = $pixel_count; //@line 4214 "src/sprites/../puun/gf/../../other/stb_image.h"
   $28 = ($26>>>0)<($27>>>0); //@line 4214 "src/sprites/../puun/gf/../../other/stb_image.h"
   if (!($28)) {
    break;
   }
   $29 = $i; //@line 4215 "src/sprites/../puun/gf/../../other/stb_image.h"
   $30 = $orig; //@line 4215 "src/sprites/../puun/gf/../../other/stb_image.h"
   $31 = (($30) + ($29)|0); //@line 4215 "src/sprites/../puun/gf/../../other/stb_image.h"
   $32 = HEAP8[$31>>0]|0; //@line 4215 "src/sprites/../puun/gf/../../other/stb_image.h"
   $33 = $32&255; //@line 4215 "src/sprites/../puun/gf/../../other/stb_image.h"
   $34 = $33<<2; //@line 4215 "src/sprites/../puun/gf/../../other/stb_image.h"
   $n = $34; //@line 4215 "src/sprites/../puun/gf/../../other/stb_image.h"
   $35 = $n; //@line 4216 "src/sprites/../puun/gf/../../other/stb_image.h"
   $36 = $2; //@line 4216 "src/sprites/../puun/gf/../../other/stb_image.h"
   $37 = (($36) + ($35)|0); //@line 4216 "src/sprites/../puun/gf/../../other/stb_image.h"
   $38 = HEAP8[$37>>0]|0; //@line 4216 "src/sprites/../puun/gf/../../other/stb_image.h"
   $39 = $p; //@line 4216 "src/sprites/../puun/gf/../../other/stb_image.h"
   HEAP8[$39>>0] = $38; //@line 4216 "src/sprites/../puun/gf/../../other/stb_image.h"
   $40 = $n; //@line 4217 "src/sprites/../puun/gf/../../other/stb_image.h"
   $41 = (($40) + 1)|0; //@line 4217 "src/sprites/../puun/gf/../../other/stb_image.h"
   $42 = $2; //@line 4217 "src/sprites/../puun/gf/../../other/stb_image.h"
   $43 = (($42) + ($41)|0); //@line 4217 "src/sprites/../puun/gf/../../other/stb_image.h"
   $44 = HEAP8[$43>>0]|0; //@line 4217 "src/sprites/../puun/gf/../../other/stb_image.h"
   $45 = $p; //@line 4217 "src/sprites/../puun/gf/../../other/stb_image.h"
   $46 = (($45) + 1|0); //@line 4217 "src/sprites/../puun/gf/../../other/stb_image.h"
   HEAP8[$46>>0] = $44; //@line 4217 "src/sprites/../puun/gf/../../other/stb_image.h"
   $47 = $n; //@line 4218 "src/sprites/../puun/gf/../../other/stb_image.h"
   $48 = (($47) + 2)|0; //@line 4218 "src/sprites/../puun/gf/../../other/stb_image.h"
   $49 = $2; //@line 4218 "src/sprites/../puun/gf/../../other/stb_image.h"
   $50 = (($49) + ($48)|0); //@line 4218 "src/sprites/../puun/gf/../../other/stb_image.h"
   $51 = HEAP8[$50>>0]|0; //@line 4218 "src/sprites/../puun/gf/../../other/stb_image.h"
   $52 = $p; //@line 4218 "src/sprites/../puun/gf/../../other/stb_image.h"
   $53 = (($52) + 2|0); //@line 4218 "src/sprites/../puun/gf/../../other/stb_image.h"
   HEAP8[$53>>0] = $51; //@line 4218 "src/sprites/../puun/gf/../../other/stb_image.h"
   $54 = $p; //@line 4219 "src/sprites/../puun/gf/../../other/stb_image.h"
   $55 = (($54) + 3|0); //@line 4219 "src/sprites/../puun/gf/../../other/stb_image.h"
   $p = $55; //@line 4219 "src/sprites/../puun/gf/../../other/stb_image.h"
   $56 = $i; //@line 4214 "src/sprites/../puun/gf/../../other/stb_image.h"
   $57 = (($56) + 1)|0; //@line 4214 "src/sprites/../puun/gf/../../other/stb_image.h"
   $i = $57; //@line 4214 "src/sprites/../puun/gf/../../other/stb_image.h"
  }
 } else {
  $i = 0; //@line 4222 "src/sprites/../puun/gf/../../other/stb_image.h"
  while(1) {
   $58 = $i; //@line 4222 "src/sprites/../puun/gf/../../other/stb_image.h"
   $59 = $pixel_count; //@line 4222 "src/sprites/../puun/gf/../../other/stb_image.h"
   $60 = ($58>>>0)<($59>>>0); //@line 4222 "src/sprites/../puun/gf/../../other/stb_image.h"
   if (!($60)) {
    break;
   }
   $61 = $i; //@line 4223 "src/sprites/../puun/gf/../../other/stb_image.h"
   $62 = $orig; //@line 4223 "src/sprites/../puun/gf/../../other/stb_image.h"
   $63 = (($62) + ($61)|0); //@line 4223 "src/sprites/../puun/gf/../../other/stb_image.h"
   $64 = HEAP8[$63>>0]|0; //@line 4223 "src/sprites/../puun/gf/../../other/stb_image.h"
   $65 = $64&255; //@line 4223 "src/sprites/../puun/gf/../../other/stb_image.h"
   $66 = $65<<2; //@line 4223 "src/sprites/../puun/gf/../../other/stb_image.h"
   $n1 = $66; //@line 4223 "src/sprites/../puun/gf/../../other/stb_image.h"
   $67 = $n1; //@line 4224 "src/sprites/../puun/gf/../../other/stb_image.h"
   $68 = $2; //@line 4224 "src/sprites/../puun/gf/../../other/stb_image.h"
   $69 = (($68) + ($67)|0); //@line 4224 "src/sprites/../puun/gf/../../other/stb_image.h"
   $70 = HEAP8[$69>>0]|0; //@line 4224 "src/sprites/../puun/gf/../../other/stb_image.h"
   $71 = $p; //@line 4224 "src/sprites/../puun/gf/../../other/stb_image.h"
   HEAP8[$71>>0] = $70; //@line 4224 "src/sprites/../puun/gf/../../other/stb_image.h"
   $72 = $n1; //@line 4225 "src/sprites/../puun/gf/../../other/stb_image.h"
   $73 = (($72) + 1)|0; //@line 4225 "src/sprites/../puun/gf/../../other/stb_image.h"
   $74 = $2; //@line 4225 "src/sprites/../puun/gf/../../other/stb_image.h"
   $75 = (($74) + ($73)|0); //@line 4225 "src/sprites/../puun/gf/../../other/stb_image.h"
   $76 = HEAP8[$75>>0]|0; //@line 4225 "src/sprites/../puun/gf/../../other/stb_image.h"
   $77 = $p; //@line 4225 "src/sprites/../puun/gf/../../other/stb_image.h"
   $78 = (($77) + 1|0); //@line 4225 "src/sprites/../puun/gf/../../other/stb_image.h"
   HEAP8[$78>>0] = $76; //@line 4225 "src/sprites/../puun/gf/../../other/stb_image.h"
   $79 = $n1; //@line 4226 "src/sprites/../puun/gf/../../other/stb_image.h"
   $80 = (($79) + 2)|0; //@line 4226 "src/sprites/../puun/gf/../../other/stb_image.h"
   $81 = $2; //@line 4226 "src/sprites/../puun/gf/../../other/stb_image.h"
   $82 = (($81) + ($80)|0); //@line 4226 "src/sprites/../puun/gf/../../other/stb_image.h"
   $83 = HEAP8[$82>>0]|0; //@line 4226 "src/sprites/../puun/gf/../../other/stb_image.h"
   $84 = $p; //@line 4226 "src/sprites/../puun/gf/../../other/stb_image.h"
   $85 = (($84) + 2|0); //@line 4226 "src/sprites/../puun/gf/../../other/stb_image.h"
   HEAP8[$85>>0] = $83; //@line 4226 "src/sprites/../puun/gf/../../other/stb_image.h"
   $86 = $n1; //@line 4227 "src/sprites/../puun/gf/../../other/stb_image.h"
   $87 = (($86) + 3)|0; //@line 4227 "src/sprites/../puun/gf/../../other/stb_image.h"
   $88 = $2; //@line 4227 "src/sprites/../puun/gf/../../other/stb_image.h"
   $89 = (($88) + ($87)|0); //@line 4227 "src/sprites/../puun/gf/../../other/stb_image.h"
   $90 = HEAP8[$89>>0]|0; //@line 4227 "src/sprites/../puun/gf/../../other/stb_image.h"
   $91 = $p; //@line 4227 "src/sprites/../puun/gf/../../other/stb_image.h"
   $92 = (($91) + 3|0); //@line 4227 "src/sprites/../puun/gf/../../other/stb_image.h"
   HEAP8[$92>>0] = $90; //@line 4227 "src/sprites/../puun/gf/../../other/stb_image.h"
   $93 = $p; //@line 4228 "src/sprites/../puun/gf/../../other/stb_image.h"
   $94 = (($93) + 4|0); //@line 4228 "src/sprites/../puun/gf/../../other/stb_image.h"
   $p = $94; //@line 4228 "src/sprites/../puun/gf/../../other/stb_image.h"
   $95 = $i; //@line 4222 "src/sprites/../puun/gf/../../other/stb_image.h"
   $96 = (($95) + 1)|0; //@line 4222 "src/sprites/../puun/gf/../../other/stb_image.h"
   $i = $96; //@line 4222 "src/sprites/../puun/gf/../../other/stb_image.h"
  }
 }
 $97 = $1; //@line 4231 "src/sprites/../puun/gf/../../other/stb_image.h"
 $98 = (($97) + 12|0); //@line 4231 "src/sprites/../puun/gf/../../other/stb_image.h"
 $99 = HEAP32[$98>>2]|0; //@line 4231 "src/sprites/../puun/gf/../../other/stb_image.h"
 _free($99); //@line 4231 "src/sprites/../puun/gf/../../other/stb_image.h"
 $100 = $temp_out; //@line 4232 "src/sprites/../puun/gf/../../other/stb_image.h"
 $101 = $1; //@line 4232 "src/sprites/../puun/gf/../../other/stb_image.h"
 $102 = (($101) + 12|0); //@line 4232 "src/sprites/../puun/gf/../../other/stb_image.h"
 HEAP32[$102>>2] = $100; //@line 4232 "src/sprites/../puun/gf/../../other/stb_image.h"
 $0 = 1; //@line 4236 "src/sprites/../puun/gf/../../other/stb_image.h"
 $103 = $0; //@line 4237 "src/sprites/../puun/gf/../../other/stb_image.h"
 STACKTOP = sp;return ($103|0); //@line 4237 "src/sprites/../puun/gf/../../other/stb_image.h"
}
function _stbi__de_iphone($z) {
 $z = $z|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0;
 var $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0;
 var $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0;
 var $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $a = 0, $i = 0, $p = 0, $pixel_count = 0, $s = 0, $t = 0, $t1 = 0, $t2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $z;
 $1 = $0; //@line 4254 "src/sprites/../puun/gf/../../other/stb_image.h"
 $2 = HEAP32[$1>>2]|0; //@line 4254 "src/sprites/../puun/gf/../../other/stb_image.h"
 $s = $2; //@line 4254 "src/sprites/../puun/gf/../../other/stb_image.h"
 $3 = $s; //@line 4255 "src/sprites/../puun/gf/../../other/stb_image.h"
 $4 = HEAP32[$3>>2]|0; //@line 4255 "src/sprites/../puun/gf/../../other/stb_image.h"
 $5 = $s; //@line 4255 "src/sprites/../puun/gf/../../other/stb_image.h"
 $6 = (($5) + 4|0); //@line 4255 "src/sprites/../puun/gf/../../other/stb_image.h"
 $7 = HEAP32[$6>>2]|0; //@line 4255 "src/sprites/../puun/gf/../../other/stb_image.h"
 $8 = Math_imul($4, $7)|0; //@line 4255 "src/sprites/../puun/gf/../../other/stb_image.h"
 $pixel_count = $8; //@line 4255 "src/sprites/../puun/gf/../../other/stb_image.h"
 $9 = $0; //@line 4256 "src/sprites/../puun/gf/../../other/stb_image.h"
 $10 = (($9) + 12|0); //@line 4256 "src/sprites/../puun/gf/../../other/stb_image.h"
 $11 = HEAP32[$10>>2]|0; //@line 4256 "src/sprites/../puun/gf/../../other/stb_image.h"
 $p = $11; //@line 4256 "src/sprites/../puun/gf/../../other/stb_image.h"
 $12 = $s; //@line 4258 "src/sprites/../puun/gf/../../other/stb_image.h"
 $13 = (($12) + 12|0); //@line 4258 "src/sprites/../puun/gf/../../other/stb_image.h"
 $14 = HEAP32[$13>>2]|0; //@line 4258 "src/sprites/../puun/gf/../../other/stb_image.h"
 $15 = ($14|0)==(3); //@line 4258 "src/sprites/../puun/gf/../../other/stb_image.h"
 if ($15) {
  $i = 0; //@line 4259 "src/sprites/../puun/gf/../../other/stb_image.h"
  while(1) {
   $16 = $i; //@line 4259 "src/sprites/../puun/gf/../../other/stb_image.h"
   $17 = $pixel_count; //@line 4259 "src/sprites/../puun/gf/../../other/stb_image.h"
   $18 = ($16>>>0)<($17>>>0); //@line 4259 "src/sprites/../puun/gf/../../other/stb_image.h"
   if (!($18)) {
    break;
   }
   $19 = $p; //@line 4260 "src/sprites/../puun/gf/../../other/stb_image.h"
   $20 = HEAP8[$19>>0]|0; //@line 4260 "src/sprites/../puun/gf/../../other/stb_image.h"
   $t = $20; //@line 4260 "src/sprites/../puun/gf/../../other/stb_image.h"
   $21 = $p; //@line 4261 "src/sprites/../puun/gf/../../other/stb_image.h"
   $22 = (($21) + 2|0); //@line 4261 "src/sprites/../puun/gf/../../other/stb_image.h"
   $23 = HEAP8[$22>>0]|0; //@line 4261 "src/sprites/../puun/gf/../../other/stb_image.h"
   $24 = $p; //@line 4261 "src/sprites/../puun/gf/../../other/stb_image.h"
   HEAP8[$24>>0] = $23; //@line 4261 "src/sprites/../puun/gf/../../other/stb_image.h"
   $25 = $t; //@line 4262 "src/sprites/../puun/gf/../../other/stb_image.h"
   $26 = $p; //@line 4262 "src/sprites/../puun/gf/../../other/stb_image.h"
   $27 = (($26) + 2|0); //@line 4262 "src/sprites/../puun/gf/../../other/stb_image.h"
   HEAP8[$27>>0] = $25; //@line 4262 "src/sprites/../puun/gf/../../other/stb_image.h"
   $28 = $p; //@line 4263 "src/sprites/../puun/gf/../../other/stb_image.h"
   $29 = (($28) + 3|0); //@line 4263 "src/sprites/../puun/gf/../../other/stb_image.h"
   $p = $29; //@line 4263 "src/sprites/../puun/gf/../../other/stb_image.h"
   $30 = $i; //@line 4259 "src/sprites/../puun/gf/../../other/stb_image.h"
   $31 = (($30) + 1)|0; //@line 4259 "src/sprites/../puun/gf/../../other/stb_image.h"
   $i = $31; //@line 4259 "src/sprites/../puun/gf/../../other/stb_image.h"
  }
  STACKTOP = sp;return; //@line 4292 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $32 = $s; //@line 4266 "src/sprites/../puun/gf/../../other/stb_image.h"
 $33 = (($32) + 12|0); //@line 4266 "src/sprites/../puun/gf/../../other/stb_image.h"
 $34 = HEAP32[$33>>2]|0; //@line 4266 "src/sprites/../puun/gf/../../other/stb_image.h"
 $35 = ($34|0)==(4); //@line 4266 "src/sprites/../puun/gf/../../other/stb_image.h"
 if (!($35)) {
  ___assert_fail((7536|0),(7560|0),4266,(7608|0)); //@line 4266 "src/sprites/../puun/gf/../../other/stb_image.h"
  // unreachable; //@line 4266 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $36 = HEAP32[224>>2]|0; //@line 4267 "src/sprites/../puun/gf/../../other/stb_image.h"
 $37 = ($36|0)!=(0); //@line 4267 "src/sprites/../puun/gf/../../other/stb_image.h"
 if ($37) {
  $i = 0; //@line 4269 "src/sprites/../puun/gf/../../other/stb_image.h"
  while(1) {
   $38 = $i; //@line 4269 "src/sprites/../puun/gf/../../other/stb_image.h"
   $39 = $pixel_count; //@line 4269 "src/sprites/../puun/gf/../../other/stb_image.h"
   $40 = ($38>>>0)<($39>>>0); //@line 4269 "src/sprites/../puun/gf/../../other/stb_image.h"
   if (!($40)) {
    break;
   }
   $41 = $p; //@line 4270 "src/sprites/../puun/gf/../../other/stb_image.h"
   $42 = (($41) + 3|0); //@line 4270 "src/sprites/../puun/gf/../../other/stb_image.h"
   $43 = HEAP8[$42>>0]|0; //@line 4270 "src/sprites/../puun/gf/../../other/stb_image.h"
   $a = $43; //@line 4270 "src/sprites/../puun/gf/../../other/stb_image.h"
   $44 = $p; //@line 4271 "src/sprites/../puun/gf/../../other/stb_image.h"
   $45 = HEAP8[$44>>0]|0; //@line 4271 "src/sprites/../puun/gf/../../other/stb_image.h"
   $t1 = $45; //@line 4271 "src/sprites/../puun/gf/../../other/stb_image.h"
   $46 = $a; //@line 4272 "src/sprites/../puun/gf/../../other/stb_image.h"
   $47 = ($46<<24>>24)!=(0); //@line 4272 "src/sprites/../puun/gf/../../other/stb_image.h"
   if ($47) {
    $48 = $p; //@line 4273 "src/sprites/../puun/gf/../../other/stb_image.h"
    $49 = (($48) + 2|0); //@line 4273 "src/sprites/../puun/gf/../../other/stb_image.h"
    $50 = HEAP8[$49>>0]|0; //@line 4273 "src/sprites/../puun/gf/../../other/stb_image.h"
    $51 = $50&255; //@line 4273 "src/sprites/../puun/gf/../../other/stb_image.h"
    $52 = ($51*255)|0; //@line 4273 "src/sprites/../puun/gf/../../other/stb_image.h"
    $53 = $a; //@line 4273 "src/sprites/../puun/gf/../../other/stb_image.h"
    $54 = $53&255; //@line 4273 "src/sprites/../puun/gf/../../other/stb_image.h"
    $55 = (($52|0) / ($54|0))&-1; //@line 4273 "src/sprites/../puun/gf/../../other/stb_image.h"
    $56 = $55&255; //@line 4273 "src/sprites/../puun/gf/../../other/stb_image.h"
    $57 = $p; //@line 4273 "src/sprites/../puun/gf/../../other/stb_image.h"
    HEAP8[$57>>0] = $56; //@line 4273 "src/sprites/../puun/gf/../../other/stb_image.h"
    $58 = $p; //@line 4274 "src/sprites/../puun/gf/../../other/stb_image.h"
    $59 = (($58) + 1|0); //@line 4274 "src/sprites/../puun/gf/../../other/stb_image.h"
    $60 = HEAP8[$59>>0]|0; //@line 4274 "src/sprites/../puun/gf/../../other/stb_image.h"
    $61 = $60&255; //@line 4274 "src/sprites/../puun/gf/../../other/stb_image.h"
    $62 = ($61*255)|0; //@line 4274 "src/sprites/../puun/gf/../../other/stb_image.h"
    $63 = $a; //@line 4274 "src/sprites/../puun/gf/../../other/stb_image.h"
    $64 = $63&255; //@line 4274 "src/sprites/../puun/gf/../../other/stb_image.h"
    $65 = (($62|0) / ($64|0))&-1; //@line 4274 "src/sprites/../puun/gf/../../other/stb_image.h"
    $66 = $65&255; //@line 4274 "src/sprites/../puun/gf/../../other/stb_image.h"
    $67 = $p; //@line 4274 "src/sprites/../puun/gf/../../other/stb_image.h"
    $68 = (($67) + 1|0); //@line 4274 "src/sprites/../puun/gf/../../other/stb_image.h"
    HEAP8[$68>>0] = $66; //@line 4274 "src/sprites/../puun/gf/../../other/stb_image.h"
    $69 = $t1; //@line 4275 "src/sprites/../puun/gf/../../other/stb_image.h"
    $70 = $69&255; //@line 4275 "src/sprites/../puun/gf/../../other/stb_image.h"
    $71 = ($70*255)|0; //@line 4275 "src/sprites/../puun/gf/../../other/stb_image.h"
    $72 = $a; //@line 4275 "src/sprites/../puun/gf/../../other/stb_image.h"
    $73 = $72&255; //@line 4275 "src/sprites/../puun/gf/../../other/stb_image.h"
    $74 = (($71|0) / ($73|0))&-1; //@line 4275 "src/sprites/../puun/gf/../../other/stb_image.h"
    $75 = $74&255; //@line 4275 "src/sprites/../puun/gf/../../other/stb_image.h"
    $76 = $p; //@line 4275 "src/sprites/../puun/gf/../../other/stb_image.h"
    $77 = (($76) + 2|0); //@line 4275 "src/sprites/../puun/gf/../../other/stb_image.h"
    HEAP8[$77>>0] = $75; //@line 4275 "src/sprites/../puun/gf/../../other/stb_image.h"
   } else {
    $78 = $p; //@line 4277 "src/sprites/../puun/gf/../../other/stb_image.h"
    $79 = (($78) + 2|0); //@line 4277 "src/sprites/../puun/gf/../../other/stb_image.h"
    $80 = HEAP8[$79>>0]|0; //@line 4277 "src/sprites/../puun/gf/../../other/stb_image.h"
    $81 = $p; //@line 4277 "src/sprites/../puun/gf/../../other/stb_image.h"
    HEAP8[$81>>0] = $80; //@line 4277 "src/sprites/../puun/gf/../../other/stb_image.h"
    $82 = $t1; //@line 4278 "src/sprites/../puun/gf/../../other/stb_image.h"
    $83 = $p; //@line 4278 "src/sprites/../puun/gf/../../other/stb_image.h"
    $84 = (($83) + 2|0); //@line 4278 "src/sprites/../puun/gf/../../other/stb_image.h"
    HEAP8[$84>>0] = $82; //@line 4278 "src/sprites/../puun/gf/../../other/stb_image.h"
   }
   $85 = $p; //@line 4280 "src/sprites/../puun/gf/../../other/stb_image.h"
   $86 = (($85) + 4|0); //@line 4280 "src/sprites/../puun/gf/../../other/stb_image.h"
   $p = $86; //@line 4280 "src/sprites/../puun/gf/../../other/stb_image.h"
   $87 = $i; //@line 4269 "src/sprites/../puun/gf/../../other/stb_image.h"
   $88 = (($87) + 1)|0; //@line 4269 "src/sprites/../puun/gf/../../other/stb_image.h"
   $i = $88; //@line 4269 "src/sprites/../puun/gf/../../other/stb_image.h"
  }
 } else {
  $i = 0; //@line 4284 "src/sprites/../puun/gf/../../other/stb_image.h"
  while(1) {
   $89 = $i; //@line 4284 "src/sprites/../puun/gf/../../other/stb_image.h"
   $90 = $pixel_count; //@line 4284 "src/sprites/../puun/gf/../../other/stb_image.h"
   $91 = ($89>>>0)<($90>>>0); //@line 4284 "src/sprites/../puun/gf/../../other/stb_image.h"
   if (!($91)) {
    break;
   }
   $92 = $p; //@line 4285 "src/sprites/../puun/gf/../../other/stb_image.h"
   $93 = HEAP8[$92>>0]|0; //@line 4285 "src/sprites/../puun/gf/../../other/stb_image.h"
   $t2 = $93; //@line 4285 "src/sprites/../puun/gf/../../other/stb_image.h"
   $94 = $p; //@line 4286 "src/sprites/../puun/gf/../../other/stb_image.h"
   $95 = (($94) + 2|0); //@line 4286 "src/sprites/../puun/gf/../../other/stb_image.h"
   $96 = HEAP8[$95>>0]|0; //@line 4286 "src/sprites/../puun/gf/../../other/stb_image.h"
   $97 = $p; //@line 4286 "src/sprites/../puun/gf/../../other/stb_image.h"
   HEAP8[$97>>0] = $96; //@line 4286 "src/sprites/../puun/gf/../../other/stb_image.h"
   $98 = $t2; //@line 4287 "src/sprites/../puun/gf/../../other/stb_image.h"
   $99 = $p; //@line 4287 "src/sprites/../puun/gf/../../other/stb_image.h"
   $100 = (($99) + 2|0); //@line 4287 "src/sprites/../puun/gf/../../other/stb_image.h"
   HEAP8[$100>>0] = $98; //@line 4287 "src/sprites/../puun/gf/../../other/stb_image.h"
   $101 = $p; //@line 4288 "src/sprites/../puun/gf/../../other/stb_image.h"
   $102 = (($101) + 4|0); //@line 4288 "src/sprites/../puun/gf/../../other/stb_image.h"
   $p = $102; //@line 4288 "src/sprites/../puun/gf/../../other/stb_image.h"
   $103 = $i; //@line 4284 "src/sprites/../puun/gf/../../other/stb_image.h"
   $104 = (($103) + 1)|0; //@line 4284 "src/sprites/../puun/gf/../../other/stb_image.h"
   $i = $104; //@line 4284 "src/sprites/../puun/gf/../../other/stb_image.h"
  }
 }
 STACKTOP = sp;return; //@line 4292 "src/sprites/../puun/gf/../../other/stb_image.h"
}
function _stbi__compute_transparency($z,$tc,$out_n) {
 $z = $z|0;
 $tc = $tc|0;
 $out_n = $out_n|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $8 = 0, $9 = 0, $i = 0, $p = 0, $pixel_count = 0, $s = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $z;
 $1 = $tc;
 $2 = $out_n;
 $3 = $0; //@line 4179 "src/sprites/../puun/gf/../../other/stb_image.h"
 $4 = HEAP32[$3>>2]|0; //@line 4179 "src/sprites/../puun/gf/../../other/stb_image.h"
 $s = $4; //@line 4179 "src/sprites/../puun/gf/../../other/stb_image.h"
 $5 = $s; //@line 4180 "src/sprites/../puun/gf/../../other/stb_image.h"
 $6 = HEAP32[$5>>2]|0; //@line 4180 "src/sprites/../puun/gf/../../other/stb_image.h"
 $7 = $s; //@line 4180 "src/sprites/../puun/gf/../../other/stb_image.h"
 $8 = (($7) + 4|0); //@line 4180 "src/sprites/../puun/gf/../../other/stb_image.h"
 $9 = HEAP32[$8>>2]|0; //@line 4180 "src/sprites/../puun/gf/../../other/stb_image.h"
 $10 = Math_imul($6, $9)|0; //@line 4180 "src/sprites/../puun/gf/../../other/stb_image.h"
 $pixel_count = $10; //@line 4180 "src/sprites/../puun/gf/../../other/stb_image.h"
 $11 = $0; //@line 4181 "src/sprites/../puun/gf/../../other/stb_image.h"
 $12 = (($11) + 12|0); //@line 4181 "src/sprites/../puun/gf/../../other/stb_image.h"
 $13 = HEAP32[$12>>2]|0; //@line 4181 "src/sprites/../puun/gf/../../other/stb_image.h"
 $p = $13; //@line 4181 "src/sprites/../puun/gf/../../other/stb_image.h"
 $14 = $2; //@line 4185 "src/sprites/../puun/gf/../../other/stb_image.h"
 $15 = ($14|0)==(2); //@line 4185 "src/sprites/../puun/gf/../../other/stb_image.h"
 if (!($15)) {
  $16 = $2; //@line 4185 "src/sprites/../puun/gf/../../other/stb_image.h"
  $17 = ($16|0)==(4); //@line 4185 "src/sprites/../puun/gf/../../other/stb_image.h"
  if (!($17)) {
   ___assert_fail((7624|0),(7560|0),4185,(7656|0)); //@line 4185 "src/sprites/../puun/gf/../../other/stb_image.h"
   // unreachable; //@line 4185 "src/sprites/../puun/gf/../../other/stb_image.h"
  }
 }
 $18 = $2; //@line 4187 "src/sprites/../puun/gf/../../other/stb_image.h"
 $19 = ($18|0)==(2); //@line 4187 "src/sprites/../puun/gf/../../other/stb_image.h"
 if ($19) {
  $i = 0; //@line 4188 "src/sprites/../puun/gf/../../other/stb_image.h"
  while(1) {
   $20 = $i; //@line 4188 "src/sprites/../puun/gf/../../other/stb_image.h"
   $21 = $pixel_count; //@line 4188 "src/sprites/../puun/gf/../../other/stb_image.h"
   $22 = ($20>>>0)<($21>>>0); //@line 4188 "src/sprites/../puun/gf/../../other/stb_image.h"
   if (!($22)) {
    break;
   }
   $23 = $p; //@line 4189 "src/sprites/../puun/gf/../../other/stb_image.h"
   $24 = HEAP8[$23>>0]|0; //@line 4189 "src/sprites/../puun/gf/../../other/stb_image.h"
   $25 = $24&255; //@line 4189 "src/sprites/../puun/gf/../../other/stb_image.h"
   $26 = $1; //@line 4189 "src/sprites/../puun/gf/../../other/stb_image.h"
   $27 = HEAP8[$26>>0]|0; //@line 4189 "src/sprites/../puun/gf/../../other/stb_image.h"
   $28 = $27&255; //@line 4189 "src/sprites/../puun/gf/../../other/stb_image.h"
   $29 = ($25|0)==($28|0); //@line 4189 "src/sprites/../puun/gf/../../other/stb_image.h"
   $30 = $29 ? 0 : 255; //@line 4189 "src/sprites/../puun/gf/../../other/stb_image.h"
   $31 = $30&255; //@line 4189 "src/sprites/../puun/gf/../../other/stb_image.h"
   $32 = $p; //@line 4189 "src/sprites/../puun/gf/../../other/stb_image.h"
   $33 = (($32) + 1|0); //@line 4189 "src/sprites/../puun/gf/../../other/stb_image.h"
   HEAP8[$33>>0] = $31; //@line 4189 "src/sprites/../puun/gf/../../other/stb_image.h"
   $34 = $p; //@line 4190 "src/sprites/../puun/gf/../../other/stb_image.h"
   $35 = (($34) + 2|0); //@line 4190 "src/sprites/../puun/gf/../../other/stb_image.h"
   $p = $35; //@line 4190 "src/sprites/../puun/gf/../../other/stb_image.h"
   $36 = $i; //@line 4188 "src/sprites/../puun/gf/../../other/stb_image.h"
   $37 = (($36) + 1)|0; //@line 4188 "src/sprites/../puun/gf/../../other/stb_image.h"
   $i = $37; //@line 4188 "src/sprites/../puun/gf/../../other/stb_image.h"
  }
  STACKTOP = sp;return 1; //@line 4199 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $i = 0; //@line 4193 "src/sprites/../puun/gf/../../other/stb_image.h"
 while(1) {
  $38 = $i; //@line 4193 "src/sprites/../puun/gf/../../other/stb_image.h"
  $39 = $pixel_count; //@line 4193 "src/sprites/../puun/gf/../../other/stb_image.h"
  $40 = ($38>>>0)<($39>>>0); //@line 4193 "src/sprites/../puun/gf/../../other/stb_image.h"
  if (!($40)) {
   break;
  }
  $41 = $p; //@line 4194 "src/sprites/../puun/gf/../../other/stb_image.h"
  $42 = HEAP8[$41>>0]|0; //@line 4194 "src/sprites/../puun/gf/../../other/stb_image.h"
  $43 = $42&255; //@line 4194 "src/sprites/../puun/gf/../../other/stb_image.h"
  $44 = $1; //@line 4194 "src/sprites/../puun/gf/../../other/stb_image.h"
  $45 = HEAP8[$44>>0]|0; //@line 4194 "src/sprites/../puun/gf/../../other/stb_image.h"
  $46 = $45&255; //@line 4194 "src/sprites/../puun/gf/../../other/stb_image.h"
  $47 = ($43|0)==($46|0); //@line 4194 "src/sprites/../puun/gf/../../other/stb_image.h"
  if ($47) {
   $48 = $p; //@line 4194 "src/sprites/../puun/gf/../../other/stb_image.h"
   $49 = (($48) + 1|0); //@line 4194 "src/sprites/../puun/gf/../../other/stb_image.h"
   $50 = HEAP8[$49>>0]|0; //@line 4194 "src/sprites/../puun/gf/../../other/stb_image.h"
   $51 = $50&255; //@line 4194 "src/sprites/../puun/gf/../../other/stb_image.h"
   $52 = $1; //@line 4194 "src/sprites/../puun/gf/../../other/stb_image.h"
   $53 = (($52) + 1|0); //@line 4194 "src/sprites/../puun/gf/../../other/stb_image.h"
   $54 = HEAP8[$53>>0]|0; //@line 4194 "src/sprites/../puun/gf/../../other/stb_image.h"
   $55 = $54&255; //@line 4194 "src/sprites/../puun/gf/../../other/stb_image.h"
   $56 = ($51|0)==($55|0); //@line 4194 "src/sprites/../puun/gf/../../other/stb_image.h"
   if ($56) {
    $57 = $p; //@line 4194 "src/sprites/../puun/gf/../../other/stb_image.h"
    $58 = (($57) + 2|0); //@line 4194 "src/sprites/../puun/gf/../../other/stb_image.h"
    $59 = HEAP8[$58>>0]|0; //@line 4194 "src/sprites/../puun/gf/../../other/stb_image.h"
    $60 = $59&255; //@line 4194 "src/sprites/../puun/gf/../../other/stb_image.h"
    $61 = $1; //@line 4194 "src/sprites/../puun/gf/../../other/stb_image.h"
    $62 = (($61) + 2|0); //@line 4194 "src/sprites/../puun/gf/../../other/stb_image.h"
    $63 = HEAP8[$62>>0]|0; //@line 4194 "src/sprites/../puun/gf/../../other/stb_image.h"
    $64 = $63&255; //@line 4194 "src/sprites/../puun/gf/../../other/stb_image.h"
    $65 = ($60|0)==($64|0); //@line 4194 "src/sprites/../puun/gf/../../other/stb_image.h"
    if ($65) {
     $66 = $p; //@line 4195 "src/sprites/../puun/gf/../../other/stb_image.h"
     $67 = (($66) + 3|0); //@line 4195 "src/sprites/../puun/gf/../../other/stb_image.h"
     HEAP8[$67>>0] = 0; //@line 4195 "src/sprites/../puun/gf/../../other/stb_image.h"
    }
   }
  }
  $68 = $p; //@line 4196 "src/sprites/../puun/gf/../../other/stb_image.h"
  $69 = (($68) + 4|0); //@line 4196 "src/sprites/../puun/gf/../../other/stb_image.h"
  $p = $69; //@line 4196 "src/sprites/../puun/gf/../../other/stb_image.h"
  $70 = $i; //@line 4193 "src/sprites/../puun/gf/../../other/stb_image.h"
  $71 = (($70) + 1)|0; //@line 4193 "src/sprites/../puun/gf/../../other/stb_image.h"
  $i = $71; //@line 4193 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 STACKTOP = sp;return 1; //@line 4199 "src/sprites/../puun/gf/../../other/stb_image.h"
}
function _stbi__create_png_image($a,$image_data,$image_data_len,$out_n,$depth,$color,$interlaced) {
 $a = $a|0;
 $image_data = $image_data|0;
 $image_data_len = $image_data_len|0;
 $out_n = $out_n|0;
 $depth = $depth|0;
 $color = $color|0;
 $interlaced = $interlaced|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;
 var $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0;
 var $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0;
 var $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $final = 0, $i = 0, $img_len = 0, $j = 0, $out_x = 0, $out_y = 0, $p = 0, $x = 0, $xorig = 0, $xspc = 0, $y = 0, $yorig = 0, $yspc = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 192|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $xorig = sp + 112|0;
 $yorig = sp + 84|0;
 $xspc = sp + 56|0;
 $yspc = sp + 28|0;
 $1 = $a;
 $2 = $image_data;
 $3 = $image_data_len;
 $4 = $out_n;
 $5 = $depth;
 $6 = $color;
 $7 = $interlaced;
 $8 = $7; //@line 4139 "src/sprites/../puun/gf/../../other/stb_image.h"
 $9 = ($8|0)!=(0); //@line 4139 "src/sprites/../puun/gf/../../other/stb_image.h"
 if (!($9)) {
  $10 = $1; //@line 4140 "src/sprites/../puun/gf/../../other/stb_image.h"
  $11 = $2; //@line 4140 "src/sprites/../puun/gf/../../other/stb_image.h"
  $12 = $3; //@line 4140 "src/sprites/../puun/gf/../../other/stb_image.h"
  $13 = $4; //@line 4140 "src/sprites/../puun/gf/../../other/stb_image.h"
  $14 = $1; //@line 4140 "src/sprites/../puun/gf/../../other/stb_image.h"
  $15 = HEAP32[$14>>2]|0; //@line 4140 "src/sprites/../puun/gf/../../other/stb_image.h"
  $16 = HEAP32[$15>>2]|0; //@line 4140 "src/sprites/../puun/gf/../../other/stb_image.h"
  $17 = $1; //@line 4140 "src/sprites/../puun/gf/../../other/stb_image.h"
  $18 = HEAP32[$17>>2]|0; //@line 4140 "src/sprites/../puun/gf/../../other/stb_image.h"
  $19 = (($18) + 4|0); //@line 4140 "src/sprites/../puun/gf/../../other/stb_image.h"
  $20 = HEAP32[$19>>2]|0; //@line 4140 "src/sprites/../puun/gf/../../other/stb_image.h"
  $21 = $5; //@line 4140 "src/sprites/../puun/gf/../../other/stb_image.h"
  $22 = $6; //@line 4140 "src/sprites/../puun/gf/../../other/stb_image.h"
  $23 = (_stbi__create_png_image_raw($10,$11,$12,$13,$16,$20,$21,$22)|0); //@line 4140 "src/sprites/../puun/gf/../../other/stb_image.h"
  $0 = $23; //@line 4140 "src/sprites/../puun/gf/../../other/stb_image.h"
  $165 = $0; //@line 4175 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($165|0); //@line 4175 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $24 = $1; //@line 4143 "src/sprites/../puun/gf/../../other/stb_image.h"
 $25 = HEAP32[$24>>2]|0; //@line 4143 "src/sprites/../puun/gf/../../other/stb_image.h"
 $26 = HEAP32[$25>>2]|0; //@line 4143 "src/sprites/../puun/gf/../../other/stb_image.h"
 $27 = $1; //@line 4143 "src/sprites/../puun/gf/../../other/stb_image.h"
 $28 = HEAP32[$27>>2]|0; //@line 4143 "src/sprites/../puun/gf/../../other/stb_image.h"
 $29 = (($28) + 4|0); //@line 4143 "src/sprites/../puun/gf/../../other/stb_image.h"
 $30 = HEAP32[$29>>2]|0; //@line 4143 "src/sprites/../puun/gf/../../other/stb_image.h"
 $31 = Math_imul($26, $30)|0; //@line 4143 "src/sprites/../puun/gf/../../other/stb_image.h"
 $32 = $4; //@line 4143 "src/sprites/../puun/gf/../../other/stb_image.h"
 $33 = Math_imul($31, $32)|0; //@line 4143 "src/sprites/../puun/gf/../../other/stb_image.h"
 $34 = (_stbi__malloc($33)|0); //@line 4143 "src/sprites/../puun/gf/../../other/stb_image.h"
 $final = $34; //@line 4143 "src/sprites/../puun/gf/../../other/stb_image.h"
 $p = 0; //@line 4144 "src/sprites/../puun/gf/../../other/stb_image.h"
 while(1) {
  $35 = $p; //@line 4144 "src/sprites/../puun/gf/../../other/stb_image.h"
  $36 = ($35|0)<(7); //@line 4144 "src/sprites/../puun/gf/../../other/stb_image.h"
  if (!($36)) {
   label = 20;
   break;
  }
  ;HEAP32[$xorig+0>>2]=HEAP32[7688+0>>2]|0;HEAP32[$xorig+4>>2]=HEAP32[7688+4>>2]|0;HEAP32[$xorig+8>>2]=HEAP32[7688+8>>2]|0;HEAP32[$xorig+12>>2]=HEAP32[7688+12>>2]|0;HEAP32[$xorig+16>>2]=HEAP32[7688+16>>2]|0;HEAP32[$xorig+20>>2]=HEAP32[7688+20>>2]|0;HEAP32[$xorig+24>>2]=HEAP32[7688+24>>2]|0; //@line 4145 "src/sprites/../puun/gf/../../other/stb_image.h"
  ;HEAP32[$yorig+0>>2]=HEAP32[7720+0>>2]|0;HEAP32[$yorig+4>>2]=HEAP32[7720+4>>2]|0;HEAP32[$yorig+8>>2]=HEAP32[7720+8>>2]|0;HEAP32[$yorig+12>>2]=HEAP32[7720+12>>2]|0;HEAP32[$yorig+16>>2]=HEAP32[7720+16>>2]|0;HEAP32[$yorig+20>>2]=HEAP32[7720+20>>2]|0;HEAP32[$yorig+24>>2]=HEAP32[7720+24>>2]|0; //@line 4146 "src/sprites/../puun/gf/../../other/stb_image.h"
  ;HEAP32[$xspc+0>>2]=HEAP32[7752+0>>2]|0;HEAP32[$xspc+4>>2]=HEAP32[7752+4>>2]|0;HEAP32[$xspc+8>>2]=HEAP32[7752+8>>2]|0;HEAP32[$xspc+12>>2]=HEAP32[7752+12>>2]|0;HEAP32[$xspc+16>>2]=HEAP32[7752+16>>2]|0;HEAP32[$xspc+20>>2]=HEAP32[7752+20>>2]|0;HEAP32[$xspc+24>>2]=HEAP32[7752+24>>2]|0; //@line 4147 "src/sprites/../puun/gf/../../other/stb_image.h"
  ;HEAP32[$yspc+0>>2]=HEAP32[7784+0>>2]|0;HEAP32[$yspc+4>>2]=HEAP32[7784+4>>2]|0;HEAP32[$yspc+8>>2]=HEAP32[7784+8>>2]|0;HEAP32[$yspc+12>>2]=HEAP32[7784+12>>2]|0;HEAP32[$yspc+16>>2]=HEAP32[7784+16>>2]|0;HEAP32[$yspc+20>>2]=HEAP32[7784+20>>2]|0;HEAP32[$yspc+24>>2]=HEAP32[7784+24>>2]|0; //@line 4148 "src/sprites/../puun/gf/../../other/stb_image.h"
  $37 = $1; //@line 4151 "src/sprites/../puun/gf/../../other/stb_image.h"
  $38 = HEAP32[$37>>2]|0; //@line 4151 "src/sprites/../puun/gf/../../other/stb_image.h"
  $39 = HEAP32[$38>>2]|0; //@line 4151 "src/sprites/../puun/gf/../../other/stb_image.h"
  $40 = $p; //@line 4151 "src/sprites/../puun/gf/../../other/stb_image.h"
  $41 = (($xorig) + ($40<<2)|0); //@line 4151 "src/sprites/../puun/gf/../../other/stb_image.h"
  $42 = HEAP32[$41>>2]|0; //@line 4151 "src/sprites/../puun/gf/../../other/stb_image.h"
  $43 = (($39) - ($42))|0; //@line 4151 "src/sprites/../puun/gf/../../other/stb_image.h"
  $44 = $p; //@line 4151 "src/sprites/../puun/gf/../../other/stb_image.h"
  $45 = (($xspc) + ($44<<2)|0); //@line 4151 "src/sprites/../puun/gf/../../other/stb_image.h"
  $46 = HEAP32[$45>>2]|0; //@line 4151 "src/sprites/../puun/gf/../../other/stb_image.h"
  $47 = (($43) + ($46))|0; //@line 4151 "src/sprites/../puun/gf/../../other/stb_image.h"
  $48 = (($47) - 1)|0; //@line 4151 "src/sprites/../puun/gf/../../other/stb_image.h"
  $49 = $p; //@line 4151 "src/sprites/../puun/gf/../../other/stb_image.h"
  $50 = (($xspc) + ($49<<2)|0); //@line 4151 "src/sprites/../puun/gf/../../other/stb_image.h"
  $51 = HEAP32[$50>>2]|0; //@line 4151 "src/sprites/../puun/gf/../../other/stb_image.h"
  $52 = (($48>>>0) / ($51>>>0))&-1; //@line 4151 "src/sprites/../puun/gf/../../other/stb_image.h"
  $x = $52; //@line 4151 "src/sprites/../puun/gf/../../other/stb_image.h"
  $53 = $1; //@line 4152 "src/sprites/../puun/gf/../../other/stb_image.h"
  $54 = HEAP32[$53>>2]|0; //@line 4152 "src/sprites/../puun/gf/../../other/stb_image.h"
  $55 = (($54) + 4|0); //@line 4152 "src/sprites/../puun/gf/../../other/stb_image.h"
  $56 = HEAP32[$55>>2]|0; //@line 4152 "src/sprites/../puun/gf/../../other/stb_image.h"
  $57 = $p; //@line 4152 "src/sprites/../puun/gf/../../other/stb_image.h"
  $58 = (($yorig) + ($57<<2)|0); //@line 4152 "src/sprites/../puun/gf/../../other/stb_image.h"
  $59 = HEAP32[$58>>2]|0; //@line 4152 "src/sprites/../puun/gf/../../other/stb_image.h"
  $60 = (($56) - ($59))|0; //@line 4152 "src/sprites/../puun/gf/../../other/stb_image.h"
  $61 = $p; //@line 4152 "src/sprites/../puun/gf/../../other/stb_image.h"
  $62 = (($yspc) + ($61<<2)|0); //@line 4152 "src/sprites/../puun/gf/../../other/stb_image.h"
  $63 = HEAP32[$62>>2]|0; //@line 4152 "src/sprites/../puun/gf/../../other/stb_image.h"
  $64 = (($60) + ($63))|0; //@line 4152 "src/sprites/../puun/gf/../../other/stb_image.h"
  $65 = (($64) - 1)|0; //@line 4152 "src/sprites/../puun/gf/../../other/stb_image.h"
  $66 = $p; //@line 4152 "src/sprites/../puun/gf/../../other/stb_image.h"
  $67 = (($yspc) + ($66<<2)|0); //@line 4152 "src/sprites/../puun/gf/../../other/stb_image.h"
  $68 = HEAP32[$67>>2]|0; //@line 4152 "src/sprites/../puun/gf/../../other/stb_image.h"
  $69 = (($65>>>0) / ($68>>>0))&-1; //@line 4152 "src/sprites/../puun/gf/../../other/stb_image.h"
  $y = $69; //@line 4152 "src/sprites/../puun/gf/../../other/stb_image.h"
  $70 = $x; //@line 4153 "src/sprites/../puun/gf/../../other/stb_image.h"
  $71 = ($70|0)!=(0); //@line 4153 "src/sprites/../puun/gf/../../other/stb_image.h"
  if ($71) {
   $72 = $y; //@line 4153 "src/sprites/../puun/gf/../../other/stb_image.h"
   $73 = ($72|0)!=(0); //@line 4153 "src/sprites/../puun/gf/../../other/stb_image.h"
   if ($73) {
    $74 = $1; //@line 4154 "src/sprites/../puun/gf/../../other/stb_image.h"
    $75 = HEAP32[$74>>2]|0; //@line 4154 "src/sprites/../puun/gf/../../other/stb_image.h"
    $76 = (($75) + 8|0); //@line 4154 "src/sprites/../puun/gf/../../other/stb_image.h"
    $77 = HEAP32[$76>>2]|0; //@line 4154 "src/sprites/../puun/gf/../../other/stb_image.h"
    $78 = $x; //@line 4154 "src/sprites/../puun/gf/../../other/stb_image.h"
    $79 = Math_imul($77, $78)|0; //@line 4154 "src/sprites/../puun/gf/../../other/stb_image.h"
    $80 = $5; //@line 4154 "src/sprites/../puun/gf/../../other/stb_image.h"
    $81 = Math_imul($79, $80)|0; //@line 4154 "src/sprites/../puun/gf/../../other/stb_image.h"
    $82 = (($81) + 7)|0; //@line 4154 "src/sprites/../puun/gf/../../other/stb_image.h"
    $83 = $82 >> 3; //@line 4154 "src/sprites/../puun/gf/../../other/stb_image.h"
    $84 = (($83) + 1)|0; //@line 4154 "src/sprites/../puun/gf/../../other/stb_image.h"
    $85 = $y; //@line 4154 "src/sprites/../puun/gf/../../other/stb_image.h"
    $86 = Math_imul($84, $85)|0; //@line 4154 "src/sprites/../puun/gf/../../other/stb_image.h"
    $img_len = $86; //@line 4154 "src/sprites/../puun/gf/../../other/stb_image.h"
    $87 = $1; //@line 4155 "src/sprites/../puun/gf/../../other/stb_image.h"
    $88 = $2; //@line 4155 "src/sprites/../puun/gf/../../other/stb_image.h"
    $89 = $3; //@line 4155 "src/sprites/../puun/gf/../../other/stb_image.h"
    $90 = $4; //@line 4155 "src/sprites/../puun/gf/../../other/stb_image.h"
    $91 = $x; //@line 4155 "src/sprites/../puun/gf/../../other/stb_image.h"
    $92 = $y; //@line 4155 "src/sprites/../puun/gf/../../other/stb_image.h"
    $93 = $5; //@line 4155 "src/sprites/../puun/gf/../../other/stb_image.h"
    $94 = $6; //@line 4155 "src/sprites/../puun/gf/../../other/stb_image.h"
    $95 = (_stbi__create_png_image_raw($87,$88,$89,$90,$91,$92,$93,$94)|0); //@line 4155 "src/sprites/../puun/gf/../../other/stb_image.h"
    $96 = ($95|0)!=(0); //@line 4155 "src/sprites/../puun/gf/../../other/stb_image.h"
    if (!($96)) {
     label = 8;
     break;
    }
    $j = 0; //@line 4159 "src/sprites/../puun/gf/../../other/stb_image.h"
    while(1) {
     $98 = $j; //@line 4159 "src/sprites/../puun/gf/../../other/stb_image.h"
     $99 = $y; //@line 4159 "src/sprites/../puun/gf/../../other/stb_image.h"
     $100 = ($98|0)<($99|0); //@line 4159 "src/sprites/../puun/gf/../../other/stb_image.h"
     if (!($100)) {
      break;
     }
     $i = 0; //@line 4160 "src/sprites/../puun/gf/../../other/stb_image.h"
     while(1) {
      $101 = $i; //@line 4160 "src/sprites/../puun/gf/../../other/stb_image.h"
      $102 = $x; //@line 4160 "src/sprites/../puun/gf/../../other/stb_image.h"
      $103 = ($101|0)<($102|0); //@line 4160 "src/sprites/../puun/gf/../../other/stb_image.h"
      if (!($103)) {
       break;
      }
      $104 = $j; //@line 4161 "src/sprites/../puun/gf/../../other/stb_image.h"
      $105 = $p; //@line 4161 "src/sprites/../puun/gf/../../other/stb_image.h"
      $106 = (($yspc) + ($105<<2)|0); //@line 4161 "src/sprites/../puun/gf/../../other/stb_image.h"
      $107 = HEAP32[$106>>2]|0; //@line 4161 "src/sprites/../puun/gf/../../other/stb_image.h"
      $108 = Math_imul($104, $107)|0; //@line 4161 "src/sprites/../puun/gf/../../other/stb_image.h"
      $109 = $p; //@line 4161 "src/sprites/../puun/gf/../../other/stb_image.h"
      $110 = (($yorig) + ($109<<2)|0); //@line 4161 "src/sprites/../puun/gf/../../other/stb_image.h"
      $111 = HEAP32[$110>>2]|0; //@line 4161 "src/sprites/../puun/gf/../../other/stb_image.h"
      $112 = (($108) + ($111))|0; //@line 4161 "src/sprites/../puun/gf/../../other/stb_image.h"
      $out_y = $112; //@line 4161 "src/sprites/../puun/gf/../../other/stb_image.h"
      $113 = $i; //@line 4162 "src/sprites/../puun/gf/../../other/stb_image.h"
      $114 = $p; //@line 4162 "src/sprites/../puun/gf/../../other/stb_image.h"
      $115 = (($xspc) + ($114<<2)|0); //@line 4162 "src/sprites/../puun/gf/../../other/stb_image.h"
      $116 = HEAP32[$115>>2]|0; //@line 4162 "src/sprites/../puun/gf/../../other/stb_image.h"
      $117 = Math_imul($113, $116)|0; //@line 4162 "src/sprites/../puun/gf/../../other/stb_image.h"
      $118 = $p; //@line 4162 "src/sprites/../puun/gf/../../other/stb_image.h"
      $119 = (($xorig) + ($118<<2)|0); //@line 4162 "src/sprites/../puun/gf/../../other/stb_image.h"
      $120 = HEAP32[$119>>2]|0; //@line 4162 "src/sprites/../puun/gf/../../other/stb_image.h"
      $121 = (($117) + ($120))|0; //@line 4162 "src/sprites/../puun/gf/../../other/stb_image.h"
      $out_x = $121; //@line 4162 "src/sprites/../puun/gf/../../other/stb_image.h"
      $122 = $final; //@line 4163 "src/sprites/../puun/gf/../../other/stb_image.h"
      $123 = $out_y; //@line 4163 "src/sprites/../puun/gf/../../other/stb_image.h"
      $124 = $1; //@line 4163 "src/sprites/../puun/gf/../../other/stb_image.h"
      $125 = HEAP32[$124>>2]|0; //@line 4163 "src/sprites/../puun/gf/../../other/stb_image.h"
      $126 = HEAP32[$125>>2]|0; //@line 4163 "src/sprites/../puun/gf/../../other/stb_image.h"
      $127 = Math_imul($123, $126)|0; //@line 4163 "src/sprites/../puun/gf/../../other/stb_image.h"
      $128 = $4; //@line 4163 "src/sprites/../puun/gf/../../other/stb_image.h"
      $129 = Math_imul($127, $128)|0; //@line 4163 "src/sprites/../puun/gf/../../other/stb_image.h"
      $130 = (($122) + ($129)|0); //@line 4163 "src/sprites/../puun/gf/../../other/stb_image.h"
      $131 = $out_x; //@line 4163 "src/sprites/../puun/gf/../../other/stb_image.h"
      $132 = $4; //@line 4163 "src/sprites/../puun/gf/../../other/stb_image.h"
      $133 = Math_imul($131, $132)|0; //@line 4163 "src/sprites/../puun/gf/../../other/stb_image.h"
      $134 = (($130) + ($133)|0); //@line 4163 "src/sprites/../puun/gf/../../other/stb_image.h"
      $135 = $1; //@line 4163 "src/sprites/../puun/gf/../../other/stb_image.h"
      $136 = (($135) + 12|0); //@line 4163 "src/sprites/../puun/gf/../../other/stb_image.h"
      $137 = HEAP32[$136>>2]|0; //@line 4163 "src/sprites/../puun/gf/../../other/stb_image.h"
      $138 = $j; //@line 4163 "src/sprites/../puun/gf/../../other/stb_image.h"
      $139 = $x; //@line 4163 "src/sprites/../puun/gf/../../other/stb_image.h"
      $140 = Math_imul($138, $139)|0; //@line 4163 "src/sprites/../puun/gf/../../other/stb_image.h"
      $141 = $i; //@line 4163 "src/sprites/../puun/gf/../../other/stb_image.h"
      $142 = (($140) + ($141))|0; //@line 4163 "src/sprites/../puun/gf/../../other/stb_image.h"
      $143 = $4; //@line 4163 "src/sprites/../puun/gf/../../other/stb_image.h"
      $144 = Math_imul($142, $143)|0; //@line 4163 "src/sprites/../puun/gf/../../other/stb_image.h"
      $145 = (($137) + ($144)|0); //@line 4163 "src/sprites/../puun/gf/../../other/stb_image.h"
      $146 = $4; //@line 4163 "src/sprites/../puun/gf/../../other/stb_image.h"
      _memcpy(($134|0),($145|0),($146|0))|0; //@line 4163 "src/sprites/../puun/gf/../../other/stb_image.h"
      $147 = $i; //@line 4160 "src/sprites/../puun/gf/../../other/stb_image.h"
      $148 = (($147) + 1)|0; //@line 4160 "src/sprites/../puun/gf/../../other/stb_image.h"
      $i = $148; //@line 4160 "src/sprites/../puun/gf/../../other/stb_image.h"
     }
     $149 = $j; //@line 4159 "src/sprites/../puun/gf/../../other/stb_image.h"
     $150 = (($149) + 1)|0; //@line 4159 "src/sprites/../puun/gf/../../other/stb_image.h"
     $j = $150; //@line 4159 "src/sprites/../puun/gf/../../other/stb_image.h"
    }
    $151 = $1; //@line 4167 "src/sprites/../puun/gf/../../other/stb_image.h"
    $152 = (($151) + 12|0); //@line 4167 "src/sprites/../puun/gf/../../other/stb_image.h"
    $153 = HEAP32[$152>>2]|0; //@line 4167 "src/sprites/../puun/gf/../../other/stb_image.h"
    _free($153); //@line 4167 "src/sprites/../puun/gf/../../other/stb_image.h"
    $154 = $img_len; //@line 4168 "src/sprites/../puun/gf/../../other/stb_image.h"
    $155 = $2; //@line 4168 "src/sprites/../puun/gf/../../other/stb_image.h"
    $156 = (($155) + ($154)|0); //@line 4168 "src/sprites/../puun/gf/../../other/stb_image.h"
    $2 = $156; //@line 4168 "src/sprites/../puun/gf/../../other/stb_image.h"
    $157 = $img_len; //@line 4169 "src/sprites/../puun/gf/../../other/stb_image.h"
    $158 = $3; //@line 4169 "src/sprites/../puun/gf/../../other/stb_image.h"
    $159 = (($158) - ($157))|0; //@line 4169 "src/sprites/../puun/gf/../../other/stb_image.h"
    $3 = $159; //@line 4169 "src/sprites/../puun/gf/../../other/stb_image.h"
   }
  }
  $160 = $p; //@line 4144 "src/sprites/../puun/gf/../../other/stb_image.h"
  $161 = (($160) + 1)|0; //@line 4144 "src/sprites/../puun/gf/../../other/stb_image.h"
  $p = $161; //@line 4144 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 if ((label|0) == 8) {
  $97 = $final; //@line 4156 "src/sprites/../puun/gf/../../other/stb_image.h"
  _free($97); //@line 4156 "src/sprites/../puun/gf/../../other/stb_image.h"
  $0 = 0; //@line 4157 "src/sprites/../puun/gf/../../other/stb_image.h"
  $165 = $0; //@line 4175 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($165|0); //@line 4175 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 else if ((label|0) == 20) {
  $162 = $final; //@line 4172 "src/sprites/../puun/gf/../../other/stb_image.h"
  $163 = $1; //@line 4172 "src/sprites/../puun/gf/../../other/stb_image.h"
  $164 = (($163) + 12|0); //@line 4172 "src/sprites/../puun/gf/../../other/stb_image.h"
  HEAP32[$164>>2] = $162; //@line 4172 "src/sprites/../puun/gf/../../other/stb_image.h"
  $0 = 1; //@line 4174 "src/sprites/../puun/gf/../../other/stb_image.h"
  $165 = $0; //@line 4175 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($165|0); //@line 4175 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 return (0)|0;
}
function _stbi__create_png_image_raw($a,$raw,$raw_len,$out_n,$x,$y,$depth,$color) {
 $a = $a|0;
 $raw = $raw|0;
 $raw_len = $raw_len|0;
 $out_n = $out_n|0;
 $x = $x|0;
 $y = $y|0;
 $depth = $depth|0;
 $color = $color|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $1000 = 0, $1001 = 0, $1002 = 0, $1003 = 0, $1004 = 0, $1005 = 0, $1006 = 0, $1007 = 0, $1008 = 0, $1009 = 0, $101 = 0, $1010 = 0, $1011 = 0, $1012 = 0, $1013 = 0, $1014 = 0;
 var $1015 = 0, $1016 = 0, $1017 = 0, $1018 = 0, $1019 = 0, $102 = 0, $1020 = 0, $1021 = 0, $1022 = 0, $1023 = 0, $1024 = 0, $1025 = 0, $1026 = 0, $1027 = 0, $1028 = 0, $1029 = 0, $103 = 0, $1030 = 0, $1031 = 0, $1032 = 0;
 var $1033 = 0, $1034 = 0, $1035 = 0, $1036 = 0, $1037 = 0, $1038 = 0, $1039 = 0, $104 = 0, $1040 = 0, $1041 = 0, $1042 = 0, $1043 = 0, $1044 = 0, $1045 = 0, $1046 = 0, $1047 = 0, $1048 = 0, $1049 = 0, $105 = 0, $1050 = 0;
 var $1051 = 0, $1052 = 0, $1053 = 0, $1054 = 0, $1055 = 0, $1056 = 0, $1057 = 0, $1058 = 0, $1059 = 0, $106 = 0, $1060 = 0, $1061 = 0, $1062 = 0, $1063 = 0, $1064 = 0, $1065 = 0, $1066 = 0, $1067 = 0, $1068 = 0, $1069 = 0;
 var $107 = 0, $1070 = 0, $1071 = 0, $1072 = 0, $1073 = 0, $1074 = 0, $1075 = 0, $1076 = 0, $1077 = 0, $1078 = 0, $1079 = 0, $108 = 0, $1080 = 0, $1081 = 0, $1082 = 0, $1083 = 0, $1084 = 0, $1085 = 0, $1086 = 0, $1087 = 0;
 var $1088 = 0, $1089 = 0, $109 = 0, $1090 = 0, $1091 = 0, $1092 = 0, $1093 = 0, $1094 = 0, $1095 = 0, $1096 = 0, $1097 = 0, $1098 = 0, $1099 = 0, $11 = 0, $110 = 0, $1100 = 0, $1101 = 0, $1102 = 0, $1103 = 0, $1104 = 0;
 var $1105 = 0, $1106 = 0, $1107 = 0, $1108 = 0, $1109 = 0, $111 = 0, $1110 = 0, $1111 = 0, $1112 = 0, $1113 = 0, $1114 = 0, $1115 = 0, $1116 = 0, $1117 = 0, $1118 = 0, $1119 = 0, $112 = 0, $1120 = 0, $1121 = 0, $1122 = 0;
 var $1123 = 0, $1124 = 0, $1125 = 0, $1126 = 0, $1127 = 0, $1128 = 0, $1129 = 0, $113 = 0, $1130 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0;
 var $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0;
 var $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0;
 var $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0;
 var $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0;
 var $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0;
 var $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0;
 var $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0;
 var $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0;
 var $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0;
 var $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0;
 var $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0;
 var $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0;
 var $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0;
 var $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0;
 var $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0;
 var $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0;
 var $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0;
 var $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0;
 var $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0;
 var $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0;
 var $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0;
 var $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0;
 var $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0;
 var $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0;
 var $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0;
 var $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0;
 var $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0;
 var $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0;
 var $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0, $644 = 0, $645 = 0, $646 = 0;
 var $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0, $661 = 0, $662 = 0, $663 = 0, $664 = 0;
 var $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0, $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0, $68 = 0, $680 = 0, $681 = 0, $682 = 0;
 var $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0, $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0, $699 = 0, $7 = 0, $70 = 0;
 var $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0, $718 = 0;
 var $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0, $724 = 0, $725 = 0, $726 = 0, $727 = 0, $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0, $734 = 0, $735 = 0, $736 = 0;
 var $737 = 0, $738 = 0, $739 = 0, $74 = 0, $740 = 0, $741 = 0, $742 = 0, $743 = 0, $744 = 0, $745 = 0, $746 = 0, $747 = 0, $748 = 0, $749 = 0, $75 = 0, $750 = 0, $751 = 0, $752 = 0, $753 = 0, $754 = 0;
 var $755 = 0, $756 = 0, $757 = 0, $758 = 0, $759 = 0, $76 = 0, $760 = 0, $761 = 0, $762 = 0, $763 = 0, $764 = 0, $765 = 0, $766 = 0, $767 = 0, $768 = 0, $769 = 0, $77 = 0, $770 = 0, $771 = 0, $772 = 0;
 var $773 = 0, $774 = 0, $775 = 0, $776 = 0, $777 = 0, $778 = 0, $779 = 0, $78 = 0, $780 = 0, $781 = 0, $782 = 0, $783 = 0, $784 = 0, $785 = 0, $786 = 0, $787 = 0, $788 = 0, $789 = 0, $79 = 0, $790 = 0;
 var $791 = 0, $792 = 0, $793 = 0, $794 = 0, $795 = 0, $796 = 0, $797 = 0, $798 = 0, $799 = 0, $8 = 0, $80 = 0, $800 = 0, $801 = 0, $802 = 0, $803 = 0, $804 = 0, $805 = 0, $806 = 0, $807 = 0, $808 = 0;
 var $809 = 0, $81 = 0, $810 = 0, $811 = 0, $812 = 0, $813 = 0, $814 = 0, $815 = 0, $816 = 0, $817 = 0, $818 = 0, $819 = 0, $82 = 0, $820 = 0, $821 = 0, $822 = 0, $823 = 0, $824 = 0, $825 = 0, $826 = 0;
 var $827 = 0, $828 = 0, $829 = 0, $83 = 0, $830 = 0, $831 = 0, $832 = 0, $833 = 0, $834 = 0, $835 = 0, $836 = 0, $837 = 0, $838 = 0, $839 = 0, $84 = 0, $840 = 0, $841 = 0, $842 = 0, $843 = 0, $844 = 0;
 var $845 = 0, $846 = 0, $847 = 0, $848 = 0, $849 = 0, $85 = 0, $850 = 0, $851 = 0, $852 = 0, $853 = 0, $854 = 0, $855 = 0, $856 = 0, $857 = 0, $858 = 0, $859 = 0, $86 = 0, $860 = 0, $861 = 0, $862 = 0;
 var $863 = 0, $864 = 0, $865 = 0, $866 = 0, $867 = 0, $868 = 0, $869 = 0, $87 = 0, $870 = 0, $871 = 0, $872 = 0, $873 = 0, $874 = 0, $875 = 0, $876 = 0, $877 = 0, $878 = 0, $879 = 0, $88 = 0, $880 = 0;
 var $881 = 0, $882 = 0, $883 = 0, $884 = 0, $885 = 0, $886 = 0, $887 = 0, $888 = 0, $889 = 0, $89 = 0, $890 = 0, $891 = 0, $892 = 0, $893 = 0, $894 = 0, $895 = 0, $896 = 0, $897 = 0, $898 = 0, $899 = 0;
 var $9 = 0, $90 = 0, $900 = 0, $901 = 0, $902 = 0, $903 = 0, $904 = 0, $905 = 0, $906 = 0, $907 = 0, $908 = 0, $909 = 0, $91 = 0, $910 = 0, $911 = 0, $912 = 0, $913 = 0, $914 = 0, $915 = 0, $916 = 0;
 var $917 = 0, $918 = 0, $919 = 0, $92 = 0, $920 = 0, $921 = 0, $922 = 0, $923 = 0, $924 = 0, $925 = 0, $926 = 0, $927 = 0, $928 = 0, $929 = 0, $93 = 0, $930 = 0, $931 = 0, $932 = 0, $933 = 0, $934 = 0;
 var $935 = 0, $936 = 0, $937 = 0, $938 = 0, $939 = 0, $94 = 0, $940 = 0, $941 = 0, $942 = 0, $943 = 0, $944 = 0, $945 = 0, $946 = 0, $947 = 0, $948 = 0, $949 = 0, $95 = 0, $950 = 0, $951 = 0, $952 = 0;
 var $953 = 0, $954 = 0, $955 = 0, $956 = 0, $957 = 0, $958 = 0, $959 = 0, $96 = 0, $960 = 0, $961 = 0, $962 = 0, $963 = 0, $964 = 0, $965 = 0, $966 = 0, $967 = 0, $968 = 0, $969 = 0, $97 = 0, $970 = 0;
 var $971 = 0, $972 = 0, $973 = 0, $974 = 0, $975 = 0, $976 = 0, $977 = 0, $978 = 0, $979 = 0, $98 = 0, $980 = 0, $981 = 0, $982 = 0, $983 = 0, $984 = 0, $985 = 0, $986 = 0, $987 = 0, $988 = 0, $989 = 0;
 var $99 = 0, $990 = 0, $991 = 0, $992 = 0, $993 = 0, $994 = 0, $995 = 0, $996 = 0, $997 = 0, $998 = 0, $999 = 0, $cur = 0, $cur1 = 0, $cur2 = 0, $filter = 0, $filter_bytes = 0, $i = 0, $i3 = 0, $img_len = 0, $img_n = 0;
 var $img_width_bytes = 0, $in = 0, $j = 0, $k = 0, $nk = 0, $prior = 0, $s = 0, $scale = 0, $stride = 0, $width = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $a;
 $2 = $raw;
 $3 = $raw_len;
 $4 = $out_n;
 $5 = $x;
 $6 = $y;
 $7 = $depth;
 $8 = $color;
 $9 = $1; //@line 3959 "src/sprites/../puun/gf/../../other/stb_image.h"
 $10 = HEAP32[$9>>2]|0; //@line 3959 "src/sprites/../puun/gf/../../other/stb_image.h"
 $s = $10; //@line 3959 "src/sprites/../puun/gf/../../other/stb_image.h"
 $11 = $5; //@line 3960 "src/sprites/../puun/gf/../../other/stb_image.h"
 $12 = $4; //@line 3960 "src/sprites/../puun/gf/../../other/stb_image.h"
 $13 = Math_imul($11, $12)|0; //@line 3960 "src/sprites/../puun/gf/../../other/stb_image.h"
 $stride = $13; //@line 3960 "src/sprites/../puun/gf/../../other/stb_image.h"
 $14 = $s; //@line 3963 "src/sprites/../puun/gf/../../other/stb_image.h"
 $15 = (($14) + 8|0); //@line 3963 "src/sprites/../puun/gf/../../other/stb_image.h"
 $16 = HEAP32[$15>>2]|0; //@line 3963 "src/sprites/../puun/gf/../../other/stb_image.h"
 $img_n = $16; //@line 3963 "src/sprites/../puun/gf/../../other/stb_image.h"
 $17 = $4; //@line 3965 "src/sprites/../puun/gf/../../other/stb_image.h"
 $18 = $s; //@line 3965 "src/sprites/../puun/gf/../../other/stb_image.h"
 $19 = (($18) + 8|0); //@line 3965 "src/sprites/../puun/gf/../../other/stb_image.h"
 $20 = HEAP32[$19>>2]|0; //@line 3965 "src/sprites/../puun/gf/../../other/stb_image.h"
 $21 = ($17|0)==($20|0); //@line 3965 "src/sprites/../puun/gf/../../other/stb_image.h"
 if (!($21)) {
  $22 = $4; //@line 3965 "src/sprites/../puun/gf/../../other/stb_image.h"
  $23 = $s; //@line 3965 "src/sprites/../puun/gf/../../other/stb_image.h"
  $24 = (($23) + 8|0); //@line 3965 "src/sprites/../puun/gf/../../other/stb_image.h"
  $25 = HEAP32[$24>>2]|0; //@line 3965 "src/sprites/../puun/gf/../../other/stb_image.h"
  $26 = (($25) + 1)|0; //@line 3965 "src/sprites/../puun/gf/../../other/stb_image.h"
  $27 = ($22|0)==($26|0); //@line 3965 "src/sprites/../puun/gf/../../other/stb_image.h"
  if (!($27)) {
   ___assert_fail((7816|0),(7560|0),3965,(7864|0)); //@line 3965 "src/sprites/../puun/gf/../../other/stb_image.h"
   // unreachable; //@line 3965 "src/sprites/../puun/gf/../../other/stb_image.h"
  }
 }
 $28 = $5; //@line 3966 "src/sprites/../puun/gf/../../other/stb_image.h"
 $29 = $6; //@line 3966 "src/sprites/../puun/gf/../../other/stb_image.h"
 $30 = Math_imul($28, $29)|0; //@line 3966 "src/sprites/../puun/gf/../../other/stb_image.h"
 $31 = $4; //@line 3966 "src/sprites/../puun/gf/../../other/stb_image.h"
 $32 = Math_imul($30, $31)|0; //@line 3966 "src/sprites/../puun/gf/../../other/stb_image.h"
 $33 = (_stbi__malloc($32)|0); //@line 3966 "src/sprites/../puun/gf/../../other/stb_image.h"
 $34 = $1; //@line 3966 "src/sprites/../puun/gf/../../other/stb_image.h"
 $35 = (($34) + 12|0); //@line 3966 "src/sprites/../puun/gf/../../other/stb_image.h"
 HEAP32[$35>>2] = $33; //@line 3966 "src/sprites/../puun/gf/../../other/stb_image.h"
 $36 = $1; //@line 3967 "src/sprites/../puun/gf/../../other/stb_image.h"
 $37 = (($36) + 12|0); //@line 3967 "src/sprites/../puun/gf/../../other/stb_image.h"
 $38 = HEAP32[$37>>2]|0; //@line 3967 "src/sprites/../puun/gf/../../other/stb_image.h"
 $39 = ($38|0)!=(0|0); //@line 3967 "src/sprites/../puun/gf/../../other/stb_image.h"
 if (!($39)) {
  $40 = (_stbi__err(7464)|0); //@line 3967 "src/sprites/../puun/gf/../../other/stb_image.h"
  $0 = $40; //@line 3967 "src/sprites/../puun/gf/../../other/stb_image.h"
  $1130 = $0; //@line 4133 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($1130|0); //@line 4133 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $41 = $img_n; //@line 3969 "src/sprites/../puun/gf/../../other/stb_image.h"
 $42 = $5; //@line 3969 "src/sprites/../puun/gf/../../other/stb_image.h"
 $43 = Math_imul($41, $42)|0; //@line 3969 "src/sprites/../puun/gf/../../other/stb_image.h"
 $44 = $7; //@line 3969 "src/sprites/../puun/gf/../../other/stb_image.h"
 $45 = Math_imul($43, $44)|0; //@line 3969 "src/sprites/../puun/gf/../../other/stb_image.h"
 $46 = (($45) + 7)|0; //@line 3969 "src/sprites/../puun/gf/../../other/stb_image.h"
 $47 = $46 >>> 3; //@line 3969 "src/sprites/../puun/gf/../../other/stb_image.h"
 $img_width_bytes = $47; //@line 3969 "src/sprites/../puun/gf/../../other/stb_image.h"
 $48 = $img_width_bytes; //@line 3970 "src/sprites/../puun/gf/../../other/stb_image.h"
 $49 = (($48) + 1)|0; //@line 3970 "src/sprites/../puun/gf/../../other/stb_image.h"
 $50 = $6; //@line 3970 "src/sprites/../puun/gf/../../other/stb_image.h"
 $51 = Math_imul($49, $50)|0; //@line 3970 "src/sprites/../puun/gf/../../other/stb_image.h"
 $img_len = $51; //@line 3970 "src/sprites/../puun/gf/../../other/stb_image.h"
 $52 = $s; //@line 3971 "src/sprites/../puun/gf/../../other/stb_image.h"
 $53 = HEAP32[$52>>2]|0; //@line 3971 "src/sprites/../puun/gf/../../other/stb_image.h"
 $54 = $5; //@line 3971 "src/sprites/../puun/gf/../../other/stb_image.h"
 $55 = ($53|0)==($54|0); //@line 3971 "src/sprites/../puun/gf/../../other/stb_image.h"
 do {
  if ($55) {
   $56 = $s; //@line 3971 "src/sprites/../puun/gf/../../other/stb_image.h"
   $57 = (($56) + 4|0); //@line 3971 "src/sprites/../puun/gf/../../other/stb_image.h"
   $58 = HEAP32[$57>>2]|0; //@line 3971 "src/sprites/../puun/gf/../../other/stb_image.h"
   $59 = $6; //@line 3971 "src/sprites/../puun/gf/../../other/stb_image.h"
   $60 = ($58|0)==($59|0); //@line 3971 "src/sprites/../puun/gf/../../other/stb_image.h"
   if ($60) {
    $61 = $3; //@line 3972 "src/sprites/../puun/gf/../../other/stb_image.h"
    $62 = $img_len; //@line 3972 "src/sprites/../puun/gf/../../other/stb_image.h"
    $63 = ($61|0)!=($62|0); //@line 3972 "src/sprites/../puun/gf/../../other/stb_image.h"
    if (!($63)) {
     break;
    }
    $64 = (_stbi__err(7896)|0); //@line 3972 "src/sprites/../puun/gf/../../other/stb_image.h"
    $0 = $64; //@line 3972 "src/sprites/../puun/gf/../../other/stb_image.h"
    $1130 = $0; //@line 4133 "src/sprites/../puun/gf/../../other/stb_image.h"
    STACKTOP = sp;return ($1130|0); //@line 4133 "src/sprites/../puun/gf/../../other/stb_image.h"
   } else {
    label = 11;
   }
  } else {
   label = 11;
  }
 } while(0);
 do {
  if ((label|0) == 11) {
   $65 = $3; //@line 3974 "src/sprites/../puun/gf/../../other/stb_image.h"
   $66 = $img_len; //@line 3974 "src/sprites/../puun/gf/../../other/stb_image.h"
   $67 = ($65>>>0)<($66>>>0); //@line 3974 "src/sprites/../puun/gf/../../other/stb_image.h"
   if (!($67)) {
    break;
   }
   $68 = (_stbi__err(7896)|0); //@line 3974 "src/sprites/../puun/gf/../../other/stb_image.h"
   $0 = $68; //@line 3974 "src/sprites/../puun/gf/../../other/stb_image.h"
   $1130 = $0; //@line 4133 "src/sprites/../puun/gf/../../other/stb_image.h"
   STACKTOP = sp;return ($1130|0); //@line 4133 "src/sprites/../puun/gf/../../other/stb_image.h"
  }
 } while(0);
 $j = 0; //@line 3977 "src/sprites/../puun/gf/../../other/stb_image.h"
 while(1) {
  $69 = $j; //@line 3977 "src/sprites/../puun/gf/../../other/stb_image.h"
  $70 = $6; //@line 3977 "src/sprites/../puun/gf/../../other/stb_image.h"
  $71 = ($69>>>0)<($70>>>0); //@line 3977 "src/sprites/../puun/gf/../../other/stb_image.h"
  if (!($71)) {
   label = 145;
   break;
  }
  $72 = $1; //@line 3978 "src/sprites/../puun/gf/../../other/stb_image.h"
  $73 = (($72) + 12|0); //@line 3978 "src/sprites/../puun/gf/../../other/stb_image.h"
  $74 = HEAP32[$73>>2]|0; //@line 3978 "src/sprites/../puun/gf/../../other/stb_image.h"
  $75 = $stride; //@line 3978 "src/sprites/../puun/gf/../../other/stb_image.h"
  $76 = $j; //@line 3978 "src/sprites/../puun/gf/../../other/stb_image.h"
  $77 = Math_imul($75, $76)|0; //@line 3978 "src/sprites/../puun/gf/../../other/stb_image.h"
  $78 = (($74) + ($77)|0); //@line 3978 "src/sprites/../puun/gf/../../other/stb_image.h"
  $cur = $78; //@line 3978 "src/sprites/../puun/gf/../../other/stb_image.h"
  $79 = $cur; //@line 3979 "src/sprites/../puun/gf/../../other/stb_image.h"
  $80 = $stride; //@line 3979 "src/sprites/../puun/gf/../../other/stb_image.h"
  $81 = (0 - ($80))|0; //@line 3979 "src/sprites/../puun/gf/../../other/stb_image.h"
  $82 = (($79) + ($81)|0); //@line 3979 "src/sprites/../puun/gf/../../other/stb_image.h"
  $prior = $82; //@line 3979 "src/sprites/../puun/gf/../../other/stb_image.h"
  $83 = $2; //@line 3980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $84 = (($83) + 1|0); //@line 3980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $2 = $84; //@line 3980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $85 = HEAP8[$83>>0]|0; //@line 3980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $86 = $85&255; //@line 3980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $filter = $86; //@line 3980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $87 = $img_n; //@line 3981 "src/sprites/../puun/gf/../../other/stb_image.h"
  $filter_bytes = $87; //@line 3981 "src/sprites/../puun/gf/../../other/stb_image.h"
  $88 = $5; //@line 3982 "src/sprites/../puun/gf/../../other/stb_image.h"
  $width = $88; //@line 3982 "src/sprites/../puun/gf/../../other/stb_image.h"
  $89 = $filter; //@line 3983 "src/sprites/../puun/gf/../../other/stb_image.h"
  $90 = ($89|0)>(4); //@line 3983 "src/sprites/../puun/gf/../../other/stb_image.h"
  if ($90) {
   label = 17;
   break;
  }
  $92 = $7; //@line 3986 "src/sprites/../puun/gf/../../other/stb_image.h"
  $93 = ($92|0)<(8); //@line 3986 "src/sprites/../puun/gf/../../other/stb_image.h"
  if ($93) {
   $94 = $img_width_bytes; //@line 3987 "src/sprites/../puun/gf/../../other/stb_image.h"
   $95 = $5; //@line 3987 "src/sprites/../puun/gf/../../other/stb_image.h"
   $96 = ($94>>>0)<=($95>>>0); //@line 3987 "src/sprites/../puun/gf/../../other/stb_image.h"
   if (!($96)) {
    label = 20;
    break;
   }
   $97 = $5; //@line 3988 "src/sprites/../puun/gf/../../other/stb_image.h"
   $98 = $4; //@line 3988 "src/sprites/../puun/gf/../../other/stb_image.h"
   $99 = Math_imul($97, $98)|0; //@line 3988 "src/sprites/../puun/gf/../../other/stb_image.h"
   $100 = $img_width_bytes; //@line 3988 "src/sprites/../puun/gf/../../other/stb_image.h"
   $101 = (($99) - ($100))|0; //@line 3988 "src/sprites/../puun/gf/../../other/stb_image.h"
   $102 = $cur; //@line 3988 "src/sprites/../puun/gf/../../other/stb_image.h"
   $103 = (($102) + ($101)|0); //@line 3988 "src/sprites/../puun/gf/../../other/stb_image.h"
   $cur = $103; //@line 3988 "src/sprites/../puun/gf/../../other/stb_image.h"
   $filter_bytes = 1; //@line 3989 "src/sprites/../puun/gf/../../other/stb_image.h"
   $104 = $img_width_bytes; //@line 3990 "src/sprites/../puun/gf/../../other/stb_image.h"
   $width = $104; //@line 3990 "src/sprites/../puun/gf/../../other/stb_image.h"
  }
  $105 = $j; //@line 3994 "src/sprites/../puun/gf/../../other/stb_image.h"
  $106 = ($105|0)==(0); //@line 3994 "src/sprites/../puun/gf/../../other/stb_image.h"
  if ($106) {
   $107 = $filter; //@line 3994 "src/sprites/../puun/gf/../../other/stb_image.h"
   $108 = (7960 + ($107)|0); //@line 3994 "src/sprites/../puun/gf/../../other/stb_image.h"
   $109 = HEAP8[$108>>0]|0; //@line 3994 "src/sprites/../puun/gf/../../other/stb_image.h"
   $110 = $109&255; //@line 3994 "src/sprites/../puun/gf/../../other/stb_image.h"
   $filter = $110; //@line 3994 "src/sprites/../puun/gf/../../other/stb_image.h"
  }
  $k = 0; //@line 3997 "src/sprites/../puun/gf/../../other/stb_image.h"
  while(1) {
   $111 = $k; //@line 3997 "src/sprites/../puun/gf/../../other/stb_image.h"
   $112 = $filter_bytes; //@line 3997 "src/sprites/../puun/gf/../../other/stb_image.h"
   $113 = ($111|0)<($112|0); //@line 3997 "src/sprites/../puun/gf/../../other/stb_image.h"
   if (!($113)) {
    break;
   }
   $114 = $filter; //@line 3998 "src/sprites/../puun/gf/../../other/stb_image.h"
   switch ($114|0) {
   case 4:  {
    $162 = $k; //@line 4003 "src/sprites/../puun/gf/../../other/stb_image.h"
    $163 = $2; //@line 4003 "src/sprites/../puun/gf/../../other/stb_image.h"
    $164 = (($163) + ($162)|0); //@line 4003 "src/sprites/../puun/gf/../../other/stb_image.h"
    $165 = HEAP8[$164>>0]|0; //@line 4003 "src/sprites/../puun/gf/../../other/stb_image.h"
    $166 = $165&255; //@line 4003 "src/sprites/../puun/gf/../../other/stb_image.h"
    $167 = $k; //@line 4003 "src/sprites/../puun/gf/../../other/stb_image.h"
    $168 = $prior; //@line 4003 "src/sprites/../puun/gf/../../other/stb_image.h"
    $169 = (($168) + ($167)|0); //@line 4003 "src/sprites/../puun/gf/../../other/stb_image.h"
    $170 = HEAP8[$169>>0]|0; //@line 4003 "src/sprites/../puun/gf/../../other/stb_image.h"
    $171 = $170&255; //@line 4003 "src/sprites/../puun/gf/../../other/stb_image.h"
    $172 = (_stbi__paeth(0,$171,0)|0); //@line 4003 "src/sprites/../puun/gf/../../other/stb_image.h"
    $173 = (($166) + ($172))|0; //@line 4003 "src/sprites/../puun/gf/../../other/stb_image.h"
    $174 = $173 & 255; //@line 4003 "src/sprites/../puun/gf/../../other/stb_image.h"
    $175 = $174&255; //@line 4003 "src/sprites/../puun/gf/../../other/stb_image.h"
    $176 = $k; //@line 4003 "src/sprites/../puun/gf/../../other/stb_image.h"
    $177 = $cur; //@line 4003 "src/sprites/../puun/gf/../../other/stb_image.h"
    $178 = (($177) + ($176)|0); //@line 4003 "src/sprites/../puun/gf/../../other/stb_image.h"
    HEAP8[$178>>0] = $175; //@line 4003 "src/sprites/../puun/gf/../../other/stb_image.h"
    break;
   }
   case 6:  {
    $186 = $k; //@line 4005 "src/sprites/../puun/gf/../../other/stb_image.h"
    $187 = $2; //@line 4005 "src/sprites/../puun/gf/../../other/stb_image.h"
    $188 = (($187) + ($186)|0); //@line 4005 "src/sprites/../puun/gf/../../other/stb_image.h"
    $189 = HEAP8[$188>>0]|0; //@line 4005 "src/sprites/../puun/gf/../../other/stb_image.h"
    $190 = $k; //@line 4005 "src/sprites/../puun/gf/../../other/stb_image.h"
    $191 = $cur; //@line 4005 "src/sprites/../puun/gf/../../other/stb_image.h"
    $192 = (($191) + ($190)|0); //@line 4005 "src/sprites/../puun/gf/../../other/stb_image.h"
    HEAP8[$192>>0] = $189; //@line 4005 "src/sprites/../puun/gf/../../other/stb_image.h"
    break;
   }
   case 0:  {
    $115 = $k; //@line 3999 "src/sprites/../puun/gf/../../other/stb_image.h"
    $116 = $2; //@line 3999 "src/sprites/../puun/gf/../../other/stb_image.h"
    $117 = (($116) + ($115)|0); //@line 3999 "src/sprites/../puun/gf/../../other/stb_image.h"
    $118 = HEAP8[$117>>0]|0; //@line 3999 "src/sprites/../puun/gf/../../other/stb_image.h"
    $119 = $k; //@line 3999 "src/sprites/../puun/gf/../../other/stb_image.h"
    $120 = $cur; //@line 3999 "src/sprites/../puun/gf/../../other/stb_image.h"
    $121 = (($120) + ($119)|0); //@line 3999 "src/sprites/../puun/gf/../../other/stb_image.h"
    HEAP8[$121>>0] = $118; //@line 3999 "src/sprites/../puun/gf/../../other/stb_image.h"
    break;
   }
   case 3:  {
    $145 = $k; //@line 4002 "src/sprites/../puun/gf/../../other/stb_image.h"
    $146 = $2; //@line 4002 "src/sprites/../puun/gf/../../other/stb_image.h"
    $147 = (($146) + ($145)|0); //@line 4002 "src/sprites/../puun/gf/../../other/stb_image.h"
    $148 = HEAP8[$147>>0]|0; //@line 4002 "src/sprites/../puun/gf/../../other/stb_image.h"
    $149 = $148&255; //@line 4002 "src/sprites/../puun/gf/../../other/stb_image.h"
    $150 = $k; //@line 4002 "src/sprites/../puun/gf/../../other/stb_image.h"
    $151 = $prior; //@line 4002 "src/sprites/../puun/gf/../../other/stb_image.h"
    $152 = (($151) + ($150)|0); //@line 4002 "src/sprites/../puun/gf/../../other/stb_image.h"
    $153 = HEAP8[$152>>0]|0; //@line 4002 "src/sprites/../puun/gf/../../other/stb_image.h"
    $154 = $153&255; //@line 4002 "src/sprites/../puun/gf/../../other/stb_image.h"
    $155 = $154 >> 1; //@line 4002 "src/sprites/../puun/gf/../../other/stb_image.h"
    $156 = (($149) + ($155))|0; //@line 4002 "src/sprites/../puun/gf/../../other/stb_image.h"
    $157 = $156 & 255; //@line 4002 "src/sprites/../puun/gf/../../other/stb_image.h"
    $158 = $157&255; //@line 4002 "src/sprites/../puun/gf/../../other/stb_image.h"
    $159 = $k; //@line 4002 "src/sprites/../puun/gf/../../other/stb_image.h"
    $160 = $cur; //@line 4002 "src/sprites/../puun/gf/../../other/stb_image.h"
    $161 = (($160) + ($159)|0); //@line 4002 "src/sprites/../puun/gf/../../other/stb_image.h"
    HEAP8[$161>>0] = $158; //@line 4002 "src/sprites/../puun/gf/../../other/stb_image.h"
    break;
   }
   case 5:  {
    $179 = $k; //@line 4004 "src/sprites/../puun/gf/../../other/stb_image.h"
    $180 = $2; //@line 4004 "src/sprites/../puun/gf/../../other/stb_image.h"
    $181 = (($180) + ($179)|0); //@line 4004 "src/sprites/../puun/gf/../../other/stb_image.h"
    $182 = HEAP8[$181>>0]|0; //@line 4004 "src/sprites/../puun/gf/../../other/stb_image.h"
    $183 = $k; //@line 4004 "src/sprites/../puun/gf/../../other/stb_image.h"
    $184 = $cur; //@line 4004 "src/sprites/../puun/gf/../../other/stb_image.h"
    $185 = (($184) + ($183)|0); //@line 4004 "src/sprites/../puun/gf/../../other/stb_image.h"
    HEAP8[$185>>0] = $182; //@line 4004 "src/sprites/../puun/gf/../../other/stb_image.h"
    break;
   }
   case 2:  {
    $129 = $k; //@line 4001 "src/sprites/../puun/gf/../../other/stb_image.h"
    $130 = $2; //@line 4001 "src/sprites/../puun/gf/../../other/stb_image.h"
    $131 = (($130) + ($129)|0); //@line 4001 "src/sprites/../puun/gf/../../other/stb_image.h"
    $132 = HEAP8[$131>>0]|0; //@line 4001 "src/sprites/../puun/gf/../../other/stb_image.h"
    $133 = $132&255; //@line 4001 "src/sprites/../puun/gf/../../other/stb_image.h"
    $134 = $k; //@line 4001 "src/sprites/../puun/gf/../../other/stb_image.h"
    $135 = $prior; //@line 4001 "src/sprites/../puun/gf/../../other/stb_image.h"
    $136 = (($135) + ($134)|0); //@line 4001 "src/sprites/../puun/gf/../../other/stb_image.h"
    $137 = HEAP8[$136>>0]|0; //@line 4001 "src/sprites/../puun/gf/../../other/stb_image.h"
    $138 = $137&255; //@line 4001 "src/sprites/../puun/gf/../../other/stb_image.h"
    $139 = (($133) + ($138))|0; //@line 4001 "src/sprites/../puun/gf/../../other/stb_image.h"
    $140 = $139 & 255; //@line 4001 "src/sprites/../puun/gf/../../other/stb_image.h"
    $141 = $140&255; //@line 4001 "src/sprites/../puun/gf/../../other/stb_image.h"
    $142 = $k; //@line 4001 "src/sprites/../puun/gf/../../other/stb_image.h"
    $143 = $cur; //@line 4001 "src/sprites/../puun/gf/../../other/stb_image.h"
    $144 = (($143) + ($142)|0); //@line 4001 "src/sprites/../puun/gf/../../other/stb_image.h"
    HEAP8[$144>>0] = $141; //@line 4001 "src/sprites/../puun/gf/../../other/stb_image.h"
    break;
   }
   case 1:  {
    $122 = $k; //@line 4000 "src/sprites/../puun/gf/../../other/stb_image.h"
    $123 = $2; //@line 4000 "src/sprites/../puun/gf/../../other/stb_image.h"
    $124 = (($123) + ($122)|0); //@line 4000 "src/sprites/../puun/gf/../../other/stb_image.h"
    $125 = HEAP8[$124>>0]|0; //@line 4000 "src/sprites/../puun/gf/../../other/stb_image.h"
    $126 = $k; //@line 4000 "src/sprites/../puun/gf/../../other/stb_image.h"
    $127 = $cur; //@line 4000 "src/sprites/../puun/gf/../../other/stb_image.h"
    $128 = (($127) + ($126)|0); //@line 4000 "src/sprites/../puun/gf/../../other/stb_image.h"
    HEAP8[$128>>0] = $125; //@line 4000 "src/sprites/../puun/gf/../../other/stb_image.h"
    break;
   }
   default: {
   }
   }
   $193 = $k; //@line 3997 "src/sprites/../puun/gf/../../other/stb_image.h"
   $194 = (($193) + 1)|0; //@line 3997 "src/sprites/../puun/gf/../../other/stb_image.h"
   $k = $194; //@line 3997 "src/sprites/../puun/gf/../../other/stb_image.h"
  }
  $195 = $7; //@line 4009 "src/sprites/../puun/gf/../../other/stb_image.h"
  $196 = ($195|0)==(8); //@line 4009 "src/sprites/../puun/gf/../../other/stb_image.h"
  if ($196) {
   $197 = $img_n; //@line 4010 "src/sprites/../puun/gf/../../other/stb_image.h"
   $198 = $4; //@line 4010 "src/sprites/../puun/gf/../../other/stb_image.h"
   $199 = ($197|0)!=($198|0); //@line 4010 "src/sprites/../puun/gf/../../other/stb_image.h"
   if ($199) {
    $200 = $img_n; //@line 4011 "src/sprites/../puun/gf/../../other/stb_image.h"
    $201 = $cur; //@line 4011 "src/sprites/../puun/gf/../../other/stb_image.h"
    $202 = (($201) + ($200)|0); //@line 4011 "src/sprites/../puun/gf/../../other/stb_image.h"
    HEAP8[$202>>0] = -1; //@line 4011 "src/sprites/../puun/gf/../../other/stb_image.h"
   }
   $203 = $img_n; //@line 4012 "src/sprites/../puun/gf/../../other/stb_image.h"
   $204 = $2; //@line 4012 "src/sprites/../puun/gf/../../other/stb_image.h"
   $205 = (($204) + ($203)|0); //@line 4012 "src/sprites/../puun/gf/../../other/stb_image.h"
   $2 = $205; //@line 4012 "src/sprites/../puun/gf/../../other/stb_image.h"
   $206 = $4; //@line 4013 "src/sprites/../puun/gf/../../other/stb_image.h"
   $207 = $cur; //@line 4013 "src/sprites/../puun/gf/../../other/stb_image.h"
   $208 = (($207) + ($206)|0); //@line 4013 "src/sprites/../puun/gf/../../other/stb_image.h"
   $cur = $208; //@line 4013 "src/sprites/../puun/gf/../../other/stb_image.h"
   $209 = $4; //@line 4014 "src/sprites/../puun/gf/../../other/stb_image.h"
   $210 = $prior; //@line 4014 "src/sprites/../puun/gf/../../other/stb_image.h"
   $211 = (($210) + ($209)|0); //@line 4014 "src/sprites/../puun/gf/../../other/stb_image.h"
   $prior = $211; //@line 4014 "src/sprites/../puun/gf/../../other/stb_image.h"
  } else {
   $212 = $2; //@line 4016 "src/sprites/../puun/gf/../../other/stb_image.h"
   $213 = (($212) + 1|0); //@line 4016 "src/sprites/../puun/gf/../../other/stb_image.h"
   $2 = $213; //@line 4016 "src/sprites/../puun/gf/../../other/stb_image.h"
   $214 = $cur; //@line 4017 "src/sprites/../puun/gf/../../other/stb_image.h"
   $215 = (($214) + 1|0); //@line 4017 "src/sprites/../puun/gf/../../other/stb_image.h"
   $cur = $215; //@line 4017 "src/sprites/../puun/gf/../../other/stb_image.h"
   $216 = $prior; //@line 4018 "src/sprites/../puun/gf/../../other/stb_image.h"
   $217 = (($216) + 1|0); //@line 4018 "src/sprites/../puun/gf/../../other/stb_image.h"
   $prior = $217; //@line 4018 "src/sprites/../puun/gf/../../other/stb_image.h"
  }
  $218 = $7; //@line 4022 "src/sprites/../puun/gf/../../other/stb_image.h"
  $219 = ($218|0)<(8); //@line 4022 "src/sprites/../puun/gf/../../other/stb_image.h"
  if ($219) {
   label = 43;
  } else {
   $220 = $img_n; //@line 4022 "src/sprites/../puun/gf/../../other/stb_image.h"
   $221 = $4; //@line 4022 "src/sprites/../puun/gf/../../other/stb_image.h"
   $222 = ($220|0)==($221|0); //@line 4022 "src/sprites/../puun/gf/../../other/stb_image.h"
   if ($222) {
    label = 43;
   } else {
    $392 = $img_n; //@line 4040 "src/sprites/../puun/gf/../../other/stb_image.h"
    $393 = (($392) + 1)|0; //@line 4040 "src/sprites/../puun/gf/../../other/stb_image.h"
    $394 = $4; //@line 4040 "src/sprites/../puun/gf/../../other/stb_image.h"
    $395 = ($393|0)==($394|0); //@line 4040 "src/sprites/../puun/gf/../../other/stb_image.h"
    if (!($395)) {
     label = 77;
     break;
    }
    $396 = $filter; //@line 4045 "src/sprites/../puun/gf/../../other/stb_image.h"
    switch ($396|0) {
    case 0:  {
     $397 = $5; //@line 4046 "src/sprites/../puun/gf/../../other/stb_image.h"
     $398 = (($397) - 1)|0; //@line 4046 "src/sprites/../puun/gf/../../other/stb_image.h"
     $i = $398; //@line 4046 "src/sprites/../puun/gf/../../other/stb_image.h"
     while(1) {
      $399 = $i; //@line 4046 "src/sprites/../puun/gf/../../other/stb_image.h"
      $400 = ($399>>>0)>=(1); //@line 4046 "src/sprites/../puun/gf/../../other/stb_image.h"
      if (!($400)) {
       break;
      }
      $k = 0; //@line 4046 "src/sprites/../puun/gf/../../other/stb_image.h"
      while(1) {
       $401 = $k; //@line 4046 "src/sprites/../puun/gf/../../other/stb_image.h"
       $402 = $img_n; //@line 4046 "src/sprites/../puun/gf/../../other/stb_image.h"
       $403 = ($401|0)<($402|0); //@line 4046 "src/sprites/../puun/gf/../../other/stb_image.h"
       if (!($403)) {
        break;
       }
       $404 = $k; //@line 4046 "src/sprites/../puun/gf/../../other/stb_image.h"
       $405 = $2; //@line 4046 "src/sprites/../puun/gf/../../other/stb_image.h"
       $406 = (($405) + ($404)|0); //@line 4046 "src/sprites/../puun/gf/../../other/stb_image.h"
       $407 = HEAP8[$406>>0]|0; //@line 4046 "src/sprites/../puun/gf/../../other/stb_image.h"
       $408 = $k; //@line 4046 "src/sprites/../puun/gf/../../other/stb_image.h"
       $409 = $cur; //@line 4046 "src/sprites/../puun/gf/../../other/stb_image.h"
       $410 = (($409) + ($408)|0); //@line 4046 "src/sprites/../puun/gf/../../other/stb_image.h"
       HEAP8[$410>>0] = $407; //@line 4046 "src/sprites/../puun/gf/../../other/stb_image.h"
       $411 = $k; //@line 4046 "src/sprites/../puun/gf/../../other/stb_image.h"
       $412 = (($411) + 1)|0; //@line 4046 "src/sprites/../puun/gf/../../other/stb_image.h"
       $k = $412; //@line 4046 "src/sprites/../puun/gf/../../other/stb_image.h"
      }
      $413 = $i; //@line 4046 "src/sprites/../puun/gf/../../other/stb_image.h"
      $414 = (($413) + -1)|0; //@line 4046 "src/sprites/../puun/gf/../../other/stb_image.h"
      $i = $414; //@line 4046 "src/sprites/../puun/gf/../../other/stb_image.h"
      $415 = $img_n; //@line 4046 "src/sprites/../puun/gf/../../other/stb_image.h"
      $416 = $cur; //@line 4046 "src/sprites/../puun/gf/../../other/stb_image.h"
      $417 = (($416) + ($415)|0); //@line 4046 "src/sprites/../puun/gf/../../other/stb_image.h"
      HEAP8[$417>>0] = -1; //@line 4046 "src/sprites/../puun/gf/../../other/stb_image.h"
      $418 = $img_n; //@line 4046 "src/sprites/../puun/gf/../../other/stb_image.h"
      $419 = $2; //@line 4046 "src/sprites/../puun/gf/../../other/stb_image.h"
      $420 = (($419) + ($418)|0); //@line 4046 "src/sprites/../puun/gf/../../other/stb_image.h"
      $2 = $420; //@line 4046 "src/sprites/../puun/gf/../../other/stb_image.h"
      $421 = $4; //@line 4046 "src/sprites/../puun/gf/../../other/stb_image.h"
      $422 = $cur; //@line 4046 "src/sprites/../puun/gf/../../other/stb_image.h"
      $423 = (($422) + ($421)|0); //@line 4046 "src/sprites/../puun/gf/../../other/stb_image.h"
      $cur = $423; //@line 4046 "src/sprites/../puun/gf/../../other/stb_image.h"
      $424 = $4; //@line 4046 "src/sprites/../puun/gf/../../other/stb_image.h"
      $425 = $prior; //@line 4046 "src/sprites/../puun/gf/../../other/stb_image.h"
      $426 = (($425) + ($424)|0); //@line 4046 "src/sprites/../puun/gf/../../other/stb_image.h"
      $prior = $426; //@line 4046 "src/sprites/../puun/gf/../../other/stb_image.h"
     }
     break;
    }
    case 1:  {
     $427 = $5; //@line 4047 "src/sprites/../puun/gf/../../other/stb_image.h"
     $428 = (($427) - 1)|0; //@line 4047 "src/sprites/../puun/gf/../../other/stb_image.h"
     $i = $428; //@line 4047 "src/sprites/../puun/gf/../../other/stb_image.h"
     while(1) {
      $429 = $i; //@line 4047 "src/sprites/../puun/gf/../../other/stb_image.h"
      $430 = ($429>>>0)>=(1); //@line 4047 "src/sprites/../puun/gf/../../other/stb_image.h"
      if (!($430)) {
       break;
      }
      $k = 0; //@line 4047 "src/sprites/../puun/gf/../../other/stb_image.h"
      while(1) {
       $431 = $k; //@line 4047 "src/sprites/../puun/gf/../../other/stb_image.h"
       $432 = $img_n; //@line 4047 "src/sprites/../puun/gf/../../other/stb_image.h"
       $433 = ($431|0)<($432|0); //@line 4047 "src/sprites/../puun/gf/../../other/stb_image.h"
       if (!($433)) {
        break;
       }
       $434 = $k; //@line 4047 "src/sprites/../puun/gf/../../other/stb_image.h"
       $435 = $2; //@line 4047 "src/sprites/../puun/gf/../../other/stb_image.h"
       $436 = (($435) + ($434)|0); //@line 4047 "src/sprites/../puun/gf/../../other/stb_image.h"
       $437 = HEAP8[$436>>0]|0; //@line 4047 "src/sprites/../puun/gf/../../other/stb_image.h"
       $438 = $437&255; //@line 4047 "src/sprites/../puun/gf/../../other/stb_image.h"
       $439 = $k; //@line 4047 "src/sprites/../puun/gf/../../other/stb_image.h"
       $440 = $4; //@line 4047 "src/sprites/../puun/gf/../../other/stb_image.h"
       $441 = (($439) - ($440))|0; //@line 4047 "src/sprites/../puun/gf/../../other/stb_image.h"
       $442 = $cur; //@line 4047 "src/sprites/../puun/gf/../../other/stb_image.h"
       $443 = (($442) + ($441)|0); //@line 4047 "src/sprites/../puun/gf/../../other/stb_image.h"
       $444 = HEAP8[$443>>0]|0; //@line 4047 "src/sprites/../puun/gf/../../other/stb_image.h"
       $445 = $444&255; //@line 4047 "src/sprites/../puun/gf/../../other/stb_image.h"
       $446 = (($438) + ($445))|0; //@line 4047 "src/sprites/../puun/gf/../../other/stb_image.h"
       $447 = $446 & 255; //@line 4047 "src/sprites/../puun/gf/../../other/stb_image.h"
       $448 = $447&255; //@line 4047 "src/sprites/../puun/gf/../../other/stb_image.h"
       $449 = $k; //@line 4047 "src/sprites/../puun/gf/../../other/stb_image.h"
       $450 = $cur; //@line 4047 "src/sprites/../puun/gf/../../other/stb_image.h"
       $451 = (($450) + ($449)|0); //@line 4047 "src/sprites/../puun/gf/../../other/stb_image.h"
       HEAP8[$451>>0] = $448; //@line 4047 "src/sprites/../puun/gf/../../other/stb_image.h"
       $452 = $k; //@line 4047 "src/sprites/../puun/gf/../../other/stb_image.h"
       $453 = (($452) + 1)|0; //@line 4047 "src/sprites/../puun/gf/../../other/stb_image.h"
       $k = $453; //@line 4047 "src/sprites/../puun/gf/../../other/stb_image.h"
      }
      $454 = $i; //@line 4047 "src/sprites/../puun/gf/../../other/stb_image.h"
      $455 = (($454) + -1)|0; //@line 4047 "src/sprites/../puun/gf/../../other/stb_image.h"
      $i = $455; //@line 4047 "src/sprites/../puun/gf/../../other/stb_image.h"
      $456 = $img_n; //@line 4047 "src/sprites/../puun/gf/../../other/stb_image.h"
      $457 = $cur; //@line 4047 "src/sprites/../puun/gf/../../other/stb_image.h"
      $458 = (($457) + ($456)|0); //@line 4047 "src/sprites/../puun/gf/../../other/stb_image.h"
      HEAP8[$458>>0] = -1; //@line 4047 "src/sprites/../puun/gf/../../other/stb_image.h"
      $459 = $img_n; //@line 4047 "src/sprites/../puun/gf/../../other/stb_image.h"
      $460 = $2; //@line 4047 "src/sprites/../puun/gf/../../other/stb_image.h"
      $461 = (($460) + ($459)|0); //@line 4047 "src/sprites/../puun/gf/../../other/stb_image.h"
      $2 = $461; //@line 4047 "src/sprites/../puun/gf/../../other/stb_image.h"
      $462 = $4; //@line 4047 "src/sprites/../puun/gf/../../other/stb_image.h"
      $463 = $cur; //@line 4047 "src/sprites/../puun/gf/../../other/stb_image.h"
      $464 = (($463) + ($462)|0); //@line 4047 "src/sprites/../puun/gf/../../other/stb_image.h"
      $cur = $464; //@line 4047 "src/sprites/../puun/gf/../../other/stb_image.h"
      $465 = $4; //@line 4047 "src/sprites/../puun/gf/../../other/stb_image.h"
      $466 = $prior; //@line 4047 "src/sprites/../puun/gf/../../other/stb_image.h"
      $467 = (($466) + ($465)|0); //@line 4047 "src/sprites/../puun/gf/../../other/stb_image.h"
      $prior = $467; //@line 4047 "src/sprites/../puun/gf/../../other/stb_image.h"
     }
     break;
    }
    case 2:  {
     $468 = $5; //@line 4048 "src/sprites/../puun/gf/../../other/stb_image.h"
     $469 = (($468) - 1)|0; //@line 4048 "src/sprites/../puun/gf/../../other/stb_image.h"
     $i = $469; //@line 4048 "src/sprites/../puun/gf/../../other/stb_image.h"
     while(1) {
      $470 = $i; //@line 4048 "src/sprites/../puun/gf/../../other/stb_image.h"
      $471 = ($470>>>0)>=(1); //@line 4048 "src/sprites/../puun/gf/../../other/stb_image.h"
      if (!($471)) {
       break;
      }
      $k = 0; //@line 4048 "src/sprites/../puun/gf/../../other/stb_image.h"
      while(1) {
       $472 = $k; //@line 4048 "src/sprites/../puun/gf/../../other/stb_image.h"
       $473 = $img_n; //@line 4048 "src/sprites/../puun/gf/../../other/stb_image.h"
       $474 = ($472|0)<($473|0); //@line 4048 "src/sprites/../puun/gf/../../other/stb_image.h"
       if (!($474)) {
        break;
       }
       $475 = $k; //@line 4048 "src/sprites/../puun/gf/../../other/stb_image.h"
       $476 = $2; //@line 4048 "src/sprites/../puun/gf/../../other/stb_image.h"
       $477 = (($476) + ($475)|0); //@line 4048 "src/sprites/../puun/gf/../../other/stb_image.h"
       $478 = HEAP8[$477>>0]|0; //@line 4048 "src/sprites/../puun/gf/../../other/stb_image.h"
       $479 = $478&255; //@line 4048 "src/sprites/../puun/gf/../../other/stb_image.h"
       $480 = $k; //@line 4048 "src/sprites/../puun/gf/../../other/stb_image.h"
       $481 = $prior; //@line 4048 "src/sprites/../puun/gf/../../other/stb_image.h"
       $482 = (($481) + ($480)|0); //@line 4048 "src/sprites/../puun/gf/../../other/stb_image.h"
       $483 = HEAP8[$482>>0]|0; //@line 4048 "src/sprites/../puun/gf/../../other/stb_image.h"
       $484 = $483&255; //@line 4048 "src/sprites/../puun/gf/../../other/stb_image.h"
       $485 = (($479) + ($484))|0; //@line 4048 "src/sprites/../puun/gf/../../other/stb_image.h"
       $486 = $485 & 255; //@line 4048 "src/sprites/../puun/gf/../../other/stb_image.h"
       $487 = $486&255; //@line 4048 "src/sprites/../puun/gf/../../other/stb_image.h"
       $488 = $k; //@line 4048 "src/sprites/../puun/gf/../../other/stb_image.h"
       $489 = $cur; //@line 4048 "src/sprites/../puun/gf/../../other/stb_image.h"
       $490 = (($489) + ($488)|0); //@line 4048 "src/sprites/../puun/gf/../../other/stb_image.h"
       HEAP8[$490>>0] = $487; //@line 4048 "src/sprites/../puun/gf/../../other/stb_image.h"
       $491 = $k; //@line 4048 "src/sprites/../puun/gf/../../other/stb_image.h"
       $492 = (($491) + 1)|0; //@line 4048 "src/sprites/../puun/gf/../../other/stb_image.h"
       $k = $492; //@line 4048 "src/sprites/../puun/gf/../../other/stb_image.h"
      }
      $493 = $i; //@line 4048 "src/sprites/../puun/gf/../../other/stb_image.h"
      $494 = (($493) + -1)|0; //@line 4048 "src/sprites/../puun/gf/../../other/stb_image.h"
      $i = $494; //@line 4048 "src/sprites/../puun/gf/../../other/stb_image.h"
      $495 = $img_n; //@line 4048 "src/sprites/../puun/gf/../../other/stb_image.h"
      $496 = $cur; //@line 4048 "src/sprites/../puun/gf/../../other/stb_image.h"
      $497 = (($496) + ($495)|0); //@line 4048 "src/sprites/../puun/gf/../../other/stb_image.h"
      HEAP8[$497>>0] = -1; //@line 4048 "src/sprites/../puun/gf/../../other/stb_image.h"
      $498 = $img_n; //@line 4048 "src/sprites/../puun/gf/../../other/stb_image.h"
      $499 = $2; //@line 4048 "src/sprites/../puun/gf/../../other/stb_image.h"
      $500 = (($499) + ($498)|0); //@line 4048 "src/sprites/../puun/gf/../../other/stb_image.h"
      $2 = $500; //@line 4048 "src/sprites/../puun/gf/../../other/stb_image.h"
      $501 = $4; //@line 4048 "src/sprites/../puun/gf/../../other/stb_image.h"
      $502 = $cur; //@line 4048 "src/sprites/../puun/gf/../../other/stb_image.h"
      $503 = (($502) + ($501)|0); //@line 4048 "src/sprites/../puun/gf/../../other/stb_image.h"
      $cur = $503; //@line 4048 "src/sprites/../puun/gf/../../other/stb_image.h"
      $504 = $4; //@line 4048 "src/sprites/../puun/gf/../../other/stb_image.h"
      $505 = $prior; //@line 4048 "src/sprites/../puun/gf/../../other/stb_image.h"
      $506 = (($505) + ($504)|0); //@line 4048 "src/sprites/../puun/gf/../../other/stb_image.h"
      $prior = $506; //@line 4048 "src/sprites/../puun/gf/../../other/stb_image.h"
     }
     break;
    }
    case 3:  {
     $507 = $5; //@line 4049 "src/sprites/../puun/gf/../../other/stb_image.h"
     $508 = (($507) - 1)|0; //@line 4049 "src/sprites/../puun/gf/../../other/stb_image.h"
     $i = $508; //@line 4049 "src/sprites/../puun/gf/../../other/stb_image.h"
     while(1) {
      $509 = $i; //@line 4049 "src/sprites/../puun/gf/../../other/stb_image.h"
      $510 = ($509>>>0)>=(1); //@line 4049 "src/sprites/../puun/gf/../../other/stb_image.h"
      if (!($510)) {
       break;
      }
      $k = 0; //@line 4049 "src/sprites/../puun/gf/../../other/stb_image.h"
      while(1) {
       $511 = $k; //@line 4049 "src/sprites/../puun/gf/../../other/stb_image.h"
       $512 = $img_n; //@line 4049 "src/sprites/../puun/gf/../../other/stb_image.h"
       $513 = ($511|0)<($512|0); //@line 4049 "src/sprites/../puun/gf/../../other/stb_image.h"
       if (!($513)) {
        break;
       }
       $514 = $k; //@line 4049 "src/sprites/../puun/gf/../../other/stb_image.h"
       $515 = $2; //@line 4049 "src/sprites/../puun/gf/../../other/stb_image.h"
       $516 = (($515) + ($514)|0); //@line 4049 "src/sprites/../puun/gf/../../other/stb_image.h"
       $517 = HEAP8[$516>>0]|0; //@line 4049 "src/sprites/../puun/gf/../../other/stb_image.h"
       $518 = $517&255; //@line 4049 "src/sprites/../puun/gf/../../other/stb_image.h"
       $519 = $k; //@line 4049 "src/sprites/../puun/gf/../../other/stb_image.h"
       $520 = $prior; //@line 4049 "src/sprites/../puun/gf/../../other/stb_image.h"
       $521 = (($520) + ($519)|0); //@line 4049 "src/sprites/../puun/gf/../../other/stb_image.h"
       $522 = HEAP8[$521>>0]|0; //@line 4049 "src/sprites/../puun/gf/../../other/stb_image.h"
       $523 = $522&255; //@line 4049 "src/sprites/../puun/gf/../../other/stb_image.h"
       $524 = $k; //@line 4049 "src/sprites/../puun/gf/../../other/stb_image.h"
       $525 = $4; //@line 4049 "src/sprites/../puun/gf/../../other/stb_image.h"
       $526 = (($524) - ($525))|0; //@line 4049 "src/sprites/../puun/gf/../../other/stb_image.h"
       $527 = $cur; //@line 4049 "src/sprites/../puun/gf/../../other/stb_image.h"
       $528 = (($527) + ($526)|0); //@line 4049 "src/sprites/../puun/gf/../../other/stb_image.h"
       $529 = HEAP8[$528>>0]|0; //@line 4049 "src/sprites/../puun/gf/../../other/stb_image.h"
       $530 = $529&255; //@line 4049 "src/sprites/../puun/gf/../../other/stb_image.h"
       $531 = (($523) + ($530))|0; //@line 4049 "src/sprites/../puun/gf/../../other/stb_image.h"
       $532 = $531 >> 1; //@line 4049 "src/sprites/../puun/gf/../../other/stb_image.h"
       $533 = (($518) + ($532))|0; //@line 4049 "src/sprites/../puun/gf/../../other/stb_image.h"
       $534 = $533 & 255; //@line 4049 "src/sprites/../puun/gf/../../other/stb_image.h"
       $535 = $534&255; //@line 4049 "src/sprites/../puun/gf/../../other/stb_image.h"
       $536 = $k; //@line 4049 "src/sprites/../puun/gf/../../other/stb_image.h"
       $537 = $cur; //@line 4049 "src/sprites/../puun/gf/../../other/stb_image.h"
       $538 = (($537) + ($536)|0); //@line 4049 "src/sprites/../puun/gf/../../other/stb_image.h"
       HEAP8[$538>>0] = $535; //@line 4049 "src/sprites/../puun/gf/../../other/stb_image.h"
       $539 = $k; //@line 4049 "src/sprites/../puun/gf/../../other/stb_image.h"
       $540 = (($539) + 1)|0; //@line 4049 "src/sprites/../puun/gf/../../other/stb_image.h"
       $k = $540; //@line 4049 "src/sprites/../puun/gf/../../other/stb_image.h"
      }
      $541 = $i; //@line 4049 "src/sprites/../puun/gf/../../other/stb_image.h"
      $542 = (($541) + -1)|0; //@line 4049 "src/sprites/../puun/gf/../../other/stb_image.h"
      $i = $542; //@line 4049 "src/sprites/../puun/gf/../../other/stb_image.h"
      $543 = $img_n; //@line 4049 "src/sprites/../puun/gf/../../other/stb_image.h"
      $544 = $cur; //@line 4049 "src/sprites/../puun/gf/../../other/stb_image.h"
      $545 = (($544) + ($543)|0); //@line 4049 "src/sprites/../puun/gf/../../other/stb_image.h"
      HEAP8[$545>>0] = -1; //@line 4049 "src/sprites/../puun/gf/../../other/stb_image.h"
      $546 = $img_n; //@line 4049 "src/sprites/../puun/gf/../../other/stb_image.h"
      $547 = $2; //@line 4049 "src/sprites/../puun/gf/../../other/stb_image.h"
      $548 = (($547) + ($546)|0); //@line 4049 "src/sprites/../puun/gf/../../other/stb_image.h"
      $2 = $548; //@line 4049 "src/sprites/../puun/gf/../../other/stb_image.h"
      $549 = $4; //@line 4049 "src/sprites/../puun/gf/../../other/stb_image.h"
      $550 = $cur; //@line 4049 "src/sprites/../puun/gf/../../other/stb_image.h"
      $551 = (($550) + ($549)|0); //@line 4049 "src/sprites/../puun/gf/../../other/stb_image.h"
      $cur = $551; //@line 4049 "src/sprites/../puun/gf/../../other/stb_image.h"
      $552 = $4; //@line 4049 "src/sprites/../puun/gf/../../other/stb_image.h"
      $553 = $prior; //@line 4049 "src/sprites/../puun/gf/../../other/stb_image.h"
      $554 = (($553) + ($552)|0); //@line 4049 "src/sprites/../puun/gf/../../other/stb_image.h"
      $prior = $554; //@line 4049 "src/sprites/../puun/gf/../../other/stb_image.h"
     }
     break;
    }
    case 4:  {
     $555 = $5; //@line 4050 "src/sprites/../puun/gf/../../other/stb_image.h"
     $556 = (($555) - 1)|0; //@line 4050 "src/sprites/../puun/gf/../../other/stb_image.h"
     $i = $556; //@line 4050 "src/sprites/../puun/gf/../../other/stb_image.h"
     while(1) {
      $557 = $i; //@line 4050 "src/sprites/../puun/gf/../../other/stb_image.h"
      $558 = ($557>>>0)>=(1); //@line 4050 "src/sprites/../puun/gf/../../other/stb_image.h"
      if (!($558)) {
       break;
      }
      $k = 0; //@line 4050 "src/sprites/../puun/gf/../../other/stb_image.h"
      while(1) {
       $559 = $k; //@line 4050 "src/sprites/../puun/gf/../../other/stb_image.h"
       $560 = $img_n; //@line 4050 "src/sprites/../puun/gf/../../other/stb_image.h"
       $561 = ($559|0)<($560|0); //@line 4050 "src/sprites/../puun/gf/../../other/stb_image.h"
       if (!($561)) {
        break;
       }
       $562 = $k; //@line 4050 "src/sprites/../puun/gf/../../other/stb_image.h"
       $563 = $2; //@line 4050 "src/sprites/../puun/gf/../../other/stb_image.h"
       $564 = (($563) + ($562)|0); //@line 4050 "src/sprites/../puun/gf/../../other/stb_image.h"
       $565 = HEAP8[$564>>0]|0; //@line 4050 "src/sprites/../puun/gf/../../other/stb_image.h"
       $566 = $565&255; //@line 4050 "src/sprites/../puun/gf/../../other/stb_image.h"
       $567 = $k; //@line 4050 "src/sprites/../puun/gf/../../other/stb_image.h"
       $568 = $4; //@line 4050 "src/sprites/../puun/gf/../../other/stb_image.h"
       $569 = (($567) - ($568))|0; //@line 4050 "src/sprites/../puun/gf/../../other/stb_image.h"
       $570 = $cur; //@line 4050 "src/sprites/../puun/gf/../../other/stb_image.h"
       $571 = (($570) + ($569)|0); //@line 4050 "src/sprites/../puun/gf/../../other/stb_image.h"
       $572 = HEAP8[$571>>0]|0; //@line 4050 "src/sprites/../puun/gf/../../other/stb_image.h"
       $573 = $572&255; //@line 4050 "src/sprites/../puun/gf/../../other/stb_image.h"
       $574 = $k; //@line 4050 "src/sprites/../puun/gf/../../other/stb_image.h"
       $575 = $prior; //@line 4050 "src/sprites/../puun/gf/../../other/stb_image.h"
       $576 = (($575) + ($574)|0); //@line 4050 "src/sprites/../puun/gf/../../other/stb_image.h"
       $577 = HEAP8[$576>>0]|0; //@line 4050 "src/sprites/../puun/gf/../../other/stb_image.h"
       $578 = $577&255; //@line 4050 "src/sprites/../puun/gf/../../other/stb_image.h"
       $579 = $k; //@line 4050 "src/sprites/../puun/gf/../../other/stb_image.h"
       $580 = $4; //@line 4050 "src/sprites/../puun/gf/../../other/stb_image.h"
       $581 = (($579) - ($580))|0; //@line 4050 "src/sprites/../puun/gf/../../other/stb_image.h"
       $582 = $prior; //@line 4050 "src/sprites/../puun/gf/../../other/stb_image.h"
       $583 = (($582) + ($581)|0); //@line 4050 "src/sprites/../puun/gf/../../other/stb_image.h"
       $584 = HEAP8[$583>>0]|0; //@line 4050 "src/sprites/../puun/gf/../../other/stb_image.h"
       $585 = $584&255; //@line 4050 "src/sprites/../puun/gf/../../other/stb_image.h"
       $586 = (_stbi__paeth($573,$578,$585)|0); //@line 4050 "src/sprites/../puun/gf/../../other/stb_image.h"
       $587 = (($566) + ($586))|0; //@line 4050 "src/sprites/../puun/gf/../../other/stb_image.h"
       $588 = $587 & 255; //@line 4050 "src/sprites/../puun/gf/../../other/stb_image.h"
       $589 = $588&255; //@line 4050 "src/sprites/../puun/gf/../../other/stb_image.h"
       $590 = $k; //@line 4050 "src/sprites/../puun/gf/../../other/stb_image.h"
       $591 = $cur; //@line 4050 "src/sprites/../puun/gf/../../other/stb_image.h"
       $592 = (($591) + ($590)|0); //@line 4050 "src/sprites/../puun/gf/../../other/stb_image.h"
       HEAP8[$592>>0] = $589; //@line 4050 "src/sprites/../puun/gf/../../other/stb_image.h"
       $593 = $k; //@line 4050 "src/sprites/../puun/gf/../../other/stb_image.h"
       $594 = (($593) + 1)|0; //@line 4050 "src/sprites/../puun/gf/../../other/stb_image.h"
       $k = $594; //@line 4050 "src/sprites/../puun/gf/../../other/stb_image.h"
      }
      $595 = $i; //@line 4050 "src/sprites/../puun/gf/../../other/stb_image.h"
      $596 = (($595) + -1)|0; //@line 4050 "src/sprites/../puun/gf/../../other/stb_image.h"
      $i = $596; //@line 4050 "src/sprites/../puun/gf/../../other/stb_image.h"
      $597 = $img_n; //@line 4050 "src/sprites/../puun/gf/../../other/stb_image.h"
      $598 = $cur; //@line 4050 "src/sprites/../puun/gf/../../other/stb_image.h"
      $599 = (($598) + ($597)|0); //@line 4050 "src/sprites/../puun/gf/../../other/stb_image.h"
      HEAP8[$599>>0] = -1; //@line 4050 "src/sprites/../puun/gf/../../other/stb_image.h"
      $600 = $img_n; //@line 4050 "src/sprites/../puun/gf/../../other/stb_image.h"
      $601 = $2; //@line 4050 "src/sprites/../puun/gf/../../other/stb_image.h"
      $602 = (($601) + ($600)|0); //@line 4050 "src/sprites/../puun/gf/../../other/stb_image.h"
      $2 = $602; //@line 4050 "src/sprites/../puun/gf/../../other/stb_image.h"
      $603 = $4; //@line 4050 "src/sprites/../puun/gf/../../other/stb_image.h"
      $604 = $cur; //@line 4050 "src/sprites/../puun/gf/../../other/stb_image.h"
      $605 = (($604) + ($603)|0); //@line 4050 "src/sprites/../puun/gf/../../other/stb_image.h"
      $cur = $605; //@line 4050 "src/sprites/../puun/gf/../../other/stb_image.h"
      $606 = $4; //@line 4050 "src/sprites/../puun/gf/../../other/stb_image.h"
      $607 = $prior; //@line 4050 "src/sprites/../puun/gf/../../other/stb_image.h"
      $608 = (($607) + ($606)|0); //@line 4050 "src/sprites/../puun/gf/../../other/stb_image.h"
      $prior = $608; //@line 4050 "src/sprites/../puun/gf/../../other/stb_image.h"
     }
     break;
    }
    case 5:  {
     $609 = $5; //@line 4051 "src/sprites/../puun/gf/../../other/stb_image.h"
     $610 = (($609) - 1)|0; //@line 4051 "src/sprites/../puun/gf/../../other/stb_image.h"
     $i = $610; //@line 4051 "src/sprites/../puun/gf/../../other/stb_image.h"
     while(1) {
      $611 = $i; //@line 4051 "src/sprites/../puun/gf/../../other/stb_image.h"
      $612 = ($611>>>0)>=(1); //@line 4051 "src/sprites/../puun/gf/../../other/stb_image.h"
      if (!($612)) {
       break;
      }
      $k = 0; //@line 4051 "src/sprites/../puun/gf/../../other/stb_image.h"
      while(1) {
       $613 = $k; //@line 4051 "src/sprites/../puun/gf/../../other/stb_image.h"
       $614 = $img_n; //@line 4051 "src/sprites/../puun/gf/../../other/stb_image.h"
       $615 = ($613|0)<($614|0); //@line 4051 "src/sprites/../puun/gf/../../other/stb_image.h"
       if (!($615)) {
        break;
       }
       $616 = $k; //@line 4051 "src/sprites/../puun/gf/../../other/stb_image.h"
       $617 = $2; //@line 4051 "src/sprites/../puun/gf/../../other/stb_image.h"
       $618 = (($617) + ($616)|0); //@line 4051 "src/sprites/../puun/gf/../../other/stb_image.h"
       $619 = HEAP8[$618>>0]|0; //@line 4051 "src/sprites/../puun/gf/../../other/stb_image.h"
       $620 = $619&255; //@line 4051 "src/sprites/../puun/gf/../../other/stb_image.h"
       $621 = $k; //@line 4051 "src/sprites/../puun/gf/../../other/stb_image.h"
       $622 = $4; //@line 4051 "src/sprites/../puun/gf/../../other/stb_image.h"
       $623 = (($621) - ($622))|0; //@line 4051 "src/sprites/../puun/gf/../../other/stb_image.h"
       $624 = $cur; //@line 4051 "src/sprites/../puun/gf/../../other/stb_image.h"
       $625 = (($624) + ($623)|0); //@line 4051 "src/sprites/../puun/gf/../../other/stb_image.h"
       $626 = HEAP8[$625>>0]|0; //@line 4051 "src/sprites/../puun/gf/../../other/stb_image.h"
       $627 = $626&255; //@line 4051 "src/sprites/../puun/gf/../../other/stb_image.h"
       $628 = $627 >> 1; //@line 4051 "src/sprites/../puun/gf/../../other/stb_image.h"
       $629 = (($620) + ($628))|0; //@line 4051 "src/sprites/../puun/gf/../../other/stb_image.h"
       $630 = $629 & 255; //@line 4051 "src/sprites/../puun/gf/../../other/stb_image.h"
       $631 = $630&255; //@line 4051 "src/sprites/../puun/gf/../../other/stb_image.h"
       $632 = $k; //@line 4051 "src/sprites/../puun/gf/../../other/stb_image.h"
       $633 = $cur; //@line 4051 "src/sprites/../puun/gf/../../other/stb_image.h"
       $634 = (($633) + ($632)|0); //@line 4051 "src/sprites/../puun/gf/../../other/stb_image.h"
       HEAP8[$634>>0] = $631; //@line 4051 "src/sprites/../puun/gf/../../other/stb_image.h"
       $635 = $k; //@line 4051 "src/sprites/../puun/gf/../../other/stb_image.h"
       $636 = (($635) + 1)|0; //@line 4051 "src/sprites/../puun/gf/../../other/stb_image.h"
       $k = $636; //@line 4051 "src/sprites/../puun/gf/../../other/stb_image.h"
      }
      $637 = $i; //@line 4051 "src/sprites/../puun/gf/../../other/stb_image.h"
      $638 = (($637) + -1)|0; //@line 4051 "src/sprites/../puun/gf/../../other/stb_image.h"
      $i = $638; //@line 4051 "src/sprites/../puun/gf/../../other/stb_image.h"
      $639 = $img_n; //@line 4051 "src/sprites/../puun/gf/../../other/stb_image.h"
      $640 = $cur; //@line 4051 "src/sprites/../puun/gf/../../other/stb_image.h"
      $641 = (($640) + ($639)|0); //@line 4051 "src/sprites/../puun/gf/../../other/stb_image.h"
      HEAP8[$641>>0] = -1; //@line 4051 "src/sprites/../puun/gf/../../other/stb_image.h"
      $642 = $img_n; //@line 4051 "src/sprites/../puun/gf/../../other/stb_image.h"
      $643 = $2; //@line 4051 "src/sprites/../puun/gf/../../other/stb_image.h"
      $644 = (($643) + ($642)|0); //@line 4051 "src/sprites/../puun/gf/../../other/stb_image.h"
      $2 = $644; //@line 4051 "src/sprites/../puun/gf/../../other/stb_image.h"
      $645 = $4; //@line 4051 "src/sprites/../puun/gf/../../other/stb_image.h"
      $646 = $cur; //@line 4051 "src/sprites/../puun/gf/../../other/stb_image.h"
      $647 = (($646) + ($645)|0); //@line 4051 "src/sprites/../puun/gf/../../other/stb_image.h"
      $cur = $647; //@line 4051 "src/sprites/../puun/gf/../../other/stb_image.h"
      $648 = $4; //@line 4051 "src/sprites/../puun/gf/../../other/stb_image.h"
      $649 = $prior; //@line 4051 "src/sprites/../puun/gf/../../other/stb_image.h"
      $650 = (($649) + ($648)|0); //@line 4051 "src/sprites/../puun/gf/../../other/stb_image.h"
      $prior = $650; //@line 4051 "src/sprites/../puun/gf/../../other/stb_image.h"
     }
     break;
    }
    case 6:  {
     $651 = $5; //@line 4052 "src/sprites/../puun/gf/../../other/stb_image.h"
     $652 = (($651) - 1)|0; //@line 4052 "src/sprites/../puun/gf/../../other/stb_image.h"
     $i = $652; //@line 4052 "src/sprites/../puun/gf/../../other/stb_image.h"
     while(1) {
      $653 = $i; //@line 4052 "src/sprites/../puun/gf/../../other/stb_image.h"
      $654 = ($653>>>0)>=(1); //@line 4052 "src/sprites/../puun/gf/../../other/stb_image.h"
      if (!($654)) {
       break;
      }
      $k = 0; //@line 4052 "src/sprites/../puun/gf/../../other/stb_image.h"
      while(1) {
       $655 = $k; //@line 4052 "src/sprites/../puun/gf/../../other/stb_image.h"
       $656 = $img_n; //@line 4052 "src/sprites/../puun/gf/../../other/stb_image.h"
       $657 = ($655|0)<($656|0); //@line 4052 "src/sprites/../puun/gf/../../other/stb_image.h"
       if (!($657)) {
        break;
       }
       $658 = $k; //@line 4052 "src/sprites/../puun/gf/../../other/stb_image.h"
       $659 = $2; //@line 4052 "src/sprites/../puun/gf/../../other/stb_image.h"
       $660 = (($659) + ($658)|0); //@line 4052 "src/sprites/../puun/gf/../../other/stb_image.h"
       $661 = HEAP8[$660>>0]|0; //@line 4052 "src/sprites/../puun/gf/../../other/stb_image.h"
       $662 = $661&255; //@line 4052 "src/sprites/../puun/gf/../../other/stb_image.h"
       $663 = $k; //@line 4052 "src/sprites/../puun/gf/../../other/stb_image.h"
       $664 = $4; //@line 4052 "src/sprites/../puun/gf/../../other/stb_image.h"
       $665 = (($663) - ($664))|0; //@line 4052 "src/sprites/../puun/gf/../../other/stb_image.h"
       $666 = $cur; //@line 4052 "src/sprites/../puun/gf/../../other/stb_image.h"
       $667 = (($666) + ($665)|0); //@line 4052 "src/sprites/../puun/gf/../../other/stb_image.h"
       $668 = HEAP8[$667>>0]|0; //@line 4052 "src/sprites/../puun/gf/../../other/stb_image.h"
       $669 = $668&255; //@line 4052 "src/sprites/../puun/gf/../../other/stb_image.h"
       $670 = (_stbi__paeth($669,0,0)|0); //@line 4052 "src/sprites/../puun/gf/../../other/stb_image.h"
       $671 = (($662) + ($670))|0; //@line 4052 "src/sprites/../puun/gf/../../other/stb_image.h"
       $672 = $671 & 255; //@line 4052 "src/sprites/../puun/gf/../../other/stb_image.h"
       $673 = $672&255; //@line 4052 "src/sprites/../puun/gf/../../other/stb_image.h"
       $674 = $k; //@line 4052 "src/sprites/../puun/gf/../../other/stb_image.h"
       $675 = $cur; //@line 4052 "src/sprites/../puun/gf/../../other/stb_image.h"
       $676 = (($675) + ($674)|0); //@line 4052 "src/sprites/../puun/gf/../../other/stb_image.h"
       HEAP8[$676>>0] = $673; //@line 4052 "src/sprites/../puun/gf/../../other/stb_image.h"
       $677 = $k; //@line 4052 "src/sprites/../puun/gf/../../other/stb_image.h"
       $678 = (($677) + 1)|0; //@line 4052 "src/sprites/../puun/gf/../../other/stb_image.h"
       $k = $678; //@line 4052 "src/sprites/../puun/gf/../../other/stb_image.h"
      }
      $679 = $i; //@line 4052 "src/sprites/../puun/gf/../../other/stb_image.h"
      $680 = (($679) + -1)|0; //@line 4052 "src/sprites/../puun/gf/../../other/stb_image.h"
      $i = $680; //@line 4052 "src/sprites/../puun/gf/../../other/stb_image.h"
      $681 = $img_n; //@line 4052 "src/sprites/../puun/gf/../../other/stb_image.h"
      $682 = $cur; //@line 4052 "src/sprites/../puun/gf/../../other/stb_image.h"
      $683 = (($682) + ($681)|0); //@line 4052 "src/sprites/../puun/gf/../../other/stb_image.h"
      HEAP8[$683>>0] = -1; //@line 4052 "src/sprites/../puun/gf/../../other/stb_image.h"
      $684 = $img_n; //@line 4052 "src/sprites/../puun/gf/../../other/stb_image.h"
      $685 = $2; //@line 4052 "src/sprites/../puun/gf/../../other/stb_image.h"
      $686 = (($685) + ($684)|0); //@line 4052 "src/sprites/../puun/gf/../../other/stb_image.h"
      $2 = $686; //@line 4052 "src/sprites/../puun/gf/../../other/stb_image.h"
      $687 = $4; //@line 4052 "src/sprites/../puun/gf/../../other/stb_image.h"
      $688 = $cur; //@line 4052 "src/sprites/../puun/gf/../../other/stb_image.h"
      $689 = (($688) + ($687)|0); //@line 4052 "src/sprites/../puun/gf/../../other/stb_image.h"
      $cur = $689; //@line 4052 "src/sprites/../puun/gf/../../other/stb_image.h"
      $690 = $4; //@line 4052 "src/sprites/../puun/gf/../../other/stb_image.h"
      $691 = $prior; //@line 4052 "src/sprites/../puun/gf/../../other/stb_image.h"
      $692 = (($691) + ($690)|0); //@line 4052 "src/sprites/../puun/gf/../../other/stb_image.h"
      $prior = $692; //@line 4052 "src/sprites/../puun/gf/../../other/stb_image.h"
     }
     break;
    }
    default: {
    }
    }
   }
  }
  if ((label|0) == 43) {
   label = 0;
   $223 = $width; //@line 4023 "src/sprites/../puun/gf/../../other/stb_image.h"
   $224 = (($223) - 1)|0; //@line 4023 "src/sprites/../puun/gf/../../other/stb_image.h"
   $225 = $img_n; //@line 4023 "src/sprites/../puun/gf/../../other/stb_image.h"
   $226 = Math_imul($224, $225)|0; //@line 4023 "src/sprites/../puun/gf/../../other/stb_image.h"
   $nk = $226; //@line 4023 "src/sprites/../puun/gf/../../other/stb_image.h"
   $227 = $filter; //@line 4027 "src/sprites/../puun/gf/../../other/stb_image.h"
   switch ($227|0) {
   case 2:  {
    $k = 0; //@line 4031 "src/sprites/../puun/gf/../../other/stb_image.h"
    while(1) {
     $254 = $k; //@line 4031 "src/sprites/../puun/gf/../../other/stb_image.h"
     $255 = $nk; //@line 4031 "src/sprites/../puun/gf/../../other/stb_image.h"
     $256 = ($254|0)<($255|0); //@line 4031 "src/sprites/../puun/gf/../../other/stb_image.h"
     if (!($256)) {
      break;
     }
     $257 = $k; //@line 4031 "src/sprites/../puun/gf/../../other/stb_image.h"
     $258 = $2; //@line 4031 "src/sprites/../puun/gf/../../other/stb_image.h"
     $259 = (($258) + ($257)|0); //@line 4031 "src/sprites/../puun/gf/../../other/stb_image.h"
     $260 = HEAP8[$259>>0]|0; //@line 4031 "src/sprites/../puun/gf/../../other/stb_image.h"
     $261 = $260&255; //@line 4031 "src/sprites/../puun/gf/../../other/stb_image.h"
     $262 = $k; //@line 4031 "src/sprites/../puun/gf/../../other/stb_image.h"
     $263 = $prior; //@line 4031 "src/sprites/../puun/gf/../../other/stb_image.h"
     $264 = (($263) + ($262)|0); //@line 4031 "src/sprites/../puun/gf/../../other/stb_image.h"
     $265 = HEAP8[$264>>0]|0; //@line 4031 "src/sprites/../puun/gf/../../other/stb_image.h"
     $266 = $265&255; //@line 4031 "src/sprites/../puun/gf/../../other/stb_image.h"
     $267 = (($261) + ($266))|0; //@line 4031 "src/sprites/../puun/gf/../../other/stb_image.h"
     $268 = $267 & 255; //@line 4031 "src/sprites/../puun/gf/../../other/stb_image.h"
     $269 = $268&255; //@line 4031 "src/sprites/../puun/gf/../../other/stb_image.h"
     $270 = $k; //@line 4031 "src/sprites/../puun/gf/../../other/stb_image.h"
     $271 = $cur; //@line 4031 "src/sprites/../puun/gf/../../other/stb_image.h"
     $272 = (($271) + ($270)|0); //@line 4031 "src/sprites/../puun/gf/../../other/stb_image.h"
     HEAP8[$272>>0] = $269; //@line 4031 "src/sprites/../puun/gf/../../other/stb_image.h"
     $273 = $k; //@line 4031 "src/sprites/../puun/gf/../../other/stb_image.h"
     $274 = (($273) + 1)|0; //@line 4031 "src/sprites/../puun/gf/../../other/stb_image.h"
     $k = $274; //@line 4031 "src/sprites/../puun/gf/../../other/stb_image.h"
    }
    break;
   }
   case 1:  {
    $k = 0; //@line 4030 "src/sprites/../puun/gf/../../other/stb_image.h"
    while(1) {
     $231 = $k; //@line 4030 "src/sprites/../puun/gf/../../other/stb_image.h"
     $232 = $nk; //@line 4030 "src/sprites/../puun/gf/../../other/stb_image.h"
     $233 = ($231|0)<($232|0); //@line 4030 "src/sprites/../puun/gf/../../other/stb_image.h"
     if (!($233)) {
      break;
     }
     $234 = $k; //@line 4030 "src/sprites/../puun/gf/../../other/stb_image.h"
     $235 = $2; //@line 4030 "src/sprites/../puun/gf/../../other/stb_image.h"
     $236 = (($235) + ($234)|0); //@line 4030 "src/sprites/../puun/gf/../../other/stb_image.h"
     $237 = HEAP8[$236>>0]|0; //@line 4030 "src/sprites/../puun/gf/../../other/stb_image.h"
     $238 = $237&255; //@line 4030 "src/sprites/../puun/gf/../../other/stb_image.h"
     $239 = $k; //@line 4030 "src/sprites/../puun/gf/../../other/stb_image.h"
     $240 = $filter_bytes; //@line 4030 "src/sprites/../puun/gf/../../other/stb_image.h"
     $241 = (($239) - ($240))|0; //@line 4030 "src/sprites/../puun/gf/../../other/stb_image.h"
     $242 = $cur; //@line 4030 "src/sprites/../puun/gf/../../other/stb_image.h"
     $243 = (($242) + ($241)|0); //@line 4030 "src/sprites/../puun/gf/../../other/stb_image.h"
     $244 = HEAP8[$243>>0]|0; //@line 4030 "src/sprites/../puun/gf/../../other/stb_image.h"
     $245 = $244&255; //@line 4030 "src/sprites/../puun/gf/../../other/stb_image.h"
     $246 = (($238) + ($245))|0; //@line 4030 "src/sprites/../puun/gf/../../other/stb_image.h"
     $247 = $246 & 255; //@line 4030 "src/sprites/../puun/gf/../../other/stb_image.h"
     $248 = $247&255; //@line 4030 "src/sprites/../puun/gf/../../other/stb_image.h"
     $249 = $k; //@line 4030 "src/sprites/../puun/gf/../../other/stb_image.h"
     $250 = $cur; //@line 4030 "src/sprites/../puun/gf/../../other/stb_image.h"
     $251 = (($250) + ($249)|0); //@line 4030 "src/sprites/../puun/gf/../../other/stb_image.h"
     HEAP8[$251>>0] = $248; //@line 4030 "src/sprites/../puun/gf/../../other/stb_image.h"
     $252 = $k; //@line 4030 "src/sprites/../puun/gf/../../other/stb_image.h"
     $253 = (($252) + 1)|0; //@line 4030 "src/sprites/../puun/gf/../../other/stb_image.h"
     $k = $253; //@line 4030 "src/sprites/../puun/gf/../../other/stb_image.h"
    }
    break;
   }
   case 0:  {
    $228 = $cur; //@line 4029 "src/sprites/../puun/gf/../../other/stb_image.h"
    $229 = $2; //@line 4029 "src/sprites/../puun/gf/../../other/stb_image.h"
    $230 = $nk; //@line 4029 "src/sprites/../puun/gf/../../other/stb_image.h"
    _memcpy(($228|0),($229|0),($230|0))|0; //@line 4029 "src/sprites/../puun/gf/../../other/stb_image.h"
    break;
   }
   case 4:  {
    $k = 0; //@line 4033 "src/sprites/../puun/gf/../../other/stb_image.h"
    while(1) {
     $305 = $k; //@line 4033 "src/sprites/../puun/gf/../../other/stb_image.h"
     $306 = $nk; //@line 4033 "src/sprites/../puun/gf/../../other/stb_image.h"
     $307 = ($305|0)<($306|0); //@line 4033 "src/sprites/../puun/gf/../../other/stb_image.h"
     if (!($307)) {
      break;
     }
     $308 = $k; //@line 4033 "src/sprites/../puun/gf/../../other/stb_image.h"
     $309 = $2; //@line 4033 "src/sprites/../puun/gf/../../other/stb_image.h"
     $310 = (($309) + ($308)|0); //@line 4033 "src/sprites/../puun/gf/../../other/stb_image.h"
     $311 = HEAP8[$310>>0]|0; //@line 4033 "src/sprites/../puun/gf/../../other/stb_image.h"
     $312 = $311&255; //@line 4033 "src/sprites/../puun/gf/../../other/stb_image.h"
     $313 = $k; //@line 4033 "src/sprites/../puun/gf/../../other/stb_image.h"
     $314 = $filter_bytes; //@line 4033 "src/sprites/../puun/gf/../../other/stb_image.h"
     $315 = (($313) - ($314))|0; //@line 4033 "src/sprites/../puun/gf/../../other/stb_image.h"
     $316 = $cur; //@line 4033 "src/sprites/../puun/gf/../../other/stb_image.h"
     $317 = (($316) + ($315)|0); //@line 4033 "src/sprites/../puun/gf/../../other/stb_image.h"
     $318 = HEAP8[$317>>0]|0; //@line 4033 "src/sprites/../puun/gf/../../other/stb_image.h"
     $319 = $318&255; //@line 4033 "src/sprites/../puun/gf/../../other/stb_image.h"
     $320 = $k; //@line 4033 "src/sprites/../puun/gf/../../other/stb_image.h"
     $321 = $prior; //@line 4033 "src/sprites/../puun/gf/../../other/stb_image.h"
     $322 = (($321) + ($320)|0); //@line 4033 "src/sprites/../puun/gf/../../other/stb_image.h"
     $323 = HEAP8[$322>>0]|0; //@line 4033 "src/sprites/../puun/gf/../../other/stb_image.h"
     $324 = $323&255; //@line 4033 "src/sprites/../puun/gf/../../other/stb_image.h"
     $325 = $k; //@line 4033 "src/sprites/../puun/gf/../../other/stb_image.h"
     $326 = $filter_bytes; //@line 4033 "src/sprites/../puun/gf/../../other/stb_image.h"
     $327 = (($325) - ($326))|0; //@line 4033 "src/sprites/../puun/gf/../../other/stb_image.h"
     $328 = $prior; //@line 4033 "src/sprites/../puun/gf/../../other/stb_image.h"
     $329 = (($328) + ($327)|0); //@line 4033 "src/sprites/../puun/gf/../../other/stb_image.h"
     $330 = HEAP8[$329>>0]|0; //@line 4033 "src/sprites/../puun/gf/../../other/stb_image.h"
     $331 = $330&255; //@line 4033 "src/sprites/../puun/gf/../../other/stb_image.h"
     $332 = (_stbi__paeth($319,$324,$331)|0); //@line 4033 "src/sprites/../puun/gf/../../other/stb_image.h"
     $333 = (($312) + ($332))|0; //@line 4033 "src/sprites/../puun/gf/../../other/stb_image.h"
     $334 = $333 & 255; //@line 4033 "src/sprites/../puun/gf/../../other/stb_image.h"
     $335 = $334&255; //@line 4033 "src/sprites/../puun/gf/../../other/stb_image.h"
     $336 = $k; //@line 4033 "src/sprites/../puun/gf/../../other/stb_image.h"
     $337 = $cur; //@line 4033 "src/sprites/../puun/gf/../../other/stb_image.h"
     $338 = (($337) + ($336)|0); //@line 4033 "src/sprites/../puun/gf/../../other/stb_image.h"
     HEAP8[$338>>0] = $335; //@line 4033 "src/sprites/../puun/gf/../../other/stb_image.h"
     $339 = $k; //@line 4033 "src/sprites/../puun/gf/../../other/stb_image.h"
     $340 = (($339) + 1)|0; //@line 4033 "src/sprites/../puun/gf/../../other/stb_image.h"
     $k = $340; //@line 4033 "src/sprites/../puun/gf/../../other/stb_image.h"
    }
    break;
   }
   case 6:  {
    $k = 0; //@line 4035 "src/sprites/../puun/gf/../../other/stb_image.h"
    while(1) {
     $365 = $k; //@line 4035 "src/sprites/../puun/gf/../../other/stb_image.h"
     $366 = $nk; //@line 4035 "src/sprites/../puun/gf/../../other/stb_image.h"
     $367 = ($365|0)<($366|0); //@line 4035 "src/sprites/../puun/gf/../../other/stb_image.h"
     if (!($367)) {
      break;
     }
     $368 = $k; //@line 4035 "src/sprites/../puun/gf/../../other/stb_image.h"
     $369 = $2; //@line 4035 "src/sprites/../puun/gf/../../other/stb_image.h"
     $370 = (($369) + ($368)|0); //@line 4035 "src/sprites/../puun/gf/../../other/stb_image.h"
     $371 = HEAP8[$370>>0]|0; //@line 4035 "src/sprites/../puun/gf/../../other/stb_image.h"
     $372 = $371&255; //@line 4035 "src/sprites/../puun/gf/../../other/stb_image.h"
     $373 = $k; //@line 4035 "src/sprites/../puun/gf/../../other/stb_image.h"
     $374 = $filter_bytes; //@line 4035 "src/sprites/../puun/gf/../../other/stb_image.h"
     $375 = (($373) - ($374))|0; //@line 4035 "src/sprites/../puun/gf/../../other/stb_image.h"
     $376 = $cur; //@line 4035 "src/sprites/../puun/gf/../../other/stb_image.h"
     $377 = (($376) + ($375)|0); //@line 4035 "src/sprites/../puun/gf/../../other/stb_image.h"
     $378 = HEAP8[$377>>0]|0; //@line 4035 "src/sprites/../puun/gf/../../other/stb_image.h"
     $379 = $378&255; //@line 4035 "src/sprites/../puun/gf/../../other/stb_image.h"
     $380 = (_stbi__paeth($379,0,0)|0); //@line 4035 "src/sprites/../puun/gf/../../other/stb_image.h"
     $381 = (($372) + ($380))|0; //@line 4035 "src/sprites/../puun/gf/../../other/stb_image.h"
     $382 = $381 & 255; //@line 4035 "src/sprites/../puun/gf/../../other/stb_image.h"
     $383 = $382&255; //@line 4035 "src/sprites/../puun/gf/../../other/stb_image.h"
     $384 = $k; //@line 4035 "src/sprites/../puun/gf/../../other/stb_image.h"
     $385 = $cur; //@line 4035 "src/sprites/../puun/gf/../../other/stb_image.h"
     $386 = (($385) + ($384)|0); //@line 4035 "src/sprites/../puun/gf/../../other/stb_image.h"
     HEAP8[$386>>0] = $383; //@line 4035 "src/sprites/../puun/gf/../../other/stb_image.h"
     $387 = $k; //@line 4035 "src/sprites/../puun/gf/../../other/stb_image.h"
     $388 = (($387) + 1)|0; //@line 4035 "src/sprites/../puun/gf/../../other/stb_image.h"
     $k = $388; //@line 4035 "src/sprites/../puun/gf/../../other/stb_image.h"
    }
    break;
   }
   case 5:  {
    $k = 0; //@line 4034 "src/sprites/../puun/gf/../../other/stb_image.h"
    while(1) {
     $341 = $k; //@line 4034 "src/sprites/../puun/gf/../../other/stb_image.h"
     $342 = $nk; //@line 4034 "src/sprites/../puun/gf/../../other/stb_image.h"
     $343 = ($341|0)<($342|0); //@line 4034 "src/sprites/../puun/gf/../../other/stb_image.h"
     if (!($343)) {
      break;
     }
     $344 = $k; //@line 4034 "src/sprites/../puun/gf/../../other/stb_image.h"
     $345 = $2; //@line 4034 "src/sprites/../puun/gf/../../other/stb_image.h"
     $346 = (($345) + ($344)|0); //@line 4034 "src/sprites/../puun/gf/../../other/stb_image.h"
     $347 = HEAP8[$346>>0]|0; //@line 4034 "src/sprites/../puun/gf/../../other/stb_image.h"
     $348 = $347&255; //@line 4034 "src/sprites/../puun/gf/../../other/stb_image.h"
     $349 = $k; //@line 4034 "src/sprites/../puun/gf/../../other/stb_image.h"
     $350 = $filter_bytes; //@line 4034 "src/sprites/../puun/gf/../../other/stb_image.h"
     $351 = (($349) - ($350))|0; //@line 4034 "src/sprites/../puun/gf/../../other/stb_image.h"
     $352 = $cur; //@line 4034 "src/sprites/../puun/gf/../../other/stb_image.h"
     $353 = (($352) + ($351)|0); //@line 4034 "src/sprites/../puun/gf/../../other/stb_image.h"
     $354 = HEAP8[$353>>0]|0; //@line 4034 "src/sprites/../puun/gf/../../other/stb_image.h"
     $355 = $354&255; //@line 4034 "src/sprites/../puun/gf/../../other/stb_image.h"
     $356 = $355 >> 1; //@line 4034 "src/sprites/../puun/gf/../../other/stb_image.h"
     $357 = (($348) + ($356))|0; //@line 4034 "src/sprites/../puun/gf/../../other/stb_image.h"
     $358 = $357 & 255; //@line 4034 "src/sprites/../puun/gf/../../other/stb_image.h"
     $359 = $358&255; //@line 4034 "src/sprites/../puun/gf/../../other/stb_image.h"
     $360 = $k; //@line 4034 "src/sprites/../puun/gf/../../other/stb_image.h"
     $361 = $cur; //@line 4034 "src/sprites/../puun/gf/../../other/stb_image.h"
     $362 = (($361) + ($360)|0); //@line 4034 "src/sprites/../puun/gf/../../other/stb_image.h"
     HEAP8[$362>>0] = $359; //@line 4034 "src/sprites/../puun/gf/../../other/stb_image.h"
     $363 = $k; //@line 4034 "src/sprites/../puun/gf/../../other/stb_image.h"
     $364 = (($363) + 1)|0; //@line 4034 "src/sprites/../puun/gf/../../other/stb_image.h"
     $k = $364; //@line 4034 "src/sprites/../puun/gf/../../other/stb_image.h"
    }
    break;
   }
   case 3:  {
    $k = 0; //@line 4032 "src/sprites/../puun/gf/../../other/stb_image.h"
    while(1) {
     $275 = $k; //@line 4032 "src/sprites/../puun/gf/../../other/stb_image.h"
     $276 = $nk; //@line 4032 "src/sprites/../puun/gf/../../other/stb_image.h"
     $277 = ($275|0)<($276|0); //@line 4032 "src/sprites/../puun/gf/../../other/stb_image.h"
     if (!($277)) {
      break;
     }
     $278 = $k; //@line 4032 "src/sprites/../puun/gf/../../other/stb_image.h"
     $279 = $2; //@line 4032 "src/sprites/../puun/gf/../../other/stb_image.h"
     $280 = (($279) + ($278)|0); //@line 4032 "src/sprites/../puun/gf/../../other/stb_image.h"
     $281 = HEAP8[$280>>0]|0; //@line 4032 "src/sprites/../puun/gf/../../other/stb_image.h"
     $282 = $281&255; //@line 4032 "src/sprites/../puun/gf/../../other/stb_image.h"
     $283 = $k; //@line 4032 "src/sprites/../puun/gf/../../other/stb_image.h"
     $284 = $prior; //@line 4032 "src/sprites/../puun/gf/../../other/stb_image.h"
     $285 = (($284) + ($283)|0); //@line 4032 "src/sprites/../puun/gf/../../other/stb_image.h"
     $286 = HEAP8[$285>>0]|0; //@line 4032 "src/sprites/../puun/gf/../../other/stb_image.h"
     $287 = $286&255; //@line 4032 "src/sprites/../puun/gf/../../other/stb_image.h"
     $288 = $k; //@line 4032 "src/sprites/../puun/gf/../../other/stb_image.h"
     $289 = $filter_bytes; //@line 4032 "src/sprites/../puun/gf/../../other/stb_image.h"
     $290 = (($288) - ($289))|0; //@line 4032 "src/sprites/../puun/gf/../../other/stb_image.h"
     $291 = $cur; //@line 4032 "src/sprites/../puun/gf/../../other/stb_image.h"
     $292 = (($291) + ($290)|0); //@line 4032 "src/sprites/../puun/gf/../../other/stb_image.h"
     $293 = HEAP8[$292>>0]|0; //@line 4032 "src/sprites/../puun/gf/../../other/stb_image.h"
     $294 = $293&255; //@line 4032 "src/sprites/../puun/gf/../../other/stb_image.h"
     $295 = (($287) + ($294))|0; //@line 4032 "src/sprites/../puun/gf/../../other/stb_image.h"
     $296 = $295 >> 1; //@line 4032 "src/sprites/../puun/gf/../../other/stb_image.h"
     $297 = (($282) + ($296))|0; //@line 4032 "src/sprites/../puun/gf/../../other/stb_image.h"
     $298 = $297 & 255; //@line 4032 "src/sprites/../puun/gf/../../other/stb_image.h"
     $299 = $298&255; //@line 4032 "src/sprites/../puun/gf/../../other/stb_image.h"
     $300 = $k; //@line 4032 "src/sprites/../puun/gf/../../other/stb_image.h"
     $301 = $cur; //@line 4032 "src/sprites/../puun/gf/../../other/stb_image.h"
     $302 = (($301) + ($300)|0); //@line 4032 "src/sprites/../puun/gf/../../other/stb_image.h"
     HEAP8[$302>>0] = $299; //@line 4032 "src/sprites/../puun/gf/../../other/stb_image.h"
     $303 = $k; //@line 4032 "src/sprites/../puun/gf/../../other/stb_image.h"
     $304 = (($303) + 1)|0; //@line 4032 "src/sprites/../puun/gf/../../other/stb_image.h"
     $k = $304; //@line 4032 "src/sprites/../puun/gf/../../other/stb_image.h"
    }
    break;
   }
   default: {
   }
   }
   $389 = $nk; //@line 4038 "src/sprites/../puun/gf/../../other/stb_image.h"
   $390 = $2; //@line 4038 "src/sprites/../puun/gf/../../other/stb_image.h"
   $391 = (($390) + ($389)|0); //@line 4038 "src/sprites/../puun/gf/../../other/stb_image.h"
   $2 = $391; //@line 4038 "src/sprites/../puun/gf/../../other/stb_image.h"
  }
  $693 = $j; //@line 3977 "src/sprites/../puun/gf/../../other/stb_image.h"
  $694 = (($693) + 1)|0; //@line 3977 "src/sprites/../puun/gf/../../other/stb_image.h"
  $j = $694; //@line 3977 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 if ((label|0) == 17) {
  $91 = (_stbi__err(7920)|0); //@line 3984 "src/sprites/../puun/gf/../../other/stb_image.h"
  $0 = $91; //@line 3984 "src/sprites/../puun/gf/../../other/stb_image.h"
  $1130 = $0; //@line 4133 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($1130|0); //@line 4133 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 else if ((label|0) == 20) {
  ___assert_fail((7936|0),(7560|0),3987,(7864|0)); //@line 3987 "src/sprites/../puun/gf/../../other/stb_image.h"
  // unreachable; //@line 3987 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 else if ((label|0) == 77) {
  ___assert_fail((7968|0),(7560|0),4040,(7864|0)); //@line 4040 "src/sprites/../puun/gf/../../other/stb_image.h"
  // unreachable; //@line 4040 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 else if ((label|0) == 145) {
  $695 = $7; //@line 4061 "src/sprites/../puun/gf/../../other/stb_image.h"
  $696 = ($695|0)<(8); //@line 4061 "src/sprites/../puun/gf/../../other/stb_image.h"
  do {
   if ($696) {
    $j = 0; //@line 4062 "src/sprites/../puun/gf/../../other/stb_image.h"
    while(1) {
     $697 = $j; //@line 4062 "src/sprites/../puun/gf/../../other/stb_image.h"
     $698 = $6; //@line 4062 "src/sprites/../puun/gf/../../other/stb_image.h"
     $699 = ($697>>>0)<($698>>>0); //@line 4062 "src/sprites/../puun/gf/../../other/stb_image.h"
     if (!($699)) {
      label = 210;
      break;
     }
     $700 = $1; //@line 4063 "src/sprites/../puun/gf/../../other/stb_image.h"
     $701 = (($700) + 12|0); //@line 4063 "src/sprites/../puun/gf/../../other/stb_image.h"
     $702 = HEAP32[$701>>2]|0; //@line 4063 "src/sprites/../puun/gf/../../other/stb_image.h"
     $703 = $stride; //@line 4063 "src/sprites/../puun/gf/../../other/stb_image.h"
     $704 = $j; //@line 4063 "src/sprites/../puun/gf/../../other/stb_image.h"
     $705 = Math_imul($703, $704)|0; //@line 4063 "src/sprites/../puun/gf/../../other/stb_image.h"
     $706 = (($702) + ($705)|0); //@line 4063 "src/sprites/../puun/gf/../../other/stb_image.h"
     $cur1 = $706; //@line 4063 "src/sprites/../puun/gf/../../other/stb_image.h"
     $707 = $1; //@line 4064 "src/sprites/../puun/gf/../../other/stb_image.h"
     $708 = (($707) + 12|0); //@line 4064 "src/sprites/../puun/gf/../../other/stb_image.h"
     $709 = HEAP32[$708>>2]|0; //@line 4064 "src/sprites/../puun/gf/../../other/stb_image.h"
     $710 = $stride; //@line 4064 "src/sprites/../puun/gf/../../other/stb_image.h"
     $711 = $j; //@line 4064 "src/sprites/../puun/gf/../../other/stb_image.h"
     $712 = Math_imul($710, $711)|0; //@line 4064 "src/sprites/../puun/gf/../../other/stb_image.h"
     $713 = (($709) + ($712)|0); //@line 4064 "src/sprites/../puun/gf/../../other/stb_image.h"
     $714 = $5; //@line 4064 "src/sprites/../puun/gf/../../other/stb_image.h"
     $715 = $4; //@line 4064 "src/sprites/../puun/gf/../../other/stb_image.h"
     $716 = Math_imul($714, $715)|0; //@line 4064 "src/sprites/../puun/gf/../../other/stb_image.h"
     $717 = (($713) + ($716)|0); //@line 4064 "src/sprites/../puun/gf/../../other/stb_image.h"
     $718 = $img_width_bytes; //@line 4064 "src/sprites/../puun/gf/../../other/stb_image.h"
     $719 = (0 - ($718))|0; //@line 4064 "src/sprites/../puun/gf/../../other/stb_image.h"
     $720 = (($717) + ($719)|0); //@line 4064 "src/sprites/../puun/gf/../../other/stb_image.h"
     $in = $720; //@line 4064 "src/sprites/../puun/gf/../../other/stb_image.h"
     $721 = $8; //@line 4067 "src/sprites/../puun/gf/../../other/stb_image.h"
     $722 = ($721|0)==(0); //@line 4067 "src/sprites/../puun/gf/../../other/stb_image.h"
     if ($722) {
      $723 = $7; //@line 4067 "src/sprites/../puun/gf/../../other/stb_image.h"
      $724 = (7440 + ($723)|0); //@line 4067 "src/sprites/../puun/gf/../../other/stb_image.h"
      $725 = HEAP8[$724>>0]|0; //@line 4067 "src/sprites/../puun/gf/../../other/stb_image.h"
      $726 = $725&255; //@line 4067 "src/sprites/../puun/gf/../../other/stb_image.h"
      $728 = $726;
     } else {
      $728 = 1;
     }
     $727 = $728&255; //@line 4067 "src/sprites/../puun/gf/../../other/stb_image.h"
     $scale = $727; //@line 4067 "src/sprites/../puun/gf/../../other/stb_image.h"
     $729 = $7; //@line 4075 "src/sprites/../puun/gf/../../other/stb_image.h"
     $730 = ($729|0)==(4); //@line 4075 "src/sprites/../puun/gf/../../other/stb_image.h"
     if ($730) {
      $731 = $5; //@line 4076 "src/sprites/../puun/gf/../../other/stb_image.h"
      $732 = $img_n; //@line 4076 "src/sprites/../puun/gf/../../other/stb_image.h"
      $733 = Math_imul($731, $732)|0; //@line 4076 "src/sprites/../puun/gf/../../other/stb_image.h"
      $k = $733; //@line 4076 "src/sprites/../puun/gf/../../other/stb_image.h"
      while(1) {
       $734 = $k; //@line 4076 "src/sprites/../puun/gf/../../other/stb_image.h"
       $735 = ($734|0)>=(2); //@line 4076 "src/sprites/../puun/gf/../../other/stb_image.h"
       if (!($735)) {
        break;
       }
       $736 = $scale; //@line 4077 "src/sprites/../puun/gf/../../other/stb_image.h"
       $737 = $736&255; //@line 4077 "src/sprites/../puun/gf/../../other/stb_image.h"
       $738 = $in; //@line 4077 "src/sprites/../puun/gf/../../other/stb_image.h"
       $739 = HEAP8[$738>>0]|0; //@line 4077 "src/sprites/../puun/gf/../../other/stb_image.h"
       $740 = $739&255; //@line 4077 "src/sprites/../puun/gf/../../other/stb_image.h"
       $741 = $740 >> 4; //@line 4077 "src/sprites/../puun/gf/../../other/stb_image.h"
       $742 = Math_imul($737, $741)|0; //@line 4077 "src/sprites/../puun/gf/../../other/stb_image.h"
       $743 = $742&255; //@line 4077 "src/sprites/../puun/gf/../../other/stb_image.h"
       $744 = $cur1; //@line 4077 "src/sprites/../puun/gf/../../other/stb_image.h"
       $745 = (($744) + 1|0); //@line 4077 "src/sprites/../puun/gf/../../other/stb_image.h"
       $cur1 = $745; //@line 4077 "src/sprites/../puun/gf/../../other/stb_image.h"
       HEAP8[$744>>0] = $743; //@line 4077 "src/sprites/../puun/gf/../../other/stb_image.h"
       $746 = $scale; //@line 4078 "src/sprites/../puun/gf/../../other/stb_image.h"
       $747 = $746&255; //@line 4078 "src/sprites/../puun/gf/../../other/stb_image.h"
       $748 = $in; //@line 4078 "src/sprites/../puun/gf/../../other/stb_image.h"
       $749 = HEAP8[$748>>0]|0; //@line 4078 "src/sprites/../puun/gf/../../other/stb_image.h"
       $750 = $749&255; //@line 4078 "src/sprites/../puun/gf/../../other/stb_image.h"
       $751 = $750 & 15; //@line 4078 "src/sprites/../puun/gf/../../other/stb_image.h"
       $752 = Math_imul($747, $751)|0; //@line 4078 "src/sprites/../puun/gf/../../other/stb_image.h"
       $753 = $752&255; //@line 4078 "src/sprites/../puun/gf/../../other/stb_image.h"
       $754 = $cur1; //@line 4078 "src/sprites/../puun/gf/../../other/stb_image.h"
       $755 = (($754) + 1|0); //@line 4078 "src/sprites/../puun/gf/../../other/stb_image.h"
       $cur1 = $755; //@line 4078 "src/sprites/../puun/gf/../../other/stb_image.h"
       HEAP8[$754>>0] = $753; //@line 4078 "src/sprites/../puun/gf/../../other/stb_image.h"
       $756 = $k; //@line 4076 "src/sprites/../puun/gf/../../other/stb_image.h"
       $757 = (($756) - 2)|0; //@line 4076 "src/sprites/../puun/gf/../../other/stb_image.h"
       $k = $757; //@line 4076 "src/sprites/../puun/gf/../../other/stb_image.h"
       $758 = $in; //@line 4076 "src/sprites/../puun/gf/../../other/stb_image.h"
       $759 = (($758) + 1|0); //@line 4076 "src/sprites/../puun/gf/../../other/stb_image.h"
       $in = $759; //@line 4076 "src/sprites/../puun/gf/../../other/stb_image.h"
      }
      $760 = $k; //@line 4080 "src/sprites/../puun/gf/../../other/stb_image.h"
      $761 = ($760|0)>(0); //@line 4080 "src/sprites/../puun/gf/../../other/stb_image.h"
      if ($761) {
       $762 = $scale; //@line 4080 "src/sprites/../puun/gf/../../other/stb_image.h"
       $763 = $762&255; //@line 4080 "src/sprites/../puun/gf/../../other/stb_image.h"
       $764 = $in; //@line 4080 "src/sprites/../puun/gf/../../other/stb_image.h"
       $765 = HEAP8[$764>>0]|0; //@line 4080 "src/sprites/../puun/gf/../../other/stb_image.h"
       $766 = $765&255; //@line 4080 "src/sprites/../puun/gf/../../other/stb_image.h"
       $767 = $766 >> 4; //@line 4080 "src/sprites/../puun/gf/../../other/stb_image.h"
       $768 = Math_imul($763, $767)|0; //@line 4080 "src/sprites/../puun/gf/../../other/stb_image.h"
       $769 = $768&255; //@line 4080 "src/sprites/../puun/gf/../../other/stb_image.h"
       $770 = $cur1; //@line 4080 "src/sprites/../puun/gf/../../other/stb_image.h"
       $771 = (($770) + 1|0); //@line 4080 "src/sprites/../puun/gf/../../other/stb_image.h"
       $cur1 = $771; //@line 4080 "src/sprites/../puun/gf/../../other/stb_image.h"
       HEAP8[$770>>0] = $769; //@line 4080 "src/sprites/../puun/gf/../../other/stb_image.h"
      }
     } else {
      $772 = $7; //@line 4081 "src/sprites/../puun/gf/../../other/stb_image.h"
      $773 = ($772|0)==(2); //@line 4081 "src/sprites/../puun/gf/../../other/stb_image.h"
      if ($773) {
       $774 = $5; //@line 4082 "src/sprites/../puun/gf/../../other/stb_image.h"
       $775 = $img_n; //@line 4082 "src/sprites/../puun/gf/../../other/stb_image.h"
       $776 = Math_imul($774, $775)|0; //@line 4082 "src/sprites/../puun/gf/../../other/stb_image.h"
       $k = $776; //@line 4082 "src/sprites/../puun/gf/../../other/stb_image.h"
       while(1) {
        $777 = $k; //@line 4082 "src/sprites/../puun/gf/../../other/stb_image.h"
        $778 = ($777|0)>=(4); //@line 4082 "src/sprites/../puun/gf/../../other/stb_image.h"
        if (!($778)) {
         break;
        }
        $779 = $scale; //@line 4083 "src/sprites/../puun/gf/../../other/stb_image.h"
        $780 = $779&255; //@line 4083 "src/sprites/../puun/gf/../../other/stb_image.h"
        $781 = $in; //@line 4083 "src/sprites/../puun/gf/../../other/stb_image.h"
        $782 = HEAP8[$781>>0]|0; //@line 4083 "src/sprites/../puun/gf/../../other/stb_image.h"
        $783 = $782&255; //@line 4083 "src/sprites/../puun/gf/../../other/stb_image.h"
        $784 = $783 >> 6; //@line 4083 "src/sprites/../puun/gf/../../other/stb_image.h"
        $785 = Math_imul($780, $784)|0; //@line 4083 "src/sprites/../puun/gf/../../other/stb_image.h"
        $786 = $785&255; //@line 4083 "src/sprites/../puun/gf/../../other/stb_image.h"
        $787 = $cur1; //@line 4083 "src/sprites/../puun/gf/../../other/stb_image.h"
        $788 = (($787) + 1|0); //@line 4083 "src/sprites/../puun/gf/../../other/stb_image.h"
        $cur1 = $788; //@line 4083 "src/sprites/../puun/gf/../../other/stb_image.h"
        HEAP8[$787>>0] = $786; //@line 4083 "src/sprites/../puun/gf/../../other/stb_image.h"
        $789 = $scale; //@line 4084 "src/sprites/../puun/gf/../../other/stb_image.h"
        $790 = $789&255; //@line 4084 "src/sprites/../puun/gf/../../other/stb_image.h"
        $791 = $in; //@line 4084 "src/sprites/../puun/gf/../../other/stb_image.h"
        $792 = HEAP8[$791>>0]|0; //@line 4084 "src/sprites/../puun/gf/../../other/stb_image.h"
        $793 = $792&255; //@line 4084 "src/sprites/../puun/gf/../../other/stb_image.h"
        $794 = $793 >> 4; //@line 4084 "src/sprites/../puun/gf/../../other/stb_image.h"
        $795 = $794 & 3; //@line 4084 "src/sprites/../puun/gf/../../other/stb_image.h"
        $796 = Math_imul($790, $795)|0; //@line 4084 "src/sprites/../puun/gf/../../other/stb_image.h"
        $797 = $796&255; //@line 4084 "src/sprites/../puun/gf/../../other/stb_image.h"
        $798 = $cur1; //@line 4084 "src/sprites/../puun/gf/../../other/stb_image.h"
        $799 = (($798) + 1|0); //@line 4084 "src/sprites/../puun/gf/../../other/stb_image.h"
        $cur1 = $799; //@line 4084 "src/sprites/../puun/gf/../../other/stb_image.h"
        HEAP8[$798>>0] = $797; //@line 4084 "src/sprites/../puun/gf/../../other/stb_image.h"
        $800 = $scale; //@line 4085 "src/sprites/../puun/gf/../../other/stb_image.h"
        $801 = $800&255; //@line 4085 "src/sprites/../puun/gf/../../other/stb_image.h"
        $802 = $in; //@line 4085 "src/sprites/../puun/gf/../../other/stb_image.h"
        $803 = HEAP8[$802>>0]|0; //@line 4085 "src/sprites/../puun/gf/../../other/stb_image.h"
        $804 = $803&255; //@line 4085 "src/sprites/../puun/gf/../../other/stb_image.h"
        $805 = $804 >> 2; //@line 4085 "src/sprites/../puun/gf/../../other/stb_image.h"
        $806 = $805 & 3; //@line 4085 "src/sprites/../puun/gf/../../other/stb_image.h"
        $807 = Math_imul($801, $806)|0; //@line 4085 "src/sprites/../puun/gf/../../other/stb_image.h"
        $808 = $807&255; //@line 4085 "src/sprites/../puun/gf/../../other/stb_image.h"
        $809 = $cur1; //@line 4085 "src/sprites/../puun/gf/../../other/stb_image.h"
        $810 = (($809) + 1|0); //@line 4085 "src/sprites/../puun/gf/../../other/stb_image.h"
        $cur1 = $810; //@line 4085 "src/sprites/../puun/gf/../../other/stb_image.h"
        HEAP8[$809>>0] = $808; //@line 4085 "src/sprites/../puun/gf/../../other/stb_image.h"
        $811 = $scale; //@line 4086 "src/sprites/../puun/gf/../../other/stb_image.h"
        $812 = $811&255; //@line 4086 "src/sprites/../puun/gf/../../other/stb_image.h"
        $813 = $in; //@line 4086 "src/sprites/../puun/gf/../../other/stb_image.h"
        $814 = HEAP8[$813>>0]|0; //@line 4086 "src/sprites/../puun/gf/../../other/stb_image.h"
        $815 = $814&255; //@line 4086 "src/sprites/../puun/gf/../../other/stb_image.h"
        $816 = $815 & 3; //@line 4086 "src/sprites/../puun/gf/../../other/stb_image.h"
        $817 = Math_imul($812, $816)|0; //@line 4086 "src/sprites/../puun/gf/../../other/stb_image.h"
        $818 = $817&255; //@line 4086 "src/sprites/../puun/gf/../../other/stb_image.h"
        $819 = $cur1; //@line 4086 "src/sprites/../puun/gf/../../other/stb_image.h"
        $820 = (($819) + 1|0); //@line 4086 "src/sprites/../puun/gf/../../other/stb_image.h"
        $cur1 = $820; //@line 4086 "src/sprites/../puun/gf/../../other/stb_image.h"
        HEAP8[$819>>0] = $818; //@line 4086 "src/sprites/../puun/gf/../../other/stb_image.h"
        $821 = $k; //@line 4082 "src/sprites/../puun/gf/../../other/stb_image.h"
        $822 = (($821) - 4)|0; //@line 4082 "src/sprites/../puun/gf/../../other/stb_image.h"
        $k = $822; //@line 4082 "src/sprites/../puun/gf/../../other/stb_image.h"
        $823 = $in; //@line 4082 "src/sprites/../puun/gf/../../other/stb_image.h"
        $824 = (($823) + 1|0); //@line 4082 "src/sprites/../puun/gf/../../other/stb_image.h"
        $in = $824; //@line 4082 "src/sprites/../puun/gf/../../other/stb_image.h"
       }
       $825 = $k; //@line 4088 "src/sprites/../puun/gf/../../other/stb_image.h"
       $826 = ($825|0)>(0); //@line 4088 "src/sprites/../puun/gf/../../other/stb_image.h"
       if ($826) {
        $827 = $scale; //@line 4088 "src/sprites/../puun/gf/../../other/stb_image.h"
        $828 = $827&255; //@line 4088 "src/sprites/../puun/gf/../../other/stb_image.h"
        $829 = $in; //@line 4088 "src/sprites/../puun/gf/../../other/stb_image.h"
        $830 = HEAP8[$829>>0]|0; //@line 4088 "src/sprites/../puun/gf/../../other/stb_image.h"
        $831 = $830&255; //@line 4088 "src/sprites/../puun/gf/../../other/stb_image.h"
        $832 = $831 >> 6; //@line 4088 "src/sprites/../puun/gf/../../other/stb_image.h"
        $833 = Math_imul($828, $832)|0; //@line 4088 "src/sprites/../puun/gf/../../other/stb_image.h"
        $834 = $833&255; //@line 4088 "src/sprites/../puun/gf/../../other/stb_image.h"
        $835 = $cur1; //@line 4088 "src/sprites/../puun/gf/../../other/stb_image.h"
        $836 = (($835) + 1|0); //@line 4088 "src/sprites/../puun/gf/../../other/stb_image.h"
        $cur1 = $836; //@line 4088 "src/sprites/../puun/gf/../../other/stb_image.h"
        HEAP8[$835>>0] = $834; //@line 4088 "src/sprites/../puun/gf/../../other/stb_image.h"
       }
       $837 = $k; //@line 4089 "src/sprites/../puun/gf/../../other/stb_image.h"
       $838 = ($837|0)>(1); //@line 4089 "src/sprites/../puun/gf/../../other/stb_image.h"
       if ($838) {
        $839 = $scale; //@line 4089 "src/sprites/../puun/gf/../../other/stb_image.h"
        $840 = $839&255; //@line 4089 "src/sprites/../puun/gf/../../other/stb_image.h"
        $841 = $in; //@line 4089 "src/sprites/../puun/gf/../../other/stb_image.h"
        $842 = HEAP8[$841>>0]|0; //@line 4089 "src/sprites/../puun/gf/../../other/stb_image.h"
        $843 = $842&255; //@line 4089 "src/sprites/../puun/gf/../../other/stb_image.h"
        $844 = $843 >> 4; //@line 4089 "src/sprites/../puun/gf/../../other/stb_image.h"
        $845 = $844 & 3; //@line 4089 "src/sprites/../puun/gf/../../other/stb_image.h"
        $846 = Math_imul($840, $845)|0; //@line 4089 "src/sprites/../puun/gf/../../other/stb_image.h"
        $847 = $846&255; //@line 4089 "src/sprites/../puun/gf/../../other/stb_image.h"
        $848 = $cur1; //@line 4089 "src/sprites/../puun/gf/../../other/stb_image.h"
        $849 = (($848) + 1|0); //@line 4089 "src/sprites/../puun/gf/../../other/stb_image.h"
        $cur1 = $849; //@line 4089 "src/sprites/../puun/gf/../../other/stb_image.h"
        HEAP8[$848>>0] = $847; //@line 4089 "src/sprites/../puun/gf/../../other/stb_image.h"
       }
       $850 = $k; //@line 4090 "src/sprites/../puun/gf/../../other/stb_image.h"
       $851 = ($850|0)>(2); //@line 4090 "src/sprites/../puun/gf/../../other/stb_image.h"
       if ($851) {
        $852 = $scale; //@line 4090 "src/sprites/../puun/gf/../../other/stb_image.h"
        $853 = $852&255; //@line 4090 "src/sprites/../puun/gf/../../other/stb_image.h"
        $854 = $in; //@line 4090 "src/sprites/../puun/gf/../../other/stb_image.h"
        $855 = HEAP8[$854>>0]|0; //@line 4090 "src/sprites/../puun/gf/../../other/stb_image.h"
        $856 = $855&255; //@line 4090 "src/sprites/../puun/gf/../../other/stb_image.h"
        $857 = $856 >> 2; //@line 4090 "src/sprites/../puun/gf/../../other/stb_image.h"
        $858 = $857 & 3; //@line 4090 "src/sprites/../puun/gf/../../other/stb_image.h"
        $859 = Math_imul($853, $858)|0; //@line 4090 "src/sprites/../puun/gf/../../other/stb_image.h"
        $860 = $859&255; //@line 4090 "src/sprites/../puun/gf/../../other/stb_image.h"
        $861 = $cur1; //@line 4090 "src/sprites/../puun/gf/../../other/stb_image.h"
        $862 = (($861) + 1|0); //@line 4090 "src/sprites/../puun/gf/../../other/stb_image.h"
        $cur1 = $862; //@line 4090 "src/sprites/../puun/gf/../../other/stb_image.h"
        HEAP8[$861>>0] = $860; //@line 4090 "src/sprites/../puun/gf/../../other/stb_image.h"
       }
      } else {
       $863 = $7; //@line 4091 "src/sprites/../puun/gf/../../other/stb_image.h"
       $864 = ($863|0)==(1); //@line 4091 "src/sprites/../puun/gf/../../other/stb_image.h"
       if ($864) {
        $865 = $5; //@line 4092 "src/sprites/../puun/gf/../../other/stb_image.h"
        $866 = $img_n; //@line 4092 "src/sprites/../puun/gf/../../other/stb_image.h"
        $867 = Math_imul($865, $866)|0; //@line 4092 "src/sprites/../puun/gf/../../other/stb_image.h"
        $k = $867; //@line 4092 "src/sprites/../puun/gf/../../other/stb_image.h"
        while(1) {
         $868 = $k; //@line 4092 "src/sprites/../puun/gf/../../other/stb_image.h"
         $869 = ($868|0)>=(8); //@line 4092 "src/sprites/../puun/gf/../../other/stb_image.h"
         if (!($869)) {
          break;
         }
         $870 = $scale; //@line 4093 "src/sprites/../puun/gf/../../other/stb_image.h"
         $871 = $870&255; //@line 4093 "src/sprites/../puun/gf/../../other/stb_image.h"
         $872 = $in; //@line 4093 "src/sprites/../puun/gf/../../other/stb_image.h"
         $873 = HEAP8[$872>>0]|0; //@line 4093 "src/sprites/../puun/gf/../../other/stb_image.h"
         $874 = $873&255; //@line 4093 "src/sprites/../puun/gf/../../other/stb_image.h"
         $875 = $874 >> 7; //@line 4093 "src/sprites/../puun/gf/../../other/stb_image.h"
         $876 = Math_imul($871, $875)|0; //@line 4093 "src/sprites/../puun/gf/../../other/stb_image.h"
         $877 = $876&255; //@line 4093 "src/sprites/../puun/gf/../../other/stb_image.h"
         $878 = $cur1; //@line 4093 "src/sprites/../puun/gf/../../other/stb_image.h"
         $879 = (($878) + 1|0); //@line 4093 "src/sprites/../puun/gf/../../other/stb_image.h"
         $cur1 = $879; //@line 4093 "src/sprites/../puun/gf/../../other/stb_image.h"
         HEAP8[$878>>0] = $877; //@line 4093 "src/sprites/../puun/gf/../../other/stb_image.h"
         $880 = $scale; //@line 4094 "src/sprites/../puun/gf/../../other/stb_image.h"
         $881 = $880&255; //@line 4094 "src/sprites/../puun/gf/../../other/stb_image.h"
         $882 = $in; //@line 4094 "src/sprites/../puun/gf/../../other/stb_image.h"
         $883 = HEAP8[$882>>0]|0; //@line 4094 "src/sprites/../puun/gf/../../other/stb_image.h"
         $884 = $883&255; //@line 4094 "src/sprites/../puun/gf/../../other/stb_image.h"
         $885 = $884 >> 6; //@line 4094 "src/sprites/../puun/gf/../../other/stb_image.h"
         $886 = $885 & 1; //@line 4094 "src/sprites/../puun/gf/../../other/stb_image.h"
         $887 = Math_imul($881, $886)|0; //@line 4094 "src/sprites/../puun/gf/../../other/stb_image.h"
         $888 = $887&255; //@line 4094 "src/sprites/../puun/gf/../../other/stb_image.h"
         $889 = $cur1; //@line 4094 "src/sprites/../puun/gf/../../other/stb_image.h"
         $890 = (($889) + 1|0); //@line 4094 "src/sprites/../puun/gf/../../other/stb_image.h"
         $cur1 = $890; //@line 4094 "src/sprites/../puun/gf/../../other/stb_image.h"
         HEAP8[$889>>0] = $888; //@line 4094 "src/sprites/../puun/gf/../../other/stb_image.h"
         $891 = $scale; //@line 4095 "src/sprites/../puun/gf/../../other/stb_image.h"
         $892 = $891&255; //@line 4095 "src/sprites/../puun/gf/../../other/stb_image.h"
         $893 = $in; //@line 4095 "src/sprites/../puun/gf/../../other/stb_image.h"
         $894 = HEAP8[$893>>0]|0; //@line 4095 "src/sprites/../puun/gf/../../other/stb_image.h"
         $895 = $894&255; //@line 4095 "src/sprites/../puun/gf/../../other/stb_image.h"
         $896 = $895 >> 5; //@line 4095 "src/sprites/../puun/gf/../../other/stb_image.h"
         $897 = $896 & 1; //@line 4095 "src/sprites/../puun/gf/../../other/stb_image.h"
         $898 = Math_imul($892, $897)|0; //@line 4095 "src/sprites/../puun/gf/../../other/stb_image.h"
         $899 = $898&255; //@line 4095 "src/sprites/../puun/gf/../../other/stb_image.h"
         $900 = $cur1; //@line 4095 "src/sprites/../puun/gf/../../other/stb_image.h"
         $901 = (($900) + 1|0); //@line 4095 "src/sprites/../puun/gf/../../other/stb_image.h"
         $cur1 = $901; //@line 4095 "src/sprites/../puun/gf/../../other/stb_image.h"
         HEAP8[$900>>0] = $899; //@line 4095 "src/sprites/../puun/gf/../../other/stb_image.h"
         $902 = $scale; //@line 4096 "src/sprites/../puun/gf/../../other/stb_image.h"
         $903 = $902&255; //@line 4096 "src/sprites/../puun/gf/../../other/stb_image.h"
         $904 = $in; //@line 4096 "src/sprites/../puun/gf/../../other/stb_image.h"
         $905 = HEAP8[$904>>0]|0; //@line 4096 "src/sprites/../puun/gf/../../other/stb_image.h"
         $906 = $905&255; //@line 4096 "src/sprites/../puun/gf/../../other/stb_image.h"
         $907 = $906 >> 4; //@line 4096 "src/sprites/../puun/gf/../../other/stb_image.h"
         $908 = $907 & 1; //@line 4096 "src/sprites/../puun/gf/../../other/stb_image.h"
         $909 = Math_imul($903, $908)|0; //@line 4096 "src/sprites/../puun/gf/../../other/stb_image.h"
         $910 = $909&255; //@line 4096 "src/sprites/../puun/gf/../../other/stb_image.h"
         $911 = $cur1; //@line 4096 "src/sprites/../puun/gf/../../other/stb_image.h"
         $912 = (($911) + 1|0); //@line 4096 "src/sprites/../puun/gf/../../other/stb_image.h"
         $cur1 = $912; //@line 4096 "src/sprites/../puun/gf/../../other/stb_image.h"
         HEAP8[$911>>0] = $910; //@line 4096 "src/sprites/../puun/gf/../../other/stb_image.h"
         $913 = $scale; //@line 4097 "src/sprites/../puun/gf/../../other/stb_image.h"
         $914 = $913&255; //@line 4097 "src/sprites/../puun/gf/../../other/stb_image.h"
         $915 = $in; //@line 4097 "src/sprites/../puun/gf/../../other/stb_image.h"
         $916 = HEAP8[$915>>0]|0; //@line 4097 "src/sprites/../puun/gf/../../other/stb_image.h"
         $917 = $916&255; //@line 4097 "src/sprites/../puun/gf/../../other/stb_image.h"
         $918 = $917 >> 3; //@line 4097 "src/sprites/../puun/gf/../../other/stb_image.h"
         $919 = $918 & 1; //@line 4097 "src/sprites/../puun/gf/../../other/stb_image.h"
         $920 = Math_imul($914, $919)|0; //@line 4097 "src/sprites/../puun/gf/../../other/stb_image.h"
         $921 = $920&255; //@line 4097 "src/sprites/../puun/gf/../../other/stb_image.h"
         $922 = $cur1; //@line 4097 "src/sprites/../puun/gf/../../other/stb_image.h"
         $923 = (($922) + 1|0); //@line 4097 "src/sprites/../puun/gf/../../other/stb_image.h"
         $cur1 = $923; //@line 4097 "src/sprites/../puun/gf/../../other/stb_image.h"
         HEAP8[$922>>0] = $921; //@line 4097 "src/sprites/../puun/gf/../../other/stb_image.h"
         $924 = $scale; //@line 4098 "src/sprites/../puun/gf/../../other/stb_image.h"
         $925 = $924&255; //@line 4098 "src/sprites/../puun/gf/../../other/stb_image.h"
         $926 = $in; //@line 4098 "src/sprites/../puun/gf/../../other/stb_image.h"
         $927 = HEAP8[$926>>0]|0; //@line 4098 "src/sprites/../puun/gf/../../other/stb_image.h"
         $928 = $927&255; //@line 4098 "src/sprites/../puun/gf/../../other/stb_image.h"
         $929 = $928 >> 2; //@line 4098 "src/sprites/../puun/gf/../../other/stb_image.h"
         $930 = $929 & 1; //@line 4098 "src/sprites/../puun/gf/../../other/stb_image.h"
         $931 = Math_imul($925, $930)|0; //@line 4098 "src/sprites/../puun/gf/../../other/stb_image.h"
         $932 = $931&255; //@line 4098 "src/sprites/../puun/gf/../../other/stb_image.h"
         $933 = $cur1; //@line 4098 "src/sprites/../puun/gf/../../other/stb_image.h"
         $934 = (($933) + 1|0); //@line 4098 "src/sprites/../puun/gf/../../other/stb_image.h"
         $cur1 = $934; //@line 4098 "src/sprites/../puun/gf/../../other/stb_image.h"
         HEAP8[$933>>0] = $932; //@line 4098 "src/sprites/../puun/gf/../../other/stb_image.h"
         $935 = $scale; //@line 4099 "src/sprites/../puun/gf/../../other/stb_image.h"
         $936 = $935&255; //@line 4099 "src/sprites/../puun/gf/../../other/stb_image.h"
         $937 = $in; //@line 4099 "src/sprites/../puun/gf/../../other/stb_image.h"
         $938 = HEAP8[$937>>0]|0; //@line 4099 "src/sprites/../puun/gf/../../other/stb_image.h"
         $939 = $938&255; //@line 4099 "src/sprites/../puun/gf/../../other/stb_image.h"
         $940 = $939 >> 1; //@line 4099 "src/sprites/../puun/gf/../../other/stb_image.h"
         $941 = $940 & 1; //@line 4099 "src/sprites/../puun/gf/../../other/stb_image.h"
         $942 = Math_imul($936, $941)|0; //@line 4099 "src/sprites/../puun/gf/../../other/stb_image.h"
         $943 = $942&255; //@line 4099 "src/sprites/../puun/gf/../../other/stb_image.h"
         $944 = $cur1; //@line 4099 "src/sprites/../puun/gf/../../other/stb_image.h"
         $945 = (($944) + 1|0); //@line 4099 "src/sprites/../puun/gf/../../other/stb_image.h"
         $cur1 = $945; //@line 4099 "src/sprites/../puun/gf/../../other/stb_image.h"
         HEAP8[$944>>0] = $943; //@line 4099 "src/sprites/../puun/gf/../../other/stb_image.h"
         $946 = $scale; //@line 4100 "src/sprites/../puun/gf/../../other/stb_image.h"
         $947 = $946&255; //@line 4100 "src/sprites/../puun/gf/../../other/stb_image.h"
         $948 = $in; //@line 4100 "src/sprites/../puun/gf/../../other/stb_image.h"
         $949 = HEAP8[$948>>0]|0; //@line 4100 "src/sprites/../puun/gf/../../other/stb_image.h"
         $950 = $949&255; //@line 4100 "src/sprites/../puun/gf/../../other/stb_image.h"
         $951 = $950 & 1; //@line 4100 "src/sprites/../puun/gf/../../other/stb_image.h"
         $952 = Math_imul($947, $951)|0; //@line 4100 "src/sprites/../puun/gf/../../other/stb_image.h"
         $953 = $952&255; //@line 4100 "src/sprites/../puun/gf/../../other/stb_image.h"
         $954 = $cur1; //@line 4100 "src/sprites/../puun/gf/../../other/stb_image.h"
         $955 = (($954) + 1|0); //@line 4100 "src/sprites/../puun/gf/../../other/stb_image.h"
         $cur1 = $955; //@line 4100 "src/sprites/../puun/gf/../../other/stb_image.h"
         HEAP8[$954>>0] = $953; //@line 4100 "src/sprites/../puun/gf/../../other/stb_image.h"
         $956 = $k; //@line 4092 "src/sprites/../puun/gf/../../other/stb_image.h"
         $957 = (($956) - 8)|0; //@line 4092 "src/sprites/../puun/gf/../../other/stb_image.h"
         $k = $957; //@line 4092 "src/sprites/../puun/gf/../../other/stb_image.h"
         $958 = $in; //@line 4092 "src/sprites/../puun/gf/../../other/stb_image.h"
         $959 = (($958) + 1|0); //@line 4092 "src/sprites/../puun/gf/../../other/stb_image.h"
         $in = $959; //@line 4092 "src/sprites/../puun/gf/../../other/stb_image.h"
        }
        $960 = $k; //@line 4102 "src/sprites/../puun/gf/../../other/stb_image.h"
        $961 = ($960|0)>(0); //@line 4102 "src/sprites/../puun/gf/../../other/stb_image.h"
        if ($961) {
         $962 = $scale; //@line 4102 "src/sprites/../puun/gf/../../other/stb_image.h"
         $963 = $962&255; //@line 4102 "src/sprites/../puun/gf/../../other/stb_image.h"
         $964 = $in; //@line 4102 "src/sprites/../puun/gf/../../other/stb_image.h"
         $965 = HEAP8[$964>>0]|0; //@line 4102 "src/sprites/../puun/gf/../../other/stb_image.h"
         $966 = $965&255; //@line 4102 "src/sprites/../puun/gf/../../other/stb_image.h"
         $967 = $966 >> 7; //@line 4102 "src/sprites/../puun/gf/../../other/stb_image.h"
         $968 = Math_imul($963, $967)|0; //@line 4102 "src/sprites/../puun/gf/../../other/stb_image.h"
         $969 = $968&255; //@line 4102 "src/sprites/../puun/gf/../../other/stb_image.h"
         $970 = $cur1; //@line 4102 "src/sprites/../puun/gf/../../other/stb_image.h"
         $971 = (($970) + 1|0); //@line 4102 "src/sprites/../puun/gf/../../other/stb_image.h"
         $cur1 = $971; //@line 4102 "src/sprites/../puun/gf/../../other/stb_image.h"
         HEAP8[$970>>0] = $969; //@line 4102 "src/sprites/../puun/gf/../../other/stb_image.h"
        }
        $972 = $k; //@line 4103 "src/sprites/../puun/gf/../../other/stb_image.h"
        $973 = ($972|0)>(1); //@line 4103 "src/sprites/../puun/gf/../../other/stb_image.h"
        if ($973) {
         $974 = $scale; //@line 4103 "src/sprites/../puun/gf/../../other/stb_image.h"
         $975 = $974&255; //@line 4103 "src/sprites/../puun/gf/../../other/stb_image.h"
         $976 = $in; //@line 4103 "src/sprites/../puun/gf/../../other/stb_image.h"
         $977 = HEAP8[$976>>0]|0; //@line 4103 "src/sprites/../puun/gf/../../other/stb_image.h"
         $978 = $977&255; //@line 4103 "src/sprites/../puun/gf/../../other/stb_image.h"
         $979 = $978 >> 6; //@line 4103 "src/sprites/../puun/gf/../../other/stb_image.h"
         $980 = $979 & 1; //@line 4103 "src/sprites/../puun/gf/../../other/stb_image.h"
         $981 = Math_imul($975, $980)|0; //@line 4103 "src/sprites/../puun/gf/../../other/stb_image.h"
         $982 = $981&255; //@line 4103 "src/sprites/../puun/gf/../../other/stb_image.h"
         $983 = $cur1; //@line 4103 "src/sprites/../puun/gf/../../other/stb_image.h"
         $984 = (($983) + 1|0); //@line 4103 "src/sprites/../puun/gf/../../other/stb_image.h"
         $cur1 = $984; //@line 4103 "src/sprites/../puun/gf/../../other/stb_image.h"
         HEAP8[$983>>0] = $982; //@line 4103 "src/sprites/../puun/gf/../../other/stb_image.h"
        }
        $985 = $k; //@line 4104 "src/sprites/../puun/gf/../../other/stb_image.h"
        $986 = ($985|0)>(2); //@line 4104 "src/sprites/../puun/gf/../../other/stb_image.h"
        if ($986) {
         $987 = $scale; //@line 4104 "src/sprites/../puun/gf/../../other/stb_image.h"
         $988 = $987&255; //@line 4104 "src/sprites/../puun/gf/../../other/stb_image.h"
         $989 = $in; //@line 4104 "src/sprites/../puun/gf/../../other/stb_image.h"
         $990 = HEAP8[$989>>0]|0; //@line 4104 "src/sprites/../puun/gf/../../other/stb_image.h"
         $991 = $990&255; //@line 4104 "src/sprites/../puun/gf/../../other/stb_image.h"
         $992 = $991 >> 5; //@line 4104 "src/sprites/../puun/gf/../../other/stb_image.h"
         $993 = $992 & 1; //@line 4104 "src/sprites/../puun/gf/../../other/stb_image.h"
         $994 = Math_imul($988, $993)|0; //@line 4104 "src/sprites/../puun/gf/../../other/stb_image.h"
         $995 = $994&255; //@line 4104 "src/sprites/../puun/gf/../../other/stb_image.h"
         $996 = $cur1; //@line 4104 "src/sprites/../puun/gf/../../other/stb_image.h"
         $997 = (($996) + 1|0); //@line 4104 "src/sprites/../puun/gf/../../other/stb_image.h"
         $cur1 = $997; //@line 4104 "src/sprites/../puun/gf/../../other/stb_image.h"
         HEAP8[$996>>0] = $995; //@line 4104 "src/sprites/../puun/gf/../../other/stb_image.h"
        }
        $998 = $k; //@line 4105 "src/sprites/../puun/gf/../../other/stb_image.h"
        $999 = ($998|0)>(3); //@line 4105 "src/sprites/../puun/gf/../../other/stb_image.h"
        if ($999) {
         $1000 = $scale; //@line 4105 "src/sprites/../puun/gf/../../other/stb_image.h"
         $1001 = $1000&255; //@line 4105 "src/sprites/../puun/gf/../../other/stb_image.h"
         $1002 = $in; //@line 4105 "src/sprites/../puun/gf/../../other/stb_image.h"
         $1003 = HEAP8[$1002>>0]|0; //@line 4105 "src/sprites/../puun/gf/../../other/stb_image.h"
         $1004 = $1003&255; //@line 4105 "src/sprites/../puun/gf/../../other/stb_image.h"
         $1005 = $1004 >> 4; //@line 4105 "src/sprites/../puun/gf/../../other/stb_image.h"
         $1006 = $1005 & 1; //@line 4105 "src/sprites/../puun/gf/../../other/stb_image.h"
         $1007 = Math_imul($1001, $1006)|0; //@line 4105 "src/sprites/../puun/gf/../../other/stb_image.h"
         $1008 = $1007&255; //@line 4105 "src/sprites/../puun/gf/../../other/stb_image.h"
         $1009 = $cur1; //@line 4105 "src/sprites/../puun/gf/../../other/stb_image.h"
         $1010 = (($1009) + 1|0); //@line 4105 "src/sprites/../puun/gf/../../other/stb_image.h"
         $cur1 = $1010; //@line 4105 "src/sprites/../puun/gf/../../other/stb_image.h"
         HEAP8[$1009>>0] = $1008; //@line 4105 "src/sprites/../puun/gf/../../other/stb_image.h"
        }
        $1011 = $k; //@line 4106 "src/sprites/../puun/gf/../../other/stb_image.h"
        $1012 = ($1011|0)>(4); //@line 4106 "src/sprites/../puun/gf/../../other/stb_image.h"
        if ($1012) {
         $1013 = $scale; //@line 4106 "src/sprites/../puun/gf/../../other/stb_image.h"
         $1014 = $1013&255; //@line 4106 "src/sprites/../puun/gf/../../other/stb_image.h"
         $1015 = $in; //@line 4106 "src/sprites/../puun/gf/../../other/stb_image.h"
         $1016 = HEAP8[$1015>>0]|0; //@line 4106 "src/sprites/../puun/gf/../../other/stb_image.h"
         $1017 = $1016&255; //@line 4106 "src/sprites/../puun/gf/../../other/stb_image.h"
         $1018 = $1017 >> 3; //@line 4106 "src/sprites/../puun/gf/../../other/stb_image.h"
         $1019 = $1018 & 1; //@line 4106 "src/sprites/../puun/gf/../../other/stb_image.h"
         $1020 = Math_imul($1014, $1019)|0; //@line 4106 "src/sprites/../puun/gf/../../other/stb_image.h"
         $1021 = $1020&255; //@line 4106 "src/sprites/../puun/gf/../../other/stb_image.h"
         $1022 = $cur1; //@line 4106 "src/sprites/../puun/gf/../../other/stb_image.h"
         $1023 = (($1022) + 1|0); //@line 4106 "src/sprites/../puun/gf/../../other/stb_image.h"
         $cur1 = $1023; //@line 4106 "src/sprites/../puun/gf/../../other/stb_image.h"
         HEAP8[$1022>>0] = $1021; //@line 4106 "src/sprites/../puun/gf/../../other/stb_image.h"
        }
        $1024 = $k; //@line 4107 "src/sprites/../puun/gf/../../other/stb_image.h"
        $1025 = ($1024|0)>(5); //@line 4107 "src/sprites/../puun/gf/../../other/stb_image.h"
        if ($1025) {
         $1026 = $scale; //@line 4107 "src/sprites/../puun/gf/../../other/stb_image.h"
         $1027 = $1026&255; //@line 4107 "src/sprites/../puun/gf/../../other/stb_image.h"
         $1028 = $in; //@line 4107 "src/sprites/../puun/gf/../../other/stb_image.h"
         $1029 = HEAP8[$1028>>0]|0; //@line 4107 "src/sprites/../puun/gf/../../other/stb_image.h"
         $1030 = $1029&255; //@line 4107 "src/sprites/../puun/gf/../../other/stb_image.h"
         $1031 = $1030 >> 2; //@line 4107 "src/sprites/../puun/gf/../../other/stb_image.h"
         $1032 = $1031 & 1; //@line 4107 "src/sprites/../puun/gf/../../other/stb_image.h"
         $1033 = Math_imul($1027, $1032)|0; //@line 4107 "src/sprites/../puun/gf/../../other/stb_image.h"
         $1034 = $1033&255; //@line 4107 "src/sprites/../puun/gf/../../other/stb_image.h"
         $1035 = $cur1; //@line 4107 "src/sprites/../puun/gf/../../other/stb_image.h"
         $1036 = (($1035) + 1|0); //@line 4107 "src/sprites/../puun/gf/../../other/stb_image.h"
         $cur1 = $1036; //@line 4107 "src/sprites/../puun/gf/../../other/stb_image.h"
         HEAP8[$1035>>0] = $1034; //@line 4107 "src/sprites/../puun/gf/../../other/stb_image.h"
        }
        $1037 = $k; //@line 4108 "src/sprites/../puun/gf/../../other/stb_image.h"
        $1038 = ($1037|0)>(6); //@line 4108 "src/sprites/../puun/gf/../../other/stb_image.h"
        if ($1038) {
         $1039 = $scale; //@line 4108 "src/sprites/../puun/gf/../../other/stb_image.h"
         $1040 = $1039&255; //@line 4108 "src/sprites/../puun/gf/../../other/stb_image.h"
         $1041 = $in; //@line 4108 "src/sprites/../puun/gf/../../other/stb_image.h"
         $1042 = HEAP8[$1041>>0]|0; //@line 4108 "src/sprites/../puun/gf/../../other/stb_image.h"
         $1043 = $1042&255; //@line 4108 "src/sprites/../puun/gf/../../other/stb_image.h"
         $1044 = $1043 >> 1; //@line 4108 "src/sprites/../puun/gf/../../other/stb_image.h"
         $1045 = $1044 & 1; //@line 4108 "src/sprites/../puun/gf/../../other/stb_image.h"
         $1046 = Math_imul($1040, $1045)|0; //@line 4108 "src/sprites/../puun/gf/../../other/stb_image.h"
         $1047 = $1046&255; //@line 4108 "src/sprites/../puun/gf/../../other/stb_image.h"
         $1048 = $cur1; //@line 4108 "src/sprites/../puun/gf/../../other/stb_image.h"
         $1049 = (($1048) + 1|0); //@line 4108 "src/sprites/../puun/gf/../../other/stb_image.h"
         $cur1 = $1049; //@line 4108 "src/sprites/../puun/gf/../../other/stb_image.h"
         HEAP8[$1048>>0] = $1047; //@line 4108 "src/sprites/../puun/gf/../../other/stb_image.h"
        }
       }
      }
     }
     $1050 = $img_n; //@line 4110 "src/sprites/../puun/gf/../../other/stb_image.h"
     $1051 = $4; //@line 4110 "src/sprites/../puun/gf/../../other/stb_image.h"
     $1052 = ($1050|0)!=($1051|0); //@line 4110 "src/sprites/../puun/gf/../../other/stb_image.h"
     if ($1052) {
      $1053 = $1; //@line 4112 "src/sprites/../puun/gf/../../other/stb_image.h"
      $1054 = (($1053) + 12|0); //@line 4112 "src/sprites/../puun/gf/../../other/stb_image.h"
      $1055 = HEAP32[$1054>>2]|0; //@line 4112 "src/sprites/../puun/gf/../../other/stb_image.h"
      $1056 = $stride; //@line 4112 "src/sprites/../puun/gf/../../other/stb_image.h"
      $1057 = $j; //@line 4112 "src/sprites/../puun/gf/../../other/stb_image.h"
      $1058 = Math_imul($1056, $1057)|0; //@line 4112 "src/sprites/../puun/gf/../../other/stb_image.h"
      $1059 = (($1055) + ($1058)|0); //@line 4112 "src/sprites/../puun/gf/../../other/stb_image.h"
      $cur2 = $1059; //@line 4112 "src/sprites/../puun/gf/../../other/stb_image.h"
      $1060 = $img_n; //@line 4114 "src/sprites/../puun/gf/../../other/stb_image.h"
      $1061 = ($1060|0)==(1); //@line 4114 "src/sprites/../puun/gf/../../other/stb_image.h"
      if ($1061) {
       $1062 = $5; //@line 4115 "src/sprites/../puun/gf/../../other/stb_image.h"
       $1063 = (($1062) - 1)|0; //@line 4115 "src/sprites/../puun/gf/../../other/stb_image.h"
       $i3 = $1063; //@line 4115 "src/sprites/../puun/gf/../../other/stb_image.h"
       while(1) {
        $1064 = $i3; //@line 4115 "src/sprites/../puun/gf/../../other/stb_image.h"
        $1065 = ($1064|0)>=(0); //@line 4115 "src/sprites/../puun/gf/../../other/stb_image.h"
        if (!($1065)) {
         break;
        }
        $1066 = $i3; //@line 4116 "src/sprites/../puun/gf/../../other/stb_image.h"
        $1067 = $1066<<1; //@line 4116 "src/sprites/../puun/gf/../../other/stb_image.h"
        $1068 = (($1067) + 1)|0; //@line 4116 "src/sprites/../puun/gf/../../other/stb_image.h"
        $1069 = $cur2; //@line 4116 "src/sprites/../puun/gf/../../other/stb_image.h"
        $1070 = (($1069) + ($1068)|0); //@line 4116 "src/sprites/../puun/gf/../../other/stb_image.h"
        HEAP8[$1070>>0] = -1; //@line 4116 "src/sprites/../puun/gf/../../other/stb_image.h"
        $1071 = $i3; //@line 4117 "src/sprites/../puun/gf/../../other/stb_image.h"
        $1072 = $cur2; //@line 4117 "src/sprites/../puun/gf/../../other/stb_image.h"
        $1073 = (($1072) + ($1071)|0); //@line 4117 "src/sprites/../puun/gf/../../other/stb_image.h"
        $1074 = HEAP8[$1073>>0]|0; //@line 4117 "src/sprites/../puun/gf/../../other/stb_image.h"
        $1075 = $i3; //@line 4117 "src/sprites/../puun/gf/../../other/stb_image.h"
        $1076 = $1075<<1; //@line 4117 "src/sprites/../puun/gf/../../other/stb_image.h"
        $1077 = (($1076) + 0)|0; //@line 4117 "src/sprites/../puun/gf/../../other/stb_image.h"
        $1078 = $cur2; //@line 4117 "src/sprites/../puun/gf/../../other/stb_image.h"
        $1079 = (($1078) + ($1077)|0); //@line 4117 "src/sprites/../puun/gf/../../other/stb_image.h"
        HEAP8[$1079>>0] = $1074; //@line 4117 "src/sprites/../puun/gf/../../other/stb_image.h"
        $1080 = $i3; //@line 4115 "src/sprites/../puun/gf/../../other/stb_image.h"
        $1081 = (($1080) + -1)|0; //@line 4115 "src/sprites/../puun/gf/../../other/stb_image.h"
        $i3 = $1081; //@line 4115 "src/sprites/../puun/gf/../../other/stb_image.h"
       }
      } else {
       $1082 = $img_n; //@line 4120 "src/sprites/../puun/gf/../../other/stb_image.h"
       $1083 = ($1082|0)==(3); //@line 4120 "src/sprites/../puun/gf/../../other/stb_image.h"
       if (!($1083)) {
        label = 201;
        break;
       }
       $1084 = $5; //@line 4121 "src/sprites/../puun/gf/../../other/stb_image.h"
       $1085 = (($1084) - 1)|0; //@line 4121 "src/sprites/../puun/gf/../../other/stb_image.h"
       $i3 = $1085; //@line 4121 "src/sprites/../puun/gf/../../other/stb_image.h"
       while(1) {
        $1086 = $i3; //@line 4121 "src/sprites/../puun/gf/../../other/stb_image.h"
        $1087 = ($1086|0)>=(0); //@line 4121 "src/sprites/../puun/gf/../../other/stb_image.h"
        if (!($1087)) {
         break;
        }
        $1088 = $i3; //@line 4122 "src/sprites/../puun/gf/../../other/stb_image.h"
        $1089 = $1088<<2; //@line 4122 "src/sprites/../puun/gf/../../other/stb_image.h"
        $1090 = (($1089) + 3)|0; //@line 4122 "src/sprites/../puun/gf/../../other/stb_image.h"
        $1091 = $cur2; //@line 4122 "src/sprites/../puun/gf/../../other/stb_image.h"
        $1092 = (($1091) + ($1090)|0); //@line 4122 "src/sprites/../puun/gf/../../other/stb_image.h"
        HEAP8[$1092>>0] = -1; //@line 4122 "src/sprites/../puun/gf/../../other/stb_image.h"
        $1093 = $i3; //@line 4123 "src/sprites/../puun/gf/../../other/stb_image.h"
        $1094 = ($1093*3)|0; //@line 4123 "src/sprites/../puun/gf/../../other/stb_image.h"
        $1095 = (($1094) + 2)|0; //@line 4123 "src/sprites/../puun/gf/../../other/stb_image.h"
        $1096 = $cur2; //@line 4123 "src/sprites/../puun/gf/../../other/stb_image.h"
        $1097 = (($1096) + ($1095)|0); //@line 4123 "src/sprites/../puun/gf/../../other/stb_image.h"
        $1098 = HEAP8[$1097>>0]|0; //@line 4123 "src/sprites/../puun/gf/../../other/stb_image.h"
        $1099 = $i3; //@line 4123 "src/sprites/../puun/gf/../../other/stb_image.h"
        $1100 = $1099<<2; //@line 4123 "src/sprites/../puun/gf/../../other/stb_image.h"
        $1101 = (($1100) + 2)|0; //@line 4123 "src/sprites/../puun/gf/../../other/stb_image.h"
        $1102 = $cur2; //@line 4123 "src/sprites/../puun/gf/../../other/stb_image.h"
        $1103 = (($1102) + ($1101)|0); //@line 4123 "src/sprites/../puun/gf/../../other/stb_image.h"
        HEAP8[$1103>>0] = $1098; //@line 4123 "src/sprites/../puun/gf/../../other/stb_image.h"
        $1104 = $i3; //@line 4124 "src/sprites/../puun/gf/../../other/stb_image.h"
        $1105 = ($1104*3)|0; //@line 4124 "src/sprites/../puun/gf/../../other/stb_image.h"
        $1106 = (($1105) + 1)|0; //@line 4124 "src/sprites/../puun/gf/../../other/stb_image.h"
        $1107 = $cur2; //@line 4124 "src/sprites/../puun/gf/../../other/stb_image.h"
        $1108 = (($1107) + ($1106)|0); //@line 4124 "src/sprites/../puun/gf/../../other/stb_image.h"
        $1109 = HEAP8[$1108>>0]|0; //@line 4124 "src/sprites/../puun/gf/../../other/stb_image.h"
        $1110 = $i3; //@line 4124 "src/sprites/../puun/gf/../../other/stb_image.h"
        $1111 = $1110<<2; //@line 4124 "src/sprites/../puun/gf/../../other/stb_image.h"
        $1112 = (($1111) + 1)|0; //@line 4124 "src/sprites/../puun/gf/../../other/stb_image.h"
        $1113 = $cur2; //@line 4124 "src/sprites/../puun/gf/../../other/stb_image.h"
        $1114 = (($1113) + ($1112)|0); //@line 4124 "src/sprites/../puun/gf/../../other/stb_image.h"
        HEAP8[$1114>>0] = $1109; //@line 4124 "src/sprites/../puun/gf/../../other/stb_image.h"
        $1115 = $i3; //@line 4125 "src/sprites/../puun/gf/../../other/stb_image.h"
        $1116 = ($1115*3)|0; //@line 4125 "src/sprites/../puun/gf/../../other/stb_image.h"
        $1117 = (($1116) + 0)|0; //@line 4125 "src/sprites/../puun/gf/../../other/stb_image.h"
        $1118 = $cur2; //@line 4125 "src/sprites/../puun/gf/../../other/stb_image.h"
        $1119 = (($1118) + ($1117)|0); //@line 4125 "src/sprites/../puun/gf/../../other/stb_image.h"
        $1120 = HEAP8[$1119>>0]|0; //@line 4125 "src/sprites/../puun/gf/../../other/stb_image.h"
        $1121 = $i3; //@line 4125 "src/sprites/../puun/gf/../../other/stb_image.h"
        $1122 = $1121<<2; //@line 4125 "src/sprites/../puun/gf/../../other/stb_image.h"
        $1123 = (($1122) + 0)|0; //@line 4125 "src/sprites/../puun/gf/../../other/stb_image.h"
        $1124 = $cur2; //@line 4125 "src/sprites/../puun/gf/../../other/stb_image.h"
        $1125 = (($1124) + ($1123)|0); //@line 4125 "src/sprites/../puun/gf/../../other/stb_image.h"
        HEAP8[$1125>>0] = $1120; //@line 4125 "src/sprites/../puun/gf/../../other/stb_image.h"
        $1126 = $i3; //@line 4121 "src/sprites/../puun/gf/../../other/stb_image.h"
        $1127 = (($1126) + -1)|0; //@line 4121 "src/sprites/../puun/gf/../../other/stb_image.h"
        $i3 = $1127; //@line 4121 "src/sprites/../puun/gf/../../other/stb_image.h"
       }
      }
     }
     $1128 = $j; //@line 4062 "src/sprites/../puun/gf/../../other/stb_image.h"
     $1129 = (($1128) + 1)|0; //@line 4062 "src/sprites/../puun/gf/../../other/stb_image.h"
     $j = $1129; //@line 4062 "src/sprites/../puun/gf/../../other/stb_image.h"
    }
    if ((label|0) == 201) {
     ___assert_fail((7992|0),(7560|0),4120,(7864|0)); //@line 4120 "src/sprites/../puun/gf/../../other/stb_image.h"
     // unreachable; //@line 4120 "src/sprites/../puun/gf/../../other/stb_image.h"
    }
    else if ((label|0) == 210) {
     break;
    }
   }
  } while(0);
  $0 = 1; //@line 4132 "src/sprites/../puun/gf/../../other/stb_image.h"
  $1130 = $0; //@line 4133 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($1130|0); //@line 4133 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 return (0)|0;
}
function _stbi__paeth($a,$b,$c) {
 $a = $a|0;
 $b = $b|0;
 $c = $c|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $p = 0, $pa = 0, $pb = 0, $pc = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $a;
 $2 = $b;
 $3 = $c;
 $4 = $1; //@line 3945 "src/sprites/../puun/gf/../../other/stb_image.h"
 $5 = $2; //@line 3945 "src/sprites/../puun/gf/../../other/stb_image.h"
 $6 = (($4) + ($5))|0; //@line 3945 "src/sprites/../puun/gf/../../other/stb_image.h"
 $7 = $3; //@line 3945 "src/sprites/../puun/gf/../../other/stb_image.h"
 $8 = (($6) - ($7))|0; //@line 3945 "src/sprites/../puun/gf/../../other/stb_image.h"
 $p = $8; //@line 3945 "src/sprites/../puun/gf/../../other/stb_image.h"
 $9 = $p; //@line 3946 "src/sprites/../puun/gf/../../other/stb_image.h"
 $10 = $1; //@line 3946 "src/sprites/../puun/gf/../../other/stb_image.h"
 $11 = (($9) - ($10))|0; //@line 3946 "src/sprites/../puun/gf/../../other/stb_image.h"
 $12 = (Math_abs(($11|0))|0); //@line 3946 "src/sprites/../puun/gf/../../other/stb_image.h"
 $pa = $12; //@line 3946 "src/sprites/../puun/gf/../../other/stb_image.h"
 $13 = $p; //@line 3947 "src/sprites/../puun/gf/../../other/stb_image.h"
 $14 = $2; //@line 3947 "src/sprites/../puun/gf/../../other/stb_image.h"
 $15 = (($13) - ($14))|0; //@line 3947 "src/sprites/../puun/gf/../../other/stb_image.h"
 $16 = (Math_abs(($15|0))|0); //@line 3947 "src/sprites/../puun/gf/../../other/stb_image.h"
 $pb = $16; //@line 3947 "src/sprites/../puun/gf/../../other/stb_image.h"
 $17 = $p; //@line 3948 "src/sprites/../puun/gf/../../other/stb_image.h"
 $18 = $3; //@line 3948 "src/sprites/../puun/gf/../../other/stb_image.h"
 $19 = (($17) - ($18))|0; //@line 3948 "src/sprites/../puun/gf/../../other/stb_image.h"
 $20 = (Math_abs(($19|0))|0); //@line 3948 "src/sprites/../puun/gf/../../other/stb_image.h"
 $pc = $20; //@line 3948 "src/sprites/../puun/gf/../../other/stb_image.h"
 $21 = $pa; //@line 3949 "src/sprites/../puun/gf/../../other/stb_image.h"
 $22 = $pb; //@line 3949 "src/sprites/../puun/gf/../../other/stb_image.h"
 $23 = ($21|0)<=($22|0); //@line 3949 "src/sprites/../puun/gf/../../other/stb_image.h"
 if ($23) {
  $24 = $pa; //@line 3949 "src/sprites/../puun/gf/../../other/stb_image.h"
  $25 = $pc; //@line 3949 "src/sprites/../puun/gf/../../other/stb_image.h"
  $26 = ($24|0)<=($25|0); //@line 3949 "src/sprites/../puun/gf/../../other/stb_image.h"
  if ($26) {
   $27 = $1; //@line 3949 "src/sprites/../puun/gf/../../other/stb_image.h"
   $0 = $27; //@line 3949 "src/sprites/../puun/gf/../../other/stb_image.h"
   $33 = $0; //@line 3952 "src/sprites/../puun/gf/../../other/stb_image.h"
   STACKTOP = sp;return ($33|0); //@line 3952 "src/sprites/../puun/gf/../../other/stb_image.h"
  }
 }
 $28 = $pb; //@line 3950 "src/sprites/../puun/gf/../../other/stb_image.h"
 $29 = $pc; //@line 3950 "src/sprites/../puun/gf/../../other/stb_image.h"
 $30 = ($28|0)<=($29|0); //@line 3950 "src/sprites/../puun/gf/../../other/stb_image.h"
 if ($30) {
  $31 = $2; //@line 3950 "src/sprites/../puun/gf/../../other/stb_image.h"
  $0 = $31; //@line 3950 "src/sprites/../puun/gf/../../other/stb_image.h"
  $33 = $0; //@line 3952 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($33|0); //@line 3952 "src/sprites/../puun/gf/../../other/stb_image.h"
 } else {
  $32 = $3; //@line 3951 "src/sprites/../puun/gf/../../other/stb_image.h"
  $0 = $32; //@line 3951 "src/sprites/../puun/gf/../../other/stb_image.h"
  $33 = $0; //@line 3952 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($33|0); //@line 3952 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 return (0)|0;
}
function _stbi__getn($s,$buffer,$n) {
 $s = $s|0;
 $buffer = $buffer|0;
 $n = $n|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $8 = 0, $9 = 0, $blen = 0, $count = 0, $res = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $s;
 $2 = $buffer;
 $3 = $n;
 $4 = $1; //@line 1253 "src/sprites/../puun/gf/../../other/stb_image.h"
 $5 = (($4) + 16|0); //@line 1253 "src/sprites/../puun/gf/../../other/stb_image.h"
 $6 = HEAP32[$5>>2]|0; //@line 1253 "src/sprites/../puun/gf/../../other/stb_image.h"
 $7 = ($6|0)!=(0|0); //@line 1253 "src/sprites/../puun/gf/../../other/stb_image.h"
 do {
  if ($7) {
   $8 = $1; //@line 1254 "src/sprites/../puun/gf/../../other/stb_image.h"
   $9 = (($8) + 172|0); //@line 1254 "src/sprites/../puun/gf/../../other/stb_image.h"
   $10 = HEAP32[$9>>2]|0; //@line 1254 "src/sprites/../puun/gf/../../other/stb_image.h"
   $11 = $1; //@line 1254 "src/sprites/../puun/gf/../../other/stb_image.h"
   $12 = (($11) + 168|0); //@line 1254 "src/sprites/../puun/gf/../../other/stb_image.h"
   $13 = HEAP32[$12>>2]|0; //@line 1254 "src/sprites/../puun/gf/../../other/stb_image.h"
   $14 = $10; //@line 1254 "src/sprites/../puun/gf/../../other/stb_image.h"
   $15 = $13; //@line 1254 "src/sprites/../puun/gf/../../other/stb_image.h"
   $16 = (($14) - ($15))|0; //@line 1254 "src/sprites/../puun/gf/../../other/stb_image.h"
   $blen = $16; //@line 1254 "src/sprites/../puun/gf/../../other/stb_image.h"
   $17 = $blen; //@line 1255 "src/sprites/../puun/gf/../../other/stb_image.h"
   $18 = $3; //@line 1255 "src/sprites/../puun/gf/../../other/stb_image.h"
   $19 = ($17|0)<($18|0); //@line 1255 "src/sprites/../puun/gf/../../other/stb_image.h"
   if (!($19)) {
    break;
   }
   $20 = $2; //@line 1258 "src/sprites/../puun/gf/../../other/stb_image.h"
   $21 = $1; //@line 1258 "src/sprites/../puun/gf/../../other/stb_image.h"
   $22 = (($21) + 168|0); //@line 1258 "src/sprites/../puun/gf/../../other/stb_image.h"
   $23 = HEAP32[$22>>2]|0; //@line 1258 "src/sprites/../puun/gf/../../other/stb_image.h"
   $24 = $blen; //@line 1258 "src/sprites/../puun/gf/../../other/stb_image.h"
   _memcpy(($20|0),($23|0),($24|0))|0; //@line 1258 "src/sprites/../puun/gf/../../other/stb_image.h"
   $25 = $1; //@line 1260 "src/sprites/../puun/gf/../../other/stb_image.h"
   $26 = (($25) + 16|0); //@line 1260 "src/sprites/../puun/gf/../../other/stb_image.h"
   $27 = HEAP32[$26>>2]|0; //@line 1260 "src/sprites/../puun/gf/../../other/stb_image.h"
   $28 = $1; //@line 1260 "src/sprites/../puun/gf/../../other/stb_image.h"
   $29 = (($28) + 28|0); //@line 1260 "src/sprites/../puun/gf/../../other/stb_image.h"
   $30 = HEAP32[$29>>2]|0; //@line 1260 "src/sprites/../puun/gf/../../other/stb_image.h"
   $31 = $2; //@line 1260 "src/sprites/../puun/gf/../../other/stb_image.h"
   $32 = $blen; //@line 1260 "src/sprites/../puun/gf/../../other/stb_image.h"
   $33 = (($31) + ($32)|0); //@line 1260 "src/sprites/../puun/gf/../../other/stb_image.h"
   $34 = $3; //@line 1260 "src/sprites/../puun/gf/../../other/stb_image.h"
   $35 = $blen; //@line 1260 "src/sprites/../puun/gf/../../other/stb_image.h"
   $36 = (($34) - ($35))|0; //@line 1260 "src/sprites/../puun/gf/../../other/stb_image.h"
   $37 = (FUNCTION_TABLE_iiii[$27 & 1]($30,$33,$36)|0); //@line 1260 "src/sprites/../puun/gf/../../other/stb_image.h"
   $count = $37; //@line 1260 "src/sprites/../puun/gf/../../other/stb_image.h"
   $38 = $count; //@line 1261 "src/sprites/../puun/gf/../../other/stb_image.h"
   $39 = $3; //@line 1261 "src/sprites/../puun/gf/../../other/stb_image.h"
   $40 = $blen; //@line 1261 "src/sprites/../puun/gf/../../other/stb_image.h"
   $41 = (($39) - ($40))|0; //@line 1261 "src/sprites/../puun/gf/../../other/stb_image.h"
   $42 = ($38|0)==($41|0); //@line 1261 "src/sprites/../puun/gf/../../other/stb_image.h"
   $43 = $42&1; //@line 1261 "src/sprites/../puun/gf/../../other/stb_image.h"
   $res = $43; //@line 1261 "src/sprites/../puun/gf/../../other/stb_image.h"
   $44 = $1; //@line 1262 "src/sprites/../puun/gf/../../other/stb_image.h"
   $45 = (($44) + 172|0); //@line 1262 "src/sprites/../puun/gf/../../other/stb_image.h"
   $46 = HEAP32[$45>>2]|0; //@line 1262 "src/sprites/../puun/gf/../../other/stb_image.h"
   $47 = $1; //@line 1262 "src/sprites/../puun/gf/../../other/stb_image.h"
   $48 = (($47) + 168|0); //@line 1262 "src/sprites/../puun/gf/../../other/stb_image.h"
   HEAP32[$48>>2] = $46; //@line 1262 "src/sprites/../puun/gf/../../other/stb_image.h"
   $49 = $res; //@line 1263 "src/sprites/../puun/gf/../../other/stb_image.h"
   $0 = $49; //@line 1263 "src/sprites/../puun/gf/../../other/stb_image.h"
   $69 = $0; //@line 1273 "src/sprites/../puun/gf/../../other/stb_image.h"
   STACKTOP = sp;return ($69|0); //@line 1273 "src/sprites/../puun/gf/../../other/stb_image.h"
  }
 } while(0);
 $50 = $1; //@line 1267 "src/sprites/../puun/gf/../../other/stb_image.h"
 $51 = (($50) + 168|0); //@line 1267 "src/sprites/../puun/gf/../../other/stb_image.h"
 $52 = HEAP32[$51>>2]|0; //@line 1267 "src/sprites/../puun/gf/../../other/stb_image.h"
 $53 = $3; //@line 1267 "src/sprites/../puun/gf/../../other/stb_image.h"
 $54 = (($52) + ($53)|0); //@line 1267 "src/sprites/../puun/gf/../../other/stb_image.h"
 $55 = $1; //@line 1267 "src/sprites/../puun/gf/../../other/stb_image.h"
 $56 = (($55) + 172|0); //@line 1267 "src/sprites/../puun/gf/../../other/stb_image.h"
 $57 = HEAP32[$56>>2]|0; //@line 1267 "src/sprites/../puun/gf/../../other/stb_image.h"
 $58 = ($54>>>0)<=($57>>>0); //@line 1267 "src/sprites/../puun/gf/../../other/stb_image.h"
 if ($58) {
  $59 = $2; //@line 1268 "src/sprites/../puun/gf/../../other/stb_image.h"
  $60 = $1; //@line 1268 "src/sprites/../puun/gf/../../other/stb_image.h"
  $61 = (($60) + 168|0); //@line 1268 "src/sprites/../puun/gf/../../other/stb_image.h"
  $62 = HEAP32[$61>>2]|0; //@line 1268 "src/sprites/../puun/gf/../../other/stb_image.h"
  $63 = $3; //@line 1268 "src/sprites/../puun/gf/../../other/stb_image.h"
  _memcpy(($59|0),($62|0),($63|0))|0; //@line 1268 "src/sprites/../puun/gf/../../other/stb_image.h"
  $64 = $3; //@line 1269 "src/sprites/../puun/gf/../../other/stb_image.h"
  $65 = $1; //@line 1269 "src/sprites/../puun/gf/../../other/stb_image.h"
  $66 = (($65) + 168|0); //@line 1269 "src/sprites/../puun/gf/../../other/stb_image.h"
  $67 = HEAP32[$66>>2]|0; //@line 1269 "src/sprites/../puun/gf/../../other/stb_image.h"
  $68 = (($67) + ($64)|0); //@line 1269 "src/sprites/../puun/gf/../../other/stb_image.h"
  HEAP32[$66>>2] = $68; //@line 1269 "src/sprites/../puun/gf/../../other/stb_image.h"
  $0 = 1; //@line 1270 "src/sprites/../puun/gf/../../other/stb_image.h"
  $69 = $0; //@line 1273 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($69|0); //@line 1273 "src/sprites/../puun/gf/../../other/stb_image.h"
 } else {
  $0 = 0; //@line 1272 "src/sprites/../puun/gf/../../other/stb_image.h"
  $69 = $0; //@line 1273 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($69|0); //@line 1273 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 return (0)|0;
}
function _stbi__get_chunk_header($agg$result,$s) {
 $agg$result = $agg$result|0;
 $s = $s|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $c = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $c = sp;
 $0 = $s;
 $1 = $0; //@line 3902 "src/sprites/../puun/gf/../../other/stb_image.h"
 $2 = (_stbi__get32be($1)|0); //@line 3902 "src/sprites/../puun/gf/../../other/stb_image.h"
 HEAP32[$c>>2] = $2; //@line 3902 "src/sprites/../puun/gf/../../other/stb_image.h"
 $3 = $0; //@line 3903 "src/sprites/../puun/gf/../../other/stb_image.h"
 $4 = (_stbi__get32be($3)|0); //@line 3903 "src/sprites/../puun/gf/../../other/stb_image.h"
 $5 = (($c) + 4|0); //@line 3903 "src/sprites/../puun/gf/../../other/stb_image.h"
 HEAP32[$5>>2] = $4; //@line 3903 "src/sprites/../puun/gf/../../other/stb_image.h"
 ;HEAP32[$agg$result+0>>2]=HEAP32[$c+0>>2]|0;HEAP32[$agg$result+4>>2]=HEAP32[$c+4>>2]|0; //@line 3904 "src/sprites/../puun/gf/../../other/stb_image.h"
 STACKTOP = sp;return; //@line 3904 "src/sprites/../puun/gf/../../other/stb_image.h"
}
function _stbi__check_png_header($s) {
 $s = $s|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $s;
 $i = 0; //@line 3911 "src/sprites/../puun/gf/../../other/stb_image.h"
 while(1) {
  $2 = $i; //@line 3911 "src/sprites/../puun/gf/../../other/stb_image.h"
  $3 = ($2|0)<(8); //@line 3911 "src/sprites/../puun/gf/../../other/stb_image.h"
  if (!($3)) {
   label = 7;
   break;
  }
  $4 = $1; //@line 3912 "src/sprites/../puun/gf/../../other/stb_image.h"
  $5 = (_stbi__get8($4)|0); //@line 3912 "src/sprites/../puun/gf/../../other/stb_image.h"
  $6 = $5&255; //@line 3912 "src/sprites/../puun/gf/../../other/stb_image.h"
  $7 = $i; //@line 3912 "src/sprites/../puun/gf/../../other/stb_image.h"
  $8 = (8008 + ($7)|0); //@line 3912 "src/sprites/../puun/gf/../../other/stb_image.h"
  $9 = HEAP8[$8>>0]|0; //@line 3912 "src/sprites/../puun/gf/../../other/stb_image.h"
  $10 = $9&255; //@line 3912 "src/sprites/../puun/gf/../../other/stb_image.h"
  $11 = ($6|0)!=($10|0); //@line 3912 "src/sprites/../puun/gf/../../other/stb_image.h"
  if ($11) {
   label = 4;
   break;
  }
  $13 = $i; //@line 3911 "src/sprites/../puun/gf/../../other/stb_image.h"
  $14 = (($13) + 1)|0; //@line 3911 "src/sprites/../puun/gf/../../other/stb_image.h"
  $i = $14; //@line 3911 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 if ((label|0) == 4) {
  $12 = (_stbi__err(8016)|0); //@line 3912 "src/sprites/../puun/gf/../../other/stb_image.h"
  $0 = $12; //@line 3912 "src/sprites/../puun/gf/../../other/stb_image.h"
  $15 = $0; //@line 3914 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($15|0); //@line 3914 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 else if ((label|0) == 7) {
  $0 = 1; //@line 3913 "src/sprites/../puun/gf/../../other/stb_image.h"
  $15 = $0; //@line 3914 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($15|0); //@line 3914 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 return (0)|0;
}
function _stbi__decode_jpeg_header($z,$scan) {
 $z = $z|0;
 $scan = $scan|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $m = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $z;
 $2 = $scan;
 $3 = $1; //@line 2774 "src/sprites/../puun/gf/../../other/stb_image.h"
 $4 = (($3) + 18116|0); //@line 2774 "src/sprites/../puun/gf/../../other/stb_image.h"
 HEAP8[$4>>0] = -1; //@line 2774 "src/sprites/../puun/gf/../../other/stb_image.h"
 $5 = $1; //@line 2775 "src/sprites/../puun/gf/../../other/stb_image.h"
 $6 = (_stbi__get_marker($5)|0); //@line 2775 "src/sprites/../puun/gf/../../other/stb_image.h"
 $7 = $6&255; //@line 2775 "src/sprites/../puun/gf/../../other/stb_image.h"
 $m = $7; //@line 2775 "src/sprites/../puun/gf/../../other/stb_image.h"
 $8 = $m; //@line 2776 "src/sprites/../puun/gf/../../other/stb_image.h"
 $9 = ($8|0)==(216); //@line 2776 "src/sprites/../puun/gf/../../other/stb_image.h"
 if (!($9)) {
  $10 = (_stbi__err(8032)|0); //@line 2776 "src/sprites/../puun/gf/../../other/stb_image.h"
  $0 = $10; //@line 2776 "src/sprites/../puun/gf/../../other/stb_image.h"
  $50 = $0; //@line 2791 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($50|0); //@line 2791 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $11 = $2; //@line 2777 "src/sprites/../puun/gf/../../other/stb_image.h"
 $12 = ($11|0)==(1); //@line 2777 "src/sprites/../puun/gf/../../other/stb_image.h"
 if ($12) {
  $0 = 1; //@line 2777 "src/sprites/../puun/gf/../../other/stb_image.h"
  $50 = $0; //@line 2791 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($50|0); //@line 2791 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $13 = $1; //@line 2778 "src/sprites/../puun/gf/../../other/stb_image.h"
 $14 = (_stbi__get_marker($13)|0); //@line 2778 "src/sprites/../puun/gf/../../other/stb_image.h"
 $15 = $14&255; //@line 2778 "src/sprites/../puun/gf/../../other/stb_image.h"
 $m = $15; //@line 2778 "src/sprites/../puun/gf/../../other/stb_image.h"
 L9: while(1) {
  $16 = $m; //@line 2779 "src/sprites/../puun/gf/../../other/stb_image.h"
  $17 = ($16|0)==(192); //@line 2779 "src/sprites/../puun/gf/../../other/stb_image.h"
  if ($17) {
   $23 = 1;
  } else {
   $18 = $m; //@line 2779 "src/sprites/../puun/gf/../../other/stb_image.h"
   $19 = ($18|0)==(193); //@line 2779 "src/sprites/../puun/gf/../../other/stb_image.h"
   if ($19) {
    $23 = 1;
   } else {
    $20 = $m; //@line 2779 "src/sprites/../puun/gf/../../other/stb_image.h"
    $21 = ($20|0)==(194); //@line 2779 "src/sprites/../puun/gf/../../other/stb_image.h"
    $23 = $21;
   }
  }
  $22 = $23 ^ 1; //@line 2779 "src/sprites/../puun/gf/../../other/stb_image.h"
  if (!($22)) {
   label = 18;
   break;
  }
  $24 = $1; //@line 2780 "src/sprites/../puun/gf/../../other/stb_image.h"
  $25 = $m; //@line 2780 "src/sprites/../puun/gf/../../other/stb_image.h"
  $26 = (_stbi__process_marker($24,$25)|0); //@line 2780 "src/sprites/../puun/gf/../../other/stb_image.h"
  $27 = ($26|0)!=(0); //@line 2780 "src/sprites/../puun/gf/../../other/stb_image.h"
  if (!($27)) {
   label = 11;
   break;
  }
  $28 = $1; //@line 2781 "src/sprites/../puun/gf/../../other/stb_image.h"
  $29 = (_stbi__get_marker($28)|0); //@line 2781 "src/sprites/../puun/gf/../../other/stb_image.h"
  $30 = $29&255; //@line 2781 "src/sprites/../puun/gf/../../other/stb_image.h"
  $m = $30; //@line 2781 "src/sprites/../puun/gf/../../other/stb_image.h"
  while(1) {
   $31 = $m; //@line 2782 "src/sprites/../puun/gf/../../other/stb_image.h"
   $32 = ($31|0)==(255); //@line 2782 "src/sprites/../puun/gf/../../other/stb_image.h"
   if (!($32)) {
    break;
   }
   $33 = $1; //@line 2784 "src/sprites/../puun/gf/../../other/stb_image.h"
   $34 = HEAP32[$33>>2]|0; //@line 2784 "src/sprites/../puun/gf/../../other/stb_image.h"
   $35 = (_stbi__at_eof($34)|0); //@line 2784 "src/sprites/../puun/gf/../../other/stb_image.h"
   $36 = ($35|0)!=(0); //@line 2784 "src/sprites/../puun/gf/../../other/stb_image.h"
   if ($36) {
    label = 15;
    break L9;
   }
   $38 = $1; //@line 2785 "src/sprites/../puun/gf/../../other/stb_image.h"
   $39 = (_stbi__get_marker($38)|0); //@line 2785 "src/sprites/../puun/gf/../../other/stb_image.h"
   $40 = $39&255; //@line 2785 "src/sprites/../puun/gf/../../other/stb_image.h"
   $m = $40; //@line 2785 "src/sprites/../puun/gf/../../other/stb_image.h"
  }
 }
 if ((label|0) == 11) {
  $0 = 0; //@line 2780 "src/sprites/../puun/gf/../../other/stb_image.h"
  $50 = $0; //@line 2791 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($50|0); //@line 2791 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 else if ((label|0) == 15) {
  $37 = (_stbi__err(8040)|0); //@line 2784 "src/sprites/../puun/gf/../../other/stb_image.h"
  $0 = $37; //@line 2784 "src/sprites/../puun/gf/../../other/stb_image.h"
  $50 = $0; //@line 2791 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($50|0); //@line 2791 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 else if ((label|0) == 18) {
  $41 = $m; //@line 2788 "src/sprites/../puun/gf/../../other/stb_image.h"
  $42 = ($41|0)==(194); //@line 2788 "src/sprites/../puun/gf/../../other/stb_image.h"
  $43 = $42&1; //@line 2788 "src/sprites/../puun/gf/../../other/stb_image.h"
  $44 = $1; //@line 2788 "src/sprites/../puun/gf/../../other/stb_image.h"
  $45 = (($44) + 18124|0); //@line 2788 "src/sprites/../puun/gf/../../other/stb_image.h"
  HEAP32[$45>>2] = $43; //@line 2788 "src/sprites/../puun/gf/../../other/stb_image.h"
  $46 = $1; //@line 2789 "src/sprites/../puun/gf/../../other/stb_image.h"
  $47 = $2; //@line 2789 "src/sprites/../puun/gf/../../other/stb_image.h"
  $48 = (_stbi__process_frame_header($46,$47)|0); //@line 2789 "src/sprites/../puun/gf/../../other/stb_image.h"
  $49 = ($48|0)!=(0); //@line 2789 "src/sprites/../puun/gf/../../other/stb_image.h"
  if ($49) {
   $0 = 1; //@line 2790 "src/sprites/../puun/gf/../../other/stb_image.h"
   $50 = $0; //@line 2791 "src/sprites/../puun/gf/../../other/stb_image.h"
   STACKTOP = sp;return ($50|0); //@line 2791 "src/sprites/../puun/gf/../../other/stb_image.h"
  } else {
   $0 = 0; //@line 2789 "src/sprites/../puun/gf/../../other/stb_image.h"
   $50 = $0; //@line 2791 "src/sprites/../puun/gf/../../other/stb_image.h"
   STACKTOP = sp;return ($50|0); //@line 2791 "src/sprites/../puun/gf/../../other/stb_image.h"
  }
 }
 return (0)|0;
}
function _stbi__process_frame_header($z,$scan) {
 $z = $z|0;
 $scan = $scan|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0;
 var $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0;
 var $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0;
 var $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0;
 var $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0;
 var $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0;
 var $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0;
 var $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0;
 var $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0;
 var $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0;
 var $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0;
 var $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0;
 var $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0;
 var $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0;
 var $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0;
 var $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0;
 var $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0;
 var $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0;
 var $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $Lf = 0, $c = 0, $h_max = 0, $i = 0, $p = 0, $q = 0, $s = 0, $v_max = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $z;
 $2 = $scan;
 $3 = $1; //@line 2682 "src/sprites/../puun/gf/../../other/stb_image.h"
 $4 = HEAP32[$3>>2]|0; //@line 2682 "src/sprites/../puun/gf/../../other/stb_image.h"
 $s = $4; //@line 2682 "src/sprites/../puun/gf/../../other/stb_image.h"
 $h_max = 1; //@line 2683 "src/sprites/../puun/gf/../../other/stb_image.h"
 $v_max = 1; //@line 2683 "src/sprites/../puun/gf/../../other/stb_image.h"
 $5 = $s; //@line 2684 "src/sprites/../puun/gf/../../other/stb_image.h"
 $6 = (_stbi__get16be($5)|0); //@line 2684 "src/sprites/../puun/gf/../../other/stb_image.h"
 $Lf = $6; //@line 2684 "src/sprites/../puun/gf/../../other/stb_image.h"
 $7 = $Lf; //@line 2684 "src/sprites/../puun/gf/../../other/stb_image.h"
 $8 = ($7|0)<(11); //@line 2684 "src/sprites/../puun/gf/../../other/stb_image.h"
 if ($8) {
  $9 = (_stbi__err(8048)|0); //@line 2684 "src/sprites/../puun/gf/../../other/stb_image.h"
  $0 = $9; //@line 2684 "src/sprites/../puun/gf/../../other/stb_image.h"
  $469 = $0; //@line 2760 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($469|0); //@line 2760 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $10 = $s; //@line 2685 "src/sprites/../puun/gf/../../other/stb_image.h"
 $11 = (_stbi__get8($10)|0); //@line 2685 "src/sprites/../puun/gf/../../other/stb_image.h"
 $12 = $11&255; //@line 2685 "src/sprites/../puun/gf/../../other/stb_image.h"
 $p = $12; //@line 2685 "src/sprites/../puun/gf/../../other/stb_image.h"
 $13 = $p; //@line 2685 "src/sprites/../puun/gf/../../other/stb_image.h"
 $14 = ($13|0)!=(8); //@line 2685 "src/sprites/../puun/gf/../../other/stb_image.h"
 if ($14) {
  $15 = (_stbi__err(8064)|0); //@line 2685 "src/sprites/../puun/gf/../../other/stb_image.h"
  $0 = $15; //@line 2685 "src/sprites/../puun/gf/../../other/stb_image.h"
  $469 = $0; //@line 2760 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($469|0); //@line 2760 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $16 = $s; //@line 2686 "src/sprites/../puun/gf/../../other/stb_image.h"
 $17 = (_stbi__get16be($16)|0); //@line 2686 "src/sprites/../puun/gf/../../other/stb_image.h"
 $18 = $s; //@line 2686 "src/sprites/../puun/gf/../../other/stb_image.h"
 $19 = (($18) + 4|0); //@line 2686 "src/sprites/../puun/gf/../../other/stb_image.h"
 HEAP32[$19>>2] = $17; //@line 2686 "src/sprites/../puun/gf/../../other/stb_image.h"
 $20 = $s; //@line 2686 "src/sprites/../puun/gf/../../other/stb_image.h"
 $21 = (($20) + 4|0); //@line 2686 "src/sprites/../puun/gf/../../other/stb_image.h"
 $22 = HEAP32[$21>>2]|0; //@line 2686 "src/sprites/../puun/gf/../../other/stb_image.h"
 $23 = ($22|0)==(0); //@line 2686 "src/sprites/../puun/gf/../../other/stb_image.h"
 if ($23) {
  $24 = (_stbi__err(8080)|0); //@line 2686 "src/sprites/../puun/gf/../../other/stb_image.h"
  $0 = $24; //@line 2686 "src/sprites/../puun/gf/../../other/stb_image.h"
  $469 = $0; //@line 2760 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($469|0); //@line 2760 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $25 = $s; //@line 2687 "src/sprites/../puun/gf/../../other/stb_image.h"
 $26 = (_stbi__get16be($25)|0); //@line 2687 "src/sprites/../puun/gf/../../other/stb_image.h"
 $27 = $s; //@line 2687 "src/sprites/../puun/gf/../../other/stb_image.h"
 HEAP32[$27>>2] = $26; //@line 2687 "src/sprites/../puun/gf/../../other/stb_image.h"
 $28 = $s; //@line 2687 "src/sprites/../puun/gf/../../other/stb_image.h"
 $29 = HEAP32[$28>>2]|0; //@line 2687 "src/sprites/../puun/gf/../../other/stb_image.h"
 $30 = ($29|0)==(0); //@line 2687 "src/sprites/../puun/gf/../../other/stb_image.h"
 if ($30) {
  $31 = (_stbi__err(8104)|0); //@line 2687 "src/sprites/../puun/gf/../../other/stb_image.h"
  $0 = $31; //@line 2687 "src/sprites/../puun/gf/../../other/stb_image.h"
  $469 = $0; //@line 2760 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($469|0); //@line 2760 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $32 = $s; //@line 2688 "src/sprites/../puun/gf/../../other/stb_image.h"
 $33 = (_stbi__get8($32)|0); //@line 2688 "src/sprites/../puun/gf/../../other/stb_image.h"
 $34 = $33&255; //@line 2688 "src/sprites/../puun/gf/../../other/stb_image.h"
 $c = $34; //@line 2688 "src/sprites/../puun/gf/../../other/stb_image.h"
 $35 = $c; //@line 2689 "src/sprites/../puun/gf/../../other/stb_image.h"
 $36 = ($35|0)!=(3); //@line 2689 "src/sprites/../puun/gf/../../other/stb_image.h"
 if ($36) {
  $37 = $c; //@line 2689 "src/sprites/../puun/gf/../../other/stb_image.h"
  $38 = ($37|0)!=(1); //@line 2689 "src/sprites/../puun/gf/../../other/stb_image.h"
  if ($38) {
   $39 = (_stbi__err(8112)|0); //@line 2689 "src/sprites/../puun/gf/../../other/stb_image.h"
   $0 = $39; //@line 2689 "src/sprites/../puun/gf/../../other/stb_image.h"
   $469 = $0; //@line 2760 "src/sprites/../puun/gf/../../other/stb_image.h"
   STACKTOP = sp;return ($469|0); //@line 2760 "src/sprites/../puun/gf/../../other/stb_image.h"
  }
 }
 $40 = $c; //@line 2690 "src/sprites/../puun/gf/../../other/stb_image.h"
 $41 = $s; //@line 2690 "src/sprites/../puun/gf/../../other/stb_image.h"
 $42 = (($41) + 8|0); //@line 2690 "src/sprites/../puun/gf/../../other/stb_image.h"
 HEAP32[$42>>2] = $40; //@line 2690 "src/sprites/../puun/gf/../../other/stb_image.h"
 $i = 0; //@line 2691 "src/sprites/../puun/gf/../../other/stb_image.h"
 while(1) {
  $43 = $i; //@line 2691 "src/sprites/../puun/gf/../../other/stb_image.h"
  $44 = $c; //@line 2691 "src/sprites/../puun/gf/../../other/stb_image.h"
  $45 = ($43|0)<($44|0); //@line 2691 "src/sprites/../puun/gf/../../other/stb_image.h"
  if (!($45)) {
   break;
  }
  $46 = $i; //@line 2692 "src/sprites/../puun/gf/../../other/stb_image.h"
  $47 = $1; //@line 2692 "src/sprites/../puun/gf/../../other/stb_image.h"
  $48 = (($47) + 17820|0); //@line 2692 "src/sprites/../puun/gf/../../other/stb_image.h"
  $49 = (($48) + (($46*72)|0)|0); //@line 2692 "src/sprites/../puun/gf/../../other/stb_image.h"
  $50 = (($49) + 44|0); //@line 2692 "src/sprites/../puun/gf/../../other/stb_image.h"
  HEAP32[$50>>2] = 0; //@line 2692 "src/sprites/../puun/gf/../../other/stb_image.h"
  $51 = $i; //@line 2693 "src/sprites/../puun/gf/../../other/stb_image.h"
  $52 = $1; //@line 2693 "src/sprites/../puun/gf/../../other/stb_image.h"
  $53 = (($52) + 17820|0); //@line 2693 "src/sprites/../puun/gf/../../other/stb_image.h"
  $54 = (($53) + (($51*72)|0)|0); //@line 2693 "src/sprites/../puun/gf/../../other/stb_image.h"
  $55 = (($54) + 56|0); //@line 2693 "src/sprites/../puun/gf/../../other/stb_image.h"
  HEAP32[$55>>2] = 0; //@line 2693 "src/sprites/../puun/gf/../../other/stb_image.h"
  $56 = $i; //@line 2691 "src/sprites/../puun/gf/../../other/stb_image.h"
  $57 = (($56) + 1)|0; //@line 2691 "src/sprites/../puun/gf/../../other/stb_image.h"
  $i = $57; //@line 2691 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $58 = $Lf; //@line 2696 "src/sprites/../puun/gf/../../other/stb_image.h"
 $59 = $s; //@line 2696 "src/sprites/../puun/gf/../../other/stb_image.h"
 $60 = (($59) + 8|0); //@line 2696 "src/sprites/../puun/gf/../../other/stb_image.h"
 $61 = HEAP32[$60>>2]|0; //@line 2696 "src/sprites/../puun/gf/../../other/stb_image.h"
 $62 = ($61*3)|0; //@line 2696 "src/sprites/../puun/gf/../../other/stb_image.h"
 $63 = (8 + ($62))|0; //@line 2696 "src/sprites/../puun/gf/../../other/stb_image.h"
 $64 = ($58|0)!=($63|0); //@line 2696 "src/sprites/../puun/gf/../../other/stb_image.h"
 if ($64) {
  $65 = (_stbi__err(8048)|0); //@line 2696 "src/sprites/../puun/gf/../../other/stb_image.h"
  $0 = $65; //@line 2696 "src/sprites/../puun/gf/../../other/stb_image.h"
  $469 = $0; //@line 2760 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($469|0); //@line 2760 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $i = 0; //@line 2698 "src/sprites/../puun/gf/../../other/stb_image.h"
 while(1) {
  $66 = $i; //@line 2698 "src/sprites/../puun/gf/../../other/stb_image.h"
  $67 = $s; //@line 2698 "src/sprites/../puun/gf/../../other/stb_image.h"
  $68 = (($67) + 8|0); //@line 2698 "src/sprites/../puun/gf/../../other/stb_image.h"
  $69 = HEAP32[$68>>2]|0; //@line 2698 "src/sprites/../puun/gf/../../other/stb_image.h"
  $70 = ($66|0)<($69|0); //@line 2698 "src/sprites/../puun/gf/../../other/stb_image.h"
  if (!($70)) {
   label = 34;
   break;
  }
  $71 = $s; //@line 2699 "src/sprites/../puun/gf/../../other/stb_image.h"
  $72 = (_stbi__get8($71)|0); //@line 2699 "src/sprites/../puun/gf/../../other/stb_image.h"
  $73 = $72&255; //@line 2699 "src/sprites/../puun/gf/../../other/stb_image.h"
  $74 = $i; //@line 2699 "src/sprites/../puun/gf/../../other/stb_image.h"
  $75 = $1; //@line 2699 "src/sprites/../puun/gf/../../other/stb_image.h"
  $76 = (($75) + 17820|0); //@line 2699 "src/sprites/../puun/gf/../../other/stb_image.h"
  $77 = (($76) + (($74*72)|0)|0); //@line 2699 "src/sprites/../puun/gf/../../other/stb_image.h"
  HEAP32[$77>>2] = $73; //@line 2699 "src/sprites/../puun/gf/../../other/stb_image.h"
  $78 = $i; //@line 2700 "src/sprites/../puun/gf/../../other/stb_image.h"
  $79 = $1; //@line 2700 "src/sprites/../puun/gf/../../other/stb_image.h"
  $80 = (($79) + 17820|0); //@line 2700 "src/sprites/../puun/gf/../../other/stb_image.h"
  $81 = (($80) + (($78*72)|0)|0); //@line 2700 "src/sprites/../puun/gf/../../other/stb_image.h"
  $82 = HEAP32[$81>>2]|0; //@line 2700 "src/sprites/../puun/gf/../../other/stb_image.h"
  $83 = $i; //@line 2700 "src/sprites/../puun/gf/../../other/stb_image.h"
  $84 = (($83) + 1)|0; //@line 2700 "src/sprites/../puun/gf/../../other/stb_image.h"
  $85 = ($82|0)!=($84|0); //@line 2700 "src/sprites/../puun/gf/../../other/stb_image.h"
  if ($85) {
   $86 = $i; //@line 2701 "src/sprites/../puun/gf/../../other/stb_image.h"
   $87 = $1; //@line 2701 "src/sprites/../puun/gf/../../other/stb_image.h"
   $88 = (($87) + 17820|0); //@line 2701 "src/sprites/../puun/gf/../../other/stb_image.h"
   $89 = (($88) + (($86*72)|0)|0); //@line 2701 "src/sprites/../puun/gf/../../other/stb_image.h"
   $90 = HEAP32[$89>>2]|0; //@line 2701 "src/sprites/../puun/gf/../../other/stb_image.h"
   $91 = $i; //@line 2701 "src/sprites/../puun/gf/../../other/stb_image.h"
   $92 = ($90|0)!=($91|0); //@line 2701 "src/sprites/../puun/gf/../../other/stb_image.h"
   if ($92) {
    label = 22;
    break;
   }
  }
  $94 = $s; //@line 2703 "src/sprites/../puun/gf/../../other/stb_image.h"
  $95 = (_stbi__get8($94)|0); //@line 2703 "src/sprites/../puun/gf/../../other/stb_image.h"
  $96 = $95&255; //@line 2703 "src/sprites/../puun/gf/../../other/stb_image.h"
  $q = $96; //@line 2703 "src/sprites/../puun/gf/../../other/stb_image.h"
  $97 = $q; //@line 2704 "src/sprites/../puun/gf/../../other/stb_image.h"
  $98 = $97 >> 4; //@line 2704 "src/sprites/../puun/gf/../../other/stb_image.h"
  $99 = $i; //@line 2704 "src/sprites/../puun/gf/../../other/stb_image.h"
  $100 = $1; //@line 2704 "src/sprites/../puun/gf/../../other/stb_image.h"
  $101 = (($100) + 17820|0); //@line 2704 "src/sprites/../puun/gf/../../other/stb_image.h"
  $102 = (($101) + (($99*72)|0)|0); //@line 2704 "src/sprites/../puun/gf/../../other/stb_image.h"
  $103 = (($102) + 4|0); //@line 2704 "src/sprites/../puun/gf/../../other/stb_image.h"
  HEAP32[$103>>2] = $98; //@line 2704 "src/sprites/../puun/gf/../../other/stb_image.h"
  $104 = $i; //@line 2704 "src/sprites/../puun/gf/../../other/stb_image.h"
  $105 = $1; //@line 2704 "src/sprites/../puun/gf/../../other/stb_image.h"
  $106 = (($105) + 17820|0); //@line 2704 "src/sprites/../puun/gf/../../other/stb_image.h"
  $107 = (($106) + (($104*72)|0)|0); //@line 2704 "src/sprites/../puun/gf/../../other/stb_image.h"
  $108 = (($107) + 4|0); //@line 2704 "src/sprites/../puun/gf/../../other/stb_image.h"
  $109 = HEAP32[$108>>2]|0; //@line 2704 "src/sprites/../puun/gf/../../other/stb_image.h"
  $110 = ($109|0)!=(0); //@line 2704 "src/sprites/../puun/gf/../../other/stb_image.h"
  if (!($110)) {
   label = 26;
   break;
  }
  $111 = $i; //@line 2704 "src/sprites/../puun/gf/../../other/stb_image.h"
  $112 = $1; //@line 2704 "src/sprites/../puun/gf/../../other/stb_image.h"
  $113 = (($112) + 17820|0); //@line 2704 "src/sprites/../puun/gf/../../other/stb_image.h"
  $114 = (($113) + (($111*72)|0)|0); //@line 2704 "src/sprites/../puun/gf/../../other/stb_image.h"
  $115 = (($114) + 4|0); //@line 2704 "src/sprites/../puun/gf/../../other/stb_image.h"
  $116 = HEAP32[$115>>2]|0; //@line 2704 "src/sprites/../puun/gf/../../other/stb_image.h"
  $117 = ($116|0)>(4); //@line 2704 "src/sprites/../puun/gf/../../other/stb_image.h"
  if ($117) {
   label = 26;
   break;
  }
  $119 = $q; //@line 2705 "src/sprites/../puun/gf/../../other/stb_image.h"
  $120 = $119 & 15; //@line 2705 "src/sprites/../puun/gf/../../other/stb_image.h"
  $121 = $i; //@line 2705 "src/sprites/../puun/gf/../../other/stb_image.h"
  $122 = $1; //@line 2705 "src/sprites/../puun/gf/../../other/stb_image.h"
  $123 = (($122) + 17820|0); //@line 2705 "src/sprites/../puun/gf/../../other/stb_image.h"
  $124 = (($123) + (($121*72)|0)|0); //@line 2705 "src/sprites/../puun/gf/../../other/stb_image.h"
  $125 = (($124) + 8|0); //@line 2705 "src/sprites/../puun/gf/../../other/stb_image.h"
  HEAP32[$125>>2] = $120; //@line 2705 "src/sprites/../puun/gf/../../other/stb_image.h"
  $126 = $i; //@line 2705 "src/sprites/../puun/gf/../../other/stb_image.h"
  $127 = $1; //@line 2705 "src/sprites/../puun/gf/../../other/stb_image.h"
  $128 = (($127) + 17820|0); //@line 2705 "src/sprites/../puun/gf/../../other/stb_image.h"
  $129 = (($128) + (($126*72)|0)|0); //@line 2705 "src/sprites/../puun/gf/../../other/stb_image.h"
  $130 = (($129) + 8|0); //@line 2705 "src/sprites/../puun/gf/../../other/stb_image.h"
  $131 = HEAP32[$130>>2]|0; //@line 2705 "src/sprites/../puun/gf/../../other/stb_image.h"
  $132 = ($131|0)!=(0); //@line 2705 "src/sprites/../puun/gf/../../other/stb_image.h"
  if (!($132)) {
   label = 29;
   break;
  }
  $133 = $i; //@line 2705 "src/sprites/../puun/gf/../../other/stb_image.h"
  $134 = $1; //@line 2705 "src/sprites/../puun/gf/../../other/stb_image.h"
  $135 = (($134) + 17820|0); //@line 2705 "src/sprites/../puun/gf/../../other/stb_image.h"
  $136 = (($135) + (($133*72)|0)|0); //@line 2705 "src/sprites/../puun/gf/../../other/stb_image.h"
  $137 = (($136) + 8|0); //@line 2705 "src/sprites/../puun/gf/../../other/stb_image.h"
  $138 = HEAP32[$137>>2]|0; //@line 2705 "src/sprites/../puun/gf/../../other/stb_image.h"
  $139 = ($138|0)>(4); //@line 2705 "src/sprites/../puun/gf/../../other/stb_image.h"
  if ($139) {
   label = 29;
   break;
  }
  $141 = $s; //@line 2706 "src/sprites/../puun/gf/../../other/stb_image.h"
  $142 = (_stbi__get8($141)|0); //@line 2706 "src/sprites/../puun/gf/../../other/stb_image.h"
  $143 = $142&255; //@line 2706 "src/sprites/../puun/gf/../../other/stb_image.h"
  $144 = $i; //@line 2706 "src/sprites/../puun/gf/../../other/stb_image.h"
  $145 = $1; //@line 2706 "src/sprites/../puun/gf/../../other/stb_image.h"
  $146 = (($145) + 17820|0); //@line 2706 "src/sprites/../puun/gf/../../other/stb_image.h"
  $147 = (($146) + (($144*72)|0)|0); //@line 2706 "src/sprites/../puun/gf/../../other/stb_image.h"
  $148 = (($147) + 12|0); //@line 2706 "src/sprites/../puun/gf/../../other/stb_image.h"
  HEAP32[$148>>2] = $143; //@line 2706 "src/sprites/../puun/gf/../../other/stb_image.h"
  $149 = $i; //@line 2706 "src/sprites/../puun/gf/../../other/stb_image.h"
  $150 = $1; //@line 2706 "src/sprites/../puun/gf/../../other/stb_image.h"
  $151 = (($150) + 17820|0); //@line 2706 "src/sprites/../puun/gf/../../other/stb_image.h"
  $152 = (($151) + (($149*72)|0)|0); //@line 2706 "src/sprites/../puun/gf/../../other/stb_image.h"
  $153 = (($152) + 12|0); //@line 2706 "src/sprites/../puun/gf/../../other/stb_image.h"
  $154 = HEAP32[$153>>2]|0; //@line 2706 "src/sprites/../puun/gf/../../other/stb_image.h"
  $155 = ($154|0)>(3); //@line 2706 "src/sprites/../puun/gf/../../other/stb_image.h"
  if ($155) {
   label = 31;
   break;
  }
  $157 = $i; //@line 2698 "src/sprites/../puun/gf/../../other/stb_image.h"
  $158 = (($157) + 1)|0; //@line 2698 "src/sprites/../puun/gf/../../other/stb_image.h"
  $i = $158; //@line 2698 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 if ((label|0) == 22) {
  $93 = (_stbi__err(8136)|0); //@line 2702 "src/sprites/../puun/gf/../../other/stb_image.h"
  $0 = $93; //@line 2702 "src/sprites/../puun/gf/../../other/stb_image.h"
  $469 = $0; //@line 2760 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($469|0); //@line 2760 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 else if ((label|0) == 26) {
  $118 = (_stbi__err(8160)|0); //@line 2704 "src/sprites/../puun/gf/../../other/stb_image.h"
  $0 = $118; //@line 2704 "src/sprites/../puun/gf/../../other/stb_image.h"
  $469 = $0; //@line 2760 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($469|0); //@line 2760 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 else if ((label|0) == 29) {
  $140 = (_stbi__err(8168)|0); //@line 2705 "src/sprites/../puun/gf/../../other/stb_image.h"
  $0 = $140; //@line 2705 "src/sprites/../puun/gf/../../other/stb_image.h"
  $469 = $0; //@line 2760 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($469|0); //@line 2760 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 else if ((label|0) == 31) {
  $156 = (_stbi__err(8176)|0); //@line 2706 "src/sprites/../puun/gf/../../other/stb_image.h"
  $0 = $156; //@line 2706 "src/sprites/../puun/gf/../../other/stb_image.h"
  $469 = $0; //@line 2760 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($469|0); //@line 2760 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 else if ((label|0) == 34) {
  $159 = $2; //@line 2709 "src/sprites/../puun/gf/../../other/stb_image.h"
  $160 = ($159|0)!=(0); //@line 2709 "src/sprites/../puun/gf/../../other/stb_image.h"
  if ($160) {
   $0 = 1; //@line 2709 "src/sprites/../puun/gf/../../other/stb_image.h"
   $469 = $0; //@line 2760 "src/sprites/../puun/gf/../../other/stb_image.h"
   STACKTOP = sp;return ($469|0); //@line 2760 "src/sprites/../puun/gf/../../other/stb_image.h"
  }
  $161 = $s; //@line 2711 "src/sprites/../puun/gf/../../other/stb_image.h"
  $162 = HEAP32[$161>>2]|0; //@line 2711 "src/sprites/../puun/gf/../../other/stb_image.h"
  $163 = (1073741824 / ($162>>>0))&-1; //@line 2711 "src/sprites/../puun/gf/../../other/stb_image.h"
  $164 = $s; //@line 2711 "src/sprites/../puun/gf/../../other/stb_image.h"
  $165 = (($164) + 8|0); //@line 2711 "src/sprites/../puun/gf/../../other/stb_image.h"
  $166 = HEAP32[$165>>2]|0; //@line 2711 "src/sprites/../puun/gf/../../other/stb_image.h"
  $167 = (($163>>>0) / ($166>>>0))&-1; //@line 2711 "src/sprites/../puun/gf/../../other/stb_image.h"
  $168 = $s; //@line 2711 "src/sprites/../puun/gf/../../other/stb_image.h"
  $169 = (($168) + 4|0); //@line 2711 "src/sprites/../puun/gf/../../other/stb_image.h"
  $170 = HEAP32[$169>>2]|0; //@line 2711 "src/sprites/../puun/gf/../../other/stb_image.h"
  $171 = ($167>>>0)<($170>>>0); //@line 2711 "src/sprites/../puun/gf/../../other/stb_image.h"
  if ($171) {
   $172 = (_stbi__err(7200)|0); //@line 2711 "src/sprites/../puun/gf/../../other/stb_image.h"
   $0 = $172; //@line 2711 "src/sprites/../puun/gf/../../other/stb_image.h"
   $469 = $0; //@line 2760 "src/sprites/../puun/gf/../../other/stb_image.h"
   STACKTOP = sp;return ($469|0); //@line 2760 "src/sprites/../puun/gf/../../other/stb_image.h"
  }
  $i = 0; //@line 2713 "src/sprites/../puun/gf/../../other/stb_image.h"
  while(1) {
   $173 = $i; //@line 2713 "src/sprites/../puun/gf/../../other/stb_image.h"
   $174 = $s; //@line 2713 "src/sprites/../puun/gf/../../other/stb_image.h"
   $175 = (($174) + 8|0); //@line 2713 "src/sprites/../puun/gf/../../other/stb_image.h"
   $176 = HEAP32[$175>>2]|0; //@line 2713 "src/sprites/../puun/gf/../../other/stb_image.h"
   $177 = ($173|0)<($176|0); //@line 2713 "src/sprites/../puun/gf/../../other/stb_image.h"
   if (!($177)) {
    break;
   }
   $178 = $i; //@line 2714 "src/sprites/../puun/gf/../../other/stb_image.h"
   $179 = $1; //@line 2714 "src/sprites/../puun/gf/../../other/stb_image.h"
   $180 = (($179) + 17820|0); //@line 2714 "src/sprites/../puun/gf/../../other/stb_image.h"
   $181 = (($180) + (($178*72)|0)|0); //@line 2714 "src/sprites/../puun/gf/../../other/stb_image.h"
   $182 = (($181) + 4|0); //@line 2714 "src/sprites/../puun/gf/../../other/stb_image.h"
   $183 = HEAP32[$182>>2]|0; //@line 2714 "src/sprites/../puun/gf/../../other/stb_image.h"
   $184 = $h_max; //@line 2714 "src/sprites/../puun/gf/../../other/stb_image.h"
   $185 = ($183|0)>($184|0); //@line 2714 "src/sprites/../puun/gf/../../other/stb_image.h"
   if ($185) {
    $186 = $i; //@line 2714 "src/sprites/../puun/gf/../../other/stb_image.h"
    $187 = $1; //@line 2714 "src/sprites/../puun/gf/../../other/stb_image.h"
    $188 = (($187) + 17820|0); //@line 2714 "src/sprites/../puun/gf/../../other/stb_image.h"
    $189 = (($188) + (($186*72)|0)|0); //@line 2714 "src/sprites/../puun/gf/../../other/stb_image.h"
    $190 = (($189) + 4|0); //@line 2714 "src/sprites/../puun/gf/../../other/stb_image.h"
    $191 = HEAP32[$190>>2]|0; //@line 2714 "src/sprites/../puun/gf/../../other/stb_image.h"
    $h_max = $191; //@line 2714 "src/sprites/../puun/gf/../../other/stb_image.h"
   }
   $192 = $i; //@line 2715 "src/sprites/../puun/gf/../../other/stb_image.h"
   $193 = $1; //@line 2715 "src/sprites/../puun/gf/../../other/stb_image.h"
   $194 = (($193) + 17820|0); //@line 2715 "src/sprites/../puun/gf/../../other/stb_image.h"
   $195 = (($194) + (($192*72)|0)|0); //@line 2715 "src/sprites/../puun/gf/../../other/stb_image.h"
   $196 = (($195) + 8|0); //@line 2715 "src/sprites/../puun/gf/../../other/stb_image.h"
   $197 = HEAP32[$196>>2]|0; //@line 2715 "src/sprites/../puun/gf/../../other/stb_image.h"
   $198 = $v_max; //@line 2715 "src/sprites/../puun/gf/../../other/stb_image.h"
   $199 = ($197|0)>($198|0); //@line 2715 "src/sprites/../puun/gf/../../other/stb_image.h"
   if ($199) {
    $200 = $i; //@line 2715 "src/sprites/../puun/gf/../../other/stb_image.h"
    $201 = $1; //@line 2715 "src/sprites/../puun/gf/../../other/stb_image.h"
    $202 = (($201) + 17820|0); //@line 2715 "src/sprites/../puun/gf/../../other/stb_image.h"
    $203 = (($202) + (($200*72)|0)|0); //@line 2715 "src/sprites/../puun/gf/../../other/stb_image.h"
    $204 = (($203) + 8|0); //@line 2715 "src/sprites/../puun/gf/../../other/stb_image.h"
    $205 = HEAP32[$204>>2]|0; //@line 2715 "src/sprites/../puun/gf/../../other/stb_image.h"
    $v_max = $205; //@line 2715 "src/sprites/../puun/gf/../../other/stb_image.h"
   }
   $206 = $i; //@line 2713 "src/sprites/../puun/gf/../../other/stb_image.h"
   $207 = (($206) + 1)|0; //@line 2713 "src/sprites/../puun/gf/../../other/stb_image.h"
   $i = $207; //@line 2713 "src/sprites/../puun/gf/../../other/stb_image.h"
  }
  $208 = $h_max; //@line 2719 "src/sprites/../puun/gf/../../other/stb_image.h"
  $209 = $1; //@line 2719 "src/sprites/../puun/gf/../../other/stb_image.h"
  $210 = (($209) + 17796|0); //@line 2719 "src/sprites/../puun/gf/../../other/stb_image.h"
  HEAP32[$210>>2] = $208; //@line 2719 "src/sprites/../puun/gf/../../other/stb_image.h"
  $211 = $v_max; //@line 2720 "src/sprites/../puun/gf/../../other/stb_image.h"
  $212 = $1; //@line 2720 "src/sprites/../puun/gf/../../other/stb_image.h"
  $213 = (($212) + 17800|0); //@line 2720 "src/sprites/../puun/gf/../../other/stb_image.h"
  HEAP32[$213>>2] = $211; //@line 2720 "src/sprites/../puun/gf/../../other/stb_image.h"
  $214 = $h_max; //@line 2721 "src/sprites/../puun/gf/../../other/stb_image.h"
  $215 = $214<<3; //@line 2721 "src/sprites/../puun/gf/../../other/stb_image.h"
  $216 = $1; //@line 2721 "src/sprites/../puun/gf/../../other/stb_image.h"
  $217 = (($216) + 17812|0); //@line 2721 "src/sprites/../puun/gf/../../other/stb_image.h"
  HEAP32[$217>>2] = $215; //@line 2721 "src/sprites/../puun/gf/../../other/stb_image.h"
  $218 = $v_max; //@line 2722 "src/sprites/../puun/gf/../../other/stb_image.h"
  $219 = $218<<3; //@line 2722 "src/sprites/../puun/gf/../../other/stb_image.h"
  $220 = $1; //@line 2722 "src/sprites/../puun/gf/../../other/stb_image.h"
  $221 = (($220) + 17816|0); //@line 2722 "src/sprites/../puun/gf/../../other/stb_image.h"
  HEAP32[$221>>2] = $219; //@line 2722 "src/sprites/../puun/gf/../../other/stb_image.h"
  $222 = $s; //@line 2723 "src/sprites/../puun/gf/../../other/stb_image.h"
  $223 = HEAP32[$222>>2]|0; //@line 2723 "src/sprites/../puun/gf/../../other/stb_image.h"
  $224 = $1; //@line 2723 "src/sprites/../puun/gf/../../other/stb_image.h"
  $225 = (($224) + 17812|0); //@line 2723 "src/sprites/../puun/gf/../../other/stb_image.h"
  $226 = HEAP32[$225>>2]|0; //@line 2723 "src/sprites/../puun/gf/../../other/stb_image.h"
  $227 = (($223) + ($226))|0; //@line 2723 "src/sprites/../puun/gf/../../other/stb_image.h"
  $228 = (($227) - 1)|0; //@line 2723 "src/sprites/../puun/gf/../../other/stb_image.h"
  $229 = $1; //@line 2723 "src/sprites/../puun/gf/../../other/stb_image.h"
  $230 = (($229) + 17812|0); //@line 2723 "src/sprites/../puun/gf/../../other/stb_image.h"
  $231 = HEAP32[$230>>2]|0; //@line 2723 "src/sprites/../puun/gf/../../other/stb_image.h"
  $232 = (($228>>>0) / ($231>>>0))&-1; //@line 2723 "src/sprites/../puun/gf/../../other/stb_image.h"
  $233 = $1; //@line 2723 "src/sprites/../puun/gf/../../other/stb_image.h"
  $234 = (($233) + 17804|0); //@line 2723 "src/sprites/../puun/gf/../../other/stb_image.h"
  HEAP32[$234>>2] = $232; //@line 2723 "src/sprites/../puun/gf/../../other/stb_image.h"
  $235 = $s; //@line 2724 "src/sprites/../puun/gf/../../other/stb_image.h"
  $236 = (($235) + 4|0); //@line 2724 "src/sprites/../puun/gf/../../other/stb_image.h"
  $237 = HEAP32[$236>>2]|0; //@line 2724 "src/sprites/../puun/gf/../../other/stb_image.h"
  $238 = $1; //@line 2724 "src/sprites/../puun/gf/../../other/stb_image.h"
  $239 = (($238) + 17816|0); //@line 2724 "src/sprites/../puun/gf/../../other/stb_image.h"
  $240 = HEAP32[$239>>2]|0; //@line 2724 "src/sprites/../puun/gf/../../other/stb_image.h"
  $241 = (($237) + ($240))|0; //@line 2724 "src/sprites/../puun/gf/../../other/stb_image.h"
  $242 = (($241) - 1)|0; //@line 2724 "src/sprites/../puun/gf/../../other/stb_image.h"
  $243 = $1; //@line 2724 "src/sprites/../puun/gf/../../other/stb_image.h"
  $244 = (($243) + 17816|0); //@line 2724 "src/sprites/../puun/gf/../../other/stb_image.h"
  $245 = HEAP32[$244>>2]|0; //@line 2724 "src/sprites/../puun/gf/../../other/stb_image.h"
  $246 = (($242>>>0) / ($245>>>0))&-1; //@line 2724 "src/sprites/../puun/gf/../../other/stb_image.h"
  $247 = $1; //@line 2724 "src/sprites/../puun/gf/../../other/stb_image.h"
  $248 = (($247) + 17808|0); //@line 2724 "src/sprites/../puun/gf/../../other/stb_image.h"
  HEAP32[$248>>2] = $246; //@line 2724 "src/sprites/../puun/gf/../../other/stb_image.h"
  $i = 0; //@line 2726 "src/sprites/../puun/gf/../../other/stb_image.h"
  while(1) {
   $249 = $i; //@line 2726 "src/sprites/../puun/gf/../../other/stb_image.h"
   $250 = $s; //@line 2726 "src/sprites/../puun/gf/../../other/stb_image.h"
   $251 = (($250) + 8|0); //@line 2726 "src/sprites/../puun/gf/../../other/stb_image.h"
   $252 = HEAP32[$251>>2]|0; //@line 2726 "src/sprites/../puun/gf/../../other/stb_image.h"
   $253 = ($249|0)<($252|0); //@line 2726 "src/sprites/../puun/gf/../../other/stb_image.h"
   if (!($253)) {
    label = 59;
    break;
   }
   $254 = $s; //@line 2728 "src/sprites/../puun/gf/../../other/stb_image.h"
   $255 = HEAP32[$254>>2]|0; //@line 2728 "src/sprites/../puun/gf/../../other/stb_image.h"
   $256 = $i; //@line 2728 "src/sprites/../puun/gf/../../other/stb_image.h"
   $257 = $1; //@line 2728 "src/sprites/../puun/gf/../../other/stb_image.h"
   $258 = (($257) + 17820|0); //@line 2728 "src/sprites/../puun/gf/../../other/stb_image.h"
   $259 = (($258) + (($256*72)|0)|0); //@line 2728 "src/sprites/../puun/gf/../../other/stb_image.h"
   $260 = (($259) + 4|0); //@line 2728 "src/sprites/../puun/gf/../../other/stb_image.h"
   $261 = HEAP32[$260>>2]|0; //@line 2728 "src/sprites/../puun/gf/../../other/stb_image.h"
   $262 = Math_imul($255, $261)|0; //@line 2728 "src/sprites/../puun/gf/../../other/stb_image.h"
   $263 = $h_max; //@line 2728 "src/sprites/../puun/gf/../../other/stb_image.h"
   $264 = (($262) + ($263))|0; //@line 2728 "src/sprites/../puun/gf/../../other/stb_image.h"
   $265 = (($264) - 1)|0; //@line 2728 "src/sprites/../puun/gf/../../other/stb_image.h"
   $266 = $h_max; //@line 2728 "src/sprites/../puun/gf/../../other/stb_image.h"
   $267 = (($265>>>0) / ($266>>>0))&-1; //@line 2728 "src/sprites/../puun/gf/../../other/stb_image.h"
   $268 = $i; //@line 2728 "src/sprites/../puun/gf/../../other/stb_image.h"
   $269 = $1; //@line 2728 "src/sprites/../puun/gf/../../other/stb_image.h"
   $270 = (($269) + 17820|0); //@line 2728 "src/sprites/../puun/gf/../../other/stb_image.h"
   $271 = (($270) + (($268*72)|0)|0); //@line 2728 "src/sprites/../puun/gf/../../other/stb_image.h"
   $272 = (($271) + 28|0); //@line 2728 "src/sprites/../puun/gf/../../other/stb_image.h"
   HEAP32[$272>>2] = $267; //@line 2728 "src/sprites/../puun/gf/../../other/stb_image.h"
   $273 = $s; //@line 2729 "src/sprites/../puun/gf/../../other/stb_image.h"
   $274 = (($273) + 4|0); //@line 2729 "src/sprites/../puun/gf/../../other/stb_image.h"
   $275 = HEAP32[$274>>2]|0; //@line 2729 "src/sprites/../puun/gf/../../other/stb_image.h"
   $276 = $i; //@line 2729 "src/sprites/../puun/gf/../../other/stb_image.h"
   $277 = $1; //@line 2729 "src/sprites/../puun/gf/../../other/stb_image.h"
   $278 = (($277) + 17820|0); //@line 2729 "src/sprites/../puun/gf/../../other/stb_image.h"
   $279 = (($278) + (($276*72)|0)|0); //@line 2729 "src/sprites/../puun/gf/../../other/stb_image.h"
   $280 = (($279) + 8|0); //@line 2729 "src/sprites/../puun/gf/../../other/stb_image.h"
   $281 = HEAP32[$280>>2]|0; //@line 2729 "src/sprites/../puun/gf/../../other/stb_image.h"
   $282 = Math_imul($275, $281)|0; //@line 2729 "src/sprites/../puun/gf/../../other/stb_image.h"
   $283 = $v_max; //@line 2729 "src/sprites/../puun/gf/../../other/stb_image.h"
   $284 = (($282) + ($283))|0; //@line 2729 "src/sprites/../puun/gf/../../other/stb_image.h"
   $285 = (($284) - 1)|0; //@line 2729 "src/sprites/../puun/gf/../../other/stb_image.h"
   $286 = $v_max; //@line 2729 "src/sprites/../puun/gf/../../other/stb_image.h"
   $287 = (($285>>>0) / ($286>>>0))&-1; //@line 2729 "src/sprites/../puun/gf/../../other/stb_image.h"
   $288 = $i; //@line 2729 "src/sprites/../puun/gf/../../other/stb_image.h"
   $289 = $1; //@line 2729 "src/sprites/../puun/gf/../../other/stb_image.h"
   $290 = (($289) + 17820|0); //@line 2729 "src/sprites/../puun/gf/../../other/stb_image.h"
   $291 = (($290) + (($288*72)|0)|0); //@line 2729 "src/sprites/../puun/gf/../../other/stb_image.h"
   $292 = (($291) + 32|0); //@line 2729 "src/sprites/../puun/gf/../../other/stb_image.h"
   HEAP32[$292>>2] = $287; //@line 2729 "src/sprites/../puun/gf/../../other/stb_image.h"
   $293 = $1; //@line 2734 "src/sprites/../puun/gf/../../other/stb_image.h"
   $294 = (($293) + 17804|0); //@line 2734 "src/sprites/../puun/gf/../../other/stb_image.h"
   $295 = HEAP32[$294>>2]|0; //@line 2734 "src/sprites/../puun/gf/../../other/stb_image.h"
   $296 = $i; //@line 2734 "src/sprites/../puun/gf/../../other/stb_image.h"
   $297 = $1; //@line 2734 "src/sprites/../puun/gf/../../other/stb_image.h"
   $298 = (($297) + 17820|0); //@line 2734 "src/sprites/../puun/gf/../../other/stb_image.h"
   $299 = (($298) + (($296*72)|0)|0); //@line 2734 "src/sprites/../puun/gf/../../other/stb_image.h"
   $300 = (($299) + 4|0); //@line 2734 "src/sprites/../puun/gf/../../other/stb_image.h"
   $301 = HEAP32[$300>>2]|0; //@line 2734 "src/sprites/../puun/gf/../../other/stb_image.h"
   $302 = Math_imul($295, $301)|0; //@line 2734 "src/sprites/../puun/gf/../../other/stb_image.h"
   $303 = $302<<3; //@line 2734 "src/sprites/../puun/gf/../../other/stb_image.h"
   $304 = $i; //@line 2734 "src/sprites/../puun/gf/../../other/stb_image.h"
   $305 = $1; //@line 2734 "src/sprites/../puun/gf/../../other/stb_image.h"
   $306 = (($305) + 17820|0); //@line 2734 "src/sprites/../puun/gf/../../other/stb_image.h"
   $307 = (($306) + (($304*72)|0)|0); //@line 2734 "src/sprites/../puun/gf/../../other/stb_image.h"
   $308 = (($307) + 36|0); //@line 2734 "src/sprites/../puun/gf/../../other/stb_image.h"
   HEAP32[$308>>2] = $303; //@line 2734 "src/sprites/../puun/gf/../../other/stb_image.h"
   $309 = $1; //@line 2735 "src/sprites/../puun/gf/../../other/stb_image.h"
   $310 = (($309) + 17808|0); //@line 2735 "src/sprites/../puun/gf/../../other/stb_image.h"
   $311 = HEAP32[$310>>2]|0; //@line 2735 "src/sprites/../puun/gf/../../other/stb_image.h"
   $312 = $i; //@line 2735 "src/sprites/../puun/gf/../../other/stb_image.h"
   $313 = $1; //@line 2735 "src/sprites/../puun/gf/../../other/stb_image.h"
   $314 = (($313) + 17820|0); //@line 2735 "src/sprites/../puun/gf/../../other/stb_image.h"
   $315 = (($314) + (($312*72)|0)|0); //@line 2735 "src/sprites/../puun/gf/../../other/stb_image.h"
   $316 = (($315) + 8|0); //@line 2735 "src/sprites/../puun/gf/../../other/stb_image.h"
   $317 = HEAP32[$316>>2]|0; //@line 2735 "src/sprites/../puun/gf/../../other/stb_image.h"
   $318 = Math_imul($311, $317)|0; //@line 2735 "src/sprites/../puun/gf/../../other/stb_image.h"
   $319 = $318<<3; //@line 2735 "src/sprites/../puun/gf/../../other/stb_image.h"
   $320 = $i; //@line 2735 "src/sprites/../puun/gf/../../other/stb_image.h"
   $321 = $1; //@line 2735 "src/sprites/../puun/gf/../../other/stb_image.h"
   $322 = (($321) + 17820|0); //@line 2735 "src/sprites/../puun/gf/../../other/stb_image.h"
   $323 = (($322) + (($320*72)|0)|0); //@line 2735 "src/sprites/../puun/gf/../../other/stb_image.h"
   $324 = (($323) + 40|0); //@line 2735 "src/sprites/../puun/gf/../../other/stb_image.h"
   HEAP32[$324>>2] = $319; //@line 2735 "src/sprites/../puun/gf/../../other/stb_image.h"
   $325 = $i; //@line 2736 "src/sprites/../puun/gf/../../other/stb_image.h"
   $326 = $1; //@line 2736 "src/sprites/../puun/gf/../../other/stb_image.h"
   $327 = (($326) + 17820|0); //@line 2736 "src/sprites/../puun/gf/../../other/stb_image.h"
   $328 = (($327) + (($325*72)|0)|0); //@line 2736 "src/sprites/../puun/gf/../../other/stb_image.h"
   $329 = (($328) + 36|0); //@line 2736 "src/sprites/../puun/gf/../../other/stb_image.h"
   $330 = HEAP32[$329>>2]|0; //@line 2736 "src/sprites/../puun/gf/../../other/stb_image.h"
   $331 = $i; //@line 2736 "src/sprites/../puun/gf/../../other/stb_image.h"
   $332 = $1; //@line 2736 "src/sprites/../puun/gf/../../other/stb_image.h"
   $333 = (($332) + 17820|0); //@line 2736 "src/sprites/../puun/gf/../../other/stb_image.h"
   $334 = (($333) + (($331*72)|0)|0); //@line 2736 "src/sprites/../puun/gf/../../other/stb_image.h"
   $335 = (($334) + 40|0); //@line 2736 "src/sprites/../puun/gf/../../other/stb_image.h"
   $336 = HEAP32[$335>>2]|0; //@line 2736 "src/sprites/../puun/gf/../../other/stb_image.h"
   $337 = Math_imul($330, $336)|0; //@line 2736 "src/sprites/../puun/gf/../../other/stb_image.h"
   $338 = (($337) + 15)|0; //@line 2736 "src/sprites/../puun/gf/../../other/stb_image.h"
   $339 = (_stbi__malloc($338)|0); //@line 2736 "src/sprites/../puun/gf/../../other/stb_image.h"
   $340 = $i; //@line 2736 "src/sprites/../puun/gf/../../other/stb_image.h"
   $341 = $1; //@line 2736 "src/sprites/../puun/gf/../../other/stb_image.h"
   $342 = (($341) + 17820|0); //@line 2736 "src/sprites/../puun/gf/../../other/stb_image.h"
   $343 = (($342) + (($340*72)|0)|0); //@line 2736 "src/sprites/../puun/gf/../../other/stb_image.h"
   $344 = (($343) + 48|0); //@line 2736 "src/sprites/../puun/gf/../../other/stb_image.h"
   HEAP32[$344>>2] = $339; //@line 2736 "src/sprites/../puun/gf/../../other/stb_image.h"
   $345 = $i; //@line 2738 "src/sprites/../puun/gf/../../other/stb_image.h"
   $346 = $1; //@line 2738 "src/sprites/../puun/gf/../../other/stb_image.h"
   $347 = (($346) + 17820|0); //@line 2738 "src/sprites/../puun/gf/../../other/stb_image.h"
   $348 = (($347) + (($345*72)|0)|0); //@line 2738 "src/sprites/../puun/gf/../../other/stb_image.h"
   $349 = (($348) + 48|0); //@line 2738 "src/sprites/../puun/gf/../../other/stb_image.h"
   $350 = HEAP32[$349>>2]|0; //@line 2738 "src/sprites/../puun/gf/../../other/stb_image.h"
   $351 = ($350|0)==(0|0); //@line 2738 "src/sprites/../puun/gf/../../other/stb_image.h"
   if ($351) {
    break;
   }
   $370 = $i; //@line 2746 "src/sprites/../puun/gf/../../other/stb_image.h"
   $371 = $1; //@line 2746 "src/sprites/../puun/gf/../../other/stb_image.h"
   $372 = (($371) + 17820|0); //@line 2746 "src/sprites/../puun/gf/../../other/stb_image.h"
   $373 = (($372) + (($370*72)|0)|0); //@line 2746 "src/sprites/../puun/gf/../../other/stb_image.h"
   $374 = (($373) + 48|0); //@line 2746 "src/sprites/../puun/gf/../../other/stb_image.h"
   $375 = HEAP32[$374>>2]|0; //@line 2746 "src/sprites/../puun/gf/../../other/stb_image.h"
   $376 = $375; //@line 2746 "src/sprites/../puun/gf/../../other/stb_image.h"
   $377 = (($376) + 15)|0; //@line 2746 "src/sprites/../puun/gf/../../other/stb_image.h"
   $378 = $377 & -16; //@line 2746 "src/sprites/../puun/gf/../../other/stb_image.h"
   $379 = $378; //@line 2746 "src/sprites/../puun/gf/../../other/stb_image.h"
   $380 = $i; //@line 2746 "src/sprites/../puun/gf/../../other/stb_image.h"
   $381 = $1; //@line 2746 "src/sprites/../puun/gf/../../other/stb_image.h"
   $382 = (($381) + 17820|0); //@line 2746 "src/sprites/../puun/gf/../../other/stb_image.h"
   $383 = (($382) + (($380*72)|0)|0); //@line 2746 "src/sprites/../puun/gf/../../other/stb_image.h"
   $384 = (($383) + 44|0); //@line 2746 "src/sprites/../puun/gf/../../other/stb_image.h"
   HEAP32[$384>>2] = $379; //@line 2746 "src/sprites/../puun/gf/../../other/stb_image.h"
   $385 = $i; //@line 2747 "src/sprites/../puun/gf/../../other/stb_image.h"
   $386 = $1; //@line 2747 "src/sprites/../puun/gf/../../other/stb_image.h"
   $387 = (($386) + 17820|0); //@line 2747 "src/sprites/../puun/gf/../../other/stb_image.h"
   $388 = (($387) + (($385*72)|0)|0); //@line 2747 "src/sprites/../puun/gf/../../other/stb_image.h"
   $389 = (($388) + 56|0); //@line 2747 "src/sprites/../puun/gf/../../other/stb_image.h"
   HEAP32[$389>>2] = 0; //@line 2747 "src/sprites/../puun/gf/../../other/stb_image.h"
   $390 = $1; //@line 2748 "src/sprites/../puun/gf/../../other/stb_image.h"
   $391 = (($390) + 18124|0); //@line 2748 "src/sprites/../puun/gf/../../other/stb_image.h"
   $392 = HEAP32[$391>>2]|0; //@line 2748 "src/sprites/../puun/gf/../../other/stb_image.h"
   $393 = ($392|0)!=(0); //@line 2748 "src/sprites/../puun/gf/../../other/stb_image.h"
   if ($393) {
    $394 = $i; //@line 2749 "src/sprites/../puun/gf/../../other/stb_image.h"
    $395 = $1; //@line 2749 "src/sprites/../puun/gf/../../other/stb_image.h"
    $396 = (($395) + 17820|0); //@line 2749 "src/sprites/../puun/gf/../../other/stb_image.h"
    $397 = (($396) + (($394*72)|0)|0); //@line 2749 "src/sprites/../puun/gf/../../other/stb_image.h"
    $398 = (($397) + 36|0); //@line 2749 "src/sprites/../puun/gf/../../other/stb_image.h"
    $399 = HEAP32[$398>>2]|0; //@line 2749 "src/sprites/../puun/gf/../../other/stb_image.h"
    $400 = (($399) + 7)|0; //@line 2749 "src/sprites/../puun/gf/../../other/stb_image.h"
    $401 = $400 >> 3; //@line 2749 "src/sprites/../puun/gf/../../other/stb_image.h"
    $402 = $i; //@line 2749 "src/sprites/../puun/gf/../../other/stb_image.h"
    $403 = $1; //@line 2749 "src/sprites/../puun/gf/../../other/stb_image.h"
    $404 = (($403) + 17820|0); //@line 2749 "src/sprites/../puun/gf/../../other/stb_image.h"
    $405 = (($404) + (($402*72)|0)|0); //@line 2749 "src/sprites/../puun/gf/../../other/stb_image.h"
    $406 = (($405) + 64|0); //@line 2749 "src/sprites/../puun/gf/../../other/stb_image.h"
    HEAP32[$406>>2] = $401; //@line 2749 "src/sprites/../puun/gf/../../other/stb_image.h"
    $407 = $i; //@line 2750 "src/sprites/../puun/gf/../../other/stb_image.h"
    $408 = $1; //@line 2750 "src/sprites/../puun/gf/../../other/stb_image.h"
    $409 = (($408) + 17820|0); //@line 2750 "src/sprites/../puun/gf/../../other/stb_image.h"
    $410 = (($409) + (($407*72)|0)|0); //@line 2750 "src/sprites/../puun/gf/../../other/stb_image.h"
    $411 = (($410) + 40|0); //@line 2750 "src/sprites/../puun/gf/../../other/stb_image.h"
    $412 = HEAP32[$411>>2]|0; //@line 2750 "src/sprites/../puun/gf/../../other/stb_image.h"
    $413 = (($412) + 7)|0; //@line 2750 "src/sprites/../puun/gf/../../other/stb_image.h"
    $414 = $413 >> 3; //@line 2750 "src/sprites/../puun/gf/../../other/stb_image.h"
    $415 = $i; //@line 2750 "src/sprites/../puun/gf/../../other/stb_image.h"
    $416 = $1; //@line 2750 "src/sprites/../puun/gf/../../other/stb_image.h"
    $417 = (($416) + 17820|0); //@line 2750 "src/sprites/../puun/gf/../../other/stb_image.h"
    $418 = (($417) + (($415*72)|0)|0); //@line 2750 "src/sprites/../puun/gf/../../other/stb_image.h"
    $419 = (($418) + 68|0); //@line 2750 "src/sprites/../puun/gf/../../other/stb_image.h"
    HEAP32[$419>>2] = $414; //@line 2750 "src/sprites/../puun/gf/../../other/stb_image.h"
    $420 = $i; //@line 2751 "src/sprites/../puun/gf/../../other/stb_image.h"
    $421 = $1; //@line 2751 "src/sprites/../puun/gf/../../other/stb_image.h"
    $422 = (($421) + 17820|0); //@line 2751 "src/sprites/../puun/gf/../../other/stb_image.h"
    $423 = (($422) + (($420*72)|0)|0); //@line 2751 "src/sprites/../puun/gf/../../other/stb_image.h"
    $424 = (($423) + 64|0); //@line 2751 "src/sprites/../puun/gf/../../other/stb_image.h"
    $425 = HEAP32[$424>>2]|0; //@line 2751 "src/sprites/../puun/gf/../../other/stb_image.h"
    $426 = $i; //@line 2751 "src/sprites/../puun/gf/../../other/stb_image.h"
    $427 = $1; //@line 2751 "src/sprites/../puun/gf/../../other/stb_image.h"
    $428 = (($427) + 17820|0); //@line 2751 "src/sprites/../puun/gf/../../other/stb_image.h"
    $429 = (($428) + (($426*72)|0)|0); //@line 2751 "src/sprites/../puun/gf/../../other/stb_image.h"
    $430 = (($429) + 68|0); //@line 2751 "src/sprites/../puun/gf/../../other/stb_image.h"
    $431 = HEAP32[$430>>2]|0; //@line 2751 "src/sprites/../puun/gf/../../other/stb_image.h"
    $432 = Math_imul($425, $431)|0; //@line 2751 "src/sprites/../puun/gf/../../other/stb_image.h"
    $433 = $432<<6; //@line 2751 "src/sprites/../puun/gf/../../other/stb_image.h"
    $434 = $433<<1; //@line 2751 "src/sprites/../puun/gf/../../other/stb_image.h"
    $435 = (($434) + 15)|0; //@line 2751 "src/sprites/../puun/gf/../../other/stb_image.h"
    $436 = (_malloc($435)|0); //@line 2751 "src/sprites/../puun/gf/../../other/stb_image.h"
    $437 = $i; //@line 2751 "src/sprites/../puun/gf/../../other/stb_image.h"
    $438 = $1; //@line 2751 "src/sprites/../puun/gf/../../other/stb_image.h"
    $439 = (($438) + 17820|0); //@line 2751 "src/sprites/../puun/gf/../../other/stb_image.h"
    $440 = (($439) + (($437*72)|0)|0); //@line 2751 "src/sprites/../puun/gf/../../other/stb_image.h"
    $441 = (($440) + 52|0); //@line 2751 "src/sprites/../puun/gf/../../other/stb_image.h"
    HEAP32[$441>>2] = $436; //@line 2751 "src/sprites/../puun/gf/../../other/stb_image.h"
    $442 = $i; //@line 2752 "src/sprites/../puun/gf/../../other/stb_image.h"
    $443 = $1; //@line 2752 "src/sprites/../puun/gf/../../other/stb_image.h"
    $444 = (($443) + 17820|0); //@line 2752 "src/sprites/../puun/gf/../../other/stb_image.h"
    $445 = (($444) + (($442*72)|0)|0); //@line 2752 "src/sprites/../puun/gf/../../other/stb_image.h"
    $446 = (($445) + 52|0); //@line 2752 "src/sprites/../puun/gf/../../other/stb_image.h"
    $447 = HEAP32[$446>>2]|0; //@line 2752 "src/sprites/../puun/gf/../../other/stb_image.h"
    $448 = $447; //@line 2752 "src/sprites/../puun/gf/../../other/stb_image.h"
    $449 = (($448) + 15)|0; //@line 2752 "src/sprites/../puun/gf/../../other/stb_image.h"
    $450 = $449 & -16; //@line 2752 "src/sprites/../puun/gf/../../other/stb_image.h"
    $451 = $450; //@line 2752 "src/sprites/../puun/gf/../../other/stb_image.h"
    $452 = $i; //@line 2752 "src/sprites/../puun/gf/../../other/stb_image.h"
    $453 = $1; //@line 2752 "src/sprites/../puun/gf/../../other/stb_image.h"
    $454 = (($453) + 17820|0); //@line 2752 "src/sprites/../puun/gf/../../other/stb_image.h"
    $455 = (($454) + (($452*72)|0)|0); //@line 2752 "src/sprites/../puun/gf/../../other/stb_image.h"
    $456 = (($455) + 60|0); //@line 2752 "src/sprites/../puun/gf/../../other/stb_image.h"
    HEAP32[$456>>2] = $451; //@line 2752 "src/sprites/../puun/gf/../../other/stb_image.h"
   } else {
    $457 = $i; //@line 2754 "src/sprites/../puun/gf/../../other/stb_image.h"
    $458 = $1; //@line 2754 "src/sprites/../puun/gf/../../other/stb_image.h"
    $459 = (($458) + 17820|0); //@line 2754 "src/sprites/../puun/gf/../../other/stb_image.h"
    $460 = (($459) + (($457*72)|0)|0); //@line 2754 "src/sprites/../puun/gf/../../other/stb_image.h"
    $461 = (($460) + 60|0); //@line 2754 "src/sprites/../puun/gf/../../other/stb_image.h"
    HEAP32[$461>>2] = 0; //@line 2754 "src/sprites/../puun/gf/../../other/stb_image.h"
    $462 = $i; //@line 2755 "src/sprites/../puun/gf/../../other/stb_image.h"
    $463 = $1; //@line 2755 "src/sprites/../puun/gf/../../other/stb_image.h"
    $464 = (($463) + 17820|0); //@line 2755 "src/sprites/../puun/gf/../../other/stb_image.h"
    $465 = (($464) + (($462*72)|0)|0); //@line 2755 "src/sprites/../puun/gf/../../other/stb_image.h"
    $466 = (($465) + 52|0); //@line 2755 "src/sprites/../puun/gf/../../other/stb_image.h"
    HEAP32[$466>>2] = 0; //@line 2755 "src/sprites/../puun/gf/../../other/stb_image.h"
   }
   $467 = $i; //@line 2726 "src/sprites/../puun/gf/../../other/stb_image.h"
   $468 = (($467) + 1)|0; //@line 2726 "src/sprites/../puun/gf/../../other/stb_image.h"
   $i = $468; //@line 2726 "src/sprites/../puun/gf/../../other/stb_image.h"
  }
  if ((label|0) == 59) {
   $0 = 1; //@line 2759 "src/sprites/../puun/gf/../../other/stb_image.h"
   $469 = $0; //@line 2760 "src/sprites/../puun/gf/../../other/stb_image.h"
   STACKTOP = sp;return ($469|0); //@line 2760 "src/sprites/../puun/gf/../../other/stb_image.h"
  }
  $352 = $i; //@line 2739 "src/sprites/../puun/gf/../../other/stb_image.h"
  $353 = (($352) + -1)|0; //@line 2739 "src/sprites/../puun/gf/../../other/stb_image.h"
  $i = $353; //@line 2739 "src/sprites/../puun/gf/../../other/stb_image.h"
  while(1) {
   $354 = $i; //@line 2739 "src/sprites/../puun/gf/../../other/stb_image.h"
   $355 = ($354|0)>=(0); //@line 2739 "src/sprites/../puun/gf/../../other/stb_image.h"
   if (!($355)) {
    break;
   }
   $356 = $i; //@line 2740 "src/sprites/../puun/gf/../../other/stb_image.h"
   $357 = $1; //@line 2740 "src/sprites/../puun/gf/../../other/stb_image.h"
   $358 = (($357) + 17820|0); //@line 2740 "src/sprites/../puun/gf/../../other/stb_image.h"
   $359 = (($358) + (($356*72)|0)|0); //@line 2740 "src/sprites/../puun/gf/../../other/stb_image.h"
   $360 = (($359) + 48|0); //@line 2740 "src/sprites/../puun/gf/../../other/stb_image.h"
   $361 = HEAP32[$360>>2]|0; //@line 2740 "src/sprites/../puun/gf/../../other/stb_image.h"
   _free($361); //@line 2740 "src/sprites/../puun/gf/../../other/stb_image.h"
   $362 = $i; //@line 2741 "src/sprites/../puun/gf/../../other/stb_image.h"
   $363 = $1; //@line 2741 "src/sprites/../puun/gf/../../other/stb_image.h"
   $364 = (($363) + 17820|0); //@line 2741 "src/sprites/../puun/gf/../../other/stb_image.h"
   $365 = (($364) + (($362*72)|0)|0); //@line 2741 "src/sprites/../puun/gf/../../other/stb_image.h"
   $366 = (($365) + 44|0); //@line 2741 "src/sprites/../puun/gf/../../other/stb_image.h"
   HEAP32[$366>>2] = 0; //@line 2741 "src/sprites/../puun/gf/../../other/stb_image.h"
   $367 = $i; //@line 2739 "src/sprites/../puun/gf/../../other/stb_image.h"
   $368 = (($367) + -1)|0; //@line 2739 "src/sprites/../puun/gf/../../other/stb_image.h"
   $i = $368; //@line 2739 "src/sprites/../puun/gf/../../other/stb_image.h"
  }
  $369 = (_stbi__err(7464)|0); //@line 2743 "src/sprites/../puun/gf/../../other/stb_image.h"
  $0 = $369; //@line 2743 "src/sprites/../puun/gf/../../other/stb_image.h"
  $469 = $0; //@line 2760 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($469|0); //@line 2760 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 return (0)|0;
}
function _stbi__process_marker($z,$m) {
 $z = $z|0;
 $m = $m|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0;
 var $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0;
 var $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $L = 0, $i = 0, $i1 = 0, $n = 0;
 var $p = 0, $q = 0, $q2 = 0, $sizes = 0, $t = 0, $tc = 0, $th = 0, $v = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $sizes = sp + 24|0;
 $1 = $z;
 $2 = $m;
 $3 = $2; //@line 2580 "src/sprites/../puun/gf/../../other/stb_image.h"
 if ((($3|0) == 219)) {
  $15 = $1; //@line 2590 "src/sprites/../puun/gf/../../other/stb_image.h"
  $16 = HEAP32[$15>>2]|0; //@line 2590 "src/sprites/../puun/gf/../../other/stb_image.h"
  $17 = (_stbi__get16be($16)|0); //@line 2590 "src/sprites/../puun/gf/../../other/stb_image.h"
  $18 = (($17) - 2)|0; //@line 2590 "src/sprites/../puun/gf/../../other/stb_image.h"
  $L = $18; //@line 2590 "src/sprites/../puun/gf/../../other/stb_image.h"
  while(1) {
   $19 = $L; //@line 2591 "src/sprites/../puun/gf/../../other/stb_image.h"
   $20 = ($19|0)>(0); //@line 2591 "src/sprites/../puun/gf/../../other/stb_image.h"
   if (!($20)) {
    label = 17;
    break;
   }
   $21 = $1; //@line 2592 "src/sprites/../puun/gf/../../other/stb_image.h"
   $22 = HEAP32[$21>>2]|0; //@line 2592 "src/sprites/../puun/gf/../../other/stb_image.h"
   $23 = (_stbi__get8($22)|0); //@line 2592 "src/sprites/../puun/gf/../../other/stb_image.h"
   $24 = $23&255; //@line 2592 "src/sprites/../puun/gf/../../other/stb_image.h"
   $q = $24; //@line 2592 "src/sprites/../puun/gf/../../other/stb_image.h"
   $25 = $q; //@line 2593 "src/sprites/../puun/gf/../../other/stb_image.h"
   $26 = $25 >> 4; //@line 2593 "src/sprites/../puun/gf/../../other/stb_image.h"
   $p = $26; //@line 2593 "src/sprites/../puun/gf/../../other/stb_image.h"
   $27 = $q; //@line 2594 "src/sprites/../puun/gf/../../other/stb_image.h"
   $28 = $27 & 15; //@line 2594 "src/sprites/../puun/gf/../../other/stb_image.h"
   $t = $28; //@line 2594 "src/sprites/../puun/gf/../../other/stb_image.h"
   $29 = $p; //@line 2595 "src/sprites/../puun/gf/../../other/stb_image.h"
   $30 = ($29|0)!=(0); //@line 2595 "src/sprites/../puun/gf/../../other/stb_image.h"
   if ($30) {
    label = 9;
    break;
   }
   $32 = $t; //@line 2596 "src/sprites/../puun/gf/../../other/stb_image.h"
   $33 = ($32|0)>(3); //@line 2596 "src/sprites/../puun/gf/../../other/stb_image.h"
   if ($33) {
    label = 11;
    break;
   }
   $i = 0; //@line 2597 "src/sprites/../puun/gf/../../other/stb_image.h"
   while(1) {
    $35 = $i; //@line 2597 "src/sprites/../puun/gf/../../other/stb_image.h"
    $36 = ($35|0)<(64); //@line 2597 "src/sprites/../puun/gf/../../other/stb_image.h"
    if (!($36)) {
     break;
    }
    $37 = $1; //@line 2598 "src/sprites/../puun/gf/../../other/stb_image.h"
    $38 = HEAP32[$37>>2]|0; //@line 2598 "src/sprites/../puun/gf/../../other/stb_image.h"
    $39 = (_stbi__get8($38)|0); //@line 2598 "src/sprites/../puun/gf/../../other/stb_image.h"
    $40 = $i; //@line 2598 "src/sprites/../puun/gf/../../other/stb_image.h"
    $41 = (8248 + ($40)|0); //@line 2598 "src/sprites/../puun/gf/../../other/stb_image.h"
    $42 = HEAP8[$41>>0]|0; //@line 2598 "src/sprites/../puun/gf/../../other/stb_image.h"
    $43 = $42&255; //@line 2598 "src/sprites/../puun/gf/../../other/stb_image.h"
    $44 = $t; //@line 2598 "src/sprites/../puun/gf/../../other/stb_image.h"
    $45 = $1; //@line 2598 "src/sprites/../puun/gf/../../other/stb_image.h"
    $46 = (($45) + 13444|0); //@line 2598 "src/sprites/../puun/gf/../../other/stb_image.h"
    $47 = (($46) + ($44<<6)|0); //@line 2598 "src/sprites/../puun/gf/../../other/stb_image.h"
    $48 = (($47) + ($43)|0); //@line 2598 "src/sprites/../puun/gf/../../other/stb_image.h"
    HEAP8[$48>>0] = $39; //@line 2598 "src/sprites/../puun/gf/../../other/stb_image.h"
    $49 = $i; //@line 2597 "src/sprites/../puun/gf/../../other/stb_image.h"
    $50 = (($49) + 1)|0; //@line 2597 "src/sprites/../puun/gf/../../other/stb_image.h"
    $i = $50; //@line 2597 "src/sprites/../puun/gf/../../other/stb_image.h"
   }
   $51 = $L; //@line 2599 "src/sprites/../puun/gf/../../other/stb_image.h"
   $52 = (($51) - 65)|0; //@line 2599 "src/sprites/../puun/gf/../../other/stb_image.h"
   $L = $52; //@line 2599 "src/sprites/../puun/gf/../../other/stb_image.h"
  }
  if ((label|0) == 9) {
   $31 = (_stbi__err(8216)|0); //@line 2595 "src/sprites/../puun/gf/../../other/stb_image.h"
   $0 = $31; //@line 2595 "src/sprites/../puun/gf/../../other/stb_image.h"
   $155 = $0; //@line 2638 "src/sprites/../puun/gf/../../other/stb_image.h"
   STACKTOP = sp;return ($155|0); //@line 2638 "src/sprites/../puun/gf/../../other/stb_image.h"
  }
  else if ((label|0) == 11) {
   $34 = (_stbi__err(8232)|0); //@line 2596 "src/sprites/../puun/gf/../../other/stb_image.h"
   $0 = $34; //@line 2596 "src/sprites/../puun/gf/../../other/stb_image.h"
   $155 = $0; //@line 2638 "src/sprites/../puun/gf/../../other/stb_image.h"
   STACKTOP = sp;return ($155|0); //@line 2638 "src/sprites/../puun/gf/../../other/stb_image.h"
  }
  else if ((label|0) == 17) {
   $53 = $L; //@line 2601 "src/sprites/../puun/gf/../../other/stb_image.h"
   $54 = ($53|0)==(0); //@line 2601 "src/sprites/../puun/gf/../../other/stb_image.h"
   $55 = $54&1; //@line 2601 "src/sprites/../puun/gf/../../other/stb_image.h"
   $0 = $55; //@line 2601 "src/sprites/../puun/gf/../../other/stb_image.h"
   $155 = $0; //@line 2638 "src/sprites/../puun/gf/../../other/stb_image.h"
   STACKTOP = sp;return ($155|0); //@line 2638 "src/sprites/../puun/gf/../../other/stb_image.h"
  }
 } else if ((($3|0) == 221)) {
  $5 = $1; //@line 2585 "src/sprites/../puun/gf/../../other/stb_image.h"
  $6 = HEAP32[$5>>2]|0; //@line 2585 "src/sprites/../puun/gf/../../other/stb_image.h"
  $7 = (_stbi__get16be($6)|0); //@line 2585 "src/sprites/../puun/gf/../../other/stb_image.h"
  $8 = ($7|0)!=(4); //@line 2585 "src/sprites/../puun/gf/../../other/stb_image.h"
  if ($8) {
   $9 = (_stbi__err(8200)|0); //@line 2585 "src/sprites/../puun/gf/../../other/stb_image.h"
   $0 = $9; //@line 2585 "src/sprites/../puun/gf/../../other/stb_image.h"
   $155 = $0; //@line 2638 "src/sprites/../puun/gf/../../other/stb_image.h"
   STACKTOP = sp;return ($155|0); //@line 2638 "src/sprites/../puun/gf/../../other/stb_image.h"
  } else {
   $10 = $1; //@line 2586 "src/sprites/../puun/gf/../../other/stb_image.h"
   $11 = HEAP32[$10>>2]|0; //@line 2586 "src/sprites/../puun/gf/../../other/stb_image.h"
   $12 = (_stbi__get16be($11)|0); //@line 2586 "src/sprites/../puun/gf/../../other/stb_image.h"
   $13 = $1; //@line 2586 "src/sprites/../puun/gf/../../other/stb_image.h"
   $14 = (($13) + 18168|0); //@line 2586 "src/sprites/../puun/gf/../../other/stb_image.h"
   HEAP32[$14>>2] = $12; //@line 2586 "src/sprites/../puun/gf/../../other/stb_image.h"
   $0 = 1; //@line 2587 "src/sprites/../puun/gf/../../other/stb_image.h"
   $155 = $0; //@line 2638 "src/sprites/../puun/gf/../../other/stb_image.h"
   STACKTOP = sp;return ($155|0); //@line 2638 "src/sprites/../puun/gf/../../other/stb_image.h"
  }
 } else if ((($3|0) == 196)) {
  $56 = $1; //@line 2604 "src/sprites/../puun/gf/../../other/stb_image.h"
  $57 = HEAP32[$56>>2]|0; //@line 2604 "src/sprites/../puun/gf/../../other/stb_image.h"
  $58 = (_stbi__get16be($57)|0); //@line 2604 "src/sprites/../puun/gf/../../other/stb_image.h"
  $59 = (($58) - 2)|0; //@line 2604 "src/sprites/../puun/gf/../../other/stb_image.h"
  $L = $59; //@line 2604 "src/sprites/../puun/gf/../../other/stb_image.h"
  while(1) {
   $60 = $L; //@line 2605 "src/sprites/../puun/gf/../../other/stb_image.h"
   $61 = ($60|0)>(0); //@line 2605 "src/sprites/../puun/gf/../../other/stb_image.h"
   if (!($61)) {
    label = 41;
    break;
   }
   $n = 0; //@line 2607 "src/sprites/../puun/gf/../../other/stb_image.h"
   $62 = $1; //@line 2608 "src/sprites/../puun/gf/../../other/stb_image.h"
   $63 = HEAP32[$62>>2]|0; //@line 2608 "src/sprites/../puun/gf/../../other/stb_image.h"
   $64 = (_stbi__get8($63)|0); //@line 2608 "src/sprites/../puun/gf/../../other/stb_image.h"
   $65 = $64&255; //@line 2608 "src/sprites/../puun/gf/../../other/stb_image.h"
   $q2 = $65; //@line 2608 "src/sprites/../puun/gf/../../other/stb_image.h"
   $66 = $q2; //@line 2609 "src/sprites/../puun/gf/../../other/stb_image.h"
   $67 = $66 >> 4; //@line 2609 "src/sprites/../puun/gf/../../other/stb_image.h"
   $tc = $67; //@line 2609 "src/sprites/../puun/gf/../../other/stb_image.h"
   $68 = $q2; //@line 2610 "src/sprites/../puun/gf/../../other/stb_image.h"
   $69 = $68 & 15; //@line 2610 "src/sprites/../puun/gf/../../other/stb_image.h"
   $th = $69; //@line 2610 "src/sprites/../puun/gf/../../other/stb_image.h"
   $70 = $tc; //@line 2611 "src/sprites/../puun/gf/../../other/stb_image.h"
   $71 = ($70|0)>(1); //@line 2611 "src/sprites/../puun/gf/../../other/stb_image.h"
   if ($71) {
    label = 22;
    break;
   }
   $72 = $th; //@line 2611 "src/sprites/../puun/gf/../../other/stb_image.h"
   $73 = ($72|0)>(3); //@line 2611 "src/sprites/../puun/gf/../../other/stb_image.h"
   if ($73) {
    label = 22;
    break;
   }
   $i1 = 0; //@line 2612 "src/sprites/../puun/gf/../../other/stb_image.h"
   while(1) {
    $75 = $i1; //@line 2612 "src/sprites/../puun/gf/../../other/stb_image.h"
    $76 = ($75|0)<(16); //@line 2612 "src/sprites/../puun/gf/../../other/stb_image.h"
    if (!($76)) {
     break;
    }
    $77 = $1; //@line 2613 "src/sprites/../puun/gf/../../other/stb_image.h"
    $78 = HEAP32[$77>>2]|0; //@line 2613 "src/sprites/../puun/gf/../../other/stb_image.h"
    $79 = (_stbi__get8($78)|0); //@line 2613 "src/sprites/../puun/gf/../../other/stb_image.h"
    $80 = $79&255; //@line 2613 "src/sprites/../puun/gf/../../other/stb_image.h"
    $81 = $i1; //@line 2613 "src/sprites/../puun/gf/../../other/stb_image.h"
    $82 = (($sizes) + ($81<<2)|0); //@line 2613 "src/sprites/../puun/gf/../../other/stb_image.h"
    HEAP32[$82>>2] = $80; //@line 2613 "src/sprites/../puun/gf/../../other/stb_image.h"
    $83 = $i1; //@line 2614 "src/sprites/../puun/gf/../../other/stb_image.h"
    $84 = (($sizes) + ($83<<2)|0); //@line 2614 "src/sprites/../puun/gf/../../other/stb_image.h"
    $85 = HEAP32[$84>>2]|0; //@line 2614 "src/sprites/../puun/gf/../../other/stb_image.h"
    $86 = $n; //@line 2614 "src/sprites/../puun/gf/../../other/stb_image.h"
    $87 = (($86) + ($85))|0; //@line 2614 "src/sprites/../puun/gf/../../other/stb_image.h"
    $n = $87; //@line 2614 "src/sprites/../puun/gf/../../other/stb_image.h"
    $88 = $i1; //@line 2612 "src/sprites/../puun/gf/../../other/stb_image.h"
    $89 = (($88) + 1)|0; //@line 2612 "src/sprites/../puun/gf/../../other/stb_image.h"
    $i1 = $89; //@line 2612 "src/sprites/../puun/gf/../../other/stb_image.h"
   }
   $90 = $L; //@line 2616 "src/sprites/../puun/gf/../../other/stb_image.h"
   $91 = (($90) - 17)|0; //@line 2616 "src/sprites/../puun/gf/../../other/stb_image.h"
   $L = $91; //@line 2616 "src/sprites/../puun/gf/../../other/stb_image.h"
   $92 = $tc; //@line 2617 "src/sprites/../puun/gf/../../other/stb_image.h"
   $93 = ($92|0)==(0); //@line 2617 "src/sprites/../puun/gf/../../other/stb_image.h"
   if ($93) {
    $94 = $1; //@line 2618 "src/sprites/../puun/gf/../../other/stb_image.h"
    $95 = (($94) + 4|0); //@line 2618 "src/sprites/../puun/gf/../../other/stb_image.h"
    $96 = $th; //@line 2618 "src/sprites/../puun/gf/../../other/stb_image.h"
    $97 = (($95) + (($96*1680)|0)|0); //@line 2618 "src/sprites/../puun/gf/../../other/stb_image.h"
    $98 = (_stbi__build_huffman($97,$sizes)|0); //@line 2618 "src/sprites/../puun/gf/../../other/stb_image.h"
    $99 = ($98|0)!=(0); //@line 2618 "src/sprites/../puun/gf/../../other/stb_image.h"
    if (!($99)) {
     label = 29;
     break;
    }
    $100 = $th; //@line 2619 "src/sprites/../puun/gf/../../other/stb_image.h"
    $101 = $1; //@line 2619 "src/sprites/../puun/gf/../../other/stb_image.h"
    $102 = (($101) + 4|0); //@line 2619 "src/sprites/../puun/gf/../../other/stb_image.h"
    $103 = (($102) + (($100*1680)|0)|0); //@line 2619 "src/sprites/../puun/gf/../../other/stb_image.h"
    $104 = (($103) + 1024|0); //@line 2619 "src/sprites/../puun/gf/../../other/stb_image.h"
    $v = $104; //@line 2619 "src/sprites/../puun/gf/../../other/stb_image.h"
   } else {
    $105 = $1; //@line 2621 "src/sprites/../puun/gf/../../other/stb_image.h"
    $106 = (($105) + 6724|0); //@line 2621 "src/sprites/../puun/gf/../../other/stb_image.h"
    $107 = $th; //@line 2621 "src/sprites/../puun/gf/../../other/stb_image.h"
    $108 = (($106) + (($107*1680)|0)|0); //@line 2621 "src/sprites/../puun/gf/../../other/stb_image.h"
    $109 = (_stbi__build_huffman($108,$sizes)|0); //@line 2621 "src/sprites/../puun/gf/../../other/stb_image.h"
    $110 = ($109|0)!=(0); //@line 2621 "src/sprites/../puun/gf/../../other/stb_image.h"
    if (!($110)) {
     label = 32;
     break;
    }
    $111 = $th; //@line 2622 "src/sprites/../puun/gf/../../other/stb_image.h"
    $112 = $1; //@line 2622 "src/sprites/../puun/gf/../../other/stb_image.h"
    $113 = (($112) + 6724|0); //@line 2622 "src/sprites/../puun/gf/../../other/stb_image.h"
    $114 = (($113) + (($111*1680)|0)|0); //@line 2622 "src/sprites/../puun/gf/../../other/stb_image.h"
    $115 = (($114) + 1024|0); //@line 2622 "src/sprites/../puun/gf/../../other/stb_image.h"
    $v = $115; //@line 2622 "src/sprites/../puun/gf/../../other/stb_image.h"
   }
   $i1 = 0; //@line 2624 "src/sprites/../puun/gf/../../other/stb_image.h"
   while(1) {
    $116 = $i1; //@line 2624 "src/sprites/../puun/gf/../../other/stb_image.h"
    $117 = $n; //@line 2624 "src/sprites/../puun/gf/../../other/stb_image.h"
    $118 = ($116|0)<($117|0); //@line 2624 "src/sprites/../puun/gf/../../other/stb_image.h"
    if (!($118)) {
     break;
    }
    $119 = $1; //@line 2625 "src/sprites/../puun/gf/../../other/stb_image.h"
    $120 = HEAP32[$119>>2]|0; //@line 2625 "src/sprites/../puun/gf/../../other/stb_image.h"
    $121 = (_stbi__get8($120)|0); //@line 2625 "src/sprites/../puun/gf/../../other/stb_image.h"
    $122 = $i1; //@line 2625 "src/sprites/../puun/gf/../../other/stb_image.h"
    $123 = $v; //@line 2625 "src/sprites/../puun/gf/../../other/stb_image.h"
    $124 = (($123) + ($122)|0); //@line 2625 "src/sprites/../puun/gf/../../other/stb_image.h"
    HEAP8[$124>>0] = $121; //@line 2625 "src/sprites/../puun/gf/../../other/stb_image.h"
    $125 = $i1; //@line 2624 "src/sprites/../puun/gf/../../other/stb_image.h"
    $126 = (($125) + 1)|0; //@line 2624 "src/sprites/../puun/gf/../../other/stb_image.h"
    $i1 = $126; //@line 2624 "src/sprites/../puun/gf/../../other/stb_image.h"
   }
   $127 = $tc; //@line 2626 "src/sprites/../puun/gf/../../other/stb_image.h"
   $128 = ($127|0)!=(0); //@line 2626 "src/sprites/../puun/gf/../../other/stb_image.h"
   if ($128) {
    $129 = $th; //@line 2627 "src/sprites/../puun/gf/../../other/stb_image.h"
    $130 = $1; //@line 2627 "src/sprites/../puun/gf/../../other/stb_image.h"
    $131 = (($130) + 13700|0); //@line 2627 "src/sprites/../puun/gf/../../other/stb_image.h"
    $132 = (($131) + ($129<<10)|0); //@line 2627 "src/sprites/../puun/gf/../../other/stb_image.h"
    $133 = $1; //@line 2627 "src/sprites/../puun/gf/../../other/stb_image.h"
    $134 = (($133) + 6724|0); //@line 2627 "src/sprites/../puun/gf/../../other/stb_image.h"
    $135 = $th; //@line 2627 "src/sprites/../puun/gf/../../other/stb_image.h"
    $136 = (($134) + (($135*1680)|0)|0); //@line 2627 "src/sprites/../puun/gf/../../other/stb_image.h"
    _stbi__build_fast_ac($132,$136); //@line 2627 "src/sprites/../puun/gf/../../other/stb_image.h"
   }
   $137 = $n; //@line 2628 "src/sprites/../puun/gf/../../other/stb_image.h"
   $138 = $L; //@line 2628 "src/sprites/../puun/gf/../../other/stb_image.h"
   $139 = (($138) - ($137))|0; //@line 2628 "src/sprites/../puun/gf/../../other/stb_image.h"
   $L = $139; //@line 2628 "src/sprites/../puun/gf/../../other/stb_image.h"
  }
  if ((label|0) == 22) {
   $74 = (_stbi__err(8328)|0); //@line 2611 "src/sprites/../puun/gf/../../other/stb_image.h"
   $0 = $74; //@line 2611 "src/sprites/../puun/gf/../../other/stb_image.h"
   $155 = $0; //@line 2638 "src/sprites/../puun/gf/../../other/stb_image.h"
   STACKTOP = sp;return ($155|0); //@line 2638 "src/sprites/../puun/gf/../../other/stb_image.h"
  }
  else if ((label|0) == 29) {
   $0 = 0; //@line 2618 "src/sprites/../puun/gf/../../other/stb_image.h"
   $155 = $0; //@line 2638 "src/sprites/../puun/gf/../../other/stb_image.h"
   STACKTOP = sp;return ($155|0); //@line 2638 "src/sprites/../puun/gf/../../other/stb_image.h"
  }
  else if ((label|0) == 32) {
   $0 = 0; //@line 2621 "src/sprites/../puun/gf/../../other/stb_image.h"
   $155 = $0; //@line 2638 "src/sprites/../puun/gf/../../other/stb_image.h"
   STACKTOP = sp;return ($155|0); //@line 2638 "src/sprites/../puun/gf/../../other/stb_image.h"
  }
  else if ((label|0) == 41) {
   $140 = $L; //@line 2630 "src/sprites/../puun/gf/../../other/stb_image.h"
   $141 = ($140|0)==(0); //@line 2630 "src/sprites/../puun/gf/../../other/stb_image.h"
   $142 = $141&1; //@line 2630 "src/sprites/../puun/gf/../../other/stb_image.h"
   $0 = $142; //@line 2630 "src/sprites/../puun/gf/../../other/stb_image.h"
   $155 = $0; //@line 2638 "src/sprites/../puun/gf/../../other/stb_image.h"
   STACKTOP = sp;return ($155|0); //@line 2638 "src/sprites/../puun/gf/../../other/stb_image.h"
  }
 } else if ((($3|0) == 255)) {
  $4 = (_stbi__err(8184)|0); //@line 2582 "src/sprites/../puun/gf/../../other/stb_image.h"
  $0 = $4; //@line 2582 "src/sprites/../puun/gf/../../other/stb_image.h"
  $155 = $0; //@line 2638 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($155|0); //@line 2638 "src/sprites/../puun/gf/../../other/stb_image.h"
 } else {
  $143 = $2; //@line 2633 "src/sprites/../puun/gf/../../other/stb_image.h"
  $144 = ($143|0)>=(224); //@line 2633 "src/sprites/../puun/gf/../../other/stb_image.h"
  if ($144) {
   $145 = $2; //@line 2633 "src/sprites/../puun/gf/../../other/stb_image.h"
   $146 = ($145|0)<=(239); //@line 2633 "src/sprites/../puun/gf/../../other/stb_image.h"
   if (!($146)) {
    label = 44;
   }
  } else {
   label = 44;
  }
  if ((label|0) == 44) {
   $147 = $2; //@line 2633 "src/sprites/../puun/gf/../../other/stb_image.h"
   $148 = ($147|0)==(254); //@line 2633 "src/sprites/../puun/gf/../../other/stb_image.h"
   if (!($148)) {
    $0 = 0; //@line 2637 "src/sprites/../puun/gf/../../other/stb_image.h"
    $155 = $0; //@line 2638 "src/sprites/../puun/gf/../../other/stb_image.h"
    STACKTOP = sp;return ($155|0); //@line 2638 "src/sprites/../puun/gf/../../other/stb_image.h"
   }
  }
  $149 = $1; //@line 2634 "src/sprites/../puun/gf/../../other/stb_image.h"
  $150 = HEAP32[$149>>2]|0; //@line 2634 "src/sprites/../puun/gf/../../other/stb_image.h"
  $151 = $1; //@line 2634 "src/sprites/../puun/gf/../../other/stb_image.h"
  $152 = HEAP32[$151>>2]|0; //@line 2634 "src/sprites/../puun/gf/../../other/stb_image.h"
  $153 = (_stbi__get16be($152)|0); //@line 2634 "src/sprites/../puun/gf/../../other/stb_image.h"
  $154 = (($153) - 2)|0; //@line 2634 "src/sprites/../puun/gf/../../other/stb_image.h"
  _stbi__skip($150,$154); //@line 2634 "src/sprites/../puun/gf/../../other/stb_image.h"
  $0 = 1; //@line 2635 "src/sprites/../puun/gf/../../other/stb_image.h"
  $155 = $0; //@line 2638 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($155|0); //@line 2638 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 return (0)|0;
}
function _stbi__build_fast_ac($fast_ac,$h) {
 $fast_ac = $fast_ac|0;
 $h = $h|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $8 = 0, $9 = 0, $fast = 0, $i = 0, $k = 0, $len = 0;
 var $m = 0, $magbits = 0, $rs = 0, $run = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $fast_ac;
 $1 = $h;
 $i = 0; //@line 1543 "src/sprites/../puun/gf/../../other/stb_image.h"
 while(1) {
  $2 = $i; //@line 1543 "src/sprites/../puun/gf/../../other/stb_image.h"
  $3 = ($2|0)<(512); //@line 1543 "src/sprites/../puun/gf/../../other/stb_image.h"
  if (!($3)) {
   break;
  }
  $4 = $i; //@line 1544 "src/sprites/../puun/gf/../../other/stb_image.h"
  $5 = $1; //@line 1544 "src/sprites/../puun/gf/../../other/stb_image.h"
  $6 = (($5) + ($4)|0); //@line 1544 "src/sprites/../puun/gf/../../other/stb_image.h"
  $7 = HEAP8[$6>>0]|0; //@line 1544 "src/sprites/../puun/gf/../../other/stb_image.h"
  $fast = $7; //@line 1544 "src/sprites/../puun/gf/../../other/stb_image.h"
  $8 = $i; //@line 1545 "src/sprites/../puun/gf/../../other/stb_image.h"
  $9 = $0; //@line 1545 "src/sprites/../puun/gf/../../other/stb_image.h"
  $10 = (($9) + ($8<<1)|0); //@line 1545 "src/sprites/../puun/gf/../../other/stb_image.h"
  HEAP16[$10>>1] = 0; //@line 1545 "src/sprites/../puun/gf/../../other/stb_image.h"
  $11 = $fast; //@line 1546 "src/sprites/../puun/gf/../../other/stb_image.h"
  $12 = $11&255; //@line 1546 "src/sprites/../puun/gf/../../other/stb_image.h"
  $13 = ($12|0)<(255); //@line 1546 "src/sprites/../puun/gf/../../other/stb_image.h"
  if ($13) {
   $14 = $fast; //@line 1547 "src/sprites/../puun/gf/../../other/stb_image.h"
   $15 = $14&255; //@line 1547 "src/sprites/../puun/gf/../../other/stb_image.h"
   $16 = $1; //@line 1547 "src/sprites/../puun/gf/../../other/stb_image.h"
   $17 = (($16) + 1024|0); //@line 1547 "src/sprites/../puun/gf/../../other/stb_image.h"
   $18 = (($17) + ($15)|0); //@line 1547 "src/sprites/../puun/gf/../../other/stb_image.h"
   $19 = HEAP8[$18>>0]|0; //@line 1547 "src/sprites/../puun/gf/../../other/stb_image.h"
   $20 = $19&255; //@line 1547 "src/sprites/../puun/gf/../../other/stb_image.h"
   $rs = $20; //@line 1547 "src/sprites/../puun/gf/../../other/stb_image.h"
   $21 = $rs; //@line 1548 "src/sprites/../puun/gf/../../other/stb_image.h"
   $22 = $21 >> 4; //@line 1548 "src/sprites/../puun/gf/../../other/stb_image.h"
   $23 = $22 & 15; //@line 1548 "src/sprites/../puun/gf/../../other/stb_image.h"
   $run = $23; //@line 1548 "src/sprites/../puun/gf/../../other/stb_image.h"
   $24 = $rs; //@line 1549 "src/sprites/../puun/gf/../../other/stb_image.h"
   $25 = $24 & 15; //@line 1549 "src/sprites/../puun/gf/../../other/stb_image.h"
   $magbits = $25; //@line 1549 "src/sprites/../puun/gf/../../other/stb_image.h"
   $26 = $fast; //@line 1550 "src/sprites/../puun/gf/../../other/stb_image.h"
   $27 = $26&255; //@line 1550 "src/sprites/../puun/gf/../../other/stb_image.h"
   $28 = $1; //@line 1550 "src/sprites/../puun/gf/../../other/stb_image.h"
   $29 = (($28) + 1280|0); //@line 1550 "src/sprites/../puun/gf/../../other/stb_image.h"
   $30 = (($29) + ($27)|0); //@line 1550 "src/sprites/../puun/gf/../../other/stb_image.h"
   $31 = HEAP8[$30>>0]|0; //@line 1550 "src/sprites/../puun/gf/../../other/stb_image.h"
   $32 = $31&255; //@line 1550 "src/sprites/../puun/gf/../../other/stb_image.h"
   $len = $32; //@line 1550 "src/sprites/../puun/gf/../../other/stb_image.h"
   $33 = $magbits; //@line 1552 "src/sprites/../puun/gf/../../other/stb_image.h"
   $34 = ($33|0)!=(0); //@line 1552 "src/sprites/../puun/gf/../../other/stb_image.h"
   if ($34) {
    $35 = $len; //@line 1552 "src/sprites/../puun/gf/../../other/stb_image.h"
    $36 = $magbits; //@line 1552 "src/sprites/../puun/gf/../../other/stb_image.h"
    $37 = (($35) + ($36))|0; //@line 1552 "src/sprites/../puun/gf/../../other/stb_image.h"
    $38 = ($37|0)<=(9); //@line 1552 "src/sprites/../puun/gf/../../other/stb_image.h"
    if ($38) {
     $39 = $i; //@line 1554 "src/sprites/../puun/gf/../../other/stb_image.h"
     $40 = $len; //@line 1554 "src/sprites/../puun/gf/../../other/stb_image.h"
     $41 = $39 << $40; //@line 1554 "src/sprites/../puun/gf/../../other/stb_image.h"
     $42 = $41 & 511; //@line 1554 "src/sprites/../puun/gf/../../other/stb_image.h"
     $43 = $magbits; //@line 1554 "src/sprites/../puun/gf/../../other/stb_image.h"
     $44 = (9 - ($43))|0; //@line 1554 "src/sprites/../puun/gf/../../other/stb_image.h"
     $45 = $42 >> $44; //@line 1554 "src/sprites/../puun/gf/../../other/stb_image.h"
     $k = $45; //@line 1554 "src/sprites/../puun/gf/../../other/stb_image.h"
     $46 = $magbits; //@line 1555 "src/sprites/../puun/gf/../../other/stb_image.h"
     $47 = (($46) - 1)|0; //@line 1555 "src/sprites/../puun/gf/../../other/stb_image.h"
     $48 = 1 << $47; //@line 1555 "src/sprites/../puun/gf/../../other/stb_image.h"
     $m = $48; //@line 1555 "src/sprites/../puun/gf/../../other/stb_image.h"
     $49 = $k; //@line 1556 "src/sprites/../puun/gf/../../other/stb_image.h"
     $50 = $m; //@line 1556 "src/sprites/../puun/gf/../../other/stb_image.h"
     $51 = ($49|0)<($50|0); //@line 1556 "src/sprites/../puun/gf/../../other/stb_image.h"
     if ($51) {
      $52 = $magbits; //@line 1556 "src/sprites/../puun/gf/../../other/stb_image.h"
      $53 = -1 << $52; //@line 1556 "src/sprites/../puun/gf/../../other/stb_image.h"
      $54 = (($53) + 1)|0; //@line 1556 "src/sprites/../puun/gf/../../other/stb_image.h"
      $55 = $k; //@line 1556 "src/sprites/../puun/gf/../../other/stb_image.h"
      $56 = (($55) + ($54))|0; //@line 1556 "src/sprites/../puun/gf/../../other/stb_image.h"
      $k = $56; //@line 1556 "src/sprites/../puun/gf/../../other/stb_image.h"
     }
     $57 = $k; //@line 1558 "src/sprites/../puun/gf/../../other/stb_image.h"
     $58 = ($57|0)>=(-128); //@line 1558 "src/sprites/../puun/gf/../../other/stb_image.h"
     if ($58) {
      $59 = $k; //@line 1558 "src/sprites/../puun/gf/../../other/stb_image.h"
      $60 = ($59|0)<=(127); //@line 1558 "src/sprites/../puun/gf/../../other/stb_image.h"
      if ($60) {
       $61 = $k; //@line 1559 "src/sprites/../puun/gf/../../other/stb_image.h"
       $62 = $61 << 8; //@line 1559 "src/sprites/../puun/gf/../../other/stb_image.h"
       $63 = $run; //@line 1559 "src/sprites/../puun/gf/../../other/stb_image.h"
       $64 = $63 << 4; //@line 1559 "src/sprites/../puun/gf/../../other/stb_image.h"
       $65 = (($62) + ($64))|0; //@line 1559 "src/sprites/../puun/gf/../../other/stb_image.h"
       $66 = $len; //@line 1559 "src/sprites/../puun/gf/../../other/stb_image.h"
       $67 = $magbits; //@line 1559 "src/sprites/../puun/gf/../../other/stb_image.h"
       $68 = (($66) + ($67))|0; //@line 1559 "src/sprites/../puun/gf/../../other/stb_image.h"
       $69 = (($65) + ($68))|0; //@line 1559 "src/sprites/../puun/gf/../../other/stb_image.h"
       $70 = $69&65535; //@line 1559 "src/sprites/../puun/gf/../../other/stb_image.h"
       $71 = $i; //@line 1559 "src/sprites/../puun/gf/../../other/stb_image.h"
       $72 = $0; //@line 1559 "src/sprites/../puun/gf/../../other/stb_image.h"
       $73 = (($72) + ($71<<1)|0); //@line 1559 "src/sprites/../puun/gf/../../other/stb_image.h"
       HEAP16[$73>>1] = $70; //@line 1559 "src/sprites/../puun/gf/../../other/stb_image.h"
      }
     }
    }
   }
  }
  $74 = $i; //@line 1543 "src/sprites/../puun/gf/../../other/stb_image.h"
  $75 = (($74) + 1)|0; //@line 1543 "src/sprites/../puun/gf/../../other/stb_image.h"
  $i = $75; //@line 1543 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 STACKTOP = sp;return; //@line 1563 "src/sprites/../puun/gf/../../other/stb_image.h"
}
function _stbi__build_huffman($h,$count) {
 $h = $h|0;
 $count = $count|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0;
 var $99 = 0, $c = 0, $code = 0, $i = 0, $j = 0, $k = 0, $m = 0, $s = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $h;
 $2 = $count;
 $k = 0; //@line 1499 "src/sprites/../puun/gf/../../other/stb_image.h"
 $i = 0; //@line 1501 "src/sprites/../puun/gf/../../other/stb_image.h"
 while(1) {
  $3 = $i; //@line 1501 "src/sprites/../puun/gf/../../other/stb_image.h"
  $4 = ($3|0)<(16); //@line 1501 "src/sprites/../puun/gf/../../other/stb_image.h"
  if (!($4)) {
   break;
  }
  $j = 0; //@line 1502 "src/sprites/../puun/gf/../../other/stb_image.h"
  while(1) {
   $5 = $j; //@line 1502 "src/sprites/../puun/gf/../../other/stb_image.h"
   $6 = $i; //@line 1502 "src/sprites/../puun/gf/../../other/stb_image.h"
   $7 = $2; //@line 1502 "src/sprites/../puun/gf/../../other/stb_image.h"
   $8 = (($7) + ($6<<2)|0); //@line 1502 "src/sprites/../puun/gf/../../other/stb_image.h"
   $9 = HEAP32[$8>>2]|0; //@line 1502 "src/sprites/../puun/gf/../../other/stb_image.h"
   $10 = ($5|0)<($9|0); //@line 1502 "src/sprites/../puun/gf/../../other/stb_image.h"
   if (!($10)) {
    break;
   }
   $11 = $i; //@line 1503 "src/sprites/../puun/gf/../../other/stb_image.h"
   $12 = (($11) + 1)|0; //@line 1503 "src/sprites/../puun/gf/../../other/stb_image.h"
   $13 = $12&255; //@line 1503 "src/sprites/../puun/gf/../../other/stb_image.h"
   $14 = $k; //@line 1503 "src/sprites/../puun/gf/../../other/stb_image.h"
   $15 = (($14) + 1)|0; //@line 1503 "src/sprites/../puun/gf/../../other/stb_image.h"
   $k = $15; //@line 1503 "src/sprites/../puun/gf/../../other/stb_image.h"
   $16 = $1; //@line 1503 "src/sprites/../puun/gf/../../other/stb_image.h"
   $17 = (($16) + 1280|0); //@line 1503 "src/sprites/../puun/gf/../../other/stb_image.h"
   $18 = (($17) + ($14)|0); //@line 1503 "src/sprites/../puun/gf/../../other/stb_image.h"
   HEAP8[$18>>0] = $13; //@line 1503 "src/sprites/../puun/gf/../../other/stb_image.h"
   $19 = $j; //@line 1502 "src/sprites/../puun/gf/../../other/stb_image.h"
   $20 = (($19) + 1)|0; //@line 1502 "src/sprites/../puun/gf/../../other/stb_image.h"
   $j = $20; //@line 1502 "src/sprites/../puun/gf/../../other/stb_image.h"
  }
  $21 = $i; //@line 1501 "src/sprites/../puun/gf/../../other/stb_image.h"
  $22 = (($21) + 1)|0; //@line 1501 "src/sprites/../puun/gf/../../other/stb_image.h"
  $i = $22; //@line 1501 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $23 = $k; //@line 1504 "src/sprites/../puun/gf/../../other/stb_image.h"
 $24 = $1; //@line 1504 "src/sprites/../puun/gf/../../other/stb_image.h"
 $25 = (($24) + 1280|0); //@line 1504 "src/sprites/../puun/gf/../../other/stb_image.h"
 $26 = (($25) + ($23)|0); //@line 1504 "src/sprites/../puun/gf/../../other/stb_image.h"
 HEAP8[$26>>0] = 0; //@line 1504 "src/sprites/../puun/gf/../../other/stb_image.h"
 $code = 0; //@line 1507 "src/sprites/../puun/gf/../../other/stb_image.h"
 $k = 0; //@line 1508 "src/sprites/../puun/gf/../../other/stb_image.h"
 $j = 1; //@line 1509 "src/sprites/../puun/gf/../../other/stb_image.h"
 while(1) {
  $27 = $j; //@line 1509 "src/sprites/../puun/gf/../../other/stb_image.h"
  $28 = ($27|0)<=(16); //@line 1509 "src/sprites/../puun/gf/../../other/stb_image.h"
  if (!($28)) {
   break;
  }
  $29 = $k; //@line 1511 "src/sprites/../puun/gf/../../other/stb_image.h"
  $30 = $code; //@line 1511 "src/sprites/../puun/gf/../../other/stb_image.h"
  $31 = (($29) - ($30))|0; //@line 1511 "src/sprites/../puun/gf/../../other/stb_image.h"
  $32 = $j; //@line 1511 "src/sprites/../puun/gf/../../other/stb_image.h"
  $33 = $1; //@line 1511 "src/sprites/../puun/gf/../../other/stb_image.h"
  $34 = (($33) + 1612|0); //@line 1511 "src/sprites/../puun/gf/../../other/stb_image.h"
  $35 = (($34) + ($32<<2)|0); //@line 1511 "src/sprites/../puun/gf/../../other/stb_image.h"
  HEAP32[$35>>2] = $31; //@line 1511 "src/sprites/../puun/gf/../../other/stb_image.h"
  $36 = $k; //@line 1512 "src/sprites/../puun/gf/../../other/stb_image.h"
  $37 = $1; //@line 1512 "src/sprites/../puun/gf/../../other/stb_image.h"
  $38 = (($37) + 1280|0); //@line 1512 "src/sprites/../puun/gf/../../other/stb_image.h"
  $39 = (($38) + ($36)|0); //@line 1512 "src/sprites/../puun/gf/../../other/stb_image.h"
  $40 = HEAP8[$39>>0]|0; //@line 1512 "src/sprites/../puun/gf/../../other/stb_image.h"
  $41 = $40&255; //@line 1512 "src/sprites/../puun/gf/../../other/stb_image.h"
  $42 = $j; //@line 1512 "src/sprites/../puun/gf/../../other/stb_image.h"
  $43 = ($41|0)==($42|0); //@line 1512 "src/sprites/../puun/gf/../../other/stb_image.h"
  if ($43) {
   while(1) {
    $44 = $k; //@line 1513 "src/sprites/../puun/gf/../../other/stb_image.h"
    $45 = $1; //@line 1513 "src/sprites/../puun/gf/../../other/stb_image.h"
    $46 = (($45) + 1280|0); //@line 1513 "src/sprites/../puun/gf/../../other/stb_image.h"
    $47 = (($46) + ($44)|0); //@line 1513 "src/sprites/../puun/gf/../../other/stb_image.h"
    $48 = HEAP8[$47>>0]|0; //@line 1513 "src/sprites/../puun/gf/../../other/stb_image.h"
    $49 = $48&255; //@line 1513 "src/sprites/../puun/gf/../../other/stb_image.h"
    $50 = $j; //@line 1513 "src/sprites/../puun/gf/../../other/stb_image.h"
    $51 = ($49|0)==($50|0); //@line 1513 "src/sprites/../puun/gf/../../other/stb_image.h"
    if (!($51)) {
     break;
    }
    $52 = $code; //@line 1514 "src/sprites/../puun/gf/../../other/stb_image.h"
    $53 = (($52) + 1)|0; //@line 1514 "src/sprites/../puun/gf/../../other/stb_image.h"
    $code = $53; //@line 1514 "src/sprites/../puun/gf/../../other/stb_image.h"
    $54 = $52&65535; //@line 1514 "src/sprites/../puun/gf/../../other/stb_image.h"
    $55 = $k; //@line 1514 "src/sprites/../puun/gf/../../other/stb_image.h"
    $56 = (($55) + 1)|0; //@line 1514 "src/sprites/../puun/gf/../../other/stb_image.h"
    $k = $56; //@line 1514 "src/sprites/../puun/gf/../../other/stb_image.h"
    $57 = $1; //@line 1514 "src/sprites/../puun/gf/../../other/stb_image.h"
    $58 = (($57) + 512|0); //@line 1514 "src/sprites/../puun/gf/../../other/stb_image.h"
    $59 = (($58) + ($55<<1)|0); //@line 1514 "src/sprites/../puun/gf/../../other/stb_image.h"
    HEAP16[$59>>1] = $54; //@line 1514 "src/sprites/../puun/gf/../../other/stb_image.h"
   }
   $60 = $code; //@line 1515 "src/sprites/../puun/gf/../../other/stb_image.h"
   $61 = (($60) - 1)|0; //@line 1515 "src/sprites/../puun/gf/../../other/stb_image.h"
   $62 = $j; //@line 1515 "src/sprites/../puun/gf/../../other/stb_image.h"
   $63 = 1 << $62; //@line 1515 "src/sprites/../puun/gf/../../other/stb_image.h"
   $64 = ($61|0)>=($63|0); //@line 1515 "src/sprites/../puun/gf/../../other/stb_image.h"
   if ($64) {
    label = 16;
    break;
   }
  }
  $66 = $code; //@line 1518 "src/sprites/../puun/gf/../../other/stb_image.h"
  $67 = $j; //@line 1518 "src/sprites/../puun/gf/../../other/stb_image.h"
  $68 = (16 - ($67))|0; //@line 1518 "src/sprites/../puun/gf/../../other/stb_image.h"
  $69 = $66 << $68; //@line 1518 "src/sprites/../puun/gf/../../other/stb_image.h"
  $70 = $j; //@line 1518 "src/sprites/../puun/gf/../../other/stb_image.h"
  $71 = $1; //@line 1518 "src/sprites/../puun/gf/../../other/stb_image.h"
  $72 = (($71) + 1540|0); //@line 1518 "src/sprites/../puun/gf/../../other/stb_image.h"
  $73 = (($72) + ($70<<2)|0); //@line 1518 "src/sprites/../puun/gf/../../other/stb_image.h"
  HEAP32[$73>>2] = $69; //@line 1518 "src/sprites/../puun/gf/../../other/stb_image.h"
  $74 = $code; //@line 1519 "src/sprites/../puun/gf/../../other/stb_image.h"
  $75 = $74 << 1; //@line 1519 "src/sprites/../puun/gf/../../other/stb_image.h"
  $code = $75; //@line 1519 "src/sprites/../puun/gf/../../other/stb_image.h"
  $76 = $j; //@line 1509 "src/sprites/../puun/gf/../../other/stb_image.h"
  $77 = (($76) + 1)|0; //@line 1509 "src/sprites/../puun/gf/../../other/stb_image.h"
  $j = $77; //@line 1509 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 if ((label|0) == 16) {
  $65 = (_stbi__err(8344)|0); //@line 1515 "src/sprites/../puun/gf/../../other/stb_image.h"
  $0 = $65; //@line 1515 "src/sprites/../puun/gf/../../other/stb_image.h"
  $120 = $0; //@line 1536 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($120|0); //@line 1536 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $78 = $j; //@line 1521 "src/sprites/../puun/gf/../../other/stb_image.h"
 $79 = $1; //@line 1521 "src/sprites/../puun/gf/../../other/stb_image.h"
 $80 = (($79) + 1540|0); //@line 1521 "src/sprites/../puun/gf/../../other/stb_image.h"
 $81 = (($80) + ($78<<2)|0); //@line 1521 "src/sprites/../puun/gf/../../other/stb_image.h"
 HEAP32[$81>>2] = -1; //@line 1521 "src/sprites/../puun/gf/../../other/stb_image.h"
 $82 = $1; //@line 1524 "src/sprites/../puun/gf/../../other/stb_image.h"
 _memset(($82|0),-1,512)|0; //@line 1524 "src/sprites/../puun/gf/../../other/stb_image.h"
 $i = 0; //@line 1525 "src/sprites/../puun/gf/../../other/stb_image.h"
 while(1) {
  $83 = $i; //@line 1525 "src/sprites/../puun/gf/../../other/stb_image.h"
  $84 = $k; //@line 1525 "src/sprites/../puun/gf/../../other/stb_image.h"
  $85 = ($83|0)<($84|0); //@line 1525 "src/sprites/../puun/gf/../../other/stb_image.h"
  if (!($85)) {
   break;
  }
  $86 = $i; //@line 1526 "src/sprites/../puun/gf/../../other/stb_image.h"
  $87 = $1; //@line 1526 "src/sprites/../puun/gf/../../other/stb_image.h"
  $88 = (($87) + 1280|0); //@line 1526 "src/sprites/../puun/gf/../../other/stb_image.h"
  $89 = (($88) + ($86)|0); //@line 1526 "src/sprites/../puun/gf/../../other/stb_image.h"
  $90 = HEAP8[$89>>0]|0; //@line 1526 "src/sprites/../puun/gf/../../other/stb_image.h"
  $91 = $90&255; //@line 1526 "src/sprites/../puun/gf/../../other/stb_image.h"
  $s = $91; //@line 1526 "src/sprites/../puun/gf/../../other/stb_image.h"
  $92 = $s; //@line 1527 "src/sprites/../puun/gf/../../other/stb_image.h"
  $93 = ($92|0)<=(9); //@line 1527 "src/sprites/../puun/gf/../../other/stb_image.h"
  if ($93) {
   $94 = $i; //@line 1528 "src/sprites/../puun/gf/../../other/stb_image.h"
   $95 = $1; //@line 1528 "src/sprites/../puun/gf/../../other/stb_image.h"
   $96 = (($95) + 512|0); //@line 1528 "src/sprites/../puun/gf/../../other/stb_image.h"
   $97 = (($96) + ($94<<1)|0); //@line 1528 "src/sprites/../puun/gf/../../other/stb_image.h"
   $98 = HEAP16[$97>>1]|0; //@line 1528 "src/sprites/../puun/gf/../../other/stb_image.h"
   $99 = $98&65535; //@line 1528 "src/sprites/../puun/gf/../../other/stb_image.h"
   $100 = $s; //@line 1528 "src/sprites/../puun/gf/../../other/stb_image.h"
   $101 = (9 - ($100))|0; //@line 1528 "src/sprites/../puun/gf/../../other/stb_image.h"
   $102 = $99 << $101; //@line 1528 "src/sprites/../puun/gf/../../other/stb_image.h"
   $c = $102; //@line 1528 "src/sprites/../puun/gf/../../other/stb_image.h"
   $103 = $s; //@line 1529 "src/sprites/../puun/gf/../../other/stb_image.h"
   $104 = (9 - ($103))|0; //@line 1529 "src/sprites/../puun/gf/../../other/stb_image.h"
   $105 = 1 << $104; //@line 1529 "src/sprites/../puun/gf/../../other/stb_image.h"
   $m = $105; //@line 1529 "src/sprites/../puun/gf/../../other/stb_image.h"
   $j = 0; //@line 1530 "src/sprites/../puun/gf/../../other/stb_image.h"
   while(1) {
    $106 = $j; //@line 1530 "src/sprites/../puun/gf/../../other/stb_image.h"
    $107 = $m; //@line 1530 "src/sprites/../puun/gf/../../other/stb_image.h"
    $108 = ($106|0)<($107|0); //@line 1530 "src/sprites/../puun/gf/../../other/stb_image.h"
    if (!($108)) {
     break;
    }
    $109 = $i; //@line 1531 "src/sprites/../puun/gf/../../other/stb_image.h"
    $110 = $109&255; //@line 1531 "src/sprites/../puun/gf/../../other/stb_image.h"
    $111 = $c; //@line 1531 "src/sprites/../puun/gf/../../other/stb_image.h"
    $112 = $j; //@line 1531 "src/sprites/../puun/gf/../../other/stb_image.h"
    $113 = (($111) + ($112))|0; //@line 1531 "src/sprites/../puun/gf/../../other/stb_image.h"
    $114 = $1; //@line 1531 "src/sprites/../puun/gf/../../other/stb_image.h"
    $115 = (($114) + ($113)|0); //@line 1531 "src/sprites/../puun/gf/../../other/stb_image.h"
    HEAP8[$115>>0] = $110; //@line 1531 "src/sprites/../puun/gf/../../other/stb_image.h"
    $116 = $j; //@line 1530 "src/sprites/../puun/gf/../../other/stb_image.h"
    $117 = (($116) + 1)|0; //@line 1530 "src/sprites/../puun/gf/../../other/stb_image.h"
    $j = $117; //@line 1530 "src/sprites/../puun/gf/../../other/stb_image.h"
   }
  }
  $118 = $i; //@line 1525 "src/sprites/../puun/gf/../../other/stb_image.h"
  $119 = (($118) + 1)|0; //@line 1525 "src/sprites/../puun/gf/../../other/stb_image.h"
  $i = $119; //@line 1525 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $0 = 1; //@line 1535 "src/sprites/../puun/gf/../../other/stb_image.h"
 $120 = $0; //@line 1536 "src/sprites/../puun/gf/../../other/stb_image.h"
 STACKTOP = sp;return ($120|0); //@line 1536 "src/sprites/../puun/gf/../../other/stb_image.h"
}
function _stbi__get_marker($j) {
 $j = $j|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $x = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $j;
 $2 = $1; //@line 2400 "src/sprites/../puun/gf/../../other/stb_image.h"
 $3 = (($2) + 18116|0); //@line 2400 "src/sprites/../puun/gf/../../other/stb_image.h"
 $4 = HEAP8[$3>>0]|0; //@line 2400 "src/sprites/../puun/gf/../../other/stb_image.h"
 $5 = $4&255; //@line 2400 "src/sprites/../puun/gf/../../other/stb_image.h"
 $6 = ($5|0)!=(255); //@line 2400 "src/sprites/../puun/gf/../../other/stb_image.h"
 if ($6) {
  $7 = $1; //@line 2400 "src/sprites/../puun/gf/../../other/stb_image.h"
  $8 = (($7) + 18116|0); //@line 2400 "src/sprites/../puun/gf/../../other/stb_image.h"
  $9 = HEAP8[$8>>0]|0; //@line 2400 "src/sprites/../puun/gf/../../other/stb_image.h"
  $x = $9; //@line 2400 "src/sprites/../puun/gf/../../other/stb_image.h"
  $10 = $1; //@line 2400 "src/sprites/../puun/gf/../../other/stb_image.h"
  $11 = (($10) + 18116|0); //@line 2400 "src/sprites/../puun/gf/../../other/stb_image.h"
  HEAP8[$11>>0] = -1; //@line 2400 "src/sprites/../puun/gf/../../other/stb_image.h"
  $12 = $x; //@line 2400 "src/sprites/../puun/gf/../../other/stb_image.h"
  $0 = $12; //@line 2400 "src/sprites/../puun/gf/../../other/stb_image.h"
  $26 = $0; //@line 2406 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($26|0); //@line 2406 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $13 = $1; //@line 2401 "src/sprites/../puun/gf/../../other/stb_image.h"
 $14 = HEAP32[$13>>2]|0; //@line 2401 "src/sprites/../puun/gf/../../other/stb_image.h"
 $15 = (_stbi__get8($14)|0); //@line 2401 "src/sprites/../puun/gf/../../other/stb_image.h"
 $x = $15; //@line 2401 "src/sprites/../puun/gf/../../other/stb_image.h"
 $16 = $x; //@line 2402 "src/sprites/../puun/gf/../../other/stb_image.h"
 $17 = $16&255; //@line 2402 "src/sprites/../puun/gf/../../other/stb_image.h"
 $18 = ($17|0)!=(255); //@line 2402 "src/sprites/../puun/gf/../../other/stb_image.h"
 if ($18) {
  $0 = -1; //@line 2402 "src/sprites/../puun/gf/../../other/stb_image.h"
  $26 = $0; //@line 2406 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($26|0); //@line 2406 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 while(1) {
  $19 = $x; //@line 2403 "src/sprites/../puun/gf/../../other/stb_image.h"
  $20 = $19&255; //@line 2403 "src/sprites/../puun/gf/../../other/stb_image.h"
  $21 = ($20|0)==(255); //@line 2403 "src/sprites/../puun/gf/../../other/stb_image.h"
  if (!($21)) {
   break;
  }
  $22 = $1; //@line 2404 "src/sprites/../puun/gf/../../other/stb_image.h"
  $23 = HEAP32[$22>>2]|0; //@line 2404 "src/sprites/../puun/gf/../../other/stb_image.h"
  $24 = (_stbi__get8($23)|0); //@line 2404 "src/sprites/../puun/gf/../../other/stb_image.h"
  $x = $24; //@line 2404 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $25 = $x; //@line 2405 "src/sprites/../puun/gf/../../other/stb_image.h"
 $0 = $25; //@line 2405 "src/sprites/../puun/gf/../../other/stb_image.h"
 $26 = $0; //@line 2406 "src/sprites/../puun/gf/../../other/stb_image.h"
 STACKTOP = sp;return ($26|0); //@line 2406 "src/sprites/../puun/gf/../../other/stb_image.h"
}
function _stbi__hdr_test_core($s) {
 $s = $s|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $i = 0;
 var $signature = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $s;
 $signature = 8368; //@line 5777 "src/sprites/../puun/gf/../../other/stb_image.h"
 $i = 0; //@line 5779 "src/sprites/../puun/gf/../../other/stb_image.h"
 while(1) {
  $2 = $i; //@line 5779 "src/sprites/../puun/gf/../../other/stb_image.h"
  $3 = $signature; //@line 5779 "src/sprites/../puun/gf/../../other/stb_image.h"
  $4 = (($3) + ($2)|0); //@line 5779 "src/sprites/../puun/gf/../../other/stb_image.h"
  $5 = HEAP8[$4>>0]|0; //@line 5779 "src/sprites/../puun/gf/../../other/stb_image.h"
  $6 = ($5<<24>>24)!=(0); //@line 5779 "src/sprites/../puun/gf/../../other/stb_image.h"
  if (!($6)) {
   label = 7;
   break;
  }
  $7 = $1; //@line 5780 "src/sprites/../puun/gf/../../other/stb_image.h"
  $8 = (_stbi__get8($7)|0); //@line 5780 "src/sprites/../puun/gf/../../other/stb_image.h"
  $9 = $8&255; //@line 5780 "src/sprites/../puun/gf/../../other/stb_image.h"
  $10 = $i; //@line 5780 "src/sprites/../puun/gf/../../other/stb_image.h"
  $11 = $signature; //@line 5780 "src/sprites/../puun/gf/../../other/stb_image.h"
  $12 = (($11) + ($10)|0); //@line 5780 "src/sprites/../puun/gf/../../other/stb_image.h"
  $13 = HEAP8[$12>>0]|0; //@line 5780 "src/sprites/../puun/gf/../../other/stb_image.h"
  $14 = $13 << 24 >> 24; //@line 5780 "src/sprites/../puun/gf/../../other/stb_image.h"
  $15 = ($9|0)!=($14|0); //@line 5780 "src/sprites/../puun/gf/../../other/stb_image.h"
  if ($15) {
   label = 4;
   break;
  }
  $16 = $i; //@line 5779 "src/sprites/../puun/gf/../../other/stb_image.h"
  $17 = (($16) + 1)|0; //@line 5779 "src/sprites/../puun/gf/../../other/stb_image.h"
  $i = $17; //@line 5779 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 if ((label|0) == 4) {
  $0 = 0; //@line 5781 "src/sprites/../puun/gf/../../other/stb_image.h"
  $18 = $0; //@line 5783 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($18|0); //@line 5783 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 else if ((label|0) == 7) {
  $0 = 1; //@line 5782 "src/sprites/../puun/gf/../../other/stb_image.h"
  $18 = $0; //@line 5783 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($18|0); //@line 5783 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 return (0)|0;
}
function _stbi__parse_zlib($a,$parse_header) {
 $a = $a|0;
 $parse_header = $parse_header|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $final = 0, $type = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $a;
 $2 = $parse_header;
 $3 = $2; //@line 3770 "src/sprites/../puun/gf/../../other/stb_image.h"
 $4 = ($3|0)!=(0); //@line 3770 "src/sprites/../puun/gf/../../other/stb_image.h"
 do {
  if ($4) {
   $5 = $1; //@line 3771 "src/sprites/../puun/gf/../../other/stb_image.h"
   $6 = (_stbi__parse_zlib_header($5)|0); //@line 3771 "src/sprites/../puun/gf/../../other/stb_image.h"
   $7 = ($6|0)!=(0); //@line 3771 "src/sprites/../puun/gf/../../other/stb_image.h"
   if ($7) {
    label = 5;
    break;
   } else {
    $0 = 0; //@line 3771 "src/sprites/../puun/gf/../../other/stb_image.h"
    break;
   }
  } else {
   label = 5;
  }
 } while(0);
 do {
  if ((label|0) == 5) {
   $8 = $1; //@line 3772 "src/sprites/../puun/gf/../../other/stb_image.h"
   $9 = (($8) + 8|0); //@line 3772 "src/sprites/../puun/gf/../../other/stb_image.h"
   HEAP32[$9>>2] = 0; //@line 3772 "src/sprites/../puun/gf/../../other/stb_image.h"
   $10 = $1; //@line 3773 "src/sprites/../puun/gf/../../other/stb_image.h"
   $11 = (($10) + 12|0); //@line 3773 "src/sprites/../puun/gf/../../other/stb_image.h"
   HEAP32[$11>>2] = 0; //@line 3773 "src/sprites/../puun/gf/../../other/stb_image.h"
   while(1) {
    $12 = $1; //@line 3775 "src/sprites/../puun/gf/../../other/stb_image.h"
    $13 = (_stbi__zreceive($12,1)|0); //@line 3775 "src/sprites/../puun/gf/../../other/stb_image.h"
    $final = $13; //@line 3775 "src/sprites/../puun/gf/../../other/stb_image.h"
    $14 = $1; //@line 3776 "src/sprites/../puun/gf/../../other/stb_image.h"
    $15 = (_stbi__zreceive($14,2)|0); //@line 3776 "src/sprites/../puun/gf/../../other/stb_image.h"
    $type = $15; //@line 3776 "src/sprites/../puun/gf/../../other/stb_image.h"
    $16 = $type; //@line 3777 "src/sprites/../puun/gf/../../other/stb_image.h"
    $17 = ($16|0)==(0); //@line 3777 "src/sprites/../puun/gf/../../other/stb_image.h"
    if ($17) {
     $18 = $1; //@line 3778 "src/sprites/../puun/gf/../../other/stb_image.h"
     $19 = (_stbi__parse_uncomperssed_block($18)|0); //@line 3778 "src/sprites/../puun/gf/../../other/stb_image.h"
     $20 = ($19|0)!=(0); //@line 3778 "src/sprites/../puun/gf/../../other/stb_image.h"
     if (!($20)) {
      label = 8;
      break;
     }
    } else {
     $21 = $type; //@line 3779 "src/sprites/../puun/gf/../../other/stb_image.h"
     $22 = ($21|0)==(3); //@line 3779 "src/sprites/../puun/gf/../../other/stb_image.h"
     if ($22) {
      label = 11;
      break;
     }
     $23 = $type; //@line 3782 "src/sprites/../puun/gf/../../other/stb_image.h"
     $24 = ($23|0)==(1); //@line 3782 "src/sprites/../puun/gf/../../other/stb_image.h"
     if ($24) {
      $25 = HEAP8[((8384 + 31|0))>>0]|0; //@line 3784 "src/sprites/../puun/gf/../../other/stb_image.h"
      $26 = ($25<<24>>24)!=(0); //@line 3784 "src/sprites/../puun/gf/../../other/stb_image.h"
      if (!($26)) {
       _stbi__init_zdefaults(); //@line 3784 "src/sprites/../puun/gf/../../other/stb_image.h"
      }
      $27 = $1; //@line 3785 "src/sprites/../puun/gf/../../other/stb_image.h"
      $28 = (($27) + 32|0); //@line 3785 "src/sprites/../puun/gf/../../other/stb_image.h"
      $29 = (_stbi__zbuild_huffman($28,8416,288)|0); //@line 3785 "src/sprites/../puun/gf/../../other/stb_image.h"
      $30 = ($29|0)!=(0); //@line 3785 "src/sprites/../puun/gf/../../other/stb_image.h"
      if (!($30)) {
       label = 16;
       break;
      }
      $31 = $1; //@line 3786 "src/sprites/../puun/gf/../../other/stb_image.h"
      $32 = (($31) + 2052|0); //@line 3786 "src/sprites/../puun/gf/../../other/stb_image.h"
      $33 = (_stbi__zbuild_huffman($32,8384,32)|0); //@line 3786 "src/sprites/../puun/gf/../../other/stb_image.h"
      $34 = ($33|0)!=(0); //@line 3786 "src/sprites/../puun/gf/../../other/stb_image.h"
      if (!($34)) {
       label = 18;
       break;
      }
     } else {
      $35 = $1; //@line 3788 "src/sprites/../puun/gf/../../other/stb_image.h"
      $36 = (_stbi__compute_huffman_codes($35)|0); //@line 3788 "src/sprites/../puun/gf/../../other/stb_image.h"
      $37 = ($36|0)!=(0); //@line 3788 "src/sprites/../puun/gf/../../other/stb_image.h"
      if (!($37)) {
       label = 21;
       break;
      }
     }
     $38 = $1; //@line 3790 "src/sprites/../puun/gf/../../other/stb_image.h"
     $39 = (_stbi__parse_huffman_block($38)|0); //@line 3790 "src/sprites/../puun/gf/../../other/stb_image.h"
     $40 = ($39|0)!=(0); //@line 3790 "src/sprites/../puun/gf/../../other/stb_image.h"
     if (!($40)) {
      label = 24;
      break;
     }
    }
    $41 = $final; //@line 3792 "src/sprites/../puun/gf/../../other/stb_image.h"
    $42 = ($41|0)!=(0); //@line 3792 "src/sprites/../puun/gf/../../other/stb_image.h"
    $43 = $42 ^ 1; //@line 3792 "src/sprites/../puun/gf/../../other/stb_image.h"
    if (!($43)) {
     label = 29;
     break;
    }
   }
   if ((label|0) == 8) {
    $0 = 0; //@line 3778 "src/sprites/../puun/gf/../../other/stb_image.h"
    break;
   }
   else if ((label|0) == 11) {
    $0 = 0; //@line 3780 "src/sprites/../puun/gf/../../other/stb_image.h"
    break;
   }
   else if ((label|0) == 16) {
    $0 = 0; //@line 3785 "src/sprites/../puun/gf/../../other/stb_image.h"
    break;
   }
   else if ((label|0) == 18) {
    $0 = 0; //@line 3786 "src/sprites/../puun/gf/../../other/stb_image.h"
    break;
   }
   else if ((label|0) == 21) {
    $0 = 0; //@line 3788 "src/sprites/../puun/gf/../../other/stb_image.h"
    break;
   }
   else if ((label|0) == 24) {
    $0 = 0; //@line 3790 "src/sprites/../puun/gf/../../other/stb_image.h"
    break;
   }
   else if ((label|0) == 29) {
    $0 = 1; //@line 3793 "src/sprites/../puun/gf/../../other/stb_image.h"
    break;
   }
  }
 } while(0);
 $44 = $0; //@line 3794 "src/sprites/../puun/gf/../../other/stb_image.h"
 STACKTOP = sp;return ($44|0); //@line 3794 "src/sprites/../puun/gf/../../other/stb_image.h"
}
function _stbi__parse_huffman_block($a) {
 $a = $a|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0;
 var $96 = 0, $97 = 0, $98 = 0, $99 = 0, $dist = 0, $len = 0, $p = 0, $v = 0, $z = 0, $zout = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $a;
 $2 = $1; //@line 3626 "src/sprites/../puun/gf/../../other/stb_image.h"
 $3 = (($2) + 16|0); //@line 3626 "src/sprites/../puun/gf/../../other/stb_image.h"
 $4 = HEAP32[$3>>2]|0; //@line 3626 "src/sprites/../puun/gf/../../other/stb_image.h"
 $zout = $4; //@line 3626 "src/sprites/../puun/gf/../../other/stb_image.h"
 while(1) {
  $5 = $1; //@line 3628 "src/sprites/../puun/gf/../../other/stb_image.h"
  $6 = $1; //@line 3628 "src/sprites/../puun/gf/../../other/stb_image.h"
  $7 = (($6) + 32|0); //@line 3628 "src/sprites/../puun/gf/../../other/stb_image.h"
  $8 = (_stbi__zhuffman_decode($5,$7)|0); //@line 3628 "src/sprites/../puun/gf/../../other/stb_image.h"
  $z = $8; //@line 3628 "src/sprites/../puun/gf/../../other/stb_image.h"
  $9 = $z; //@line 3629 "src/sprites/../puun/gf/../../other/stb_image.h"
  $10 = ($9|0)<(256); //@line 3629 "src/sprites/../puun/gf/../../other/stb_image.h"
  if ($10) {
   $11 = $z; //@line 3630 "src/sprites/../puun/gf/../../other/stb_image.h"
   $12 = ($11|0)<(0); //@line 3630 "src/sprites/../puun/gf/../../other/stb_image.h"
   if ($12) {
    label = 4;
    break;
   }
   $14 = $zout; //@line 3631 "src/sprites/../puun/gf/../../other/stb_image.h"
   $15 = $1; //@line 3631 "src/sprites/../puun/gf/../../other/stb_image.h"
   $16 = (($15) + 24|0); //@line 3631 "src/sprites/../puun/gf/../../other/stb_image.h"
   $17 = HEAP32[$16>>2]|0; //@line 3631 "src/sprites/../puun/gf/../../other/stb_image.h"
   $18 = ($14>>>0)>=($17>>>0); //@line 3631 "src/sprites/../puun/gf/../../other/stb_image.h"
   if ($18) {
    $19 = $1; //@line 3632 "src/sprites/../puun/gf/../../other/stb_image.h"
    $20 = $zout; //@line 3632 "src/sprites/../puun/gf/../../other/stb_image.h"
    $21 = (_stbi__zexpand($19,$20,1)|0); //@line 3632 "src/sprites/../puun/gf/../../other/stb_image.h"
    $22 = ($21|0)!=(0); //@line 3632 "src/sprites/../puun/gf/../../other/stb_image.h"
    if (!($22)) {
     label = 7;
     break;
    }
    $23 = $1; //@line 3633 "src/sprites/../puun/gf/../../other/stb_image.h"
    $24 = (($23) + 16|0); //@line 3633 "src/sprites/../puun/gf/../../other/stb_image.h"
    $25 = HEAP32[$24>>2]|0; //@line 3633 "src/sprites/../puun/gf/../../other/stb_image.h"
    $zout = $25; //@line 3633 "src/sprites/../puun/gf/../../other/stb_image.h"
   }
   $26 = $z; //@line 3635 "src/sprites/../puun/gf/../../other/stb_image.h"
   $27 = $26&255; //@line 3635 "src/sprites/../puun/gf/../../other/stb_image.h"
   $28 = $zout; //@line 3635 "src/sprites/../puun/gf/../../other/stb_image.h"
   $29 = (($28) + 1|0); //@line 3635 "src/sprites/../puun/gf/../../other/stb_image.h"
   $zout = $29; //@line 3635 "src/sprites/../puun/gf/../../other/stb_image.h"
   HEAP8[$28>>0] = $27; //@line 3635 "src/sprites/../puun/gf/../../other/stb_image.h"
  } else {
   $30 = $z; //@line 3639 "src/sprites/../puun/gf/../../other/stb_image.h"
   $31 = ($30|0)==(256); //@line 3639 "src/sprites/../puun/gf/../../other/stb_image.h"
   if ($31) {
    label = 11;
    break;
   }
   $35 = $z; //@line 3643 "src/sprites/../puun/gf/../../other/stb_image.h"
   $36 = (($35) - 257)|0; //@line 3643 "src/sprites/../puun/gf/../../other/stb_image.h"
   $z = $36; //@line 3643 "src/sprites/../puun/gf/../../other/stb_image.h"
   $37 = $z; //@line 3644 "src/sprites/../puun/gf/../../other/stb_image.h"
   $38 = (8728 + ($37<<2)|0); //@line 3644 "src/sprites/../puun/gf/../../other/stb_image.h"
   $39 = HEAP32[$38>>2]|0; //@line 3644 "src/sprites/../puun/gf/../../other/stb_image.h"
   $len = $39; //@line 3644 "src/sprites/../puun/gf/../../other/stb_image.h"
   $40 = $z; //@line 3645 "src/sprites/../puun/gf/../../other/stb_image.h"
   $41 = (8856 + ($40<<2)|0); //@line 3645 "src/sprites/../puun/gf/../../other/stb_image.h"
   $42 = HEAP32[$41>>2]|0; //@line 3645 "src/sprites/../puun/gf/../../other/stb_image.h"
   $43 = ($42|0)!=(0); //@line 3645 "src/sprites/../puun/gf/../../other/stb_image.h"
   if ($43) {
    $44 = $1; //@line 3645 "src/sprites/../puun/gf/../../other/stb_image.h"
    $45 = $z; //@line 3645 "src/sprites/../puun/gf/../../other/stb_image.h"
    $46 = (8856 + ($45<<2)|0); //@line 3645 "src/sprites/../puun/gf/../../other/stb_image.h"
    $47 = HEAP32[$46>>2]|0; //@line 3645 "src/sprites/../puun/gf/../../other/stb_image.h"
    $48 = (_stbi__zreceive($44,$47)|0); //@line 3645 "src/sprites/../puun/gf/../../other/stb_image.h"
    $49 = $len; //@line 3645 "src/sprites/../puun/gf/../../other/stb_image.h"
    $50 = (($49) + ($48))|0; //@line 3645 "src/sprites/../puun/gf/../../other/stb_image.h"
    $len = $50; //@line 3645 "src/sprites/../puun/gf/../../other/stb_image.h"
   }
   $51 = $1; //@line 3646 "src/sprites/../puun/gf/../../other/stb_image.h"
   $52 = $1; //@line 3646 "src/sprites/../puun/gf/../../other/stb_image.h"
   $53 = (($52) + 2052|0); //@line 3646 "src/sprites/../puun/gf/../../other/stb_image.h"
   $54 = (_stbi__zhuffman_decode($51,$53)|0); //@line 3646 "src/sprites/../puun/gf/../../other/stb_image.h"
   $z = $54; //@line 3646 "src/sprites/../puun/gf/../../other/stb_image.h"
   $55 = $z; //@line 3647 "src/sprites/../puun/gf/../../other/stb_image.h"
   $56 = ($55|0)<(0); //@line 3647 "src/sprites/../puun/gf/../../other/stb_image.h"
   if ($56) {
    label = 15;
    break;
   }
   $58 = $z; //@line 3648 "src/sprites/../puun/gf/../../other/stb_image.h"
   $59 = (8984 + ($58<<2)|0); //@line 3648 "src/sprites/../puun/gf/../../other/stb_image.h"
   $60 = HEAP32[$59>>2]|0; //@line 3648 "src/sprites/../puun/gf/../../other/stb_image.h"
   $dist = $60; //@line 3648 "src/sprites/../puun/gf/../../other/stb_image.h"
   $61 = $z; //@line 3649 "src/sprites/../puun/gf/../../other/stb_image.h"
   $62 = (9112 + ($61<<2)|0); //@line 3649 "src/sprites/../puun/gf/../../other/stb_image.h"
   $63 = HEAP32[$62>>2]|0; //@line 3649 "src/sprites/../puun/gf/../../other/stb_image.h"
   $64 = ($63|0)!=(0); //@line 3649 "src/sprites/../puun/gf/../../other/stb_image.h"
   if ($64) {
    $65 = $1; //@line 3649 "src/sprites/../puun/gf/../../other/stb_image.h"
    $66 = $z; //@line 3649 "src/sprites/../puun/gf/../../other/stb_image.h"
    $67 = (9112 + ($66<<2)|0); //@line 3649 "src/sprites/../puun/gf/../../other/stb_image.h"
    $68 = HEAP32[$67>>2]|0; //@line 3649 "src/sprites/../puun/gf/../../other/stb_image.h"
    $69 = (_stbi__zreceive($65,$68)|0); //@line 3649 "src/sprites/../puun/gf/../../other/stb_image.h"
    $70 = $dist; //@line 3649 "src/sprites/../puun/gf/../../other/stb_image.h"
    $71 = (($70) + ($69))|0; //@line 3649 "src/sprites/../puun/gf/../../other/stb_image.h"
    $dist = $71; //@line 3649 "src/sprites/../puun/gf/../../other/stb_image.h"
   }
   $72 = $zout; //@line 3650 "src/sprites/../puun/gf/../../other/stb_image.h"
   $73 = $1; //@line 3650 "src/sprites/../puun/gf/../../other/stb_image.h"
   $74 = (($73) + 20|0); //@line 3650 "src/sprites/../puun/gf/../../other/stb_image.h"
   $75 = HEAP32[$74>>2]|0; //@line 3650 "src/sprites/../puun/gf/../../other/stb_image.h"
   $76 = $72; //@line 3650 "src/sprites/../puun/gf/../../other/stb_image.h"
   $77 = $75; //@line 3650 "src/sprites/../puun/gf/../../other/stb_image.h"
   $78 = (($76) - ($77))|0; //@line 3650 "src/sprites/../puun/gf/../../other/stb_image.h"
   $79 = $dist; //@line 3650 "src/sprites/../puun/gf/../../other/stb_image.h"
   $80 = ($78|0)<($79|0); //@line 3650 "src/sprites/../puun/gf/../../other/stb_image.h"
   if ($80) {
    label = 19;
    break;
   }
   $82 = $zout; //@line 3651 "src/sprites/../puun/gf/../../other/stb_image.h"
   $83 = $len; //@line 3651 "src/sprites/../puun/gf/../../other/stb_image.h"
   $84 = (($82) + ($83)|0); //@line 3651 "src/sprites/../puun/gf/../../other/stb_image.h"
   $85 = $1; //@line 3651 "src/sprites/../puun/gf/../../other/stb_image.h"
   $86 = (($85) + 24|0); //@line 3651 "src/sprites/../puun/gf/../../other/stb_image.h"
   $87 = HEAP32[$86>>2]|0; //@line 3651 "src/sprites/../puun/gf/../../other/stb_image.h"
   $88 = ($84>>>0)>($87>>>0); //@line 3651 "src/sprites/../puun/gf/../../other/stb_image.h"
   if ($88) {
    $89 = $1; //@line 3652 "src/sprites/../puun/gf/../../other/stb_image.h"
    $90 = $zout; //@line 3652 "src/sprites/../puun/gf/../../other/stb_image.h"
    $91 = $len; //@line 3652 "src/sprites/../puun/gf/../../other/stb_image.h"
    $92 = (_stbi__zexpand($89,$90,$91)|0); //@line 3652 "src/sprites/../puun/gf/../../other/stb_image.h"
    $93 = ($92|0)!=(0); //@line 3652 "src/sprites/../puun/gf/../../other/stb_image.h"
    if (!($93)) {
     label = 22;
     break;
    }
    $94 = $1; //@line 3653 "src/sprites/../puun/gf/../../other/stb_image.h"
    $95 = (($94) + 16|0); //@line 3653 "src/sprites/../puun/gf/../../other/stb_image.h"
    $96 = HEAP32[$95>>2]|0; //@line 3653 "src/sprites/../puun/gf/../../other/stb_image.h"
    $zout = $96; //@line 3653 "src/sprites/../puun/gf/../../other/stb_image.h"
   }
   $97 = $zout; //@line 3655 "src/sprites/../puun/gf/../../other/stb_image.h"
   $98 = $dist; //@line 3655 "src/sprites/../puun/gf/../../other/stb_image.h"
   $99 = (0 - ($98))|0; //@line 3655 "src/sprites/../puun/gf/../../other/stb_image.h"
   $100 = (($97) + ($99)|0); //@line 3655 "src/sprites/../puun/gf/../../other/stb_image.h"
   $p = $100; //@line 3655 "src/sprites/../puun/gf/../../other/stb_image.h"
   $101 = $dist; //@line 3656 "src/sprites/../puun/gf/../../other/stb_image.h"
   $102 = ($101|0)==(1); //@line 3656 "src/sprites/../puun/gf/../../other/stb_image.h"
   if ($102) {
    $103 = $p; //@line 3657 "src/sprites/../puun/gf/../../other/stb_image.h"
    $104 = HEAP8[$103>>0]|0; //@line 3657 "src/sprites/../puun/gf/../../other/stb_image.h"
    $v = $104; //@line 3657 "src/sprites/../puun/gf/../../other/stb_image.h"
    $105 = $len; //@line 3658 "src/sprites/../puun/gf/../../other/stb_image.h"
    $106 = ($105|0)!=(0); //@line 3658 "src/sprites/../puun/gf/../../other/stb_image.h"
    if ($106) {
     while(1) {
      $107 = $v; //@line 3658 "src/sprites/../puun/gf/../../other/stb_image.h"
      $108 = $zout; //@line 3658 "src/sprites/../puun/gf/../../other/stb_image.h"
      $109 = (($108) + 1|0); //@line 3658 "src/sprites/../puun/gf/../../other/stb_image.h"
      $zout = $109; //@line 3658 "src/sprites/../puun/gf/../../other/stb_image.h"
      HEAP8[$108>>0] = $107; //@line 3658 "src/sprites/../puun/gf/../../other/stb_image.h"
      $110 = $len; //@line 3658 "src/sprites/../puun/gf/../../other/stb_image.h"
      $111 = (($110) + -1)|0; //@line 3658 "src/sprites/../puun/gf/../../other/stb_image.h"
      $len = $111; //@line 3658 "src/sprites/../puun/gf/../../other/stb_image.h"
      $112 = ($111|0)!=(0); //@line 3658 "src/sprites/../puun/gf/../../other/stb_image.h"
      if (!($112)) {
       break;
      }
     }
    }
   } else {
    $113 = $len; //@line 3660 "src/sprites/../puun/gf/../../other/stb_image.h"
    $114 = ($113|0)!=(0); //@line 3660 "src/sprites/../puun/gf/../../other/stb_image.h"
    if ($114) {
     while(1) {
      $115 = $p; //@line 3660 "src/sprites/../puun/gf/../../other/stb_image.h"
      $116 = (($115) + 1|0); //@line 3660 "src/sprites/../puun/gf/../../other/stb_image.h"
      $p = $116; //@line 3660 "src/sprites/../puun/gf/../../other/stb_image.h"
      $117 = HEAP8[$115>>0]|0; //@line 3660 "src/sprites/../puun/gf/../../other/stb_image.h"
      $118 = $zout; //@line 3660 "src/sprites/../puun/gf/../../other/stb_image.h"
      $119 = (($118) + 1|0); //@line 3660 "src/sprites/../puun/gf/../../other/stb_image.h"
      $zout = $119; //@line 3660 "src/sprites/../puun/gf/../../other/stb_image.h"
      HEAP8[$118>>0] = $117; //@line 3660 "src/sprites/../puun/gf/../../other/stb_image.h"
      $120 = $len; //@line 3660 "src/sprites/../puun/gf/../../other/stb_image.h"
      $121 = (($120) + -1)|0; //@line 3660 "src/sprites/../puun/gf/../../other/stb_image.h"
      $len = $121; //@line 3660 "src/sprites/../puun/gf/../../other/stb_image.h"
      $122 = ($121|0)!=(0); //@line 3660 "src/sprites/../puun/gf/../../other/stb_image.h"
      if (!($122)) {
       break;
      }
     }
    }
   }
  }
 }
 if ((label|0) == 4) {
  $13 = (_stbi__err(8704)|0); //@line 3630 "src/sprites/../puun/gf/../../other/stb_image.h"
  $0 = $13; //@line 3630 "src/sprites/../puun/gf/../../other/stb_image.h"
  $123 = $0; //@line 3664 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($123|0); //@line 3664 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 else if ((label|0) == 7) {
  $0 = 0; //@line 3632 "src/sprites/../puun/gf/../../other/stb_image.h"
  $123 = $0; //@line 3664 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($123|0); //@line 3664 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 else if ((label|0) == 11) {
  $32 = $zout; //@line 3640 "src/sprites/../puun/gf/../../other/stb_image.h"
  $33 = $1; //@line 3640 "src/sprites/../puun/gf/../../other/stb_image.h"
  $34 = (($33) + 16|0); //@line 3640 "src/sprites/../puun/gf/../../other/stb_image.h"
  HEAP32[$34>>2] = $32; //@line 3640 "src/sprites/../puun/gf/../../other/stb_image.h"
  $0 = 1; //@line 3641 "src/sprites/../puun/gf/../../other/stb_image.h"
  $123 = $0; //@line 3664 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($123|0); //@line 3664 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 else if ((label|0) == 15) {
  $57 = (_stbi__err(8704)|0); //@line 3647 "src/sprites/../puun/gf/../../other/stb_image.h"
  $0 = $57; //@line 3647 "src/sprites/../puun/gf/../../other/stb_image.h"
  $123 = $0; //@line 3664 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($123|0); //@line 3664 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 else if ((label|0) == 19) {
  $81 = (_stbi__err(9240)|0); //@line 3650 "src/sprites/../puun/gf/../../other/stb_image.h"
  $0 = $81; //@line 3650 "src/sprites/../puun/gf/../../other/stb_image.h"
  $123 = $0; //@line 3664 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($123|0); //@line 3664 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 else if ((label|0) == 22) {
  $0 = 0; //@line 3652 "src/sprites/../puun/gf/../../other/stb_image.h"
  $123 = $0; //@line 3664 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($123|0); //@line 3664 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 return (0)|0;
}
function _stbi__zexpand($z,$zout,$n) {
 $z = $z|0;
 $zout = $zout|0;
 $n = $n|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $cur = 0;
 var $limit = 0, $q = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $z;
 $2 = $zout;
 $3 = $n;
 $4 = $2; //@line 3596 "src/sprites/../puun/gf/../../other/stb_image.h"
 $5 = $1; //@line 3596 "src/sprites/../puun/gf/../../other/stb_image.h"
 $6 = (($5) + 16|0); //@line 3596 "src/sprites/../puun/gf/../../other/stb_image.h"
 HEAP32[$6>>2] = $4; //@line 3596 "src/sprites/../puun/gf/../../other/stb_image.h"
 $7 = $1; //@line 3597 "src/sprites/../puun/gf/../../other/stb_image.h"
 $8 = (($7) + 28|0); //@line 3597 "src/sprites/../puun/gf/../../other/stb_image.h"
 $9 = HEAP32[$8>>2]|0; //@line 3597 "src/sprites/../puun/gf/../../other/stb_image.h"
 $10 = ($9|0)!=(0); //@line 3597 "src/sprites/../puun/gf/../../other/stb_image.h"
 if (!($10)) {
  $11 = (_stbi__err(9256)|0); //@line 3597 "src/sprites/../puun/gf/../../other/stb_image.h"
  $0 = $11; //@line 3597 "src/sprites/../puun/gf/../../other/stb_image.h"
  $58 = $0; //@line 3608 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($58|0); //@line 3608 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $12 = $1; //@line 3598 "src/sprites/../puun/gf/../../other/stb_image.h"
 $13 = (($12) + 16|0); //@line 3598 "src/sprites/../puun/gf/../../other/stb_image.h"
 $14 = HEAP32[$13>>2]|0; //@line 3598 "src/sprites/../puun/gf/../../other/stb_image.h"
 $15 = $1; //@line 3598 "src/sprites/../puun/gf/../../other/stb_image.h"
 $16 = (($15) + 20|0); //@line 3598 "src/sprites/../puun/gf/../../other/stb_image.h"
 $17 = HEAP32[$16>>2]|0; //@line 3598 "src/sprites/../puun/gf/../../other/stb_image.h"
 $18 = $14; //@line 3598 "src/sprites/../puun/gf/../../other/stb_image.h"
 $19 = $17; //@line 3598 "src/sprites/../puun/gf/../../other/stb_image.h"
 $20 = (($18) - ($19))|0; //@line 3598 "src/sprites/../puun/gf/../../other/stb_image.h"
 $cur = $20; //@line 3598 "src/sprites/../puun/gf/../../other/stb_image.h"
 $21 = $1; //@line 3599 "src/sprites/../puun/gf/../../other/stb_image.h"
 $22 = (($21) + 24|0); //@line 3599 "src/sprites/../puun/gf/../../other/stb_image.h"
 $23 = HEAP32[$22>>2]|0; //@line 3599 "src/sprites/../puun/gf/../../other/stb_image.h"
 $24 = $1; //@line 3599 "src/sprites/../puun/gf/../../other/stb_image.h"
 $25 = (($24) + 20|0); //@line 3599 "src/sprites/../puun/gf/../../other/stb_image.h"
 $26 = HEAP32[$25>>2]|0; //@line 3599 "src/sprites/../puun/gf/../../other/stb_image.h"
 $27 = $23; //@line 3599 "src/sprites/../puun/gf/../../other/stb_image.h"
 $28 = $26; //@line 3599 "src/sprites/../puun/gf/../../other/stb_image.h"
 $29 = (($27) - ($28))|0; //@line 3599 "src/sprites/../puun/gf/../../other/stb_image.h"
 $limit = $29; //@line 3599 "src/sprites/../puun/gf/../../other/stb_image.h"
 while(1) {
  $30 = $cur; //@line 3600 "src/sprites/../puun/gf/../../other/stb_image.h"
  $31 = $3; //@line 3600 "src/sprites/../puun/gf/../../other/stb_image.h"
  $32 = (($30) + ($31))|0; //@line 3600 "src/sprites/../puun/gf/../../other/stb_image.h"
  $33 = $limit; //@line 3600 "src/sprites/../puun/gf/../../other/stb_image.h"
  $34 = ($32|0)>($33|0); //@line 3600 "src/sprites/../puun/gf/../../other/stb_image.h"
  if (!($34)) {
   break;
  }
  $35 = $limit; //@line 3601 "src/sprites/../puun/gf/../../other/stb_image.h"
  $36 = $35<<1; //@line 3601 "src/sprites/../puun/gf/../../other/stb_image.h"
  $limit = $36; //@line 3601 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $37 = $1; //@line 3602 "src/sprites/../puun/gf/../../other/stb_image.h"
 $38 = (($37) + 20|0); //@line 3602 "src/sprites/../puun/gf/../../other/stb_image.h"
 $39 = HEAP32[$38>>2]|0; //@line 3602 "src/sprites/../puun/gf/../../other/stb_image.h"
 $40 = $limit; //@line 3602 "src/sprites/../puun/gf/../../other/stb_image.h"
 $41 = (_realloc($39,$40)|0); //@line 3602 "src/sprites/../puun/gf/../../other/stb_image.h"
 $q = $41; //@line 3602 "src/sprites/../puun/gf/../../other/stb_image.h"
 $42 = $q; //@line 3603 "src/sprites/../puun/gf/../../other/stb_image.h"
 $43 = ($42|0)==(0|0); //@line 3603 "src/sprites/../puun/gf/../../other/stb_image.h"
 if ($43) {
  $44 = (_stbi__err(7464)|0); //@line 3603 "src/sprites/../puun/gf/../../other/stb_image.h"
  $0 = $44; //@line 3603 "src/sprites/../puun/gf/../../other/stb_image.h"
  $58 = $0; //@line 3608 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($58|0); //@line 3608 "src/sprites/../puun/gf/../../other/stb_image.h"
 } else {
  $45 = $q; //@line 3604 "src/sprites/../puun/gf/../../other/stb_image.h"
  $46 = $1; //@line 3604 "src/sprites/../puun/gf/../../other/stb_image.h"
  $47 = (($46) + 20|0); //@line 3604 "src/sprites/../puun/gf/../../other/stb_image.h"
  HEAP32[$47>>2] = $45; //@line 3604 "src/sprites/../puun/gf/../../other/stb_image.h"
  $48 = $q; //@line 3605 "src/sprites/../puun/gf/../../other/stb_image.h"
  $49 = $cur; //@line 3605 "src/sprites/../puun/gf/../../other/stb_image.h"
  $50 = (($48) + ($49)|0); //@line 3605 "src/sprites/../puun/gf/../../other/stb_image.h"
  $51 = $1; //@line 3605 "src/sprites/../puun/gf/../../other/stb_image.h"
  $52 = (($51) + 16|0); //@line 3605 "src/sprites/../puun/gf/../../other/stb_image.h"
  HEAP32[$52>>2] = $50; //@line 3605 "src/sprites/../puun/gf/../../other/stb_image.h"
  $53 = $q; //@line 3606 "src/sprites/../puun/gf/../../other/stb_image.h"
  $54 = $limit; //@line 3606 "src/sprites/../puun/gf/../../other/stb_image.h"
  $55 = (($53) + ($54)|0); //@line 3606 "src/sprites/../puun/gf/../../other/stb_image.h"
  $56 = $1; //@line 3606 "src/sprites/../puun/gf/../../other/stb_image.h"
  $57 = (($56) + 24|0); //@line 3606 "src/sprites/../puun/gf/../../other/stb_image.h"
  HEAP32[$57>>2] = $55; //@line 3606 "src/sprites/../puun/gf/../../other/stb_image.h"
  $0 = 1; //@line 3607 "src/sprites/../puun/gf/../../other/stb_image.h"
  $58 = $0; //@line 3608 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($58|0); //@line 3608 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 return (0)|0;
}
function _stbi__zhuffman_decode($a,$z) {
 $a = $a|0;
 $z = $z|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $b = 0, $s = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $a;
 $2 = $z;
 $3 = $1; //@line 3581 "src/sprites/../puun/gf/../../other/stb_image.h"
 $4 = (($3) + 8|0); //@line 3581 "src/sprites/../puun/gf/../../other/stb_image.h"
 $5 = HEAP32[$4>>2]|0; //@line 3581 "src/sprites/../puun/gf/../../other/stb_image.h"
 $6 = ($5|0)<(16); //@line 3581 "src/sprites/../puun/gf/../../other/stb_image.h"
 if ($6) {
  $7 = $1; //@line 3581 "src/sprites/../puun/gf/../../other/stb_image.h"
  _stbi__fill_bits($7); //@line 3581 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $8 = $1; //@line 3582 "src/sprites/../puun/gf/../../other/stb_image.h"
 $9 = (($8) + 12|0); //@line 3582 "src/sprites/../puun/gf/../../other/stb_image.h"
 $10 = HEAP32[$9>>2]|0; //@line 3582 "src/sprites/../puun/gf/../../other/stb_image.h"
 $11 = $10 & 511; //@line 3582 "src/sprites/../puun/gf/../../other/stb_image.h"
 $12 = $2; //@line 3582 "src/sprites/../puun/gf/../../other/stb_image.h"
 $13 = (($12) + ($11<<1)|0); //@line 3582 "src/sprites/../puun/gf/../../other/stb_image.h"
 $14 = HEAP16[$13>>1]|0; //@line 3582 "src/sprites/../puun/gf/../../other/stb_image.h"
 $15 = $14&65535; //@line 3582 "src/sprites/../puun/gf/../../other/stb_image.h"
 $b = $15; //@line 3582 "src/sprites/../puun/gf/../../other/stb_image.h"
 $16 = $b; //@line 3583 "src/sprites/../puun/gf/../../other/stb_image.h"
 $17 = ($16|0)!=(0); //@line 3583 "src/sprites/../puun/gf/../../other/stb_image.h"
 if ($17) {
  $18 = $b; //@line 3584 "src/sprites/../puun/gf/../../other/stb_image.h"
  $19 = $18 >> 9; //@line 3584 "src/sprites/../puun/gf/../../other/stb_image.h"
  $s = $19; //@line 3584 "src/sprites/../puun/gf/../../other/stb_image.h"
  $20 = $s; //@line 3585 "src/sprites/../puun/gf/../../other/stb_image.h"
  $21 = $1; //@line 3585 "src/sprites/../puun/gf/../../other/stb_image.h"
  $22 = (($21) + 12|0); //@line 3585 "src/sprites/../puun/gf/../../other/stb_image.h"
  $23 = HEAP32[$22>>2]|0; //@line 3585 "src/sprites/../puun/gf/../../other/stb_image.h"
  $24 = $23 >>> $20; //@line 3585 "src/sprites/../puun/gf/../../other/stb_image.h"
  HEAP32[$22>>2] = $24; //@line 3585 "src/sprites/../puun/gf/../../other/stb_image.h"
  $25 = $s; //@line 3586 "src/sprites/../puun/gf/../../other/stb_image.h"
  $26 = $1; //@line 3586 "src/sprites/../puun/gf/../../other/stb_image.h"
  $27 = (($26) + 8|0); //@line 3586 "src/sprites/../puun/gf/../../other/stb_image.h"
  $28 = HEAP32[$27>>2]|0; //@line 3586 "src/sprites/../puun/gf/../../other/stb_image.h"
  $29 = (($28) - ($25))|0; //@line 3586 "src/sprites/../puun/gf/../../other/stb_image.h"
  HEAP32[$27>>2] = $29; //@line 3586 "src/sprites/../puun/gf/../../other/stb_image.h"
  $30 = $b; //@line 3587 "src/sprites/../puun/gf/../../other/stb_image.h"
  $31 = $30 & 511; //@line 3587 "src/sprites/../puun/gf/../../other/stb_image.h"
  $0 = $31; //@line 3587 "src/sprites/../puun/gf/../../other/stb_image.h"
  $35 = $0; //@line 3590 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($35|0); //@line 3590 "src/sprites/../puun/gf/../../other/stb_image.h"
 } else {
  $32 = $1; //@line 3589 "src/sprites/../puun/gf/../../other/stb_image.h"
  $33 = $2; //@line 3589 "src/sprites/../puun/gf/../../other/stb_image.h"
  $34 = (_stbi__zhuffman_decode_slowpath($32,$33)|0); //@line 3589 "src/sprites/../puun/gf/../../other/stb_image.h"
  $0 = $34; //@line 3589 "src/sprites/../puun/gf/../../other/stb_image.h"
  $35 = $0; //@line 3590 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($35|0); //@line 3590 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 return (0)|0;
}
function _stbi__zhuffman_decode_slowpath($a,$z) {
 $a = $a|0;
 $z = $z|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $b = 0, $k = 0, $s = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $a;
 $2 = $z;
 $3 = $1; //@line 3565 "src/sprites/../puun/gf/../../other/stb_image.h"
 $4 = (($3) + 12|0); //@line 3565 "src/sprites/../puun/gf/../../other/stb_image.h"
 $5 = HEAP32[$4>>2]|0; //@line 3565 "src/sprites/../puun/gf/../../other/stb_image.h"
 $6 = (_stbi__bit_reverse($5,16)|0); //@line 3565 "src/sprites/../puun/gf/../../other/stb_image.h"
 $k = $6; //@line 3565 "src/sprites/../puun/gf/../../other/stb_image.h"
 $s = 10; //@line 3566 "src/sprites/../puun/gf/../../other/stb_image.h"
 while(1) {
  $7 = $k; //@line 3567 "src/sprites/../puun/gf/../../other/stb_image.h"
  $8 = $s; //@line 3567 "src/sprites/../puun/gf/../../other/stb_image.h"
  $9 = $2; //@line 3567 "src/sprites/../puun/gf/../../other/stb_image.h"
  $10 = (($9) + 1056|0); //@line 3567 "src/sprites/../puun/gf/../../other/stb_image.h"
  $11 = (($10) + ($8<<2)|0); //@line 3567 "src/sprites/../puun/gf/../../other/stb_image.h"
  $12 = HEAP32[$11>>2]|0; //@line 3567 "src/sprites/../puun/gf/../../other/stb_image.h"
  $13 = ($7|0)<($12|0); //@line 3567 "src/sprites/../puun/gf/../../other/stb_image.h"
  if ($13) {
   break;
  }
  $14 = $s; //@line 3566 "src/sprites/../puun/gf/../../other/stb_image.h"
  $15 = (($14) + 1)|0; //@line 3566 "src/sprites/../puun/gf/../../other/stb_image.h"
  $s = $15; //@line 3566 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $16 = $s; //@line 3569 "src/sprites/../puun/gf/../../other/stb_image.h"
 $17 = ($16|0)==(16); //@line 3569 "src/sprites/../puun/gf/../../other/stb_image.h"
 if ($17) {
  $0 = -1; //@line 3569 "src/sprites/../puun/gf/../../other/stb_image.h"
  $60 = $0; //@line 3576 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($60|0); //@line 3576 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $18 = $k; //@line 3571 "src/sprites/../puun/gf/../../other/stb_image.h"
 $19 = $s; //@line 3571 "src/sprites/../puun/gf/../../other/stb_image.h"
 $20 = (16 - ($19))|0; //@line 3571 "src/sprites/../puun/gf/../../other/stb_image.h"
 $21 = $18 >> $20; //@line 3571 "src/sprites/../puun/gf/../../other/stb_image.h"
 $22 = $s; //@line 3571 "src/sprites/../puun/gf/../../other/stb_image.h"
 $23 = $2; //@line 3571 "src/sprites/../puun/gf/../../other/stb_image.h"
 $24 = (($23) + 1024|0); //@line 3571 "src/sprites/../puun/gf/../../other/stb_image.h"
 $25 = (($24) + ($22<<1)|0); //@line 3571 "src/sprites/../puun/gf/../../other/stb_image.h"
 $26 = HEAP16[$25>>1]|0; //@line 3571 "src/sprites/../puun/gf/../../other/stb_image.h"
 $27 = $26&65535; //@line 3571 "src/sprites/../puun/gf/../../other/stb_image.h"
 $28 = (($21) - ($27))|0; //@line 3571 "src/sprites/../puun/gf/../../other/stb_image.h"
 $29 = $s; //@line 3571 "src/sprites/../puun/gf/../../other/stb_image.h"
 $30 = $2; //@line 3571 "src/sprites/../puun/gf/../../other/stb_image.h"
 $31 = (($30) + 1124|0); //@line 3571 "src/sprites/../puun/gf/../../other/stb_image.h"
 $32 = (($31) + ($29<<1)|0); //@line 3571 "src/sprites/../puun/gf/../../other/stb_image.h"
 $33 = HEAP16[$32>>1]|0; //@line 3571 "src/sprites/../puun/gf/../../other/stb_image.h"
 $34 = $33&65535; //@line 3571 "src/sprites/../puun/gf/../../other/stb_image.h"
 $35 = (($28) + ($34))|0; //@line 3571 "src/sprites/../puun/gf/../../other/stb_image.h"
 $b = $35; //@line 3571 "src/sprites/../puun/gf/../../other/stb_image.h"
 $36 = $b; //@line 3572 "src/sprites/../puun/gf/../../other/stb_image.h"
 $37 = $2; //@line 3572 "src/sprites/../puun/gf/../../other/stb_image.h"
 $38 = (($37) + 1156|0); //@line 3572 "src/sprites/../puun/gf/../../other/stb_image.h"
 $39 = (($38) + ($36)|0); //@line 3572 "src/sprites/../puun/gf/../../other/stb_image.h"
 $40 = HEAP8[$39>>0]|0; //@line 3572 "src/sprites/../puun/gf/../../other/stb_image.h"
 $41 = $40&255; //@line 3572 "src/sprites/../puun/gf/../../other/stb_image.h"
 $42 = $s; //@line 3572 "src/sprites/../puun/gf/../../other/stb_image.h"
 $43 = ($41|0)==($42|0); //@line 3572 "src/sprites/../puun/gf/../../other/stb_image.h"
 if (!($43)) {
  ___assert_fail((9280|0),(7560|0),3572,(9296|0)); //@line 3572 "src/sprites/../puun/gf/../../other/stb_image.h"
  // unreachable; //@line 3572 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $44 = $s; //@line 3573 "src/sprites/../puun/gf/../../other/stb_image.h"
 $45 = $1; //@line 3573 "src/sprites/../puun/gf/../../other/stb_image.h"
 $46 = (($45) + 12|0); //@line 3573 "src/sprites/../puun/gf/../../other/stb_image.h"
 $47 = HEAP32[$46>>2]|0; //@line 3573 "src/sprites/../puun/gf/../../other/stb_image.h"
 $48 = $47 >>> $44; //@line 3573 "src/sprites/../puun/gf/../../other/stb_image.h"
 HEAP32[$46>>2] = $48; //@line 3573 "src/sprites/../puun/gf/../../other/stb_image.h"
 $49 = $s; //@line 3574 "src/sprites/../puun/gf/../../other/stb_image.h"
 $50 = $1; //@line 3574 "src/sprites/../puun/gf/../../other/stb_image.h"
 $51 = (($50) + 8|0); //@line 3574 "src/sprites/../puun/gf/../../other/stb_image.h"
 $52 = HEAP32[$51>>2]|0; //@line 3574 "src/sprites/../puun/gf/../../other/stb_image.h"
 $53 = (($52) - ($49))|0; //@line 3574 "src/sprites/../puun/gf/../../other/stb_image.h"
 HEAP32[$51>>2] = $53; //@line 3574 "src/sprites/../puun/gf/../../other/stb_image.h"
 $54 = $b; //@line 3575 "src/sprites/../puun/gf/../../other/stb_image.h"
 $55 = $2; //@line 3575 "src/sprites/../puun/gf/../../other/stb_image.h"
 $56 = (($55) + 1444|0); //@line 3575 "src/sprites/../puun/gf/../../other/stb_image.h"
 $57 = (($56) + ($54<<1)|0); //@line 3575 "src/sprites/../puun/gf/../../other/stb_image.h"
 $58 = HEAP16[$57>>1]|0; //@line 3575 "src/sprites/../puun/gf/../../other/stb_image.h"
 $59 = $58&65535; //@line 3575 "src/sprites/../puun/gf/../../other/stb_image.h"
 $0 = $59; //@line 3575 "src/sprites/../puun/gf/../../other/stb_image.h"
 $60 = $0; //@line 3576 "src/sprites/../puun/gf/../../other/stb_image.h"
 STACKTOP = sp;return ($60|0); //@line 3576 "src/sprites/../puun/gf/../../other/stb_image.h"
}
function _stbi__bit_reverse($v,$bits) {
 $v = $v|0;
 $bits = $bits|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $v;
 $1 = $bits;
 $2 = $1; //@line 3462 "src/sprites/../puun/gf/../../other/stb_image.h"
 $3 = ($2|0)<=(16); //@line 3462 "src/sprites/../puun/gf/../../other/stb_image.h"
 if ($3) {
  $4 = $0; //@line 3465 "src/sprites/../puun/gf/../../other/stb_image.h"
  $5 = (_stbi__bitreverse16($4)|0); //@line 3465 "src/sprites/../puun/gf/../../other/stb_image.h"
  $6 = $1; //@line 3465 "src/sprites/../puun/gf/../../other/stb_image.h"
  $7 = (16 - ($6))|0; //@line 3465 "src/sprites/../puun/gf/../../other/stb_image.h"
  $8 = $5 >> $7; //@line 3465 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($8|0); //@line 3465 "src/sprites/../puun/gf/../../other/stb_image.h"
 } else {
  ___assert_fail((9328|0),(7560|0),3462,(9344|0)); //@line 3462 "src/sprites/../puun/gf/../../other/stb_image.h"
  // unreachable; //@line 3462 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 return (0)|0;
}
function _stbi__bitreverse16($n) {
 $n = $n|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $n;
 $1 = $0; //@line 3453 "src/sprites/../puun/gf/../../other/stb_image.h"
 $2 = $1 & 43690; //@line 3453 "src/sprites/../puun/gf/../../other/stb_image.h"
 $3 = $2 >> 1; //@line 3453 "src/sprites/../puun/gf/../../other/stb_image.h"
 $4 = $0; //@line 3453 "src/sprites/../puun/gf/../../other/stb_image.h"
 $5 = $4 & 21845; //@line 3453 "src/sprites/../puun/gf/../../other/stb_image.h"
 $6 = $5 << 1; //@line 3453 "src/sprites/../puun/gf/../../other/stb_image.h"
 $7 = $3 | $6; //@line 3453 "src/sprites/../puun/gf/../../other/stb_image.h"
 $0 = $7; //@line 3453 "src/sprites/../puun/gf/../../other/stb_image.h"
 $8 = $0; //@line 3454 "src/sprites/../puun/gf/../../other/stb_image.h"
 $9 = $8 & 52428; //@line 3454 "src/sprites/../puun/gf/../../other/stb_image.h"
 $10 = $9 >> 2; //@line 3454 "src/sprites/../puun/gf/../../other/stb_image.h"
 $11 = $0; //@line 3454 "src/sprites/../puun/gf/../../other/stb_image.h"
 $12 = $11 & 13107; //@line 3454 "src/sprites/../puun/gf/../../other/stb_image.h"
 $13 = $12 << 2; //@line 3454 "src/sprites/../puun/gf/../../other/stb_image.h"
 $14 = $10 | $13; //@line 3454 "src/sprites/../puun/gf/../../other/stb_image.h"
 $0 = $14; //@line 3454 "src/sprites/../puun/gf/../../other/stb_image.h"
 $15 = $0; //@line 3455 "src/sprites/../puun/gf/../../other/stb_image.h"
 $16 = $15 & 61680; //@line 3455 "src/sprites/../puun/gf/../../other/stb_image.h"
 $17 = $16 >> 4; //@line 3455 "src/sprites/../puun/gf/../../other/stb_image.h"
 $18 = $0; //@line 3455 "src/sprites/../puun/gf/../../other/stb_image.h"
 $19 = $18 & 3855; //@line 3455 "src/sprites/../puun/gf/../../other/stb_image.h"
 $20 = $19 << 4; //@line 3455 "src/sprites/../puun/gf/../../other/stb_image.h"
 $21 = $17 | $20; //@line 3455 "src/sprites/../puun/gf/../../other/stb_image.h"
 $0 = $21; //@line 3455 "src/sprites/../puun/gf/../../other/stb_image.h"
 $22 = $0; //@line 3456 "src/sprites/../puun/gf/../../other/stb_image.h"
 $23 = $22 & 65280; //@line 3456 "src/sprites/../puun/gf/../../other/stb_image.h"
 $24 = $23 >> 8; //@line 3456 "src/sprites/../puun/gf/../../other/stb_image.h"
 $25 = $0; //@line 3456 "src/sprites/../puun/gf/../../other/stb_image.h"
 $26 = $25 & 255; //@line 3456 "src/sprites/../puun/gf/../../other/stb_image.h"
 $27 = $26 << 8; //@line 3456 "src/sprites/../puun/gf/../../other/stb_image.h"
 $28 = $24 | $27; //@line 3456 "src/sprites/../puun/gf/../../other/stb_image.h"
 $0 = $28; //@line 3456 "src/sprites/../puun/gf/../../other/stb_image.h"
 $29 = $0; //@line 3457 "src/sprites/../puun/gf/../../other/stb_image.h"
 STACKTOP = sp;return ($29|0); //@line 3457 "src/sprites/../puun/gf/../../other/stb_image.h"
}
function _stbi__fill_bits($z) {
 $z = $z|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $z;
 while(1) {
  $1 = $0; //@line 3544 "src/sprites/../puun/gf/../../other/stb_image.h"
  $2 = (($1) + 12|0); //@line 3544 "src/sprites/../puun/gf/../../other/stb_image.h"
  $3 = HEAP32[$2>>2]|0; //@line 3544 "src/sprites/../puun/gf/../../other/stb_image.h"
  $4 = $0; //@line 3544 "src/sprites/../puun/gf/../../other/stb_image.h"
  $5 = (($4) + 8|0); //@line 3544 "src/sprites/../puun/gf/../../other/stb_image.h"
  $6 = HEAP32[$5>>2]|0; //@line 3544 "src/sprites/../puun/gf/../../other/stb_image.h"
  $7 = 1 << $6; //@line 3544 "src/sprites/../puun/gf/../../other/stb_image.h"
  $8 = ($3>>>0)<($7>>>0); //@line 3544 "src/sprites/../puun/gf/../../other/stb_image.h"
  if (!($8)) {
   label = 3;
   break;
  }
  $9 = $0; //@line 3545 "src/sprites/../puun/gf/../../other/stb_image.h"
  $10 = (_stbi__zget8($9)|0); //@line 3545 "src/sprites/../puun/gf/../../other/stb_image.h"
  $11 = $10&255; //@line 3545 "src/sprites/../puun/gf/../../other/stb_image.h"
  $12 = $0; //@line 3545 "src/sprites/../puun/gf/../../other/stb_image.h"
  $13 = (($12) + 8|0); //@line 3545 "src/sprites/../puun/gf/../../other/stb_image.h"
  $14 = HEAP32[$13>>2]|0; //@line 3545 "src/sprites/../puun/gf/../../other/stb_image.h"
  $15 = $11 << $14; //@line 3545 "src/sprites/../puun/gf/../../other/stb_image.h"
  $16 = $0; //@line 3545 "src/sprites/../puun/gf/../../other/stb_image.h"
  $17 = (($16) + 12|0); //@line 3545 "src/sprites/../puun/gf/../../other/stb_image.h"
  $18 = HEAP32[$17>>2]|0; //@line 3545 "src/sprites/../puun/gf/../../other/stb_image.h"
  $19 = $18 | $15; //@line 3545 "src/sprites/../puun/gf/../../other/stb_image.h"
  HEAP32[$17>>2] = $19; //@line 3545 "src/sprites/../puun/gf/../../other/stb_image.h"
  $20 = $0; //@line 3546 "src/sprites/../puun/gf/../../other/stb_image.h"
  $21 = (($20) + 8|0); //@line 3546 "src/sprites/../puun/gf/../../other/stb_image.h"
  $22 = HEAP32[$21>>2]|0; //@line 3546 "src/sprites/../puun/gf/../../other/stb_image.h"
  $23 = (($22) + 8)|0; //@line 3546 "src/sprites/../puun/gf/../../other/stb_image.h"
  HEAP32[$21>>2] = $23; //@line 3546 "src/sprites/../puun/gf/../../other/stb_image.h"
  $24 = $0; //@line 3547 "src/sprites/../puun/gf/../../other/stb_image.h"
  $25 = (($24) + 8|0); //@line 3547 "src/sprites/../puun/gf/../../other/stb_image.h"
  $26 = HEAP32[$25>>2]|0; //@line 3547 "src/sprites/../puun/gf/../../other/stb_image.h"
  $27 = ($26|0)<=(24); //@line 3547 "src/sprites/../puun/gf/../../other/stb_image.h"
  if (!($27)) {
   label = 6;
   break;
  }
 }
 if ((label|0) == 3) {
  ___assert_fail((9368|0),(7560|0),3544,(9408|0)); //@line 3544 "src/sprites/../puun/gf/../../other/stb_image.h"
  // unreachable; //@line 3544 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 else if ((label|0) == 6) {
  STACKTOP = sp;return; //@line 3548 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
}
function _stbi__zget8($z) {
 $z = $z|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $z;
 $2 = $1; //@line 3537 "src/sprites/../puun/gf/../../other/stb_image.h"
 $3 = HEAP32[$2>>2]|0; //@line 3537 "src/sprites/../puun/gf/../../other/stb_image.h"
 $4 = $1; //@line 3537 "src/sprites/../puun/gf/../../other/stb_image.h"
 $5 = (($4) + 4|0); //@line 3537 "src/sprites/../puun/gf/../../other/stb_image.h"
 $6 = HEAP32[$5>>2]|0; //@line 3537 "src/sprites/../puun/gf/../../other/stb_image.h"
 $7 = ($3>>>0)>=($6>>>0); //@line 3537 "src/sprites/../puun/gf/../../other/stb_image.h"
 if ($7) {
  $0 = 0; //@line 3537 "src/sprites/../puun/gf/../../other/stb_image.h"
  $12 = $0; //@line 3539 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($12|0); //@line 3539 "src/sprites/../puun/gf/../../other/stb_image.h"
 } else {
  $8 = $1; //@line 3538 "src/sprites/../puun/gf/../../other/stb_image.h"
  $9 = HEAP32[$8>>2]|0; //@line 3538 "src/sprites/../puun/gf/../../other/stb_image.h"
  $10 = (($9) + 1|0); //@line 3538 "src/sprites/../puun/gf/../../other/stb_image.h"
  HEAP32[$8>>2] = $10; //@line 3538 "src/sprites/../puun/gf/../../other/stb_image.h"
  $11 = HEAP8[$9>>0]|0; //@line 3538 "src/sprites/../puun/gf/../../other/stb_image.h"
  $0 = $11; //@line 3538 "src/sprites/../puun/gf/../../other/stb_image.h"
  $12 = $0; //@line 3539 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($12|0); //@line 3539 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 return (0)|0;
}
function _stbi__compute_huffman_codes($a) {
 $a = $a|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0;
 var $96 = 0, $97 = 0, $98 = 0, $99 = 0, $c = 0, $codelength_sizes = 0, $hclen = 0, $hdist = 0, $hlit = 0, $i = 0, $lencodes = 0, $n = 0, $s = 0, $z_codelength = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 2544|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $z_codelength = sp + 28|0;
 $lencodes = sp + 2075|0;
 $codelength_sizes = sp + 2056|0;
 $1 = $a;
 $2 = $1; //@line 3674 "src/sprites/../puun/gf/../../other/stb_image.h"
 $3 = (_stbi__zreceive($2,5)|0); //@line 3674 "src/sprites/../puun/gf/../../other/stb_image.h"
 $4 = (($3) + 257)|0; //@line 3674 "src/sprites/../puun/gf/../../other/stb_image.h"
 $hlit = $4; //@line 3674 "src/sprites/../puun/gf/../../other/stb_image.h"
 $5 = $1; //@line 3675 "src/sprites/../puun/gf/../../other/stb_image.h"
 $6 = (_stbi__zreceive($5,5)|0); //@line 3675 "src/sprites/../puun/gf/../../other/stb_image.h"
 $7 = (($6) + 1)|0; //@line 3675 "src/sprites/../puun/gf/../../other/stb_image.h"
 $hdist = $7; //@line 3675 "src/sprites/../puun/gf/../../other/stb_image.h"
 $8 = $1; //@line 3676 "src/sprites/../puun/gf/../../other/stb_image.h"
 $9 = (_stbi__zreceive($8,4)|0); //@line 3676 "src/sprites/../puun/gf/../../other/stb_image.h"
 $10 = (($9) + 4)|0; //@line 3676 "src/sprites/../puun/gf/../../other/stb_image.h"
 $hclen = $10; //@line 3676 "src/sprites/../puun/gf/../../other/stb_image.h"
 dest=$codelength_sizes+0|0; stop=dest+19|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0)); //@line 3678 "src/sprites/../puun/gf/../../other/stb_image.h"
 $i = 0; //@line 3679 "src/sprites/../puun/gf/../../other/stb_image.h"
 while(1) {
  $11 = $i; //@line 3679 "src/sprites/../puun/gf/../../other/stb_image.h"
  $12 = $hclen; //@line 3679 "src/sprites/../puun/gf/../../other/stb_image.h"
  $13 = ($11|0)<($12|0); //@line 3679 "src/sprites/../puun/gf/../../other/stb_image.h"
  if (!($13)) {
   break;
  }
  $14 = $1; //@line 3680 "src/sprites/../puun/gf/../../other/stb_image.h"
  $15 = (_stbi__zreceive($14,3)|0); //@line 3680 "src/sprites/../puun/gf/../../other/stb_image.h"
  $s = $15; //@line 3680 "src/sprites/../puun/gf/../../other/stb_image.h"
  $16 = $s; //@line 3681 "src/sprites/../puun/gf/../../other/stb_image.h"
  $17 = $16&255; //@line 3681 "src/sprites/../puun/gf/../../other/stb_image.h"
  $18 = $i; //@line 3681 "src/sprites/../puun/gf/../../other/stb_image.h"
  $19 = (9424 + ($18)|0); //@line 3681 "src/sprites/../puun/gf/../../other/stb_image.h"
  $20 = HEAP8[$19>>0]|0; //@line 3681 "src/sprites/../puun/gf/../../other/stb_image.h"
  $21 = $20&255; //@line 3681 "src/sprites/../puun/gf/../../other/stb_image.h"
  $22 = (($codelength_sizes) + ($21)|0); //@line 3681 "src/sprites/../puun/gf/../../other/stb_image.h"
  HEAP8[$22>>0] = $17; //@line 3681 "src/sprites/../puun/gf/../../other/stb_image.h"
  $23 = $i; //@line 3679 "src/sprites/../puun/gf/../../other/stb_image.h"
  $24 = (($23) + 1)|0; //@line 3679 "src/sprites/../puun/gf/../../other/stb_image.h"
  $i = $24; //@line 3679 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $25 = (_stbi__zbuild_huffman($z_codelength,$codelength_sizes,19)|0); //@line 3683 "src/sprites/../puun/gf/../../other/stb_image.h"
 $26 = ($25|0)!=(0); //@line 3683 "src/sprites/../puun/gf/../../other/stb_image.h"
 if (!($26)) {
  $0 = 0; //@line 3683 "src/sprites/../puun/gf/../../other/stb_image.h"
  $103 = $0; //@line 3710 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($103|0); //@line 3710 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $n = 0; //@line 3685 "src/sprites/../puun/gf/../../other/stb_image.h"
 while(1) {
  $27 = $n; //@line 3686 "src/sprites/../puun/gf/../../other/stb_image.h"
  $28 = $hlit; //@line 3686 "src/sprites/../puun/gf/../../other/stb_image.h"
  $29 = $hdist; //@line 3686 "src/sprites/../puun/gf/../../other/stb_image.h"
  $30 = (($28) + ($29))|0; //@line 3686 "src/sprites/../puun/gf/../../other/stb_image.h"
  $31 = ($27|0)<($30|0); //@line 3686 "src/sprites/../puun/gf/../../other/stb_image.h"
  if (!($31)) {
   label = 24;
   break;
  }
  $32 = $1; //@line 3687 "src/sprites/../puun/gf/../../other/stb_image.h"
  $33 = (_stbi__zhuffman_decode($32,$z_codelength)|0); //@line 3687 "src/sprites/../puun/gf/../../other/stb_image.h"
  $c = $33; //@line 3687 "src/sprites/../puun/gf/../../other/stb_image.h"
  $34 = $c; //@line 3688 "src/sprites/../puun/gf/../../other/stb_image.h"
  $35 = ($34|0)<(0); //@line 3688 "src/sprites/../puun/gf/../../other/stb_image.h"
  if ($35) {
   label = 11;
   break;
  }
  $36 = $c; //@line 3688 "src/sprites/../puun/gf/../../other/stb_image.h"
  $37 = ($36|0)>=(19); //@line 3688 "src/sprites/../puun/gf/../../other/stb_image.h"
  if ($37) {
   label = 11;
   break;
  }
  $39 = $c; //@line 3689 "src/sprites/../puun/gf/../../other/stb_image.h"
  $40 = ($39|0)<(16); //@line 3689 "src/sprites/../puun/gf/../../other/stb_image.h"
  if ($40) {
   $41 = $c; //@line 3690 "src/sprites/../puun/gf/../../other/stb_image.h"
   $42 = $41&255; //@line 3690 "src/sprites/../puun/gf/../../other/stb_image.h"
   $43 = $n; //@line 3690 "src/sprites/../puun/gf/../../other/stb_image.h"
   $44 = (($43) + 1)|0; //@line 3690 "src/sprites/../puun/gf/../../other/stb_image.h"
   $n = $44; //@line 3690 "src/sprites/../puun/gf/../../other/stb_image.h"
   $45 = (($lencodes) + ($43)|0); //@line 3690 "src/sprites/../puun/gf/../../other/stb_image.h"
   HEAP8[$45>>0] = $42; //@line 3690 "src/sprites/../puun/gf/../../other/stb_image.h"
  } else {
   $46 = $c; //@line 3691 "src/sprites/../puun/gf/../../other/stb_image.h"
   $47 = ($46|0)==(16); //@line 3691 "src/sprites/../puun/gf/../../other/stb_image.h"
   if ($47) {
    $48 = $1; //@line 3692 "src/sprites/../puun/gf/../../other/stb_image.h"
    $49 = (_stbi__zreceive($48,2)|0); //@line 3692 "src/sprites/../puun/gf/../../other/stb_image.h"
    $50 = (($49) + 3)|0; //@line 3692 "src/sprites/../puun/gf/../../other/stb_image.h"
    $c = $50; //@line 3692 "src/sprites/../puun/gf/../../other/stb_image.h"
    $51 = $n; //@line 3693 "src/sprites/../puun/gf/../../other/stb_image.h"
    $52 = (($lencodes) + ($51)|0); //@line 3693 "src/sprites/../puun/gf/../../other/stb_image.h"
    $53 = $n; //@line 3693 "src/sprites/../puun/gf/../../other/stb_image.h"
    $54 = (($53) - 1)|0; //@line 3693 "src/sprites/../puun/gf/../../other/stb_image.h"
    $55 = (($lencodes) + ($54)|0); //@line 3693 "src/sprites/../puun/gf/../../other/stb_image.h"
    $56 = HEAP8[$55>>0]|0; //@line 3693 "src/sprites/../puun/gf/../../other/stb_image.h"
    $57 = $56&255; //@line 3693 "src/sprites/../puun/gf/../../other/stb_image.h"
    $58 = $57&255; //@line 3693 "src/sprites/../puun/gf/../../other/stb_image.h"
    $59 = $c; //@line 3693 "src/sprites/../puun/gf/../../other/stb_image.h"
    _memset(($52|0),($58|0),($59|0))|0; //@line 3693 "src/sprites/../puun/gf/../../other/stb_image.h"
    $60 = $c; //@line 3694 "src/sprites/../puun/gf/../../other/stb_image.h"
    $61 = $n; //@line 3694 "src/sprites/../puun/gf/../../other/stb_image.h"
    $62 = (($61) + ($60))|0; //@line 3694 "src/sprites/../puun/gf/../../other/stb_image.h"
    $n = $62; //@line 3694 "src/sprites/../puun/gf/../../other/stb_image.h"
   } else {
    $63 = $c; //@line 3695 "src/sprites/../puun/gf/../../other/stb_image.h"
    $64 = ($63|0)==(17); //@line 3695 "src/sprites/../puun/gf/../../other/stb_image.h"
    if ($64) {
     $65 = $1; //@line 3696 "src/sprites/../puun/gf/../../other/stb_image.h"
     $66 = (_stbi__zreceive($65,3)|0); //@line 3696 "src/sprites/../puun/gf/../../other/stb_image.h"
     $67 = (($66) + 3)|0; //@line 3696 "src/sprites/../puun/gf/../../other/stb_image.h"
     $c = $67; //@line 3696 "src/sprites/../puun/gf/../../other/stb_image.h"
     $68 = $n; //@line 3697 "src/sprites/../puun/gf/../../other/stb_image.h"
     $69 = (($lencodes) + ($68)|0); //@line 3697 "src/sprites/../puun/gf/../../other/stb_image.h"
     $70 = $c; //@line 3697 "src/sprites/../puun/gf/../../other/stb_image.h"
     _memset(($69|0),0,($70|0))|0; //@line 3697 "src/sprites/../puun/gf/../../other/stb_image.h"
     $71 = $c; //@line 3698 "src/sprites/../puun/gf/../../other/stb_image.h"
     $72 = $n; //@line 3698 "src/sprites/../puun/gf/../../other/stb_image.h"
     $73 = (($72) + ($71))|0; //@line 3698 "src/sprites/../puun/gf/../../other/stb_image.h"
     $n = $73; //@line 3698 "src/sprites/../puun/gf/../../other/stb_image.h"
    } else {
     $74 = $c; //@line 3700 "src/sprites/../puun/gf/../../other/stb_image.h"
     $75 = ($74|0)==(18); //@line 3700 "src/sprites/../puun/gf/../../other/stb_image.h"
     if (!($75)) {
      label = 19;
      break;
     }
     $76 = $1; //@line 3701 "src/sprites/../puun/gf/../../other/stb_image.h"
     $77 = (_stbi__zreceive($76,7)|0); //@line 3701 "src/sprites/../puun/gf/../../other/stb_image.h"
     $78 = (($77) + 11)|0; //@line 3701 "src/sprites/../puun/gf/../../other/stb_image.h"
     $c = $78; //@line 3701 "src/sprites/../puun/gf/../../other/stb_image.h"
     $79 = $n; //@line 3702 "src/sprites/../puun/gf/../../other/stb_image.h"
     $80 = (($lencodes) + ($79)|0); //@line 3702 "src/sprites/../puun/gf/../../other/stb_image.h"
     $81 = $c; //@line 3702 "src/sprites/../puun/gf/../../other/stb_image.h"
     _memset(($80|0),0,($81|0))|0; //@line 3702 "src/sprites/../puun/gf/../../other/stb_image.h"
     $82 = $c; //@line 3703 "src/sprites/../puun/gf/../../other/stb_image.h"
     $83 = $n; //@line 3703 "src/sprites/../puun/gf/../../other/stb_image.h"
     $84 = (($83) + ($82))|0; //@line 3703 "src/sprites/../puun/gf/../../other/stb_image.h"
     $n = $84; //@line 3703 "src/sprites/../puun/gf/../../other/stb_image.h"
    }
   }
  }
 }
 if ((label|0) == 11) {
  $38 = (_stbi__err(9448)|0); //@line 3688 "src/sprites/../puun/gf/../../other/stb_image.h"
  $0 = $38; //@line 3688 "src/sprites/../puun/gf/../../other/stb_image.h"
  $103 = $0; //@line 3710 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($103|0); //@line 3710 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 else if ((label|0) == 19) {
  ___assert_fail((9464|0),(7560|0),3700,(9472|0)); //@line 3700 "src/sprites/../puun/gf/../../other/stb_image.h"
  // unreachable; //@line 3700 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 else if ((label|0) == 24) {
  $85 = $n; //@line 3706 "src/sprites/../puun/gf/../../other/stb_image.h"
  $86 = $hlit; //@line 3706 "src/sprites/../puun/gf/../../other/stb_image.h"
  $87 = $hdist; //@line 3706 "src/sprites/../puun/gf/../../other/stb_image.h"
  $88 = (($86) + ($87))|0; //@line 3706 "src/sprites/../puun/gf/../../other/stb_image.h"
  $89 = ($85|0)!=($88|0); //@line 3706 "src/sprites/../puun/gf/../../other/stb_image.h"
  if ($89) {
   $90 = (_stbi__err(9448)|0); //@line 3706 "src/sprites/../puun/gf/../../other/stb_image.h"
   $0 = $90; //@line 3706 "src/sprites/../puun/gf/../../other/stb_image.h"
   $103 = $0; //@line 3710 "src/sprites/../puun/gf/../../other/stb_image.h"
   STACKTOP = sp;return ($103|0); //@line 3710 "src/sprites/../puun/gf/../../other/stb_image.h"
  }
  $91 = $1; //@line 3707 "src/sprites/../puun/gf/../../other/stb_image.h"
  $92 = (($91) + 32|0); //@line 3707 "src/sprites/../puun/gf/../../other/stb_image.h"
  $93 = $hlit; //@line 3707 "src/sprites/../puun/gf/../../other/stb_image.h"
  $94 = (_stbi__zbuild_huffman($92,$lencodes,$93)|0); //@line 3707 "src/sprites/../puun/gf/../../other/stb_image.h"
  $95 = ($94|0)!=(0); //@line 3707 "src/sprites/../puun/gf/../../other/stb_image.h"
  if (!($95)) {
   $0 = 0; //@line 3707 "src/sprites/../puun/gf/../../other/stb_image.h"
   $103 = $0; //@line 3710 "src/sprites/../puun/gf/../../other/stb_image.h"
   STACKTOP = sp;return ($103|0); //@line 3710 "src/sprites/../puun/gf/../../other/stb_image.h"
  }
  $96 = $1; //@line 3708 "src/sprites/../puun/gf/../../other/stb_image.h"
  $97 = (($96) + 2052|0); //@line 3708 "src/sprites/../puun/gf/../../other/stb_image.h"
  $98 = $hlit; //@line 3708 "src/sprites/../puun/gf/../../other/stb_image.h"
  $99 = (($lencodes) + ($98)|0); //@line 3708 "src/sprites/../puun/gf/../../other/stb_image.h"
  $100 = $hdist; //@line 3708 "src/sprites/../puun/gf/../../other/stb_image.h"
  $101 = (_stbi__zbuild_huffman($97,$99,$100)|0); //@line 3708 "src/sprites/../puun/gf/../../other/stb_image.h"
  $102 = ($101|0)!=(0); //@line 3708 "src/sprites/../puun/gf/../../other/stb_image.h"
  if ($102) {
   $0 = 1; //@line 3709 "src/sprites/../puun/gf/../../other/stb_image.h"
   $103 = $0; //@line 3710 "src/sprites/../puun/gf/../../other/stb_image.h"
   STACKTOP = sp;return ($103|0); //@line 3710 "src/sprites/../puun/gf/../../other/stb_image.h"
  } else {
   $0 = 0; //@line 3708 "src/sprites/../puun/gf/../../other/stb_image.h"
   $103 = $0; //@line 3710 "src/sprites/../puun/gf/../../other/stb_image.h"
   STACKTOP = sp;return ($103|0); //@line 3710 "src/sprites/../puun/gf/../../other/stb_image.h"
  }
 }
 return (0)|0;
}
function _stbi__zbuild_huffman($z,$sizelist,$num) {
 $z = $z|0;
 $sizelist = $sizelist|0;
 $num = $num|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0;
 var $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0;
 var $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0;
 var $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0;
 var $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $c = 0, $code = 0, $fastv = 0, $i = 0, $k = 0, $k1 = 0, $next_code = 0, $s = 0, $sizes = 0, dest = 0, label = 0;
 var sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $next_code = sp + 80|0;
 $sizes = sp + 12|0;
 $1 = $z;
 $2 = $sizelist;
 $3 = $num;
 $k = 0; //@line 3470 "src/sprites/../puun/gf/../../other/stb_image.h"
 dest=$sizes+0|0; stop=dest+68|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0)); //@line 3474 "src/sprites/../puun/gf/../../other/stb_image.h"
 $4 = $1; //@line 3475 "src/sprites/../puun/gf/../../other/stb_image.h"
 _memset(($4|0),0,1024)|0; //@line 3475 "src/sprites/../puun/gf/../../other/stb_image.h"
 $i = 0; //@line 3476 "src/sprites/../puun/gf/../../other/stb_image.h"
 while(1) {
  $5 = $i; //@line 3476 "src/sprites/../puun/gf/../../other/stb_image.h"
  $6 = $3; //@line 3476 "src/sprites/../puun/gf/../../other/stb_image.h"
  $7 = ($5|0)<($6|0); //@line 3476 "src/sprites/../puun/gf/../../other/stb_image.h"
  if (!($7)) {
   break;
  }
  $8 = $i; //@line 3477 "src/sprites/../puun/gf/../../other/stb_image.h"
  $9 = $2; //@line 3477 "src/sprites/../puun/gf/../../other/stb_image.h"
  $10 = (($9) + ($8)|0); //@line 3477 "src/sprites/../puun/gf/../../other/stb_image.h"
  $11 = HEAP8[$10>>0]|0; //@line 3477 "src/sprites/../puun/gf/../../other/stb_image.h"
  $12 = $11&255; //@line 3477 "src/sprites/../puun/gf/../../other/stb_image.h"
  $13 = (($sizes) + ($12<<2)|0); //@line 3477 "src/sprites/../puun/gf/../../other/stb_image.h"
  $14 = HEAP32[$13>>2]|0; //@line 3477 "src/sprites/../puun/gf/../../other/stb_image.h"
  $15 = (($14) + 1)|0; //@line 3477 "src/sprites/../puun/gf/../../other/stb_image.h"
  HEAP32[$13>>2] = $15; //@line 3477 "src/sprites/../puun/gf/../../other/stb_image.h"
  $16 = $i; //@line 3476 "src/sprites/../puun/gf/../../other/stb_image.h"
  $17 = (($16) + 1)|0; //@line 3476 "src/sprites/../puun/gf/../../other/stb_image.h"
  $i = $17; //@line 3476 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 HEAP32[$sizes>>2] = 0; //@line 3478 "src/sprites/../puun/gf/../../other/stb_image.h"
 $i = 1; //@line 3479 "src/sprites/../puun/gf/../../other/stb_image.h"
 while(1) {
  $18 = $i; //@line 3479 "src/sprites/../puun/gf/../../other/stb_image.h"
  $19 = ($18|0)<(16); //@line 3479 "src/sprites/../puun/gf/../../other/stb_image.h"
  if (!($19)) {
   break;
  }
  $20 = $i; //@line 3480 "src/sprites/../puun/gf/../../other/stb_image.h"
  $21 = (($sizes) + ($20<<2)|0); //@line 3480 "src/sprites/../puun/gf/../../other/stb_image.h"
  $22 = HEAP32[$21>>2]|0; //@line 3480 "src/sprites/../puun/gf/../../other/stb_image.h"
  $23 = $i; //@line 3480 "src/sprites/../puun/gf/../../other/stb_image.h"
  $24 = 1 << $23; //@line 3480 "src/sprites/../puun/gf/../../other/stb_image.h"
  $25 = ($22|0)>($24|0); //@line 3480 "src/sprites/../puun/gf/../../other/stb_image.h"
  if ($25) {
   label = 8;
   break;
  }
  $27 = $i; //@line 3479 "src/sprites/../puun/gf/../../other/stb_image.h"
  $28 = (($27) + 1)|0; //@line 3479 "src/sprites/../puun/gf/../../other/stb_image.h"
  $i = $28; //@line 3479 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 if ((label|0) == 8) {
  $26 = (_stbi__err(9504)|0); //@line 3481 "src/sprites/../puun/gf/../../other/stb_image.h"
  $0 = $26; //@line 3481 "src/sprites/../puun/gf/../../other/stb_image.h"
  $148 = $0; //@line 3513 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($148|0); //@line 3513 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $code = 0; //@line 3482 "src/sprites/../puun/gf/../../other/stb_image.h"
 $i = 1; //@line 3483 "src/sprites/../puun/gf/../../other/stb_image.h"
 while(1) {
  $29 = $i; //@line 3483 "src/sprites/../puun/gf/../../other/stb_image.h"
  $30 = ($29|0)<(16); //@line 3483 "src/sprites/../puun/gf/../../other/stb_image.h"
  if (!($30)) {
   break;
  }
  $31 = $code; //@line 3484 "src/sprites/../puun/gf/../../other/stb_image.h"
  $32 = $i; //@line 3484 "src/sprites/../puun/gf/../../other/stb_image.h"
  $33 = (($next_code) + ($32<<2)|0); //@line 3484 "src/sprites/../puun/gf/../../other/stb_image.h"
  HEAP32[$33>>2] = $31; //@line 3484 "src/sprites/../puun/gf/../../other/stb_image.h"
  $34 = $code; //@line 3485 "src/sprites/../puun/gf/../../other/stb_image.h"
  $35 = $34&65535; //@line 3485 "src/sprites/../puun/gf/../../other/stb_image.h"
  $36 = $i; //@line 3485 "src/sprites/../puun/gf/../../other/stb_image.h"
  $37 = $1; //@line 3485 "src/sprites/../puun/gf/../../other/stb_image.h"
  $38 = (($37) + 1024|0); //@line 3485 "src/sprites/../puun/gf/../../other/stb_image.h"
  $39 = (($38) + ($36<<1)|0); //@line 3485 "src/sprites/../puun/gf/../../other/stb_image.h"
  HEAP16[$39>>1] = $35; //@line 3485 "src/sprites/../puun/gf/../../other/stb_image.h"
  $40 = $k; //@line 3486 "src/sprites/../puun/gf/../../other/stb_image.h"
  $41 = $40&65535; //@line 3486 "src/sprites/../puun/gf/../../other/stb_image.h"
  $42 = $i; //@line 3486 "src/sprites/../puun/gf/../../other/stb_image.h"
  $43 = $1; //@line 3486 "src/sprites/../puun/gf/../../other/stb_image.h"
  $44 = (($43) + 1124|0); //@line 3486 "src/sprites/../puun/gf/../../other/stb_image.h"
  $45 = (($44) + ($42<<1)|0); //@line 3486 "src/sprites/../puun/gf/../../other/stb_image.h"
  HEAP16[$45>>1] = $41; //@line 3486 "src/sprites/../puun/gf/../../other/stb_image.h"
  $46 = $code; //@line 3487 "src/sprites/../puun/gf/../../other/stb_image.h"
  $47 = $i; //@line 3487 "src/sprites/../puun/gf/../../other/stb_image.h"
  $48 = (($sizes) + ($47<<2)|0); //@line 3487 "src/sprites/../puun/gf/../../other/stb_image.h"
  $49 = HEAP32[$48>>2]|0; //@line 3487 "src/sprites/../puun/gf/../../other/stb_image.h"
  $50 = (($46) + ($49))|0; //@line 3487 "src/sprites/../puun/gf/../../other/stb_image.h"
  $code = $50; //@line 3487 "src/sprites/../puun/gf/../../other/stb_image.h"
  $51 = $i; //@line 3488 "src/sprites/../puun/gf/../../other/stb_image.h"
  $52 = (($sizes) + ($51<<2)|0); //@line 3488 "src/sprites/../puun/gf/../../other/stb_image.h"
  $53 = HEAP32[$52>>2]|0; //@line 3488 "src/sprites/../puun/gf/../../other/stb_image.h"
  $54 = ($53|0)!=(0); //@line 3488 "src/sprites/../puun/gf/../../other/stb_image.h"
  if ($54) {
   $55 = $code; //@line 3489 "src/sprites/../puun/gf/../../other/stb_image.h"
   $56 = (($55) - 1)|0; //@line 3489 "src/sprites/../puun/gf/../../other/stb_image.h"
   $57 = $i; //@line 3489 "src/sprites/../puun/gf/../../other/stb_image.h"
   $58 = 1 << $57; //@line 3489 "src/sprites/../puun/gf/../../other/stb_image.h"
   $59 = ($56|0)>=($58|0); //@line 3489 "src/sprites/../puun/gf/../../other/stb_image.h"
   if ($59) {
    label = 15;
    break;
   }
  }
  $61 = $code; //@line 3490 "src/sprites/../puun/gf/../../other/stb_image.h"
  $62 = $i; //@line 3490 "src/sprites/../puun/gf/../../other/stb_image.h"
  $63 = (16 - ($62))|0; //@line 3490 "src/sprites/../puun/gf/../../other/stb_image.h"
  $64 = $61 << $63; //@line 3490 "src/sprites/../puun/gf/../../other/stb_image.h"
  $65 = $i; //@line 3490 "src/sprites/../puun/gf/../../other/stb_image.h"
  $66 = $1; //@line 3490 "src/sprites/../puun/gf/../../other/stb_image.h"
  $67 = (($66) + 1056|0); //@line 3490 "src/sprites/../puun/gf/../../other/stb_image.h"
  $68 = (($67) + ($65<<2)|0); //@line 3490 "src/sprites/../puun/gf/../../other/stb_image.h"
  HEAP32[$68>>2] = $64; //@line 3490 "src/sprites/../puun/gf/../../other/stb_image.h"
  $69 = $code; //@line 3491 "src/sprites/../puun/gf/../../other/stb_image.h"
  $70 = $69 << 1; //@line 3491 "src/sprites/../puun/gf/../../other/stb_image.h"
  $code = $70; //@line 3491 "src/sprites/../puun/gf/../../other/stb_image.h"
  $71 = $i; //@line 3492 "src/sprites/../puun/gf/../../other/stb_image.h"
  $72 = (($sizes) + ($71<<2)|0); //@line 3492 "src/sprites/../puun/gf/../../other/stb_image.h"
  $73 = HEAP32[$72>>2]|0; //@line 3492 "src/sprites/../puun/gf/../../other/stb_image.h"
  $74 = $k; //@line 3492 "src/sprites/../puun/gf/../../other/stb_image.h"
  $75 = (($74) + ($73))|0; //@line 3492 "src/sprites/../puun/gf/../../other/stb_image.h"
  $k = $75; //@line 3492 "src/sprites/../puun/gf/../../other/stb_image.h"
  $76 = $i; //@line 3483 "src/sprites/../puun/gf/../../other/stb_image.h"
  $77 = (($76) + 1)|0; //@line 3483 "src/sprites/../puun/gf/../../other/stb_image.h"
  $i = $77; //@line 3483 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 if ((label|0) == 15) {
  $60 = (_stbi__err(9448)|0); //@line 3489 "src/sprites/../puun/gf/../../other/stb_image.h"
  $0 = $60; //@line 3489 "src/sprites/../puun/gf/../../other/stb_image.h"
  $148 = $0; //@line 3513 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($148|0); //@line 3513 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $78 = $1; //@line 3494 "src/sprites/../puun/gf/../../other/stb_image.h"
 $79 = (($78) + 1056|0); //@line 3494 "src/sprites/../puun/gf/../../other/stb_image.h"
 $80 = (($79) + 64|0); //@line 3494 "src/sprites/../puun/gf/../../other/stb_image.h"
 HEAP32[$80>>2] = 65536; //@line 3494 "src/sprites/../puun/gf/../../other/stb_image.h"
 $i = 0; //@line 3495 "src/sprites/../puun/gf/../../other/stb_image.h"
 while(1) {
  $81 = $i; //@line 3495 "src/sprites/../puun/gf/../../other/stb_image.h"
  $82 = $3; //@line 3495 "src/sprites/../puun/gf/../../other/stb_image.h"
  $83 = ($81|0)<($82|0); //@line 3495 "src/sprites/../puun/gf/../../other/stb_image.h"
  if (!($83)) {
   break;
  }
  $84 = $i; //@line 3496 "src/sprites/../puun/gf/../../other/stb_image.h"
  $85 = $2; //@line 3496 "src/sprites/../puun/gf/../../other/stb_image.h"
  $86 = (($85) + ($84)|0); //@line 3496 "src/sprites/../puun/gf/../../other/stb_image.h"
  $87 = HEAP8[$86>>0]|0; //@line 3496 "src/sprites/../puun/gf/../../other/stb_image.h"
  $88 = $87&255; //@line 3496 "src/sprites/../puun/gf/../../other/stb_image.h"
  $s = $88; //@line 3496 "src/sprites/../puun/gf/../../other/stb_image.h"
  $89 = $s; //@line 3497 "src/sprites/../puun/gf/../../other/stb_image.h"
  $90 = ($89|0)!=(0); //@line 3497 "src/sprites/../puun/gf/../../other/stb_image.h"
  if ($90) {
   $91 = $s; //@line 3498 "src/sprites/../puun/gf/../../other/stb_image.h"
   $92 = (($next_code) + ($91<<2)|0); //@line 3498 "src/sprites/../puun/gf/../../other/stb_image.h"
   $93 = HEAP32[$92>>2]|0; //@line 3498 "src/sprites/../puun/gf/../../other/stb_image.h"
   $94 = $s; //@line 3498 "src/sprites/../puun/gf/../../other/stb_image.h"
   $95 = $1; //@line 3498 "src/sprites/../puun/gf/../../other/stb_image.h"
   $96 = (($95) + 1024|0); //@line 3498 "src/sprites/../puun/gf/../../other/stb_image.h"
   $97 = (($96) + ($94<<1)|0); //@line 3498 "src/sprites/../puun/gf/../../other/stb_image.h"
   $98 = HEAP16[$97>>1]|0; //@line 3498 "src/sprites/../puun/gf/../../other/stb_image.h"
   $99 = $98&65535; //@line 3498 "src/sprites/../puun/gf/../../other/stb_image.h"
   $100 = (($93) - ($99))|0; //@line 3498 "src/sprites/../puun/gf/../../other/stb_image.h"
   $101 = $s; //@line 3498 "src/sprites/../puun/gf/../../other/stb_image.h"
   $102 = $1; //@line 3498 "src/sprites/../puun/gf/../../other/stb_image.h"
   $103 = (($102) + 1124|0); //@line 3498 "src/sprites/../puun/gf/../../other/stb_image.h"
   $104 = (($103) + ($101<<1)|0); //@line 3498 "src/sprites/../puun/gf/../../other/stb_image.h"
   $105 = HEAP16[$104>>1]|0; //@line 3498 "src/sprites/../puun/gf/../../other/stb_image.h"
   $106 = $105&65535; //@line 3498 "src/sprites/../puun/gf/../../other/stb_image.h"
   $107 = (($100) + ($106))|0; //@line 3498 "src/sprites/../puun/gf/../../other/stb_image.h"
   $c = $107; //@line 3498 "src/sprites/../puun/gf/../../other/stb_image.h"
   $108 = $s; //@line 3499 "src/sprites/../puun/gf/../../other/stb_image.h"
   $109 = $108 << 9; //@line 3499 "src/sprites/../puun/gf/../../other/stb_image.h"
   $110 = $i; //@line 3499 "src/sprites/../puun/gf/../../other/stb_image.h"
   $111 = $109 | $110; //@line 3499 "src/sprites/../puun/gf/../../other/stb_image.h"
   $112 = $111&65535; //@line 3499 "src/sprites/../puun/gf/../../other/stb_image.h"
   $fastv = $112; //@line 3499 "src/sprites/../puun/gf/../../other/stb_image.h"
   $113 = $s; //@line 3500 "src/sprites/../puun/gf/../../other/stb_image.h"
   $114 = $113&255; //@line 3500 "src/sprites/../puun/gf/../../other/stb_image.h"
   $115 = $c; //@line 3500 "src/sprites/../puun/gf/../../other/stb_image.h"
   $116 = $1; //@line 3500 "src/sprites/../puun/gf/../../other/stb_image.h"
   $117 = (($116) + 1156|0); //@line 3500 "src/sprites/../puun/gf/../../other/stb_image.h"
   $118 = (($117) + ($115)|0); //@line 3500 "src/sprites/../puun/gf/../../other/stb_image.h"
   HEAP8[$118>>0] = $114; //@line 3500 "src/sprites/../puun/gf/../../other/stb_image.h"
   $119 = $i; //@line 3501 "src/sprites/../puun/gf/../../other/stb_image.h"
   $120 = $119&65535; //@line 3501 "src/sprites/../puun/gf/../../other/stb_image.h"
   $121 = $c; //@line 3501 "src/sprites/../puun/gf/../../other/stb_image.h"
   $122 = $1; //@line 3501 "src/sprites/../puun/gf/../../other/stb_image.h"
   $123 = (($122) + 1444|0); //@line 3501 "src/sprites/../puun/gf/../../other/stb_image.h"
   $124 = (($123) + ($121<<1)|0); //@line 3501 "src/sprites/../puun/gf/../../other/stb_image.h"
   HEAP16[$124>>1] = $120; //@line 3501 "src/sprites/../puun/gf/../../other/stb_image.h"
   $125 = $s; //@line 3502 "src/sprites/../puun/gf/../../other/stb_image.h"
   $126 = ($125|0)<=(9); //@line 3502 "src/sprites/../puun/gf/../../other/stb_image.h"
   if ($126) {
    $127 = $s; //@line 3503 "src/sprites/../puun/gf/../../other/stb_image.h"
    $128 = (($next_code) + ($127<<2)|0); //@line 3503 "src/sprites/../puun/gf/../../other/stb_image.h"
    $129 = HEAP32[$128>>2]|0; //@line 3503 "src/sprites/../puun/gf/../../other/stb_image.h"
    $130 = $s; //@line 3503 "src/sprites/../puun/gf/../../other/stb_image.h"
    $131 = (_stbi__bit_reverse($129,$130)|0); //@line 3503 "src/sprites/../puun/gf/../../other/stb_image.h"
    $k1 = $131; //@line 3503 "src/sprites/../puun/gf/../../other/stb_image.h"
    while(1) {
     $132 = $k1; //@line 3504 "src/sprites/../puun/gf/../../other/stb_image.h"
     $133 = ($132|0)<(512); //@line 3504 "src/sprites/../puun/gf/../../other/stb_image.h"
     if (!($133)) {
      break;
     }
     $134 = $fastv; //@line 3505 "src/sprites/../puun/gf/../../other/stb_image.h"
     $135 = $k1; //@line 3505 "src/sprites/../puun/gf/../../other/stb_image.h"
     $136 = $1; //@line 3505 "src/sprites/../puun/gf/../../other/stb_image.h"
     $137 = (($136) + ($135<<1)|0); //@line 3505 "src/sprites/../puun/gf/../../other/stb_image.h"
     HEAP16[$137>>1] = $134; //@line 3505 "src/sprites/../puun/gf/../../other/stb_image.h"
     $138 = $s; //@line 3506 "src/sprites/../puun/gf/../../other/stb_image.h"
     $139 = 1 << $138; //@line 3506 "src/sprites/../puun/gf/../../other/stb_image.h"
     $140 = $k1; //@line 3506 "src/sprites/../puun/gf/../../other/stb_image.h"
     $141 = (($140) + ($139))|0; //@line 3506 "src/sprites/../puun/gf/../../other/stb_image.h"
     $k1 = $141; //@line 3506 "src/sprites/../puun/gf/../../other/stb_image.h"
    }
   }
   $142 = $s; //@line 3509 "src/sprites/../puun/gf/../../other/stb_image.h"
   $143 = (($next_code) + ($142<<2)|0); //@line 3509 "src/sprites/../puun/gf/../../other/stb_image.h"
   $144 = HEAP32[$143>>2]|0; //@line 3509 "src/sprites/../puun/gf/../../other/stb_image.h"
   $145 = (($144) + 1)|0; //@line 3509 "src/sprites/../puun/gf/../../other/stb_image.h"
   HEAP32[$143>>2] = $145; //@line 3509 "src/sprites/../puun/gf/../../other/stb_image.h"
  }
  $146 = $i; //@line 3495 "src/sprites/../puun/gf/../../other/stb_image.h"
  $147 = (($146) + 1)|0; //@line 3495 "src/sprites/../puun/gf/../../other/stb_image.h"
  $i = $147; //@line 3495 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $0 = 1; //@line 3512 "src/sprites/../puun/gf/../../other/stb_image.h"
 $148 = $0; //@line 3513 "src/sprites/../puun/gf/../../other/stb_image.h"
 STACKTOP = sp;return ($148|0); //@line 3513 "src/sprites/../puun/gf/../../other/stb_image.h"
}
function _stbi__init_zdefaults() {
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $i = 0; //@line 3759 "src/sprites/../puun/gf/../../other/stb_image.h"
 while(1) {
  $0 = $i; //@line 3759 "src/sprites/../puun/gf/../../other/stb_image.h"
  $1 = ($0|0)<=(143); //@line 3759 "src/sprites/../puun/gf/../../other/stb_image.h"
  if (!($1)) {
   break;
  }
  $2 = $i; //@line 3759 "src/sprites/../puun/gf/../../other/stb_image.h"
  $3 = (8416 + ($2)|0); //@line 3759 "src/sprites/../puun/gf/../../other/stb_image.h"
  HEAP8[$3>>0] = 8; //@line 3759 "src/sprites/../puun/gf/../../other/stb_image.h"
  $4 = $i; //@line 3759 "src/sprites/../puun/gf/../../other/stb_image.h"
  $5 = (($4) + 1)|0; //@line 3759 "src/sprites/../puun/gf/../../other/stb_image.h"
  $i = $5; //@line 3759 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 while(1) {
  $6 = $i; //@line 3760 "src/sprites/../puun/gf/../../other/stb_image.h"
  $7 = ($6|0)<=(255); //@line 3760 "src/sprites/../puun/gf/../../other/stb_image.h"
  if (!($7)) {
   break;
  }
  $8 = $i; //@line 3760 "src/sprites/../puun/gf/../../other/stb_image.h"
  $9 = (8416 + ($8)|0); //@line 3760 "src/sprites/../puun/gf/../../other/stb_image.h"
  HEAP8[$9>>0] = 9; //@line 3760 "src/sprites/../puun/gf/../../other/stb_image.h"
  $10 = $i; //@line 3760 "src/sprites/../puun/gf/../../other/stb_image.h"
  $11 = (($10) + 1)|0; //@line 3760 "src/sprites/../puun/gf/../../other/stb_image.h"
  $i = $11; //@line 3760 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 while(1) {
  $12 = $i; //@line 3761 "src/sprites/../puun/gf/../../other/stb_image.h"
  $13 = ($12|0)<=(279); //@line 3761 "src/sprites/../puun/gf/../../other/stb_image.h"
  if (!($13)) {
   break;
  }
  $14 = $i; //@line 3761 "src/sprites/../puun/gf/../../other/stb_image.h"
  $15 = (8416 + ($14)|0); //@line 3761 "src/sprites/../puun/gf/../../other/stb_image.h"
  HEAP8[$15>>0] = 7; //@line 3761 "src/sprites/../puun/gf/../../other/stb_image.h"
  $16 = $i; //@line 3761 "src/sprites/../puun/gf/../../other/stb_image.h"
  $17 = (($16) + 1)|0; //@line 3761 "src/sprites/../puun/gf/../../other/stb_image.h"
  $i = $17; //@line 3761 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 while(1) {
  $18 = $i; //@line 3762 "src/sprites/../puun/gf/../../other/stb_image.h"
  $19 = ($18|0)<=(287); //@line 3762 "src/sprites/../puun/gf/../../other/stb_image.h"
  if (!($19)) {
   break;
  }
  $20 = $i; //@line 3762 "src/sprites/../puun/gf/../../other/stb_image.h"
  $21 = (8416 + ($20)|0); //@line 3762 "src/sprites/../puun/gf/../../other/stb_image.h"
  HEAP8[$21>>0] = 8; //@line 3762 "src/sprites/../puun/gf/../../other/stb_image.h"
  $22 = $i; //@line 3762 "src/sprites/../puun/gf/../../other/stb_image.h"
  $23 = (($22) + 1)|0; //@line 3762 "src/sprites/../puun/gf/../../other/stb_image.h"
  $i = $23; //@line 3762 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $i = 0; //@line 3764 "src/sprites/../puun/gf/../../other/stb_image.h"
 while(1) {
  $24 = $i; //@line 3764 "src/sprites/../puun/gf/../../other/stb_image.h"
  $25 = ($24|0)<=(31); //@line 3764 "src/sprites/../puun/gf/../../other/stb_image.h"
  if (!($25)) {
   break;
  }
  $26 = $i; //@line 3764 "src/sprites/../puun/gf/../../other/stb_image.h"
  $27 = (8384 + ($26)|0); //@line 3764 "src/sprites/../puun/gf/../../other/stb_image.h"
  HEAP8[$27>>0] = 5; //@line 3764 "src/sprites/../puun/gf/../../other/stb_image.h"
  $28 = $i; //@line 3764 "src/sprites/../puun/gf/../../other/stb_image.h"
  $29 = (($28) + 1)|0; //@line 3764 "src/sprites/../puun/gf/../../other/stb_image.h"
  $i = $29; //@line 3764 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 STACKTOP = sp;return; //@line 3765 "src/sprites/../puun/gf/../../other/stb_image.h"
}
function _stbi__parse_uncomperssed_block($a) {
 $a = $a|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0;
 var $96 = 0, $97 = 0, $98 = 0, $99 = 0, $header = 0, $k = 0, $len = 0, $nlen = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $header = sp + 20|0;
 $1 = $a;
 $2 = $1; //@line 3716 "src/sprites/../puun/gf/../../other/stb_image.h"
 $3 = (($2) + 8|0); //@line 3716 "src/sprites/../puun/gf/../../other/stb_image.h"
 $4 = HEAP32[$3>>2]|0; //@line 3716 "src/sprites/../puun/gf/../../other/stb_image.h"
 $5 = $4 & 7; //@line 3716 "src/sprites/../puun/gf/../../other/stb_image.h"
 $6 = ($5|0)!=(0); //@line 3716 "src/sprites/../puun/gf/../../other/stb_image.h"
 if ($6) {
  $7 = $1; //@line 3717 "src/sprites/../puun/gf/../../other/stb_image.h"
  $8 = $1; //@line 3717 "src/sprites/../puun/gf/../../other/stb_image.h"
  $9 = (($8) + 8|0); //@line 3717 "src/sprites/../puun/gf/../../other/stb_image.h"
  $10 = HEAP32[$9>>2]|0; //@line 3717 "src/sprites/../puun/gf/../../other/stb_image.h"
  $11 = $10 & 7; //@line 3717 "src/sprites/../puun/gf/../../other/stb_image.h"
  (_stbi__zreceive($7,$11)|0); //@line 3717 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $k = 0; //@line 3719 "src/sprites/../puun/gf/../../other/stb_image.h"
 while(1) {
  $12 = $1; //@line 3720 "src/sprites/../puun/gf/../../other/stb_image.h"
  $13 = (($12) + 8|0); //@line 3720 "src/sprites/../puun/gf/../../other/stb_image.h"
  $14 = HEAP32[$13>>2]|0; //@line 3720 "src/sprites/../puun/gf/../../other/stb_image.h"
  $15 = ($14|0)>(0); //@line 3720 "src/sprites/../puun/gf/../../other/stb_image.h"
  if (!($15)) {
   break;
  }
  $16 = $1; //@line 3721 "src/sprites/../puun/gf/../../other/stb_image.h"
  $17 = (($16) + 12|0); //@line 3721 "src/sprites/../puun/gf/../../other/stb_image.h"
  $18 = HEAP32[$17>>2]|0; //@line 3721 "src/sprites/../puun/gf/../../other/stb_image.h"
  $19 = $18 & 255; //@line 3721 "src/sprites/../puun/gf/../../other/stb_image.h"
  $20 = $19&255; //@line 3721 "src/sprites/../puun/gf/../../other/stb_image.h"
  $21 = $k; //@line 3721 "src/sprites/../puun/gf/../../other/stb_image.h"
  $22 = (($21) + 1)|0; //@line 3721 "src/sprites/../puun/gf/../../other/stb_image.h"
  $k = $22; //@line 3721 "src/sprites/../puun/gf/../../other/stb_image.h"
  $23 = (($header) + ($21)|0); //@line 3721 "src/sprites/../puun/gf/../../other/stb_image.h"
  HEAP8[$23>>0] = $20; //@line 3721 "src/sprites/../puun/gf/../../other/stb_image.h"
  $24 = $1; //@line 3722 "src/sprites/../puun/gf/../../other/stb_image.h"
  $25 = (($24) + 12|0); //@line 3722 "src/sprites/../puun/gf/../../other/stb_image.h"
  $26 = HEAP32[$25>>2]|0; //@line 3722 "src/sprites/../puun/gf/../../other/stb_image.h"
  $27 = $26 >>> 8; //@line 3722 "src/sprites/../puun/gf/../../other/stb_image.h"
  HEAP32[$25>>2] = $27; //@line 3722 "src/sprites/../puun/gf/../../other/stb_image.h"
  $28 = $1; //@line 3723 "src/sprites/../puun/gf/../../other/stb_image.h"
  $29 = (($28) + 8|0); //@line 3723 "src/sprites/../puun/gf/../../other/stb_image.h"
  $30 = HEAP32[$29>>2]|0; //@line 3723 "src/sprites/../puun/gf/../../other/stb_image.h"
  $31 = (($30) - 8)|0; //@line 3723 "src/sprites/../puun/gf/../../other/stb_image.h"
  HEAP32[$29>>2] = $31; //@line 3723 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $32 = $1; //@line 3725 "src/sprites/../puun/gf/../../other/stb_image.h"
 $33 = (($32) + 8|0); //@line 3725 "src/sprites/../puun/gf/../../other/stb_image.h"
 $34 = HEAP32[$33>>2]|0; //@line 3725 "src/sprites/../puun/gf/../../other/stb_image.h"
 $35 = ($34|0)==(0); //@line 3725 "src/sprites/../puun/gf/../../other/stb_image.h"
 if (!($35)) {
  ___assert_fail((9520|0),(7560|0),3725,(9544|0)); //@line 3725 "src/sprites/../puun/gf/../../other/stb_image.h"
  // unreachable; //@line 3725 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 while(1) {
  $36 = $k; //@line 3727 "src/sprites/../puun/gf/../../other/stb_image.h"
  $37 = ($36|0)<(4); //@line 3727 "src/sprites/../puun/gf/../../other/stb_image.h"
  if (!($37)) {
   break;
  }
  $38 = $1; //@line 3728 "src/sprites/../puun/gf/../../other/stb_image.h"
  $39 = (_stbi__zget8($38)|0); //@line 3728 "src/sprites/../puun/gf/../../other/stb_image.h"
  $40 = $k; //@line 3728 "src/sprites/../puun/gf/../../other/stb_image.h"
  $41 = (($40) + 1)|0; //@line 3728 "src/sprites/../puun/gf/../../other/stb_image.h"
  $k = $41; //@line 3728 "src/sprites/../puun/gf/../../other/stb_image.h"
  $42 = (($header) + ($40)|0); //@line 3728 "src/sprites/../puun/gf/../../other/stb_image.h"
  HEAP8[$42>>0] = $39; //@line 3728 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $43 = (($header) + 1|0); //@line 3729 "src/sprites/../puun/gf/../../other/stb_image.h"
 $44 = HEAP8[$43>>0]|0; //@line 3729 "src/sprites/../puun/gf/../../other/stb_image.h"
 $45 = $44&255; //@line 3729 "src/sprites/../puun/gf/../../other/stb_image.h"
 $46 = $45<<8; //@line 3729 "src/sprites/../puun/gf/../../other/stb_image.h"
 $47 = HEAP8[$header>>0]|0; //@line 3729 "src/sprites/../puun/gf/../../other/stb_image.h"
 $48 = $47&255; //@line 3729 "src/sprites/../puun/gf/../../other/stb_image.h"
 $49 = (($46) + ($48))|0; //@line 3729 "src/sprites/../puun/gf/../../other/stb_image.h"
 $len = $49; //@line 3729 "src/sprites/../puun/gf/../../other/stb_image.h"
 $50 = (($header) + 3|0); //@line 3730 "src/sprites/../puun/gf/../../other/stb_image.h"
 $51 = HEAP8[$50>>0]|0; //@line 3730 "src/sprites/../puun/gf/../../other/stb_image.h"
 $52 = $51&255; //@line 3730 "src/sprites/../puun/gf/../../other/stb_image.h"
 $53 = $52<<8; //@line 3730 "src/sprites/../puun/gf/../../other/stb_image.h"
 $54 = (($header) + 2|0); //@line 3730 "src/sprites/../puun/gf/../../other/stb_image.h"
 $55 = HEAP8[$54>>0]|0; //@line 3730 "src/sprites/../puun/gf/../../other/stb_image.h"
 $56 = $55&255; //@line 3730 "src/sprites/../puun/gf/../../other/stb_image.h"
 $57 = (($53) + ($56))|0; //@line 3730 "src/sprites/../puun/gf/../../other/stb_image.h"
 $nlen = $57; //@line 3730 "src/sprites/../puun/gf/../../other/stb_image.h"
 $58 = $nlen; //@line 3731 "src/sprites/../puun/gf/../../other/stb_image.h"
 $59 = $len; //@line 3731 "src/sprites/../puun/gf/../../other/stb_image.h"
 $60 = $59 ^ 65535; //@line 3731 "src/sprites/../puun/gf/../../other/stb_image.h"
 $61 = ($58|0)!=($60|0); //@line 3731 "src/sprites/../puun/gf/../../other/stb_image.h"
 if ($61) {
  $62 = (_stbi__err(9576)|0); //@line 3731 "src/sprites/../puun/gf/../../other/stb_image.h"
  $0 = $62; //@line 3731 "src/sprites/../puun/gf/../../other/stb_image.h"
  $103 = $0; //@line 3739 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($103|0); //@line 3739 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $63 = $1; //@line 3732 "src/sprites/../puun/gf/../../other/stb_image.h"
 $64 = HEAP32[$63>>2]|0; //@line 3732 "src/sprites/../puun/gf/../../other/stb_image.h"
 $65 = $len; //@line 3732 "src/sprites/../puun/gf/../../other/stb_image.h"
 $66 = (($64) + ($65)|0); //@line 3732 "src/sprites/../puun/gf/../../other/stb_image.h"
 $67 = $1; //@line 3732 "src/sprites/../puun/gf/../../other/stb_image.h"
 $68 = (($67) + 4|0); //@line 3732 "src/sprites/../puun/gf/../../other/stb_image.h"
 $69 = HEAP32[$68>>2]|0; //@line 3732 "src/sprites/../puun/gf/../../other/stb_image.h"
 $70 = ($66>>>0)>($69>>>0); //@line 3732 "src/sprites/../puun/gf/../../other/stb_image.h"
 if ($70) {
  $71 = (_stbi__err(9592)|0); //@line 3732 "src/sprites/../puun/gf/../../other/stb_image.h"
  $0 = $71; //@line 3732 "src/sprites/../puun/gf/../../other/stb_image.h"
  $103 = $0; //@line 3739 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($103|0); //@line 3739 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $72 = $1; //@line 3733 "src/sprites/../puun/gf/../../other/stb_image.h"
 $73 = (($72) + 16|0); //@line 3733 "src/sprites/../puun/gf/../../other/stb_image.h"
 $74 = HEAP32[$73>>2]|0; //@line 3733 "src/sprites/../puun/gf/../../other/stb_image.h"
 $75 = $len; //@line 3733 "src/sprites/../puun/gf/../../other/stb_image.h"
 $76 = (($74) + ($75)|0); //@line 3733 "src/sprites/../puun/gf/../../other/stb_image.h"
 $77 = $1; //@line 3733 "src/sprites/../puun/gf/../../other/stb_image.h"
 $78 = (($77) + 24|0); //@line 3733 "src/sprites/../puun/gf/../../other/stb_image.h"
 $79 = HEAP32[$78>>2]|0; //@line 3733 "src/sprites/../puun/gf/../../other/stb_image.h"
 $80 = ($76>>>0)>($79>>>0); //@line 3733 "src/sprites/../puun/gf/../../other/stb_image.h"
 do {
  if ($80) {
   $81 = $1; //@line 3734 "src/sprites/../puun/gf/../../other/stb_image.h"
   $82 = $1; //@line 3734 "src/sprites/../puun/gf/../../other/stb_image.h"
   $83 = (($82) + 16|0); //@line 3734 "src/sprites/../puun/gf/../../other/stb_image.h"
   $84 = HEAP32[$83>>2]|0; //@line 3734 "src/sprites/../puun/gf/../../other/stb_image.h"
   $85 = $len; //@line 3734 "src/sprites/../puun/gf/../../other/stb_image.h"
   $86 = (_stbi__zexpand($81,$84,$85)|0); //@line 3734 "src/sprites/../puun/gf/../../other/stb_image.h"
   $87 = ($86|0)!=(0); //@line 3734 "src/sprites/../puun/gf/../../other/stb_image.h"
   if ($87) {
    break;
   }
   $0 = 0; //@line 3734 "src/sprites/../puun/gf/../../other/stb_image.h"
   $103 = $0; //@line 3739 "src/sprites/../puun/gf/../../other/stb_image.h"
   STACKTOP = sp;return ($103|0); //@line 3739 "src/sprites/../puun/gf/../../other/stb_image.h"
  }
 } while(0);
 $88 = $1; //@line 3735 "src/sprites/../puun/gf/../../other/stb_image.h"
 $89 = (($88) + 16|0); //@line 3735 "src/sprites/../puun/gf/../../other/stb_image.h"
 $90 = HEAP32[$89>>2]|0; //@line 3735 "src/sprites/../puun/gf/../../other/stb_image.h"
 $91 = $1; //@line 3735 "src/sprites/../puun/gf/../../other/stb_image.h"
 $92 = HEAP32[$91>>2]|0; //@line 3735 "src/sprites/../puun/gf/../../other/stb_image.h"
 $93 = $len; //@line 3735 "src/sprites/../puun/gf/../../other/stb_image.h"
 _memcpy(($90|0),($92|0),($93|0))|0; //@line 3735 "src/sprites/../puun/gf/../../other/stb_image.h"
 $94 = $len; //@line 3736 "src/sprites/../puun/gf/../../other/stb_image.h"
 $95 = $1; //@line 3736 "src/sprites/../puun/gf/../../other/stb_image.h"
 $96 = HEAP32[$95>>2]|0; //@line 3736 "src/sprites/../puun/gf/../../other/stb_image.h"
 $97 = (($96) + ($94)|0); //@line 3736 "src/sprites/../puun/gf/../../other/stb_image.h"
 HEAP32[$95>>2] = $97; //@line 3736 "src/sprites/../puun/gf/../../other/stb_image.h"
 $98 = $len; //@line 3737 "src/sprites/../puun/gf/../../other/stb_image.h"
 $99 = $1; //@line 3737 "src/sprites/../puun/gf/../../other/stb_image.h"
 $100 = (($99) + 16|0); //@line 3737 "src/sprites/../puun/gf/../../other/stb_image.h"
 $101 = HEAP32[$100>>2]|0; //@line 3737 "src/sprites/../puun/gf/../../other/stb_image.h"
 $102 = (($101) + ($98)|0); //@line 3737 "src/sprites/../puun/gf/../../other/stb_image.h"
 HEAP32[$100>>2] = $102; //@line 3737 "src/sprites/../puun/gf/../../other/stb_image.h"
 $0 = 1; //@line 3738 "src/sprites/../puun/gf/../../other/stb_image.h"
 $103 = $0; //@line 3739 "src/sprites/../puun/gf/../../other/stb_image.h"
 STACKTOP = sp;return ($103|0); //@line 3739 "src/sprites/../puun/gf/../../other/stb_image.h"
}
function _stbi__zreceive($z,$n) {
 $z = $z|0;
 $n = $n|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $3 = 0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $k = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $z;
 $1 = $n;
 $2 = $0; //@line 3553 "src/sprites/../puun/gf/../../other/stb_image.h"
 $3 = (($2) + 8|0); //@line 3553 "src/sprites/../puun/gf/../../other/stb_image.h"
 $4 = HEAP32[$3>>2]|0; //@line 3553 "src/sprites/../puun/gf/../../other/stb_image.h"
 $5 = $1; //@line 3553 "src/sprites/../puun/gf/../../other/stb_image.h"
 $6 = ($4|0)<($5|0); //@line 3553 "src/sprites/../puun/gf/../../other/stb_image.h"
 if ($6) {
  $7 = $0; //@line 3553 "src/sprites/../puun/gf/../../other/stb_image.h"
  _stbi__fill_bits($7); //@line 3553 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $8 = $0; //@line 3554 "src/sprites/../puun/gf/../../other/stb_image.h"
 $9 = (($8) + 12|0); //@line 3554 "src/sprites/../puun/gf/../../other/stb_image.h"
 $10 = HEAP32[$9>>2]|0; //@line 3554 "src/sprites/../puun/gf/../../other/stb_image.h"
 $11 = $1; //@line 3554 "src/sprites/../puun/gf/../../other/stb_image.h"
 $12 = 1 << $11; //@line 3554 "src/sprites/../puun/gf/../../other/stb_image.h"
 $13 = (($12) - 1)|0; //@line 3554 "src/sprites/../puun/gf/../../other/stb_image.h"
 $14 = $10 & $13; //@line 3554 "src/sprites/../puun/gf/../../other/stb_image.h"
 $k = $14; //@line 3554 "src/sprites/../puun/gf/../../other/stb_image.h"
 $15 = $1; //@line 3555 "src/sprites/../puun/gf/../../other/stb_image.h"
 $16 = $0; //@line 3555 "src/sprites/../puun/gf/../../other/stb_image.h"
 $17 = (($16) + 12|0); //@line 3555 "src/sprites/../puun/gf/../../other/stb_image.h"
 $18 = HEAP32[$17>>2]|0; //@line 3555 "src/sprites/../puun/gf/../../other/stb_image.h"
 $19 = $18 >>> $15; //@line 3555 "src/sprites/../puun/gf/../../other/stb_image.h"
 HEAP32[$17>>2] = $19; //@line 3555 "src/sprites/../puun/gf/../../other/stb_image.h"
 $20 = $1; //@line 3556 "src/sprites/../puun/gf/../../other/stb_image.h"
 $21 = $0; //@line 3556 "src/sprites/../puun/gf/../../other/stb_image.h"
 $22 = (($21) + 8|0); //@line 3556 "src/sprites/../puun/gf/../../other/stb_image.h"
 $23 = HEAP32[$22>>2]|0; //@line 3556 "src/sprites/../puun/gf/../../other/stb_image.h"
 $24 = (($23) - ($20))|0; //@line 3556 "src/sprites/../puun/gf/../../other/stb_image.h"
 HEAP32[$22>>2] = $24; //@line 3556 "src/sprites/../puun/gf/../../other/stb_image.h"
 $25 = $k; //@line 3557 "src/sprites/../puun/gf/../../other/stb_image.h"
 STACKTOP = sp;return ($25|0); //@line 3557 "src/sprites/../puun/gf/../../other/stb_image.h"
}
function _stbi__parse_zlib_header($a) {
 $a = $a|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $cm = 0, $cmf = 0, $flg = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $a;
 $2 = $1; //@line 3743 "src/sprites/../puun/gf/../../other/stb_image.h"
 $3 = (_stbi__zget8($2)|0); //@line 3743 "src/sprites/../puun/gf/../../other/stb_image.h"
 $4 = $3&255; //@line 3743 "src/sprites/../puun/gf/../../other/stb_image.h"
 $cmf = $4; //@line 3743 "src/sprites/../puun/gf/../../other/stb_image.h"
 $5 = $cmf; //@line 3744 "src/sprites/../puun/gf/../../other/stb_image.h"
 $6 = $5 & 15; //@line 3744 "src/sprites/../puun/gf/../../other/stb_image.h"
 $cm = $6; //@line 3744 "src/sprites/../puun/gf/../../other/stb_image.h"
 $7 = $1; //@line 3746 "src/sprites/../puun/gf/../../other/stb_image.h"
 $8 = (_stbi__zget8($7)|0); //@line 3746 "src/sprites/../puun/gf/../../other/stb_image.h"
 $9 = $8&255; //@line 3746 "src/sprites/../puun/gf/../../other/stb_image.h"
 $flg = $9; //@line 3746 "src/sprites/../puun/gf/../../other/stb_image.h"
 $10 = $cmf; //@line 3747 "src/sprites/../puun/gf/../../other/stb_image.h"
 $11 = $10<<8; //@line 3747 "src/sprites/../puun/gf/../../other/stb_image.h"
 $12 = $flg; //@line 3747 "src/sprites/../puun/gf/../../other/stb_image.h"
 $13 = (($11) + ($12))|0; //@line 3747 "src/sprites/../puun/gf/../../other/stb_image.h"
 $14 = (($13|0) % 31)&-1; //@line 3747 "src/sprites/../puun/gf/../../other/stb_image.h"
 $15 = ($14|0)!=(0); //@line 3747 "src/sprites/../puun/gf/../../other/stb_image.h"
 do {
  if ($15) {
   $16 = (_stbi__err(9616)|0); //@line 3747 "src/sprites/../puun/gf/../../other/stb_image.h"
   $0 = $16; //@line 3747 "src/sprites/../puun/gf/../../other/stb_image.h"
  } else {
   $17 = $flg; //@line 3748 "src/sprites/../puun/gf/../../other/stb_image.h"
   $18 = $17 & 32; //@line 3748 "src/sprites/../puun/gf/../../other/stb_image.h"
   $19 = ($18|0)!=(0); //@line 3748 "src/sprites/../puun/gf/../../other/stb_image.h"
   if ($19) {
    $20 = (_stbi__err(9632)|0); //@line 3748 "src/sprites/../puun/gf/../../other/stb_image.h"
    $0 = $20; //@line 3748 "src/sprites/../puun/gf/../../other/stb_image.h"
    break;
   }
   $21 = $cm; //@line 3749 "src/sprites/../puun/gf/../../other/stb_image.h"
   $22 = ($21|0)!=(8); //@line 3749 "src/sprites/../puun/gf/../../other/stb_image.h"
   if ($22) {
    $23 = (_stbi__err(9648)|0); //@line 3749 "src/sprites/../puun/gf/../../other/stb_image.h"
    $0 = $23; //@line 3749 "src/sprites/../puun/gf/../../other/stb_image.h"
    break;
   } else {
    $0 = 1; //@line 3751 "src/sprites/../puun/gf/../../other/stb_image.h"
    break;
   }
  }
 } while(0);
 $24 = $0; //@line 3752 "src/sprites/../puun/gf/../../other/stb_image.h"
 STACKTOP = sp;return ($24|0); //@line 3752 "src/sprites/../puun/gf/../../other/stb_image.h"
}
function _stbi__hdr_load($s,$x,$y,$comp,$req_comp) {
 $s = $s|0;
 $x = $x|0;
 $y = $y|0;
 $comp = $comp|0;
 $req_comp = $req_comp|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0;
 var $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0;
 var $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0;
 var $98 = 0, $99 = 0, $buffer = 0, $c1 = 0, $c2 = 0, $count = 0, $hdr_data = 0, $height = 0, $i = 0, $j = 0, $k = 0, $len = 0, $rgbe = 0, $rgbe1 = 0, $scanline = 0, $token = 0, $valid = 0, $value = 0, $width = 0, $z = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1120|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $buffer = sp + 88|0;
 $token = sp + 48|0;
 $rgbe = sp + 80|0;
 $rgbe1 = sp + 76|0;
 $1 = $s;
 $2 = $x;
 $3 = $y;
 $4 = $comp;
 $5 = $req_comp;
 $valid = 0; //@line 5846 "src/sprites/../puun/gf/../../other/stb_image.h"
 $6 = $1; //@line 5856 "src/sprites/../puun/gf/../../other/stb_image.h"
 $7 = (_stbi__hdr_gettoken($6,$buffer)|0); //@line 5856 "src/sprites/../puun/gf/../../other/stb_image.h"
 $8 = (_strcmp($7,7080)|0); //@line 5856 "src/sprites/../puun/gf/../../other/stb_image.h"
 $9 = ($8|0)!=(0); //@line 5856 "src/sprites/../puun/gf/../../other/stb_image.h"
 if ($9) {
  $10 = (_stbi__err(9664)|0); //@line 5857 "src/sprites/../puun/gf/../../other/stb_image.h"
  $11 = ($10|0)!=(0); //@line 5857 "src/sprites/../puun/gf/../../other/stb_image.h"
  $12 = $11 ? 0 : 0; //@line 5857 "src/sprites/../puun/gf/../../other/stb_image.h"
  $0 = $12; //@line 5857 "src/sprites/../puun/gf/../../other/stb_image.h"
  $221 = $0; //@line 5951 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($221|0); //@line 5951 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 while(1) {
  $13 = $1; //@line 5861 "src/sprites/../puun/gf/../../other/stb_image.h"
  $14 = (_stbi__hdr_gettoken($13,$buffer)|0); //@line 5861 "src/sprites/../puun/gf/../../other/stb_image.h"
  HEAP32[$token>>2] = $14; //@line 5861 "src/sprites/../puun/gf/../../other/stb_image.h"
  $15 = HEAP32[$token>>2]|0; //@line 5862 "src/sprites/../puun/gf/../../other/stb_image.h"
  $16 = HEAP8[$15>>0]|0; //@line 5862 "src/sprites/../puun/gf/../../other/stb_image.h"
  $17 = $16 << 24 >> 24; //@line 5862 "src/sprites/../puun/gf/../../other/stb_image.h"
  $18 = ($17|0)==(0); //@line 5862 "src/sprites/../puun/gf/../../other/stb_image.h"
  if ($18) {
   break;
  }
  $19 = HEAP32[$token>>2]|0; //@line 5863 "src/sprites/../puun/gf/../../other/stb_image.h"
  $20 = (_strcmp($19,7096)|0); //@line 5863 "src/sprites/../puun/gf/../../other/stb_image.h"
  $21 = ($20|0)==(0); //@line 5863 "src/sprites/../puun/gf/../../other/stb_image.h"
  if ($21) {
   $valid = 1; //@line 5863 "src/sprites/../puun/gf/../../other/stb_image.h"
  }
 }
 $22 = $valid; //@line 5866 "src/sprites/../puun/gf/../../other/stb_image.h"
 $23 = ($22|0)!=(0); //@line 5866 "src/sprites/../puun/gf/../../other/stb_image.h"
 if (!($23)) {
  $24 = (_stbi__err(9672)|0); //@line 5866 "src/sprites/../puun/gf/../../other/stb_image.h"
  $25 = ($24|0)!=(0); //@line 5866 "src/sprites/../puun/gf/../../other/stb_image.h"
  $26 = $25 ? 0 : 0; //@line 5866 "src/sprites/../puun/gf/../../other/stb_image.h"
  $0 = $26; //@line 5866 "src/sprites/../puun/gf/../../other/stb_image.h"
  $221 = $0; //@line 5951 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($221|0); //@line 5951 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $27 = $1; //@line 5870 "src/sprites/../puun/gf/../../other/stb_image.h"
 $28 = (_stbi__hdr_gettoken($27,$buffer)|0); //@line 5870 "src/sprites/../puun/gf/../../other/stb_image.h"
 HEAP32[$token>>2] = $28; //@line 5870 "src/sprites/../puun/gf/../../other/stb_image.h"
 $29 = HEAP32[$token>>2]|0; //@line 5871 "src/sprites/../puun/gf/../../other/stb_image.h"
 $30 = (_strncmp($29,7120,3)|0); //@line 5871 "src/sprites/../puun/gf/../../other/stb_image.h"
 $31 = ($30|0)!=(0); //@line 5871 "src/sprites/../puun/gf/../../other/stb_image.h"
 if ($31) {
  $32 = (_stbi__err(9696)|0); //@line 5871 "src/sprites/../puun/gf/../../other/stb_image.h"
  $33 = ($32|0)!=(0); //@line 5871 "src/sprites/../puun/gf/../../other/stb_image.h"
  $34 = $33 ? 0 : 0; //@line 5871 "src/sprites/../puun/gf/../../other/stb_image.h"
  $0 = $34; //@line 5871 "src/sprites/../puun/gf/../../other/stb_image.h"
  $221 = $0; //@line 5951 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($221|0); //@line 5951 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $35 = HEAP32[$token>>2]|0; //@line 5872 "src/sprites/../puun/gf/../../other/stb_image.h"
 $36 = (($35) + 3|0); //@line 5872 "src/sprites/../puun/gf/../../other/stb_image.h"
 HEAP32[$token>>2] = $36; //@line 5872 "src/sprites/../puun/gf/../../other/stb_image.h"
 $37 = HEAP32[$token>>2]|0; //@line 5873 "src/sprites/../puun/gf/../../other/stb_image.h"
 $38 = (_strtol($37,$token,10)|0); //@line 5873 "src/sprites/../puun/gf/../../other/stb_image.h"
 $height = $38; //@line 5873 "src/sprites/../puun/gf/../../other/stb_image.h"
 while(1) {
  $39 = HEAP32[$token>>2]|0; //@line 5874 "src/sprites/../puun/gf/../../other/stb_image.h"
  $40 = HEAP8[$39>>0]|0; //@line 5874 "src/sprites/../puun/gf/../../other/stb_image.h"
  $41 = $40 << 24 >> 24; //@line 5874 "src/sprites/../puun/gf/../../other/stb_image.h"
  $42 = ($41|0)==(32); //@line 5874 "src/sprites/../puun/gf/../../other/stb_image.h"
  if (!($42)) {
   break;
  }
  $43 = HEAP32[$token>>2]|0; //@line 5874 "src/sprites/../puun/gf/../../other/stb_image.h"
  $44 = (($43) + 1|0); //@line 5874 "src/sprites/../puun/gf/../../other/stb_image.h"
  HEAP32[$token>>2] = $44; //@line 5874 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $45 = HEAP32[$token>>2]|0; //@line 5875 "src/sprites/../puun/gf/../../other/stb_image.h"
 $46 = (_strncmp($45,7128,3)|0); //@line 5875 "src/sprites/../puun/gf/../../other/stb_image.h"
 $47 = ($46|0)!=(0); //@line 5875 "src/sprites/../puun/gf/../../other/stb_image.h"
 if ($47) {
  $48 = (_stbi__err(9696)|0); //@line 5875 "src/sprites/../puun/gf/../../other/stb_image.h"
  $49 = ($48|0)!=(0); //@line 5875 "src/sprites/../puun/gf/../../other/stb_image.h"
  $50 = $49 ? 0 : 0; //@line 5875 "src/sprites/../puun/gf/../../other/stb_image.h"
  $0 = $50; //@line 5875 "src/sprites/../puun/gf/../../other/stb_image.h"
  $221 = $0; //@line 5951 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($221|0); //@line 5951 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $51 = HEAP32[$token>>2]|0; //@line 5876 "src/sprites/../puun/gf/../../other/stb_image.h"
 $52 = (($51) + 3|0); //@line 5876 "src/sprites/../puun/gf/../../other/stb_image.h"
 HEAP32[$token>>2] = $52; //@line 5876 "src/sprites/../puun/gf/../../other/stb_image.h"
 $53 = HEAP32[$token>>2]|0; //@line 5877 "src/sprites/../puun/gf/../../other/stb_image.h"
 $54 = (_strtol($53,0,10)|0); //@line 5877 "src/sprites/../puun/gf/../../other/stb_image.h"
 $width = $54; //@line 5877 "src/sprites/../puun/gf/../../other/stb_image.h"
 $55 = $width; //@line 5879 "src/sprites/../puun/gf/../../other/stb_image.h"
 $56 = $2; //@line 5879 "src/sprites/../puun/gf/../../other/stb_image.h"
 HEAP32[$56>>2] = $55; //@line 5879 "src/sprites/../puun/gf/../../other/stb_image.h"
 $57 = $height; //@line 5880 "src/sprites/../puun/gf/../../other/stb_image.h"
 $58 = $3; //@line 5880 "src/sprites/../puun/gf/../../other/stb_image.h"
 HEAP32[$58>>2] = $57; //@line 5880 "src/sprites/../puun/gf/../../other/stb_image.h"
 $59 = $4; //@line 5882 "src/sprites/../puun/gf/../../other/stb_image.h"
 $60 = ($59|0)!=(0|0); //@line 5882 "src/sprites/../puun/gf/../../other/stb_image.h"
 if ($60) {
  $61 = $4; //@line 5882 "src/sprites/../puun/gf/../../other/stb_image.h"
  HEAP32[$61>>2] = 3; //@line 5882 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $62 = $5; //@line 5883 "src/sprites/../puun/gf/../../other/stb_image.h"
 $63 = ($62|0)==(0); //@line 5883 "src/sprites/../puun/gf/../../other/stb_image.h"
 if ($63) {
  $5 = 3; //@line 5883 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $64 = $height; //@line 5886 "src/sprites/../puun/gf/../../other/stb_image.h"
 $65 = $width; //@line 5886 "src/sprites/../puun/gf/../../other/stb_image.h"
 $66 = Math_imul($64, $65)|0; //@line 5886 "src/sprites/../puun/gf/../../other/stb_image.h"
 $67 = $5; //@line 5886 "src/sprites/../puun/gf/../../other/stb_image.h"
 $68 = Math_imul($66, $67)|0; //@line 5886 "src/sprites/../puun/gf/../../other/stb_image.h"
 $69 = $68<<2; //@line 5886 "src/sprites/../puun/gf/../../other/stb_image.h"
 $70 = (_stbi__malloc($69)|0); //@line 5886 "src/sprites/../puun/gf/../../other/stb_image.h"
 $hdr_data = $70; //@line 5886 "src/sprites/../puun/gf/../../other/stb_image.h"
 $71 = $width; //@line 5890 "src/sprites/../puun/gf/../../other/stb_image.h"
 $72 = ($71|0)<(8); //@line 5890 "src/sprites/../puun/gf/../../other/stb_image.h"
 do {
  if ($72) {
   label = 24;
  } else {
   $73 = $width; //@line 5890 "src/sprites/../puun/gf/../../other/stb_image.h"
   $74 = ($73|0)>=(32768); //@line 5890 "src/sprites/../puun/gf/../../other/stb_image.h"
   if ($74) {
    label = 24;
   } else {
    $scanline = 0; //@line 5902 "src/sprites/../puun/gf/../../other/stb_image.h"
    $j = 0; //@line 5904 "src/sprites/../puun/gf/../../other/stb_image.h"
    while(1) {
     $98 = $j; //@line 5904 "src/sprites/../puun/gf/../../other/stb_image.h"
     $99 = $height; //@line 5904 "src/sprites/../puun/gf/../../other/stb_image.h"
     $100 = ($98|0)<($99|0); //@line 5904 "src/sprites/../puun/gf/../../other/stb_image.h"
     if (!($100)) {
      label = 68;
      break;
     }
     $101 = $1; //@line 5905 "src/sprites/../puun/gf/../../other/stb_image.h"
     $102 = (_stbi__get8($101)|0); //@line 5905 "src/sprites/../puun/gf/../../other/stb_image.h"
     $103 = $102&255; //@line 5905 "src/sprites/../puun/gf/../../other/stb_image.h"
     $c1 = $103; //@line 5905 "src/sprites/../puun/gf/../../other/stb_image.h"
     $104 = $1; //@line 5906 "src/sprites/../puun/gf/../../other/stb_image.h"
     $105 = (_stbi__get8($104)|0); //@line 5906 "src/sprites/../puun/gf/../../other/stb_image.h"
     $106 = $105&255; //@line 5906 "src/sprites/../puun/gf/../../other/stb_image.h"
     $c2 = $106; //@line 5906 "src/sprites/../puun/gf/../../other/stb_image.h"
     $107 = $1; //@line 5907 "src/sprites/../puun/gf/../../other/stb_image.h"
     $108 = (_stbi__get8($107)|0); //@line 5907 "src/sprites/../puun/gf/../../other/stb_image.h"
     $109 = $108&255; //@line 5907 "src/sprites/../puun/gf/../../other/stb_image.h"
     $len = $109; //@line 5907 "src/sprites/../puun/gf/../../other/stb_image.h"
     $110 = $c1; //@line 5908 "src/sprites/../puun/gf/../../other/stb_image.h"
     $111 = ($110|0)!=(2); //@line 5908 "src/sprites/../puun/gf/../../other/stb_image.h"
     if ($111) {
      label = 39;
      break;
     }
     $112 = $c2; //@line 5908 "src/sprites/../puun/gf/../../other/stb_image.h"
     $113 = ($112|0)!=(2); //@line 5908 "src/sprites/../puun/gf/../../other/stb_image.h"
     if ($113) {
      label = 39;
      break;
     }
     $114 = $len; //@line 5908 "src/sprites/../puun/gf/../../other/stb_image.h"
     $115 = $114 & 128; //@line 5908 "src/sprites/../puun/gf/../../other/stb_image.h"
     $116 = ($115|0)!=(0); //@line 5908 "src/sprites/../puun/gf/../../other/stb_image.h"
     if ($116) {
      label = 39;
      break;
     }
     $131 = $len; //@line 5922 "src/sprites/../puun/gf/../../other/stb_image.h"
     $132 = $131 << 8; //@line 5922 "src/sprites/../puun/gf/../../other/stb_image.h"
     $len = $132; //@line 5922 "src/sprites/../puun/gf/../../other/stb_image.h"
     $133 = $1; //@line 5923 "src/sprites/../puun/gf/../../other/stb_image.h"
     $134 = (_stbi__get8($133)|0); //@line 5923 "src/sprites/../puun/gf/../../other/stb_image.h"
     $135 = $134&255; //@line 5923 "src/sprites/../puun/gf/../../other/stb_image.h"
     $136 = $len; //@line 5923 "src/sprites/../puun/gf/../../other/stb_image.h"
     $137 = $136 | $135; //@line 5923 "src/sprites/../puun/gf/../../other/stb_image.h"
     $len = $137; //@line 5923 "src/sprites/../puun/gf/../../other/stb_image.h"
     $138 = $len; //@line 5924 "src/sprites/../puun/gf/../../other/stb_image.h"
     $139 = $width; //@line 5924 "src/sprites/../puun/gf/../../other/stb_image.h"
     $140 = ($138|0)!=($139|0); //@line 5924 "src/sprites/../puun/gf/../../other/stb_image.h"
     if ($140) {
      label = 41;
      break;
     }
     $146 = $scanline; //@line 5925 "src/sprites/../puun/gf/../../other/stb_image.h"
     $147 = ($146|0)==(0|0); //@line 5925 "src/sprites/../puun/gf/../../other/stb_image.h"
     if ($147) {
      $148 = $width; //@line 5925 "src/sprites/../puun/gf/../../other/stb_image.h"
      $149 = $148<<2; //@line 5925 "src/sprites/../puun/gf/../../other/stb_image.h"
      $150 = (_stbi__malloc($149)|0); //@line 5925 "src/sprites/../puun/gf/../../other/stb_image.h"
      $scanline = $150; //@line 5925 "src/sprites/../puun/gf/../../other/stb_image.h"
     }
     $k = 0; //@line 5927 "src/sprites/../puun/gf/../../other/stb_image.h"
     while(1) {
      $151 = $k; //@line 5927 "src/sprites/../puun/gf/../../other/stb_image.h"
      $152 = ($151|0)<(4); //@line 5927 "src/sprites/../puun/gf/../../other/stb_image.h"
      if (!($152)) {
       break;
      }
      $i = 0; //@line 5928 "src/sprites/../puun/gf/../../other/stb_image.h"
      while(1) {
       $153 = $i; //@line 5929 "src/sprites/../puun/gf/../../other/stb_image.h"
       $154 = $width; //@line 5929 "src/sprites/../puun/gf/../../other/stb_image.h"
       $155 = ($153|0)<($154|0); //@line 5929 "src/sprites/../puun/gf/../../other/stb_image.h"
       if (!($155)) {
        break;
       }
       $156 = $1; //@line 5930 "src/sprites/../puun/gf/../../other/stb_image.h"
       $157 = (_stbi__get8($156)|0); //@line 5930 "src/sprites/../puun/gf/../../other/stb_image.h"
       $count = $157; //@line 5930 "src/sprites/../puun/gf/../../other/stb_image.h"
       $158 = $count; //@line 5931 "src/sprites/../puun/gf/../../other/stb_image.h"
       $159 = $158&255; //@line 5931 "src/sprites/../puun/gf/../../other/stb_image.h"
       $160 = ($159|0)>(128); //@line 5931 "src/sprites/../puun/gf/../../other/stb_image.h"
       if ($160) {
        $161 = $1; //@line 5933 "src/sprites/../puun/gf/../../other/stb_image.h"
        $162 = (_stbi__get8($161)|0); //@line 5933 "src/sprites/../puun/gf/../../other/stb_image.h"
        $value = $162; //@line 5933 "src/sprites/../puun/gf/../../other/stb_image.h"
        $163 = $count; //@line 5934 "src/sprites/../puun/gf/../../other/stb_image.h"
        $164 = $163&255; //@line 5934 "src/sprites/../puun/gf/../../other/stb_image.h"
        $165 = (($164) - 128)|0; //@line 5934 "src/sprites/../puun/gf/../../other/stb_image.h"
        $166 = $165&255; //@line 5934 "src/sprites/../puun/gf/../../other/stb_image.h"
        $count = $166; //@line 5934 "src/sprites/../puun/gf/../../other/stb_image.h"
        $z = 0; //@line 5935 "src/sprites/../puun/gf/../../other/stb_image.h"
        while(1) {
         $167 = $z; //@line 5935 "src/sprites/../puun/gf/../../other/stb_image.h"
         $168 = $count; //@line 5935 "src/sprites/../puun/gf/../../other/stb_image.h"
         $169 = $168&255; //@line 5935 "src/sprites/../puun/gf/../../other/stb_image.h"
         $170 = ($167|0)<($169|0); //@line 5935 "src/sprites/../puun/gf/../../other/stb_image.h"
         if (!($170)) {
          break;
         }
         $171 = $value; //@line 5936 "src/sprites/../puun/gf/../../other/stb_image.h"
         $172 = $i; //@line 5936 "src/sprites/../puun/gf/../../other/stb_image.h"
         $173 = (($172) + 1)|0; //@line 5936 "src/sprites/../puun/gf/../../other/stb_image.h"
         $i = $173; //@line 5936 "src/sprites/../puun/gf/../../other/stb_image.h"
         $174 = $172<<2; //@line 5936 "src/sprites/../puun/gf/../../other/stb_image.h"
         $175 = $k; //@line 5936 "src/sprites/../puun/gf/../../other/stb_image.h"
         $176 = (($174) + ($175))|0; //@line 5936 "src/sprites/../puun/gf/../../other/stb_image.h"
         $177 = $scanline; //@line 5936 "src/sprites/../puun/gf/../../other/stb_image.h"
         $178 = (($177) + ($176)|0); //@line 5936 "src/sprites/../puun/gf/../../other/stb_image.h"
         HEAP8[$178>>0] = $171; //@line 5936 "src/sprites/../puun/gf/../../other/stb_image.h"
         $179 = $z; //@line 5935 "src/sprites/../puun/gf/../../other/stb_image.h"
         $180 = (($179) + 1)|0; //@line 5935 "src/sprites/../puun/gf/../../other/stb_image.h"
         $z = $180; //@line 5935 "src/sprites/../puun/gf/../../other/stb_image.h"
        }
       } else {
        $z = 0; //@line 5939 "src/sprites/../puun/gf/../../other/stb_image.h"
        while(1) {
         $181 = $z; //@line 5939 "src/sprites/../puun/gf/../../other/stb_image.h"
         $182 = $count; //@line 5939 "src/sprites/../puun/gf/../../other/stb_image.h"
         $183 = $182&255; //@line 5939 "src/sprites/../puun/gf/../../other/stb_image.h"
         $184 = ($181|0)<($183|0); //@line 5939 "src/sprites/../puun/gf/../../other/stb_image.h"
         if (!($184)) {
          break;
         }
         $185 = $1; //@line 5940 "src/sprites/../puun/gf/../../other/stb_image.h"
         $186 = (_stbi__get8($185)|0); //@line 5940 "src/sprites/../puun/gf/../../other/stb_image.h"
         $187 = $i; //@line 5940 "src/sprites/../puun/gf/../../other/stb_image.h"
         $188 = (($187) + 1)|0; //@line 5940 "src/sprites/../puun/gf/../../other/stb_image.h"
         $i = $188; //@line 5940 "src/sprites/../puun/gf/../../other/stb_image.h"
         $189 = $187<<2; //@line 5940 "src/sprites/../puun/gf/../../other/stb_image.h"
         $190 = $k; //@line 5940 "src/sprites/../puun/gf/../../other/stb_image.h"
         $191 = (($189) + ($190))|0; //@line 5940 "src/sprites/../puun/gf/../../other/stb_image.h"
         $192 = $scanline; //@line 5940 "src/sprites/../puun/gf/../../other/stb_image.h"
         $193 = (($192) + ($191)|0); //@line 5940 "src/sprites/../puun/gf/../../other/stb_image.h"
         HEAP8[$193>>0] = $186; //@line 5940 "src/sprites/../puun/gf/../../other/stb_image.h"
         $194 = $z; //@line 5939 "src/sprites/../puun/gf/../../other/stb_image.h"
         $195 = (($194) + 1)|0; //@line 5939 "src/sprites/../puun/gf/../../other/stb_image.h"
         $z = $195; //@line 5939 "src/sprites/../puun/gf/../../other/stb_image.h"
        }
       }
      }
      $196 = $k; //@line 5927 "src/sprites/../puun/gf/../../other/stb_image.h"
      $197 = (($196) + 1)|0; //@line 5927 "src/sprites/../puun/gf/../../other/stb_image.h"
      $k = $197; //@line 5927 "src/sprites/../puun/gf/../../other/stb_image.h"
     }
     $i = 0; //@line 5944 "src/sprites/../puun/gf/../../other/stb_image.h"
     while(1) {
      $198 = $i; //@line 5944 "src/sprites/../puun/gf/../../other/stb_image.h"
      $199 = $width; //@line 5944 "src/sprites/../puun/gf/../../other/stb_image.h"
      $200 = ($198|0)<($199|0); //@line 5944 "src/sprites/../puun/gf/../../other/stb_image.h"
      if (!($200)) {
       break;
      }
      $201 = $hdr_data; //@line 5945 "src/sprites/../puun/gf/../../other/stb_image.h"
      $202 = $j; //@line 5945 "src/sprites/../puun/gf/../../other/stb_image.h"
      $203 = $width; //@line 5945 "src/sprites/../puun/gf/../../other/stb_image.h"
      $204 = Math_imul($202, $203)|0; //@line 5945 "src/sprites/../puun/gf/../../other/stb_image.h"
      $205 = $i; //@line 5945 "src/sprites/../puun/gf/../../other/stb_image.h"
      $206 = (($204) + ($205))|0; //@line 5945 "src/sprites/../puun/gf/../../other/stb_image.h"
      $207 = $5; //@line 5945 "src/sprites/../puun/gf/../../other/stb_image.h"
      $208 = Math_imul($206, $207)|0; //@line 5945 "src/sprites/../puun/gf/../../other/stb_image.h"
      $209 = (($201) + ($208<<2)|0); //@line 5945 "src/sprites/../puun/gf/../../other/stb_image.h"
      $210 = $scanline; //@line 5945 "src/sprites/../puun/gf/../../other/stb_image.h"
      $211 = $i; //@line 5945 "src/sprites/../puun/gf/../../other/stb_image.h"
      $212 = $211<<2; //@line 5945 "src/sprites/../puun/gf/../../other/stb_image.h"
      $213 = (($210) + ($212)|0); //@line 5945 "src/sprites/../puun/gf/../../other/stb_image.h"
      $214 = $5; //@line 5945 "src/sprites/../puun/gf/../../other/stb_image.h"
      _stbi__hdr_convert($209,$213,$214); //@line 5945 "src/sprites/../puun/gf/../../other/stb_image.h"
      $215 = $i; //@line 5944 "src/sprites/../puun/gf/../../other/stb_image.h"
      $216 = (($215) + 1)|0; //@line 5944 "src/sprites/../puun/gf/../../other/stb_image.h"
      $i = $216; //@line 5944 "src/sprites/../puun/gf/../../other/stb_image.h"
     }
     $217 = $j; //@line 5904 "src/sprites/../puun/gf/../../other/stb_image.h"
     $218 = (($217) + 1)|0; //@line 5904 "src/sprites/../puun/gf/../../other/stb_image.h"
     $j = $218; //@line 5904 "src/sprites/../puun/gf/../../other/stb_image.h"
    }
    if ((label|0) == 39) {
     $117 = $c1; //@line 5912 "src/sprites/../puun/gf/../../other/stb_image.h"
     $118 = $117&255; //@line 5912 "src/sprites/../puun/gf/../../other/stb_image.h"
     HEAP8[$rgbe1>>0] = $118; //@line 5912 "src/sprites/../puun/gf/../../other/stb_image.h"
     $119 = $c2; //@line 5913 "src/sprites/../puun/gf/../../other/stb_image.h"
     $120 = $119&255; //@line 5913 "src/sprites/../puun/gf/../../other/stb_image.h"
     $121 = (($rgbe1) + 1|0); //@line 5913 "src/sprites/../puun/gf/../../other/stb_image.h"
     HEAP8[$121>>0] = $120; //@line 5913 "src/sprites/../puun/gf/../../other/stb_image.h"
     $122 = $len; //@line 5914 "src/sprites/../puun/gf/../../other/stb_image.h"
     $123 = $122&255; //@line 5914 "src/sprites/../puun/gf/../../other/stb_image.h"
     $124 = (($rgbe1) + 2|0); //@line 5914 "src/sprites/../puun/gf/../../other/stb_image.h"
     HEAP8[$124>>0] = $123; //@line 5914 "src/sprites/../puun/gf/../../other/stb_image.h"
     $125 = $1; //@line 5915 "src/sprites/../puun/gf/../../other/stb_image.h"
     $126 = (_stbi__get8($125)|0); //@line 5915 "src/sprites/../puun/gf/../../other/stb_image.h"
     $127 = (($rgbe1) + 3|0); //@line 5915 "src/sprites/../puun/gf/../../other/stb_image.h"
     HEAP8[$127>>0] = $126; //@line 5915 "src/sprites/../puun/gf/../../other/stb_image.h"
     $128 = $hdr_data; //@line 5916 "src/sprites/../puun/gf/../../other/stb_image.h"
     $129 = $5; //@line 5916 "src/sprites/../puun/gf/../../other/stb_image.h"
     _stbi__hdr_convert($128,$rgbe1,$129); //@line 5916 "src/sprites/../puun/gf/../../other/stb_image.h"
     $i = 1; //@line 5917 "src/sprites/../puun/gf/../../other/stb_image.h"
     $j = 0; //@line 5918 "src/sprites/../puun/gf/../../other/stb_image.h"
     $130 = $scanline; //@line 5919 "src/sprites/../puun/gf/../../other/stb_image.h"
     _free($130); //@line 5919 "src/sprites/../puun/gf/../../other/stb_image.h"
     label = 29;
     break;
    }
    else if ((label|0) == 41) {
     $141 = $hdr_data; //@line 5924 "src/sprites/../puun/gf/../../other/stb_image.h"
     _free($141); //@line 5924 "src/sprites/../puun/gf/../../other/stb_image.h"
     $142 = $scanline; //@line 5924 "src/sprites/../puun/gf/../../other/stb_image.h"
     _free($142); //@line 5924 "src/sprites/../puun/gf/../../other/stb_image.h"
     $143 = (_stbi__err(9720)|0); //@line 5924 "src/sprites/../puun/gf/../../other/stb_image.h"
     $144 = ($143|0)!=(0); //@line 5924 "src/sprites/../puun/gf/../../other/stb_image.h"
     $145 = $144 ? 0 : 0; //@line 5924 "src/sprites/../puun/gf/../../other/stb_image.h"
     $0 = $145; //@line 5924 "src/sprites/../puun/gf/../../other/stb_image.h"
     $221 = $0; //@line 5951 "src/sprites/../puun/gf/../../other/stb_image.h"
     STACKTOP = sp;return ($221|0); //@line 5951 "src/sprites/../puun/gf/../../other/stb_image.h"
    }
    else if ((label|0) == 68) {
     $219 = $scanline; //@line 5947 "src/sprites/../puun/gf/../../other/stb_image.h"
     _free($219); //@line 5947 "src/sprites/../puun/gf/../../other/stb_image.h"
     label = 69;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 24) {
  $j = 0; //@line 5892 "src/sprites/../puun/gf/../../other/stb_image.h"
  label = 25;
 }
 L84: while(1) {
  do {
   if ((label|0) == 25) {
    label = 0;
    $75 = $j; //@line 5892 "src/sprites/../puun/gf/../../other/stb_image.h"
    $76 = $height; //@line 5892 "src/sprites/../puun/gf/../../other/stb_image.h"
    $77 = ($75|0)<($76|0); //@line 5892 "src/sprites/../puun/gf/../../other/stb_image.h"
    if ($77) {
     $i = 0; //@line 5893 "src/sprites/../puun/gf/../../other/stb_image.h"
     break;
    } else {
     label = 69;
     continue L84;
    }
   }
   else if ((label|0) == 29) {
    label = 0;
    $81 = $1; //@line 5896 "src/sprites/../puun/gf/../../other/stb_image.h"
    (_stbi__getn($81,$rgbe,4)|0); //@line 5896 "src/sprites/../puun/gf/../../other/stb_image.h"
    $82 = $hdr_data; //@line 5897 "src/sprites/../puun/gf/../../other/stb_image.h"
    $83 = $j; //@line 5897 "src/sprites/../puun/gf/../../other/stb_image.h"
    $84 = $width; //@line 5897 "src/sprites/../puun/gf/../../other/stb_image.h"
    $85 = Math_imul($83, $84)|0; //@line 5897 "src/sprites/../puun/gf/../../other/stb_image.h"
    $86 = $5; //@line 5897 "src/sprites/../puun/gf/../../other/stb_image.h"
    $87 = Math_imul($85, $86)|0; //@line 5897 "src/sprites/../puun/gf/../../other/stb_image.h"
    $88 = (($82) + ($87<<2)|0); //@line 5897 "src/sprites/../puun/gf/../../other/stb_image.h"
    $89 = $i; //@line 5897 "src/sprites/../puun/gf/../../other/stb_image.h"
    $90 = $5; //@line 5897 "src/sprites/../puun/gf/../../other/stb_image.h"
    $91 = Math_imul($89, $90)|0; //@line 5897 "src/sprites/../puun/gf/../../other/stb_image.h"
    $92 = (($88) + ($91<<2)|0); //@line 5897 "src/sprites/../puun/gf/../../other/stb_image.h"
    $93 = $5; //@line 5897 "src/sprites/../puun/gf/../../other/stb_image.h"
    _stbi__hdr_convert($92,$rgbe,$93); //@line 5897 "src/sprites/../puun/gf/../../other/stb_image.h"
    $94 = $i; //@line 5893 "src/sprites/../puun/gf/../../other/stb_image.h"
    $95 = (($94) + 1)|0; //@line 5893 "src/sprites/../puun/gf/../../other/stb_image.h"
    $i = $95; //@line 5893 "src/sprites/../puun/gf/../../other/stb_image.h"
   }
   else if ((label|0) == 69) {
    label = 0;
    $220 = $hdr_data; //@line 5950 "src/sprites/../puun/gf/../../other/stb_image.h"
    $0 = $220; //@line 5950 "src/sprites/../puun/gf/../../other/stb_image.h"
    break L84;
   }
  } while(0);
  $78 = $i; //@line 5893 "src/sprites/../puun/gf/../../other/stb_image.h"
  $79 = $width; //@line 5893 "src/sprites/../puun/gf/../../other/stb_image.h"
  $80 = ($78|0)<($79|0); //@line 5893 "src/sprites/../puun/gf/../../other/stb_image.h"
  if ($80) {
   label = 29;
   continue;
  }
  $96 = $j; //@line 5892 "src/sprites/../puun/gf/../../other/stb_image.h"
  $97 = (($96) + 1)|0; //@line 5892 "src/sprites/../puun/gf/../../other/stb_image.h"
  $j = $97; //@line 5892 "src/sprites/../puun/gf/../../other/stb_image.h"
  label = 25;
 }
 $221 = $0; //@line 5951 "src/sprites/../puun/gf/../../other/stb_image.h"
 STACKTOP = sp;return ($221|0); //@line 5951 "src/sprites/../puun/gf/../../other/stb_image.h"
}
function _stbi__hdr_convert($output,$input,$req_comp) {
 $output = $output|0;
 $input = $input|0;
 $req_comp = $req_comp|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0.0, $14 = 0.0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0.0, $31 = 0.0, $32 = 0.0, $33 = 0.0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0.0, $39 = 0.0, $4 = 0, $40 = 0.0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0.0, $47 = 0.0, $48 = 0.0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0.0, $56 = 0.0, $57 = 0.0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $8 = 0, $9 = 0, $f1 = 0.0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $output;
 $1 = $input;
 $2 = $req_comp;
 $3 = $1; //@line 5817 "src/sprites/../puun/gf/../../other/stb_image.h"
 $4 = (($3) + 3|0); //@line 5817 "src/sprites/../puun/gf/../../other/stb_image.h"
 $5 = HEAP8[$4>>0]|0; //@line 5817 "src/sprites/../puun/gf/../../other/stb_image.h"
 $6 = $5&255; //@line 5817 "src/sprites/../puun/gf/../../other/stb_image.h"
 $7 = ($6|0)!=(0); //@line 5817 "src/sprites/../puun/gf/../../other/stb_image.h"
 if (!($7)) {
  $68 = $2; //@line 5831 "src/sprites/../puun/gf/../../other/stb_image.h"
  if ((($68|0) == 1)) {
   label = 14;
  } else if ((($68|0) == 2)) {
   $76 = $0; //@line 5835 "src/sprites/../puun/gf/../../other/stb_image.h"
   $77 = (($76) + 4|0); //@line 5835 "src/sprites/../puun/gf/../../other/stb_image.h"
   HEAPF32[$77>>2] = 1.0; //@line 5835 "src/sprites/../puun/gf/../../other/stb_image.h"
   label = 14;
  } else if ((($68|0) == 4)) {
   $69 = $0; //@line 5832 "src/sprites/../puun/gf/../../other/stb_image.h"
   $70 = (($69) + 12|0); //@line 5832 "src/sprites/../puun/gf/../../other/stb_image.h"
   HEAPF32[$70>>2] = 1.0; //@line 5832 "src/sprites/../puun/gf/../../other/stb_image.h"
   label = 12;
  } else if ((($68|0) == 3)) {
   label = 12;
  }
  if ((label|0) == 12) {
   $71 = $0; //@line 5833 "src/sprites/../puun/gf/../../other/stb_image.h"
   $72 = (($71) + 8|0); //@line 5833 "src/sprites/../puun/gf/../../other/stb_image.h"
   HEAPF32[$72>>2] = 0.0; //@line 5833 "src/sprites/../puun/gf/../../other/stb_image.h"
   $73 = $0; //@line 5833 "src/sprites/../puun/gf/../../other/stb_image.h"
   $74 = (($73) + 4|0); //@line 5833 "src/sprites/../puun/gf/../../other/stb_image.h"
   HEAPF32[$74>>2] = 0.0; //@line 5833 "src/sprites/../puun/gf/../../other/stb_image.h"
   $75 = $0; //@line 5833 "src/sprites/../puun/gf/../../other/stb_image.h"
   HEAPF32[$75>>2] = 0.0; //@line 5833 "src/sprites/../puun/gf/../../other/stb_image.h"
  }
  else if ((label|0) == 14) {
   $78 = $0; //@line 5836 "src/sprites/../puun/gf/../../other/stb_image.h"
   HEAPF32[$78>>2] = 0.0; //@line 5836 "src/sprites/../puun/gf/../../other/stb_image.h"
  }
  STACKTOP = sp;return; //@line 5840 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $8 = $1; //@line 5820 "src/sprites/../puun/gf/../../other/stb_image.h"
 $9 = (($8) + 3|0); //@line 5820 "src/sprites/../puun/gf/../../other/stb_image.h"
 $10 = HEAP8[$9>>0]|0; //@line 5820 "src/sprites/../puun/gf/../../other/stb_image.h"
 $11 = $10&255; //@line 5820 "src/sprites/../puun/gf/../../other/stb_image.h"
 $12 = (($11) - 136)|0; //@line 5820 "src/sprites/../puun/gf/../../other/stb_image.h"
 $13 = (+_ldexp(1.0,$12)); //@line 5820 "src/sprites/../puun/gf/../../other/stb_image.h"
 $14 = $13; //@line 5820 "src/sprites/../puun/gf/../../other/stb_image.h"
 $f1 = $14; //@line 5820 "src/sprites/../puun/gf/../../other/stb_image.h"
 $15 = $2; //@line 5821 "src/sprites/../puun/gf/../../other/stb_image.h"
 $16 = ($15|0)<=(2); //@line 5821 "src/sprites/../puun/gf/../../other/stb_image.h"
 if ($16) {
  $17 = $1; //@line 5822 "src/sprites/../puun/gf/../../other/stb_image.h"
  $18 = HEAP8[$17>>0]|0; //@line 5822 "src/sprites/../puun/gf/../../other/stb_image.h"
  $19 = $18&255; //@line 5822 "src/sprites/../puun/gf/../../other/stb_image.h"
  $20 = $1; //@line 5822 "src/sprites/../puun/gf/../../other/stb_image.h"
  $21 = (($20) + 1|0); //@line 5822 "src/sprites/../puun/gf/../../other/stb_image.h"
  $22 = HEAP8[$21>>0]|0; //@line 5822 "src/sprites/../puun/gf/../../other/stb_image.h"
  $23 = $22&255; //@line 5822 "src/sprites/../puun/gf/../../other/stb_image.h"
  $24 = (($19) + ($23))|0; //@line 5822 "src/sprites/../puun/gf/../../other/stb_image.h"
  $25 = $1; //@line 5822 "src/sprites/../puun/gf/../../other/stb_image.h"
  $26 = (($25) + 2|0); //@line 5822 "src/sprites/../puun/gf/../../other/stb_image.h"
  $27 = HEAP8[$26>>0]|0; //@line 5822 "src/sprites/../puun/gf/../../other/stb_image.h"
  $28 = $27&255; //@line 5822 "src/sprites/../puun/gf/../../other/stb_image.h"
  $29 = (($24) + ($28))|0; //@line 5822 "src/sprites/../puun/gf/../../other/stb_image.h"
  $30 = (+($29|0)); //@line 5822 "src/sprites/../puun/gf/../../other/stb_image.h"
  $31 = $f1; //@line 5822 "src/sprites/../puun/gf/../../other/stb_image.h"
  $32 = $30 * $31; //@line 5822 "src/sprites/../puun/gf/../../other/stb_image.h"
  $33 = $32 / 3.0; //@line 5822 "src/sprites/../puun/gf/../../other/stb_image.h"
  $34 = $0; //@line 5822 "src/sprites/../puun/gf/../../other/stb_image.h"
  HEAPF32[$34>>2] = $33; //@line 5822 "src/sprites/../puun/gf/../../other/stb_image.h"
 } else {
  $35 = $1; //@line 5824 "src/sprites/../puun/gf/../../other/stb_image.h"
  $36 = HEAP8[$35>>0]|0; //@line 5824 "src/sprites/../puun/gf/../../other/stb_image.h"
  $37 = $36&255; //@line 5824 "src/sprites/../puun/gf/../../other/stb_image.h"
  $38 = (+($37|0)); //@line 5824 "src/sprites/../puun/gf/../../other/stb_image.h"
  $39 = $f1; //@line 5824 "src/sprites/../puun/gf/../../other/stb_image.h"
  $40 = $38 * $39; //@line 5824 "src/sprites/../puun/gf/../../other/stb_image.h"
  $41 = $0; //@line 5824 "src/sprites/../puun/gf/../../other/stb_image.h"
  HEAPF32[$41>>2] = $40; //@line 5824 "src/sprites/../puun/gf/../../other/stb_image.h"
  $42 = $1; //@line 5825 "src/sprites/../puun/gf/../../other/stb_image.h"
  $43 = (($42) + 1|0); //@line 5825 "src/sprites/../puun/gf/../../other/stb_image.h"
  $44 = HEAP8[$43>>0]|0; //@line 5825 "src/sprites/../puun/gf/../../other/stb_image.h"
  $45 = $44&255; //@line 5825 "src/sprites/../puun/gf/../../other/stb_image.h"
  $46 = (+($45|0)); //@line 5825 "src/sprites/../puun/gf/../../other/stb_image.h"
  $47 = $f1; //@line 5825 "src/sprites/../puun/gf/../../other/stb_image.h"
  $48 = $46 * $47; //@line 5825 "src/sprites/../puun/gf/../../other/stb_image.h"
  $49 = $0; //@line 5825 "src/sprites/../puun/gf/../../other/stb_image.h"
  $50 = (($49) + 4|0); //@line 5825 "src/sprites/../puun/gf/../../other/stb_image.h"
  HEAPF32[$50>>2] = $48; //@line 5825 "src/sprites/../puun/gf/../../other/stb_image.h"
  $51 = $1; //@line 5826 "src/sprites/../puun/gf/../../other/stb_image.h"
  $52 = (($51) + 2|0); //@line 5826 "src/sprites/../puun/gf/../../other/stb_image.h"
  $53 = HEAP8[$52>>0]|0; //@line 5826 "src/sprites/../puun/gf/../../other/stb_image.h"
  $54 = $53&255; //@line 5826 "src/sprites/../puun/gf/../../other/stb_image.h"
  $55 = (+($54|0)); //@line 5826 "src/sprites/../puun/gf/../../other/stb_image.h"
  $56 = $f1; //@line 5826 "src/sprites/../puun/gf/../../other/stb_image.h"
  $57 = $55 * $56; //@line 5826 "src/sprites/../puun/gf/../../other/stb_image.h"
  $58 = $0; //@line 5826 "src/sprites/../puun/gf/../../other/stb_image.h"
  $59 = (($58) + 8|0); //@line 5826 "src/sprites/../puun/gf/../../other/stb_image.h"
  HEAPF32[$59>>2] = $57; //@line 5826 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $60 = $2; //@line 5828 "src/sprites/../puun/gf/../../other/stb_image.h"
 $61 = ($60|0)==(2); //@line 5828 "src/sprites/../puun/gf/../../other/stb_image.h"
 if ($61) {
  $62 = $0; //@line 5828 "src/sprites/../puun/gf/../../other/stb_image.h"
  $63 = (($62) + 4|0); //@line 5828 "src/sprites/../puun/gf/../../other/stb_image.h"
  HEAPF32[$63>>2] = 1.0; //@line 5828 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $64 = $2; //@line 5829 "src/sprites/../puun/gf/../../other/stb_image.h"
 $65 = ($64|0)==(4); //@line 5829 "src/sprites/../puun/gf/../../other/stb_image.h"
 if ($65) {
  $66 = $0; //@line 5829 "src/sprites/../puun/gf/../../other/stb_image.h"
  $67 = (($66) + 12|0); //@line 5829 "src/sprites/../puun/gf/../../other/stb_image.h"
  HEAPF32[$67>>2] = 1.0; //@line 5829 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 STACKTOP = sp;return; //@line 5840 "src/sprites/../puun/gf/../../other/stb_image.h"
}
function _stbi__load_main($s,$x,$y,$comp,$req_comp) {
 $s = $s|0;
 $x = $x|0;
 $y = $y|0;
 $comp = $comp|0;
 $req_comp = $req_comp|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0;
 var $97 = 0, $98 = 0, $99 = 0, $hdr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $s;
 $2 = $x;
 $3 = $y;
 $4 = $comp;
 $5 = $req_comp;
 $6 = $1; //@line 929 "src/sprites/../puun/gf/../../other/stb_image.h"
 $7 = (_stbi__jpeg_test($6)|0); //@line 929 "src/sprites/../puun/gf/../../other/stb_image.h"
 $8 = ($7|0)!=(0); //@line 929 "src/sprites/../puun/gf/../../other/stb_image.h"
 if ($8) {
  $9 = $1; //@line 929 "src/sprites/../puun/gf/../../other/stb_image.h"
  $10 = $2; //@line 929 "src/sprites/../puun/gf/../../other/stb_image.h"
  $11 = $3; //@line 929 "src/sprites/../puun/gf/../../other/stb_image.h"
  $12 = $4; //@line 929 "src/sprites/../puun/gf/../../other/stb_image.h"
  $13 = $5; //@line 929 "src/sprites/../puun/gf/../../other/stb_image.h"
  $14 = (_stbi__jpeg_load($9,$10,$11,$12,$13)|0); //@line 929 "src/sprites/../puun/gf/../../other/stb_image.h"
  $0 = $14; //@line 929 "src/sprites/../puun/gf/../../other/stb_image.h"
  $102 = $0; //@line 964 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($102|0); //@line 964 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $15 = $1; //@line 932 "src/sprites/../puun/gf/../../other/stb_image.h"
 $16 = (_stbi__png_test($15)|0); //@line 932 "src/sprites/../puun/gf/../../other/stb_image.h"
 $17 = ($16|0)!=(0); //@line 932 "src/sprites/../puun/gf/../../other/stb_image.h"
 if ($17) {
  $18 = $1; //@line 932 "src/sprites/../puun/gf/../../other/stb_image.h"
  $19 = $2; //@line 932 "src/sprites/../puun/gf/../../other/stb_image.h"
  $20 = $3; //@line 932 "src/sprites/../puun/gf/../../other/stb_image.h"
  $21 = $4; //@line 932 "src/sprites/../puun/gf/../../other/stb_image.h"
  $22 = $5; //@line 932 "src/sprites/../puun/gf/../../other/stb_image.h"
  $23 = (_stbi__png_load($18,$19,$20,$21,$22)|0); //@line 932 "src/sprites/../puun/gf/../../other/stb_image.h"
  $0 = $23; //@line 932 "src/sprites/../puun/gf/../../other/stb_image.h"
  $102 = $0; //@line 964 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($102|0); //@line 964 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $24 = $1; //@line 935 "src/sprites/../puun/gf/../../other/stb_image.h"
 $25 = (_stbi__bmp_test($24)|0); //@line 935 "src/sprites/../puun/gf/../../other/stb_image.h"
 $26 = ($25|0)!=(0); //@line 935 "src/sprites/../puun/gf/../../other/stb_image.h"
 if ($26) {
  $27 = $1; //@line 935 "src/sprites/../puun/gf/../../other/stb_image.h"
  $28 = $2; //@line 935 "src/sprites/../puun/gf/../../other/stb_image.h"
  $29 = $3; //@line 935 "src/sprites/../puun/gf/../../other/stb_image.h"
  $30 = $4; //@line 935 "src/sprites/../puun/gf/../../other/stb_image.h"
  $31 = $5; //@line 935 "src/sprites/../puun/gf/../../other/stb_image.h"
  $32 = (_stbi__bmp_load($27,$28,$29,$30,$31)|0); //@line 935 "src/sprites/../puun/gf/../../other/stb_image.h"
  $0 = $32; //@line 935 "src/sprites/../puun/gf/../../other/stb_image.h"
  $102 = $0; //@line 964 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($102|0); //@line 964 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $33 = $1; //@line 938 "src/sprites/../puun/gf/../../other/stb_image.h"
 $34 = (_stbi__gif_test($33)|0); //@line 938 "src/sprites/../puun/gf/../../other/stb_image.h"
 $35 = ($34|0)!=(0); //@line 938 "src/sprites/../puun/gf/../../other/stb_image.h"
 if ($35) {
  $36 = $1; //@line 938 "src/sprites/../puun/gf/../../other/stb_image.h"
  $37 = $2; //@line 938 "src/sprites/../puun/gf/../../other/stb_image.h"
  $38 = $3; //@line 938 "src/sprites/../puun/gf/../../other/stb_image.h"
  $39 = $4; //@line 938 "src/sprites/../puun/gf/../../other/stb_image.h"
  $40 = $5; //@line 938 "src/sprites/../puun/gf/../../other/stb_image.h"
  $41 = (_stbi__gif_load($36,$37,$38,$39,$40)|0); //@line 938 "src/sprites/../puun/gf/../../other/stb_image.h"
  $0 = $41; //@line 938 "src/sprites/../puun/gf/../../other/stb_image.h"
  $102 = $0; //@line 964 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($102|0); //@line 964 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $42 = $1; //@line 941 "src/sprites/../puun/gf/../../other/stb_image.h"
 $43 = (_stbi__psd_test($42)|0); //@line 941 "src/sprites/../puun/gf/../../other/stb_image.h"
 $44 = ($43|0)!=(0); //@line 941 "src/sprites/../puun/gf/../../other/stb_image.h"
 if ($44) {
  $45 = $1; //@line 941 "src/sprites/../puun/gf/../../other/stb_image.h"
  $46 = $2; //@line 941 "src/sprites/../puun/gf/../../other/stb_image.h"
  $47 = $3; //@line 941 "src/sprites/../puun/gf/../../other/stb_image.h"
  $48 = $4; //@line 941 "src/sprites/../puun/gf/../../other/stb_image.h"
  $49 = $5; //@line 941 "src/sprites/../puun/gf/../../other/stb_image.h"
  $50 = (_stbi__psd_load($45,$46,$47,$48,$49)|0); //@line 941 "src/sprites/../puun/gf/../../other/stb_image.h"
  $0 = $50; //@line 941 "src/sprites/../puun/gf/../../other/stb_image.h"
  $102 = $0; //@line 964 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($102|0); //@line 964 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $51 = $1; //@line 944 "src/sprites/../puun/gf/../../other/stb_image.h"
 $52 = (_stbi__pic_test($51)|0); //@line 944 "src/sprites/../puun/gf/../../other/stb_image.h"
 $53 = ($52|0)!=(0); //@line 944 "src/sprites/../puun/gf/../../other/stb_image.h"
 if ($53) {
  $54 = $1; //@line 944 "src/sprites/../puun/gf/../../other/stb_image.h"
  $55 = $2; //@line 944 "src/sprites/../puun/gf/../../other/stb_image.h"
  $56 = $3; //@line 944 "src/sprites/../puun/gf/../../other/stb_image.h"
  $57 = $4; //@line 944 "src/sprites/../puun/gf/../../other/stb_image.h"
  $58 = $5; //@line 944 "src/sprites/../puun/gf/../../other/stb_image.h"
  $59 = (_stbi__pic_load($54,$55,$56,$57,$58)|0); //@line 944 "src/sprites/../puun/gf/../../other/stb_image.h"
  $0 = $59; //@line 944 "src/sprites/../puun/gf/../../other/stb_image.h"
  $102 = $0; //@line 964 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($102|0); //@line 964 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $60 = $1; //@line 947 "src/sprites/../puun/gf/../../other/stb_image.h"
 $61 = (_stbi__pnm_test($60)|0); //@line 947 "src/sprites/../puun/gf/../../other/stb_image.h"
 $62 = ($61|0)!=(0); //@line 947 "src/sprites/../puun/gf/../../other/stb_image.h"
 if ($62) {
  $63 = $1; //@line 947 "src/sprites/../puun/gf/../../other/stb_image.h"
  $64 = $2; //@line 947 "src/sprites/../puun/gf/../../other/stb_image.h"
  $65 = $3; //@line 947 "src/sprites/../puun/gf/../../other/stb_image.h"
  $66 = $4; //@line 947 "src/sprites/../puun/gf/../../other/stb_image.h"
  $67 = $5; //@line 947 "src/sprites/../puun/gf/../../other/stb_image.h"
  $68 = (_stbi__pnm_load($63,$64,$65,$66,$67)|0); //@line 947 "src/sprites/../puun/gf/../../other/stb_image.h"
  $0 = $68; //@line 947 "src/sprites/../puun/gf/../../other/stb_image.h"
  $102 = $0; //@line 964 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($102|0); //@line 964 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $69 = $1; //@line 951 "src/sprites/../puun/gf/../../other/stb_image.h"
 $70 = (_stbi__hdr_test($69)|0); //@line 951 "src/sprites/../puun/gf/../../other/stb_image.h"
 $71 = ($70|0)!=(0); //@line 951 "src/sprites/../puun/gf/../../other/stb_image.h"
 if ($71) {
  $72 = $1; //@line 952 "src/sprites/../puun/gf/../../other/stb_image.h"
  $73 = $2; //@line 952 "src/sprites/../puun/gf/../../other/stb_image.h"
  $74 = $3; //@line 952 "src/sprites/../puun/gf/../../other/stb_image.h"
  $75 = $4; //@line 952 "src/sprites/../puun/gf/../../other/stb_image.h"
  $76 = $5; //@line 952 "src/sprites/../puun/gf/../../other/stb_image.h"
  $77 = (_stbi__hdr_load($72,$73,$74,$75,$76)|0); //@line 952 "src/sprites/../puun/gf/../../other/stb_image.h"
  $hdr = $77; //@line 952 "src/sprites/../puun/gf/../../other/stb_image.h"
  $78 = $hdr; //@line 953 "src/sprites/../puun/gf/../../other/stb_image.h"
  $79 = $2; //@line 953 "src/sprites/../puun/gf/../../other/stb_image.h"
  $80 = HEAP32[$79>>2]|0; //@line 953 "src/sprites/../puun/gf/../../other/stb_image.h"
  $81 = $3; //@line 953 "src/sprites/../puun/gf/../../other/stb_image.h"
  $82 = HEAP32[$81>>2]|0; //@line 953 "src/sprites/../puun/gf/../../other/stb_image.h"
  $83 = $5; //@line 953 "src/sprites/../puun/gf/../../other/stb_image.h"
  $84 = ($83|0)!=(0); //@line 953 "src/sprites/../puun/gf/../../other/stb_image.h"
  if ($84) {
   $85 = $5; //@line 953 "src/sprites/../puun/gf/../../other/stb_image.h"
   $88 = $85;
  } else {
   $86 = $4; //@line 953 "src/sprites/../puun/gf/../../other/stb_image.h"
   $87 = HEAP32[$86>>2]|0; //@line 953 "src/sprites/../puun/gf/../../other/stb_image.h"
   $88 = $87;
  }
  $89 = (_stbi__hdr_to_ldr($78,$80,$82,$88)|0); //@line 953 "src/sprites/../puun/gf/../../other/stb_image.h"
  $0 = $89; //@line 953 "src/sprites/../puun/gf/../../other/stb_image.h"
  $102 = $0; //@line 964 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($102|0); //@line 964 "src/sprites/../puun/gf/../../other/stb_image.h"
 } else {
  $90 = $1; //@line 959 "src/sprites/../puun/gf/../../other/stb_image.h"
  $91 = (_stbi__tga_test($90)|0); //@line 959 "src/sprites/../puun/gf/../../other/stb_image.h"
  $92 = ($91|0)!=(0); //@line 959 "src/sprites/../puun/gf/../../other/stb_image.h"
  if ($92) {
   $93 = $1; //@line 960 "src/sprites/../puun/gf/../../other/stb_image.h"
   $94 = $2; //@line 960 "src/sprites/../puun/gf/../../other/stb_image.h"
   $95 = $3; //@line 960 "src/sprites/../puun/gf/../../other/stb_image.h"
   $96 = $4; //@line 960 "src/sprites/../puun/gf/../../other/stb_image.h"
   $97 = $5; //@line 960 "src/sprites/../puun/gf/../../other/stb_image.h"
   $98 = (_stbi__tga_load($93,$94,$95,$96,$97)|0); //@line 960 "src/sprites/../puun/gf/../../other/stb_image.h"
   $0 = $98; //@line 960 "src/sprites/../puun/gf/../../other/stb_image.h"
   $102 = $0; //@line 964 "src/sprites/../puun/gf/../../other/stb_image.h"
   STACKTOP = sp;return ($102|0); //@line 964 "src/sprites/../puun/gf/../../other/stb_image.h"
  } else {
   $99 = (_stbi__err(7056)|0); //@line 963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $100 = ($99|0)!=(0); //@line 963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $101 = $100 ? 0 : 0; //@line 963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $0 = $101; //@line 963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $102 = $0; //@line 964 "src/sprites/../puun/gf/../../other/stb_image.h"
   STACKTOP = sp;return ($102|0); //@line 964 "src/sprites/../puun/gf/../../other/stb_image.h"
  }
 }
 return (0)|0;
}
function _stbi__tga_load($s,$x,$y,$comp,$req_comp) {
 $s = $s|0;
 $x = $x|0;
 $y = $y|0;
 $comp = $comp|0;
 $req_comp = $req_comp|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0;
 var $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0;
 var $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0;
 var $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0;
 var $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0;
 var $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0;
 var $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0;
 var $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0;
 var $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0;
 var $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $RLE_cmd = 0, $RLE_count = 0, $RLE_repeating = 0, $i = 0, $index1 = 0, $index2 = 0, $j = 0, $pal_idx = 0, $raw_data = 0, $read_next_pixel = 0, $temp = 0, $temp2 = 0, $tga_bits_per_pixel = 0, $tga_comp = 0, $tga_data = 0;
 var $tga_height = 0, $tga_image_type = 0, $tga_indexed = 0, $tga_inverted = 0, $tga_is_RLE = 0, $tga_offset = 0, $tga_palette = 0, $tga_palette_bits = 0, $tga_palette_len = 0, $tga_palette_start = 0, $tga_pixel = 0, $tga_row = 0, $tga_width = 0, $tga_x_origin = 0, $tga_y_origin = 0, $y1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $raw_data = sp + 140|0;
 $1 = $s;
 $2 = $x;
 $3 = $y;
 $4 = $comp;
 $5 = $req_comp;
 $6 = $1; //@line 4848 "src/sprites/../puun/gf/../../other/stb_image.h"
 $7 = (_stbi__get8($6)|0); //@line 4848 "src/sprites/../puun/gf/../../other/stb_image.h"
 $8 = $7&255; //@line 4848 "src/sprites/../puun/gf/../../other/stb_image.h"
 $tga_offset = $8; //@line 4848 "src/sprites/../puun/gf/../../other/stb_image.h"
 $9 = $1; //@line 4849 "src/sprites/../puun/gf/../../other/stb_image.h"
 $10 = (_stbi__get8($9)|0); //@line 4849 "src/sprites/../puun/gf/../../other/stb_image.h"
 $11 = $10&255; //@line 4849 "src/sprites/../puun/gf/../../other/stb_image.h"
 $tga_indexed = $11; //@line 4849 "src/sprites/../puun/gf/../../other/stb_image.h"
 $12 = $1; //@line 4850 "src/sprites/../puun/gf/../../other/stb_image.h"
 $13 = (_stbi__get8($12)|0); //@line 4850 "src/sprites/../puun/gf/../../other/stb_image.h"
 $14 = $13&255; //@line 4850 "src/sprites/../puun/gf/../../other/stb_image.h"
 $tga_image_type = $14; //@line 4850 "src/sprites/../puun/gf/../../other/stb_image.h"
 $tga_is_RLE = 0; //@line 4851 "src/sprites/../puun/gf/../../other/stb_image.h"
 $15 = $1; //@line 4852 "src/sprites/../puun/gf/../../other/stb_image.h"
 $16 = (_stbi__get16le($15)|0); //@line 4852 "src/sprites/../puun/gf/../../other/stb_image.h"
 $tga_palette_start = $16; //@line 4852 "src/sprites/../puun/gf/../../other/stb_image.h"
 $17 = $1; //@line 4853 "src/sprites/../puun/gf/../../other/stb_image.h"
 $18 = (_stbi__get16le($17)|0); //@line 4853 "src/sprites/../puun/gf/../../other/stb_image.h"
 $tga_palette_len = $18; //@line 4853 "src/sprites/../puun/gf/../../other/stb_image.h"
 $19 = $1; //@line 4854 "src/sprites/../puun/gf/../../other/stb_image.h"
 $20 = (_stbi__get8($19)|0); //@line 4854 "src/sprites/../puun/gf/../../other/stb_image.h"
 $21 = $20&255; //@line 4854 "src/sprites/../puun/gf/../../other/stb_image.h"
 $tga_palette_bits = $21; //@line 4854 "src/sprites/../puun/gf/../../other/stb_image.h"
 $22 = $1; //@line 4855 "src/sprites/../puun/gf/../../other/stb_image.h"
 $23 = (_stbi__get16le($22)|0); //@line 4855 "src/sprites/../puun/gf/../../other/stb_image.h"
 $tga_x_origin = $23; //@line 4855 "src/sprites/../puun/gf/../../other/stb_image.h"
 $24 = $1; //@line 4856 "src/sprites/../puun/gf/../../other/stb_image.h"
 $25 = (_stbi__get16le($24)|0); //@line 4856 "src/sprites/../puun/gf/../../other/stb_image.h"
 $tga_y_origin = $25; //@line 4856 "src/sprites/../puun/gf/../../other/stb_image.h"
 $26 = $1; //@line 4857 "src/sprites/../puun/gf/../../other/stb_image.h"
 $27 = (_stbi__get16le($26)|0); //@line 4857 "src/sprites/../puun/gf/../../other/stb_image.h"
 $tga_width = $27; //@line 4857 "src/sprites/../puun/gf/../../other/stb_image.h"
 $28 = $1; //@line 4858 "src/sprites/../puun/gf/../../other/stb_image.h"
 $29 = (_stbi__get16le($28)|0); //@line 4858 "src/sprites/../puun/gf/../../other/stb_image.h"
 $tga_height = $29; //@line 4858 "src/sprites/../puun/gf/../../other/stb_image.h"
 $30 = $1; //@line 4859 "src/sprites/../puun/gf/../../other/stb_image.h"
 $31 = (_stbi__get8($30)|0); //@line 4859 "src/sprites/../puun/gf/../../other/stb_image.h"
 $32 = $31&255; //@line 4859 "src/sprites/../puun/gf/../../other/stb_image.h"
 $tga_bits_per_pixel = $32; //@line 4859 "src/sprites/../puun/gf/../../other/stb_image.h"
 $33 = $tga_bits_per_pixel; //@line 4860 "src/sprites/../puun/gf/../../other/stb_image.h"
 $34 = (($33|0) / 8)&-1; //@line 4860 "src/sprites/../puun/gf/../../other/stb_image.h"
 $tga_comp = $34; //@line 4860 "src/sprites/../puun/gf/../../other/stb_image.h"
 $35 = $1; //@line 4861 "src/sprites/../puun/gf/../../other/stb_image.h"
 $36 = (_stbi__get8($35)|0); //@line 4861 "src/sprites/../puun/gf/../../other/stb_image.h"
 $37 = $36&255; //@line 4861 "src/sprites/../puun/gf/../../other/stb_image.h"
 $tga_inverted = $37; //@line 4861 "src/sprites/../puun/gf/../../other/stb_image.h"
 $tga_palette = 0; //@line 4864 "src/sprites/../puun/gf/../../other/stb_image.h"
 $RLE_count = 0; //@line 4867 "src/sprites/../puun/gf/../../other/stb_image.h"
 $RLE_repeating = 0; //@line 4868 "src/sprites/../puun/gf/../../other/stb_image.h"
 $read_next_pixel = 1; //@line 4869 "src/sprites/../puun/gf/../../other/stb_image.h"
 $38 = $tga_image_type; //@line 4872 "src/sprites/../puun/gf/../../other/stb_image.h"
 $39 = ($38|0)>=(8); //@line 4872 "src/sprites/../puun/gf/../../other/stb_image.h"
 if ($39) {
  $40 = $tga_image_type; //@line 4874 "src/sprites/../puun/gf/../../other/stb_image.h"
  $41 = (($40) - 8)|0; //@line 4874 "src/sprites/../puun/gf/../../other/stb_image.h"
  $tga_image_type = $41; //@line 4874 "src/sprites/../puun/gf/../../other/stb_image.h"
  $tga_is_RLE = 1; //@line 4875 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $42 = $tga_inverted; //@line 4878 "src/sprites/../puun/gf/../../other/stb_image.h"
 $43 = $42 >> 5; //@line 4878 "src/sprites/../puun/gf/../../other/stb_image.h"
 $44 = $43 & 1; //@line 4878 "src/sprites/../puun/gf/../../other/stb_image.h"
 $45 = (1 - ($44))|0; //@line 4878 "src/sprites/../puun/gf/../../other/stb_image.h"
 $tga_inverted = $45; //@line 4878 "src/sprites/../puun/gf/../../other/stb_image.h"
 $46 = $tga_width; //@line 4882 "src/sprites/../puun/gf/../../other/stb_image.h"
 $47 = ($46|0)<(1); //@line 4882 "src/sprites/../puun/gf/../../other/stb_image.h"
 do {
  if (!($47)) {
   $48 = $tga_height; //@line 4882 "src/sprites/../puun/gf/../../other/stb_image.h"
   $49 = ($48|0)<(1); //@line 4882 "src/sprites/../puun/gf/../../other/stb_image.h"
   if (!($49)) {
    $50 = $tga_image_type; //@line 4882 "src/sprites/../puun/gf/../../other/stb_image.h"
    $51 = ($50|0)<(1); //@line 4882 "src/sprites/../puun/gf/../../other/stb_image.h"
    if (!($51)) {
     $52 = $tga_image_type; //@line 4882 "src/sprites/../puun/gf/../../other/stb_image.h"
     $53 = ($52|0)>(3); //@line 4882 "src/sprites/../puun/gf/../../other/stb_image.h"
     if (!($53)) {
      $54 = $tga_bits_per_pixel; //@line 4882 "src/sprites/../puun/gf/../../other/stb_image.h"
      $55 = ($54|0)!=(8); //@line 4882 "src/sprites/../puun/gf/../../other/stb_image.h"
      if ($55) {
       $56 = $tga_bits_per_pixel; //@line 4882 "src/sprites/../puun/gf/../../other/stb_image.h"
       $57 = ($56|0)!=(16); //@line 4882 "src/sprites/../puun/gf/../../other/stb_image.h"
       if ($57) {
        $58 = $tga_bits_per_pixel; //@line 4882 "src/sprites/../puun/gf/../../other/stb_image.h"
        $59 = ($58|0)!=(24); //@line 4882 "src/sprites/../puun/gf/../../other/stb_image.h"
        if ($59) {
         $60 = $tga_bits_per_pixel; //@line 4882 "src/sprites/../puun/gf/../../other/stb_image.h"
         $61 = ($60|0)!=(32); //@line 4882 "src/sprites/../puun/gf/../../other/stb_image.h"
         if ($61) {
          break;
         }
        }
       }
      }
      $62 = $tga_indexed; //@line 4892 "src/sprites/../puun/gf/../../other/stb_image.h"
      $63 = ($62|0)!=(0); //@line 4892 "src/sprites/../puun/gf/../../other/stb_image.h"
      if ($63) {
       $64 = $tga_palette_bits; //@line 4894 "src/sprites/../puun/gf/../../other/stb_image.h"
       $65 = (($64|0) / 8)&-1; //@line 4894 "src/sprites/../puun/gf/../../other/stb_image.h"
       $tga_comp = $65; //@line 4894 "src/sprites/../puun/gf/../../other/stb_image.h"
      }
      $66 = $tga_width; //@line 4898 "src/sprites/../puun/gf/../../other/stb_image.h"
      $67 = $2; //@line 4898 "src/sprites/../puun/gf/../../other/stb_image.h"
      HEAP32[$67>>2] = $66; //@line 4898 "src/sprites/../puun/gf/../../other/stb_image.h"
      $68 = $tga_height; //@line 4899 "src/sprites/../puun/gf/../../other/stb_image.h"
      $69 = $3; //@line 4899 "src/sprites/../puun/gf/../../other/stb_image.h"
      HEAP32[$69>>2] = $68; //@line 4899 "src/sprites/../puun/gf/../../other/stb_image.h"
      $70 = $4; //@line 4900 "src/sprites/../puun/gf/../../other/stb_image.h"
      $71 = ($70|0)!=(0|0); //@line 4900 "src/sprites/../puun/gf/../../other/stb_image.h"
      if ($71) {
       $72 = $tga_comp; //@line 4900 "src/sprites/../puun/gf/../../other/stb_image.h"
       $73 = $4; //@line 4900 "src/sprites/../puun/gf/../../other/stb_image.h"
       HEAP32[$73>>2] = $72; //@line 4900 "src/sprites/../puun/gf/../../other/stb_image.h"
      }
      $74 = $tga_width; //@line 4902 "src/sprites/../puun/gf/../../other/stb_image.h"
      $75 = $tga_height; //@line 4902 "src/sprites/../puun/gf/../../other/stb_image.h"
      $76 = Math_imul($74, $75)|0; //@line 4902 "src/sprites/../puun/gf/../../other/stb_image.h"
      $77 = $tga_comp; //@line 4902 "src/sprites/../puun/gf/../../other/stb_image.h"
      $78 = Math_imul($76, $77)|0; //@line 4902 "src/sprites/../puun/gf/../../other/stb_image.h"
      $79 = (_stbi__malloc($78)|0); //@line 4902 "src/sprites/../puun/gf/../../other/stb_image.h"
      $tga_data = $79; //@line 4902 "src/sprites/../puun/gf/../../other/stb_image.h"
      $80 = $tga_data; //@line 4903 "src/sprites/../puun/gf/../../other/stb_image.h"
      $81 = ($80|0)!=(0|0); //@line 4903 "src/sprites/../puun/gf/../../other/stb_image.h"
      if (!($81)) {
       $82 = (_stbi__err(7464)|0); //@line 4903 "src/sprites/../puun/gf/../../other/stb_image.h"
       $83 = ($82|0)!=(0); //@line 4903 "src/sprites/../puun/gf/../../other/stb_image.h"
       $84 = $83 ? 0 : 0; //@line 4903 "src/sprites/../puun/gf/../../other/stb_image.h"
       $0 = $84; //@line 4903 "src/sprites/../puun/gf/../../other/stb_image.h"
       $304 = $0; //@line 5037 "src/sprites/../puun/gf/../../other/stb_image.h"
       STACKTOP = sp;return ($304|0); //@line 5037 "src/sprites/../puun/gf/../../other/stb_image.h"
      }
      $85 = $1; //@line 4906 "src/sprites/../puun/gf/../../other/stb_image.h"
      $86 = $tga_offset; //@line 4906 "src/sprites/../puun/gf/../../other/stb_image.h"
      _stbi__skip($85,$86); //@line 4906 "src/sprites/../puun/gf/../../other/stb_image.h"
      $87 = $tga_indexed; //@line 4908 "src/sprites/../puun/gf/../../other/stb_image.h"
      $88 = ($87|0)!=(0); //@line 4908 "src/sprites/../puun/gf/../../other/stb_image.h"
      if ($88) {
       label = 28;
      } else {
       $89 = $tga_is_RLE; //@line 4908 "src/sprites/../puun/gf/../../other/stb_image.h"
       $90 = ($89|0)!=(0); //@line 4908 "src/sprites/../puun/gf/../../other/stb_image.h"
       if ($90) {
        label = 28;
       } else {
        $i = 0; //@line 4909 "src/sprites/../puun/gf/../../other/stb_image.h"
        while(1) {
         $91 = $i; //@line 4909 "src/sprites/../puun/gf/../../other/stb_image.h"
         $92 = $tga_height; //@line 4909 "src/sprites/../puun/gf/../../other/stb_image.h"
         $93 = ($91|0)<($92|0); //@line 4909 "src/sprites/../puun/gf/../../other/stb_image.h"
         if (!($93)) {
          break;
         }
         $94 = $tga_inverted; //@line 4910 "src/sprites/../puun/gf/../../other/stb_image.h"
         $95 = ($94|0)!=(0); //@line 4910 "src/sprites/../puun/gf/../../other/stb_image.h"
         if ($95) {
          $96 = $tga_height; //@line 4910 "src/sprites/../puun/gf/../../other/stb_image.h"
          $97 = $i; //@line 4910 "src/sprites/../puun/gf/../../other/stb_image.h"
          $98 = (($96) - ($97))|0; //@line 4910 "src/sprites/../puun/gf/../../other/stb_image.h"
          $99 = (($98) - 1)|0; //@line 4910 "src/sprites/../puun/gf/../../other/stb_image.h"
          $101 = $99;
         } else {
          $100 = $i; //@line 4910 "src/sprites/../puun/gf/../../other/stb_image.h"
          $101 = $100;
         }
         $y1 = $101; //@line 4910 "src/sprites/../puun/gf/../../other/stb_image.h"
         $102 = $tga_data; //@line 4911 "src/sprites/../puun/gf/../../other/stb_image.h"
         $103 = $y1; //@line 4911 "src/sprites/../puun/gf/../../other/stb_image.h"
         $104 = $tga_width; //@line 4911 "src/sprites/../puun/gf/../../other/stb_image.h"
         $105 = Math_imul($103, $104)|0; //@line 4911 "src/sprites/../puun/gf/../../other/stb_image.h"
         $106 = $tga_comp; //@line 4911 "src/sprites/../puun/gf/../../other/stb_image.h"
         $107 = Math_imul($105, $106)|0; //@line 4911 "src/sprites/../puun/gf/../../other/stb_image.h"
         $108 = (($102) + ($107)|0); //@line 4911 "src/sprites/../puun/gf/../../other/stb_image.h"
         $tga_row = $108; //@line 4911 "src/sprites/../puun/gf/../../other/stb_image.h"
         $109 = $1; //@line 4912 "src/sprites/../puun/gf/../../other/stb_image.h"
         $110 = $tga_row; //@line 4912 "src/sprites/../puun/gf/../../other/stb_image.h"
         $111 = $tga_width; //@line 4912 "src/sprites/../puun/gf/../../other/stb_image.h"
         $112 = $tga_comp; //@line 4912 "src/sprites/../puun/gf/../../other/stb_image.h"
         $113 = Math_imul($111, $112)|0; //@line 4912 "src/sprites/../puun/gf/../../other/stb_image.h"
         (_stbi__getn($109,$110,$113)|0); //@line 4912 "src/sprites/../puun/gf/../../other/stb_image.h"
         $114 = $i; //@line 4909 "src/sprites/../puun/gf/../../other/stb_image.h"
         $115 = (($114) + 1)|0; //@line 4909 "src/sprites/../puun/gf/../../other/stb_image.h"
         $i = $115; //@line 4909 "src/sprites/../puun/gf/../../other/stb_image.h"
        }
       }
      }
      if ((label|0) == 28) {
       $116 = $tga_indexed; //@line 4916 "src/sprites/../puun/gf/../../other/stb_image.h"
       $117 = ($116|0)!=(0); //@line 4916 "src/sprites/../puun/gf/../../other/stb_image.h"
       do {
        if ($117) {
         $118 = $1; //@line 4919 "src/sprites/../puun/gf/../../other/stb_image.h"
         $119 = $tga_palette_start; //@line 4919 "src/sprites/../puun/gf/../../other/stb_image.h"
         _stbi__skip($118,$119); //@line 4919 "src/sprites/../puun/gf/../../other/stb_image.h"
         $120 = $tga_palette_len; //@line 4921 "src/sprites/../puun/gf/../../other/stb_image.h"
         $121 = $tga_palette_bits; //@line 4921 "src/sprites/../puun/gf/../../other/stb_image.h"
         $122 = Math_imul($120, $121)|0; //@line 4921 "src/sprites/../puun/gf/../../other/stb_image.h"
         $123 = (($122|0) / 8)&-1; //@line 4921 "src/sprites/../puun/gf/../../other/stb_image.h"
         $124 = (_stbi__malloc($123)|0); //@line 4921 "src/sprites/../puun/gf/../../other/stb_image.h"
         $tga_palette = $124; //@line 4921 "src/sprites/../puun/gf/../../other/stb_image.h"
         $125 = $tga_palette; //@line 4922 "src/sprites/../puun/gf/../../other/stb_image.h"
         $126 = ($125|0)!=(0|0); //@line 4922 "src/sprites/../puun/gf/../../other/stb_image.h"
         if (!($126)) {
          $127 = $tga_data; //@line 4923 "src/sprites/../puun/gf/../../other/stb_image.h"
          _free($127); //@line 4923 "src/sprites/../puun/gf/../../other/stb_image.h"
          $128 = (_stbi__err(7464)|0); //@line 4924 "src/sprites/../puun/gf/../../other/stb_image.h"
          $129 = ($128|0)!=(0); //@line 4924 "src/sprites/../puun/gf/../../other/stb_image.h"
          $130 = $129 ? 0 : 0; //@line 4924 "src/sprites/../puun/gf/../../other/stb_image.h"
          $0 = $130; //@line 4924 "src/sprites/../puun/gf/../../other/stb_image.h"
          $304 = $0; //@line 5037 "src/sprites/../puun/gf/../../other/stb_image.h"
          STACKTOP = sp;return ($304|0); //@line 5037 "src/sprites/../puun/gf/../../other/stb_image.h"
         }
         $131 = $1; //@line 4926 "src/sprites/../puun/gf/../../other/stb_image.h"
         $132 = $tga_palette; //@line 4926 "src/sprites/../puun/gf/../../other/stb_image.h"
         $133 = $tga_palette_len; //@line 4926 "src/sprites/../puun/gf/../../other/stb_image.h"
         $134 = $tga_palette_bits; //@line 4926 "src/sprites/../puun/gf/../../other/stb_image.h"
         $135 = Math_imul($133, $134)|0; //@line 4926 "src/sprites/../puun/gf/../../other/stb_image.h"
         $136 = (($135|0) / 8)&-1; //@line 4926 "src/sprites/../puun/gf/../../other/stb_image.h"
         $137 = (_stbi__getn($131,$132,$136)|0); //@line 4926 "src/sprites/../puun/gf/../../other/stb_image.h"
         $138 = ($137|0)!=(0); //@line 4926 "src/sprites/../puun/gf/../../other/stb_image.h"
         if ($138) {
          break;
         }
         $139 = $tga_data; //@line 4927 "src/sprites/../puun/gf/../../other/stb_image.h"
         _free($139); //@line 4927 "src/sprites/../puun/gf/../../other/stb_image.h"
         $140 = $tga_palette; //@line 4928 "src/sprites/../puun/gf/../../other/stb_image.h"
         _free($140); //@line 4928 "src/sprites/../puun/gf/../../other/stb_image.h"
         $141 = (_stbi__err(9752)|0); //@line 4929 "src/sprites/../puun/gf/../../other/stb_image.h"
         $142 = ($141|0)!=(0); //@line 4929 "src/sprites/../puun/gf/../../other/stb_image.h"
         $143 = $142 ? 0 : 0; //@line 4929 "src/sprites/../puun/gf/../../other/stb_image.h"
         $0 = $143; //@line 4929 "src/sprites/../puun/gf/../../other/stb_image.h"
         $304 = $0; //@line 5037 "src/sprites/../puun/gf/../../other/stb_image.h"
         STACKTOP = sp;return ($304|0); //@line 5037 "src/sprites/../puun/gf/../../other/stb_image.h"
        }
       } while(0);
       $i = 0; //@line 4933 "src/sprites/../puun/gf/../../other/stb_image.h"
       while(1) {
        $144 = $i; //@line 4933 "src/sprites/../puun/gf/../../other/stb_image.h"
        $145 = $tga_width; //@line 4933 "src/sprites/../puun/gf/../../other/stb_image.h"
        $146 = $tga_height; //@line 4933 "src/sprites/../puun/gf/../../other/stb_image.h"
        $147 = Math_imul($145, $146)|0; //@line 4933 "src/sprites/../puun/gf/../../other/stb_image.h"
        $148 = ($144|0)<($147|0); //@line 4933 "src/sprites/../puun/gf/../../other/stb_image.h"
        if (!($148)) {
         break;
        }
        $149 = $tga_is_RLE; //@line 4936 "src/sprites/../puun/gf/../../other/stb_image.h"
        $150 = ($149|0)!=(0); //@line 4936 "src/sprites/../puun/gf/../../other/stb_image.h"
        if ($150) {
         $151 = $RLE_count; //@line 4938 "src/sprites/../puun/gf/../../other/stb_image.h"
         $152 = ($151|0)==(0); //@line 4938 "src/sprites/../puun/gf/../../other/stb_image.h"
         if ($152) {
          $153 = $1; //@line 4941 "src/sprites/../puun/gf/../../other/stb_image.h"
          $154 = (_stbi__get8($153)|0); //@line 4941 "src/sprites/../puun/gf/../../other/stb_image.h"
          $155 = $154&255; //@line 4941 "src/sprites/../puun/gf/../../other/stb_image.h"
          $RLE_cmd = $155; //@line 4941 "src/sprites/../puun/gf/../../other/stb_image.h"
          $156 = $RLE_cmd; //@line 4942 "src/sprites/../puun/gf/../../other/stb_image.h"
          $157 = $156 & 127; //@line 4942 "src/sprites/../puun/gf/../../other/stb_image.h"
          $158 = (1 + ($157))|0; //@line 4942 "src/sprites/../puun/gf/../../other/stb_image.h"
          $RLE_count = $158; //@line 4942 "src/sprites/../puun/gf/../../other/stb_image.h"
          $159 = $RLE_cmd; //@line 4943 "src/sprites/../puun/gf/../../other/stb_image.h"
          $160 = $159 >> 7; //@line 4943 "src/sprites/../puun/gf/../../other/stb_image.h"
          $RLE_repeating = $160; //@line 4943 "src/sprites/../puun/gf/../../other/stb_image.h"
          $read_next_pixel = 1; //@line 4944 "src/sprites/../puun/gf/../../other/stb_image.h"
         } else {
          $161 = $RLE_repeating; //@line 4945 "src/sprites/../puun/gf/../../other/stb_image.h"
          $162 = ($161|0)!=(0); //@line 4945 "src/sprites/../puun/gf/../../other/stb_image.h"
          if (!($162)) {
           $read_next_pixel = 1; //@line 4947 "src/sprites/../puun/gf/../../other/stb_image.h"
          }
         }
        } else {
         $read_next_pixel = 1; //@line 4951 "src/sprites/../puun/gf/../../other/stb_image.h"
        }
        $163 = $read_next_pixel; //@line 4954 "src/sprites/../puun/gf/../../other/stb_image.h"
        $164 = ($163|0)!=(0); //@line 4954 "src/sprites/../puun/gf/../../other/stb_image.h"
        if ($164) {
         $165 = $tga_indexed; //@line 4957 "src/sprites/../puun/gf/../../other/stb_image.h"
         $166 = ($165|0)!=(0); //@line 4957 "src/sprites/../puun/gf/../../other/stb_image.h"
         if ($166) {
          $167 = $1; //@line 4960 "src/sprites/../puun/gf/../../other/stb_image.h"
          $168 = (_stbi__get8($167)|0); //@line 4960 "src/sprites/../puun/gf/../../other/stb_image.h"
          $169 = $168&255; //@line 4960 "src/sprites/../puun/gf/../../other/stb_image.h"
          $pal_idx = $169; //@line 4960 "src/sprites/../puun/gf/../../other/stb_image.h"
          $170 = $pal_idx; //@line 4961 "src/sprites/../puun/gf/../../other/stb_image.h"
          $171 = $tga_palette_len; //@line 4961 "src/sprites/../puun/gf/../../other/stb_image.h"
          $172 = ($170|0)>=($171|0); //@line 4961 "src/sprites/../puun/gf/../../other/stb_image.h"
          if ($172) {
           $pal_idx = 0; //@line 4964 "src/sprites/../puun/gf/../../other/stb_image.h"
          }
          $173 = $tga_bits_per_pixel; //@line 4966 "src/sprites/../puun/gf/../../other/stb_image.h"
          $174 = (($173|0) / 8)&-1; //@line 4966 "src/sprites/../puun/gf/../../other/stb_image.h"
          $175 = $pal_idx; //@line 4966 "src/sprites/../puun/gf/../../other/stb_image.h"
          $176 = Math_imul($175, $174)|0; //@line 4966 "src/sprites/../puun/gf/../../other/stb_image.h"
          $pal_idx = $176; //@line 4966 "src/sprites/../puun/gf/../../other/stb_image.h"
          $j = 0; //@line 4967 "src/sprites/../puun/gf/../../other/stb_image.h"
          while(1) {
           $177 = $j; //@line 4967 "src/sprites/../puun/gf/../../other/stb_image.h"
           $178 = $177<<3; //@line 4967 "src/sprites/../puun/gf/../../other/stb_image.h"
           $179 = $tga_bits_per_pixel; //@line 4967 "src/sprites/../puun/gf/../../other/stb_image.h"
           $180 = ($178|0)<($179|0); //@line 4967 "src/sprites/../puun/gf/../../other/stb_image.h"
           if (!($180)) {
            break;
           }
           $181 = $pal_idx; //@line 4969 "src/sprites/../puun/gf/../../other/stb_image.h"
           $182 = $j; //@line 4969 "src/sprites/../puun/gf/../../other/stb_image.h"
           $183 = (($181) + ($182))|0; //@line 4969 "src/sprites/../puun/gf/../../other/stb_image.h"
           $184 = $tga_palette; //@line 4969 "src/sprites/../puun/gf/../../other/stb_image.h"
           $185 = (($184) + ($183)|0); //@line 4969 "src/sprites/../puun/gf/../../other/stb_image.h"
           $186 = HEAP8[$185>>0]|0; //@line 4969 "src/sprites/../puun/gf/../../other/stb_image.h"
           $187 = $j; //@line 4969 "src/sprites/../puun/gf/../../other/stb_image.h"
           $188 = (($raw_data) + ($187)|0); //@line 4969 "src/sprites/../puun/gf/../../other/stb_image.h"
           HEAP8[$188>>0] = $186; //@line 4969 "src/sprites/../puun/gf/../../other/stb_image.h"
           $189 = $j; //@line 4967 "src/sprites/../puun/gf/../../other/stb_image.h"
           $190 = (($189) + 1)|0; //@line 4967 "src/sprites/../puun/gf/../../other/stb_image.h"
           $j = $190; //@line 4967 "src/sprites/../puun/gf/../../other/stb_image.h"
          }
         } else {
          $j = 0; //@line 4974 "src/sprites/../puun/gf/../../other/stb_image.h"
          while(1) {
           $191 = $j; //@line 4974 "src/sprites/../puun/gf/../../other/stb_image.h"
           $192 = $191<<3; //@line 4974 "src/sprites/../puun/gf/../../other/stb_image.h"
           $193 = $tga_bits_per_pixel; //@line 4974 "src/sprites/../puun/gf/../../other/stb_image.h"
           $194 = ($192|0)<($193|0); //@line 4974 "src/sprites/../puun/gf/../../other/stb_image.h"
           if (!($194)) {
            break;
           }
           $195 = $1; //@line 4976 "src/sprites/../puun/gf/../../other/stb_image.h"
           $196 = (_stbi__get8($195)|0); //@line 4976 "src/sprites/../puun/gf/../../other/stb_image.h"
           $197 = $j; //@line 4976 "src/sprites/../puun/gf/../../other/stb_image.h"
           $198 = (($raw_data) + ($197)|0); //@line 4976 "src/sprites/../puun/gf/../../other/stb_image.h"
           HEAP8[$198>>0] = $196; //@line 4976 "src/sprites/../puun/gf/../../other/stb_image.h"
           $199 = $j; //@line 4974 "src/sprites/../puun/gf/../../other/stb_image.h"
           $200 = (($199) + 1)|0; //@line 4974 "src/sprites/../puun/gf/../../other/stb_image.h"
           $j = $200; //@line 4974 "src/sprites/../puun/gf/../../other/stb_image.h"
          }
         }
         $read_next_pixel = 0; //@line 4980 "src/sprites/../puun/gf/../../other/stb_image.h"
        }
        $j = 0; //@line 4984 "src/sprites/../puun/gf/../../other/stb_image.h"
        while(1) {
         $201 = $j; //@line 4984 "src/sprites/../puun/gf/../../other/stb_image.h"
         $202 = $tga_comp; //@line 4984 "src/sprites/../puun/gf/../../other/stb_image.h"
         $203 = ($201|0)<($202|0); //@line 4984 "src/sprites/../puun/gf/../../other/stb_image.h"
         if (!($203)) {
          break;
         }
         $204 = $j; //@line 4985 "src/sprites/../puun/gf/../../other/stb_image.h"
         $205 = (($raw_data) + ($204)|0); //@line 4985 "src/sprites/../puun/gf/../../other/stb_image.h"
         $206 = HEAP8[$205>>0]|0; //@line 4985 "src/sprites/../puun/gf/../../other/stb_image.h"
         $207 = $i; //@line 4985 "src/sprites/../puun/gf/../../other/stb_image.h"
         $208 = $tga_comp; //@line 4985 "src/sprites/../puun/gf/../../other/stb_image.h"
         $209 = Math_imul($207, $208)|0; //@line 4985 "src/sprites/../puun/gf/../../other/stb_image.h"
         $210 = $j; //@line 4985 "src/sprites/../puun/gf/../../other/stb_image.h"
         $211 = (($209) + ($210))|0; //@line 4985 "src/sprites/../puun/gf/../../other/stb_image.h"
         $212 = $tga_data; //@line 4985 "src/sprites/../puun/gf/../../other/stb_image.h"
         $213 = (($212) + ($211)|0); //@line 4985 "src/sprites/../puun/gf/../../other/stb_image.h"
         HEAP8[$213>>0] = $206; //@line 4985 "src/sprites/../puun/gf/../../other/stb_image.h"
         $214 = $j; //@line 4984 "src/sprites/../puun/gf/../../other/stb_image.h"
         $215 = (($214) + 1)|0; //@line 4984 "src/sprites/../puun/gf/../../other/stb_image.h"
         $j = $215; //@line 4984 "src/sprites/../puun/gf/../../other/stb_image.h"
        }
        $216 = $RLE_count; //@line 4988 "src/sprites/../puun/gf/../../other/stb_image.h"
        $217 = (($216) + -1)|0; //@line 4988 "src/sprites/../puun/gf/../../other/stb_image.h"
        $RLE_count = $217; //@line 4988 "src/sprites/../puun/gf/../../other/stb_image.h"
        $218 = $i; //@line 4933 "src/sprites/../puun/gf/../../other/stb_image.h"
        $219 = (($218) + 1)|0; //@line 4933 "src/sprites/../puun/gf/../../other/stb_image.h"
        $i = $219; //@line 4933 "src/sprites/../puun/gf/../../other/stb_image.h"
       }
       $220 = $tga_inverted; //@line 4991 "src/sprites/../puun/gf/../../other/stb_image.h"
       $221 = ($220|0)!=(0); //@line 4991 "src/sprites/../puun/gf/../../other/stb_image.h"
       if ($221) {
        $j = 0; //@line 4993 "src/sprites/../puun/gf/../../other/stb_image.h"
        while(1) {
         $222 = $j; //@line 4993 "src/sprites/../puun/gf/../../other/stb_image.h"
         $223 = $222<<1; //@line 4993 "src/sprites/../puun/gf/../../other/stb_image.h"
         $224 = $tga_height; //@line 4993 "src/sprites/../puun/gf/../../other/stb_image.h"
         $225 = ($223|0)<($224|0); //@line 4993 "src/sprites/../puun/gf/../../other/stb_image.h"
         if (!($225)) {
          break;
         }
         $226 = $j; //@line 4995 "src/sprites/../puun/gf/../../other/stb_image.h"
         $227 = $tga_width; //@line 4995 "src/sprites/../puun/gf/../../other/stb_image.h"
         $228 = Math_imul($226, $227)|0; //@line 4995 "src/sprites/../puun/gf/../../other/stb_image.h"
         $229 = $tga_comp; //@line 4995 "src/sprites/../puun/gf/../../other/stb_image.h"
         $230 = Math_imul($228, $229)|0; //@line 4995 "src/sprites/../puun/gf/../../other/stb_image.h"
         $index1 = $230; //@line 4995 "src/sprites/../puun/gf/../../other/stb_image.h"
         $231 = $tga_height; //@line 4996 "src/sprites/../puun/gf/../../other/stb_image.h"
         $232 = (($231) - 1)|0; //@line 4996 "src/sprites/../puun/gf/../../other/stb_image.h"
         $233 = $j; //@line 4996 "src/sprites/../puun/gf/../../other/stb_image.h"
         $234 = (($232) - ($233))|0; //@line 4996 "src/sprites/../puun/gf/../../other/stb_image.h"
         $235 = $tga_width; //@line 4996 "src/sprites/../puun/gf/../../other/stb_image.h"
         $236 = Math_imul($234, $235)|0; //@line 4996 "src/sprites/../puun/gf/../../other/stb_image.h"
         $237 = $tga_comp; //@line 4996 "src/sprites/../puun/gf/../../other/stb_image.h"
         $238 = Math_imul($236, $237)|0; //@line 4996 "src/sprites/../puun/gf/../../other/stb_image.h"
         $index2 = $238; //@line 4996 "src/sprites/../puun/gf/../../other/stb_image.h"
         $239 = $tga_width; //@line 4997 "src/sprites/../puun/gf/../../other/stb_image.h"
         $240 = $tga_comp; //@line 4997 "src/sprites/../puun/gf/../../other/stb_image.h"
         $241 = Math_imul($239, $240)|0; //@line 4997 "src/sprites/../puun/gf/../../other/stb_image.h"
         $i = $241; //@line 4997 "src/sprites/../puun/gf/../../other/stb_image.h"
         while(1) {
          $242 = $i; //@line 4997 "src/sprites/../puun/gf/../../other/stb_image.h"
          $243 = ($242|0)>(0); //@line 4997 "src/sprites/../puun/gf/../../other/stb_image.h"
          if (!($243)) {
           break;
          }
          $244 = $index1; //@line 4999 "src/sprites/../puun/gf/../../other/stb_image.h"
          $245 = $tga_data; //@line 4999 "src/sprites/../puun/gf/../../other/stb_image.h"
          $246 = (($245) + ($244)|0); //@line 4999 "src/sprites/../puun/gf/../../other/stb_image.h"
          $247 = HEAP8[$246>>0]|0; //@line 4999 "src/sprites/../puun/gf/../../other/stb_image.h"
          $temp = $247; //@line 4999 "src/sprites/../puun/gf/../../other/stb_image.h"
          $248 = $index2; //@line 5000 "src/sprites/../puun/gf/../../other/stb_image.h"
          $249 = $tga_data; //@line 5000 "src/sprites/../puun/gf/../../other/stb_image.h"
          $250 = (($249) + ($248)|0); //@line 5000 "src/sprites/../puun/gf/../../other/stb_image.h"
          $251 = HEAP8[$250>>0]|0; //@line 5000 "src/sprites/../puun/gf/../../other/stb_image.h"
          $252 = $index1; //@line 5000 "src/sprites/../puun/gf/../../other/stb_image.h"
          $253 = $tga_data; //@line 5000 "src/sprites/../puun/gf/../../other/stb_image.h"
          $254 = (($253) + ($252)|0); //@line 5000 "src/sprites/../puun/gf/../../other/stb_image.h"
          HEAP8[$254>>0] = $251; //@line 5000 "src/sprites/../puun/gf/../../other/stb_image.h"
          $255 = $temp; //@line 5001 "src/sprites/../puun/gf/../../other/stb_image.h"
          $256 = $index2; //@line 5001 "src/sprites/../puun/gf/../../other/stb_image.h"
          $257 = $tga_data; //@line 5001 "src/sprites/../puun/gf/../../other/stb_image.h"
          $258 = (($257) + ($256)|0); //@line 5001 "src/sprites/../puun/gf/../../other/stb_image.h"
          HEAP8[$258>>0] = $255; //@line 5001 "src/sprites/../puun/gf/../../other/stb_image.h"
          $259 = $index1; //@line 5002 "src/sprites/../puun/gf/../../other/stb_image.h"
          $260 = (($259) + 1)|0; //@line 5002 "src/sprites/../puun/gf/../../other/stb_image.h"
          $index1 = $260; //@line 5002 "src/sprites/../puun/gf/../../other/stb_image.h"
          $261 = $index2; //@line 5003 "src/sprites/../puun/gf/../../other/stb_image.h"
          $262 = (($261) + 1)|0; //@line 5003 "src/sprites/../puun/gf/../../other/stb_image.h"
          $index2 = $262; //@line 5003 "src/sprites/../puun/gf/../../other/stb_image.h"
          $263 = $i; //@line 4997 "src/sprites/../puun/gf/../../other/stb_image.h"
          $264 = (($263) + -1)|0; //@line 4997 "src/sprites/../puun/gf/../../other/stb_image.h"
          $i = $264; //@line 4997 "src/sprites/../puun/gf/../../other/stb_image.h"
         }
         $265 = $j; //@line 4993 "src/sprites/../puun/gf/../../other/stb_image.h"
         $266 = (($265) + 1)|0; //@line 4993 "src/sprites/../puun/gf/../../other/stb_image.h"
         $j = $266; //@line 4993 "src/sprites/../puun/gf/../../other/stb_image.h"
        }
       }
       $267 = $tga_palette; //@line 5008 "src/sprites/../puun/gf/../../other/stb_image.h"
       $268 = ($267|0)!=(0|0); //@line 5008 "src/sprites/../puun/gf/../../other/stb_image.h"
       if ($268) {
        $269 = $tga_palette; //@line 5010 "src/sprites/../puun/gf/../../other/stb_image.h"
        _free($269); //@line 5010 "src/sprites/../puun/gf/../../other/stb_image.h"
       }
      }
      $270 = $tga_comp; //@line 5015 "src/sprites/../puun/gf/../../other/stb_image.h"
      $271 = ($270|0)>=(3); //@line 5015 "src/sprites/../puun/gf/../../other/stb_image.h"
      if ($271) {
       $272 = $tga_data; //@line 5017 "src/sprites/../puun/gf/../../other/stb_image.h"
       $tga_pixel = $272; //@line 5017 "src/sprites/../puun/gf/../../other/stb_image.h"
       $i = 0; //@line 5018 "src/sprites/../puun/gf/../../other/stb_image.h"
       while(1) {
        $273 = $i; //@line 5018 "src/sprites/../puun/gf/../../other/stb_image.h"
        $274 = $tga_width; //@line 5018 "src/sprites/../puun/gf/../../other/stb_image.h"
        $275 = $tga_height; //@line 5018 "src/sprites/../puun/gf/../../other/stb_image.h"
        $276 = Math_imul($274, $275)|0; //@line 5018 "src/sprites/../puun/gf/../../other/stb_image.h"
        $277 = ($273|0)<($276|0); //@line 5018 "src/sprites/../puun/gf/../../other/stb_image.h"
        if (!($277)) {
         break;
        }
        $278 = $tga_pixel; //@line 5020 "src/sprites/../puun/gf/../../other/stb_image.h"
        $279 = HEAP8[$278>>0]|0; //@line 5020 "src/sprites/../puun/gf/../../other/stb_image.h"
        $temp2 = $279; //@line 5020 "src/sprites/../puun/gf/../../other/stb_image.h"
        $280 = $tga_pixel; //@line 5021 "src/sprites/../puun/gf/../../other/stb_image.h"
        $281 = (($280) + 2|0); //@line 5021 "src/sprites/../puun/gf/../../other/stb_image.h"
        $282 = HEAP8[$281>>0]|0; //@line 5021 "src/sprites/../puun/gf/../../other/stb_image.h"
        $283 = $tga_pixel; //@line 5021 "src/sprites/../puun/gf/../../other/stb_image.h"
        HEAP8[$283>>0] = $282; //@line 5021 "src/sprites/../puun/gf/../../other/stb_image.h"
        $284 = $temp2; //@line 5022 "src/sprites/../puun/gf/../../other/stb_image.h"
        $285 = $tga_pixel; //@line 5022 "src/sprites/../puun/gf/../../other/stb_image.h"
        $286 = (($285) + 2|0); //@line 5022 "src/sprites/../puun/gf/../../other/stb_image.h"
        HEAP8[$286>>0] = $284; //@line 5022 "src/sprites/../puun/gf/../../other/stb_image.h"
        $287 = $tga_comp; //@line 5023 "src/sprites/../puun/gf/../../other/stb_image.h"
        $288 = $tga_pixel; //@line 5023 "src/sprites/../puun/gf/../../other/stb_image.h"
        $289 = (($288) + ($287)|0); //@line 5023 "src/sprites/../puun/gf/../../other/stb_image.h"
        $tga_pixel = $289; //@line 5023 "src/sprites/../puun/gf/../../other/stb_image.h"
        $290 = $i; //@line 5018 "src/sprites/../puun/gf/../../other/stb_image.h"
        $291 = (($290) + 1)|0; //@line 5018 "src/sprites/../puun/gf/../../other/stb_image.h"
        $i = $291; //@line 5018 "src/sprites/../puun/gf/../../other/stb_image.h"
       }
      }
      $292 = $5; //@line 5028 "src/sprites/../puun/gf/../../other/stb_image.h"
      $293 = ($292|0)!=(0); //@line 5028 "src/sprites/../puun/gf/../../other/stb_image.h"
      if ($293) {
       $294 = $5; //@line 5028 "src/sprites/../puun/gf/../../other/stb_image.h"
       $295 = $tga_comp; //@line 5028 "src/sprites/../puun/gf/../../other/stb_image.h"
       $296 = ($294|0)!=($295|0); //@line 5028 "src/sprites/../puun/gf/../../other/stb_image.h"
       if ($296) {
        $297 = $tga_data; //@line 5029 "src/sprites/../puun/gf/../../other/stb_image.h"
        $298 = $tga_comp; //@line 5029 "src/sprites/../puun/gf/../../other/stb_image.h"
        $299 = $5; //@line 5029 "src/sprites/../puun/gf/../../other/stb_image.h"
        $300 = $tga_width; //@line 5029 "src/sprites/../puun/gf/../../other/stb_image.h"
        $301 = $tga_height; //@line 5029 "src/sprites/../puun/gf/../../other/stb_image.h"
        $302 = (_stbi__convert_format($297,$298,$299,$300,$301)|0); //@line 5029 "src/sprites/../puun/gf/../../other/stb_image.h"
        $tga_data = $302; //@line 5029 "src/sprites/../puun/gf/../../other/stb_image.h"
       }
      }
      $tga_y_origin = 0; //@line 5033 "src/sprites/../puun/gf/../../other/stb_image.h"
      $tga_x_origin = 0; //@line 5033 "src/sprites/../puun/gf/../../other/stb_image.h"
      $tga_palette_bits = 0; //@line 5033 "src/sprites/../puun/gf/../../other/stb_image.h"
      $tga_palette_len = 0; //@line 5033 "src/sprites/../puun/gf/../../other/stb_image.h"
      $tga_palette_start = 0; //@line 5033 "src/sprites/../puun/gf/../../other/stb_image.h"
      $303 = $tga_data; //@line 5036 "src/sprites/../puun/gf/../../other/stb_image.h"
      $0 = $303; //@line 5036 "src/sprites/../puun/gf/../../other/stb_image.h"
      $304 = $0; //@line 5037 "src/sprites/../puun/gf/../../other/stb_image.h"
      STACKTOP = sp;return ($304|0); //@line 5037 "src/sprites/../puun/gf/../../other/stb_image.h"
     }
    }
   }
  }
 } while(0);
 $0 = 0; //@line 4888 "src/sprites/../puun/gf/../../other/stb_image.h"
 $304 = $0; //@line 5037 "src/sprites/../puun/gf/../../other/stb_image.h"
 STACKTOP = sp;return ($304|0); //@line 5037 "src/sprites/../puun/gf/../../other/stb_image.h"
}
function _stbi__convert_format($data,$img_n,$req_comp,$x,$y) {
 $data = $data|0;
 $img_n = $img_n|0;
 $req_comp = $req_comp|0;
 $x = $x|0;
 $y = $y|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0;
 var $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0;
 var $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0;
 var $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0;
 var $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0;
 var $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0;
 var $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0;
 var $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0;
 var $98 = 0, $99 = 0, $dest = 0, $good = 0, $i = 0, $j = 0, $src = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $data;
 $2 = $img_n;
 $3 = $req_comp;
 $4 = $x;
 $5 = $y;
 $6 = $3; //@line 1323 "src/sprites/../puun/gf/../../other/stb_image.h"
 $7 = $2; //@line 1323 "src/sprites/../puun/gf/../../other/stb_image.h"
 $8 = ($6|0)==($7|0); //@line 1323 "src/sprites/../puun/gf/../../other/stb_image.h"
 if ($8) {
  $9 = $1; //@line 1323 "src/sprites/../puun/gf/../../other/stb_image.h"
  $0 = $9; //@line 1323 "src/sprites/../puun/gf/../../other/stb_image.h"
  $301 = $0; //@line 1360 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($301|0); //@line 1360 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $10 = $3; //@line 1324 "src/sprites/../puun/gf/../../other/stb_image.h"
 $11 = ($10|0)>=(1); //@line 1324 "src/sprites/../puun/gf/../../other/stb_image.h"
 if (!($11)) {
  ___assert_fail((9768|0),(7560|0),1324,(9800|0)); //@line 1324 "src/sprites/../puun/gf/../../other/stb_image.h"
  // unreachable; //@line 1324 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $12 = $3; //@line 1324 "src/sprites/../puun/gf/../../other/stb_image.h"
 $13 = ($12|0)<=(4); //@line 1324 "src/sprites/../puun/gf/../../other/stb_image.h"
 if (!($13)) {
  ___assert_fail((9768|0),(7560|0),1324,(9800|0)); //@line 1324 "src/sprites/../puun/gf/../../other/stb_image.h"
  // unreachable; //@line 1324 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $14 = $3; //@line 1326 "src/sprites/../puun/gf/../../other/stb_image.h"
 $15 = $4; //@line 1326 "src/sprites/../puun/gf/../../other/stb_image.h"
 $16 = Math_imul($14, $15)|0; //@line 1326 "src/sprites/../puun/gf/../../other/stb_image.h"
 $17 = $5; //@line 1326 "src/sprites/../puun/gf/../../other/stb_image.h"
 $18 = Math_imul($16, $17)|0; //@line 1326 "src/sprites/../puun/gf/../../other/stb_image.h"
 $19 = (_stbi__malloc($18)|0); //@line 1326 "src/sprites/../puun/gf/../../other/stb_image.h"
 $good = $19; //@line 1326 "src/sprites/../puun/gf/../../other/stb_image.h"
 $20 = $good; //@line 1327 "src/sprites/../puun/gf/../../other/stb_image.h"
 $21 = ($20|0)==(0|0); //@line 1327 "src/sprites/../puun/gf/../../other/stb_image.h"
 if ($21) {
  $22 = $1; //@line 1328 "src/sprites/../puun/gf/../../other/stb_image.h"
  _free($22); //@line 1328 "src/sprites/../puun/gf/../../other/stb_image.h"
  $23 = (_stbi__err(7464)|0); //@line 1329 "src/sprites/../puun/gf/../../other/stb_image.h"
  $24 = ($23|0)!=(0); //@line 1329 "src/sprites/../puun/gf/../../other/stb_image.h"
  $25 = $24 ? 0 : 0; //@line 1329 "src/sprites/../puun/gf/../../other/stb_image.h"
  $0 = $25; //@line 1329 "src/sprites/../puun/gf/../../other/stb_image.h"
  $301 = $0; //@line 1360 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($301|0); //@line 1360 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $j = 0; //@line 1332 "src/sprites/../puun/gf/../../other/stb_image.h"
 L15: while(1) {
  $26 = $j; //@line 1332 "src/sprites/../puun/gf/../../other/stb_image.h"
  $27 = $5; //@line 1332 "src/sprites/../puun/gf/../../other/stb_image.h"
  $28 = ($26|0)<($27|0); //@line 1332 "src/sprites/../puun/gf/../../other/stb_image.h"
  if (!($28)) {
   break;
  }
  $29 = $1; //@line 1333 "src/sprites/../puun/gf/../../other/stb_image.h"
  $30 = $j; //@line 1333 "src/sprites/../puun/gf/../../other/stb_image.h"
  $31 = $4; //@line 1333 "src/sprites/../puun/gf/../../other/stb_image.h"
  $32 = Math_imul($30, $31)|0; //@line 1333 "src/sprites/../puun/gf/../../other/stb_image.h"
  $33 = $2; //@line 1333 "src/sprites/../puun/gf/../../other/stb_image.h"
  $34 = Math_imul($32, $33)|0; //@line 1333 "src/sprites/../puun/gf/../../other/stb_image.h"
  $35 = (($29) + ($34)|0); //@line 1333 "src/sprites/../puun/gf/../../other/stb_image.h"
  $src = $35; //@line 1333 "src/sprites/../puun/gf/../../other/stb_image.h"
  $36 = $good; //@line 1334 "src/sprites/../puun/gf/../../other/stb_image.h"
  $37 = $j; //@line 1334 "src/sprites/../puun/gf/../../other/stb_image.h"
  $38 = $4; //@line 1334 "src/sprites/../puun/gf/../../other/stb_image.h"
  $39 = Math_imul($37, $38)|0; //@line 1334 "src/sprites/../puun/gf/../../other/stb_image.h"
  $40 = $3; //@line 1334 "src/sprites/../puun/gf/../../other/stb_image.h"
  $41 = Math_imul($39, $40)|0; //@line 1334 "src/sprites/../puun/gf/../../other/stb_image.h"
  $42 = (($36) + ($41)|0); //@line 1334 "src/sprites/../puun/gf/../../other/stb_image.h"
  $dest = $42; //@line 1334 "src/sprites/../puun/gf/../../other/stb_image.h"
  $43 = $2; //@line 1340 "src/sprites/../puun/gf/../../other/stb_image.h"
  $44 = $43<<3; //@line 1340 "src/sprites/../puun/gf/../../other/stb_image.h"
  $45 = $3; //@line 1340 "src/sprites/../puun/gf/../../other/stb_image.h"
  $46 = (($44) + ($45))|0; //@line 1340 "src/sprites/../puun/gf/../../other/stb_image.h"
  do {
   switch ($46|0) {
   case 10:  {
    $47 = $4; //@line 1341 "src/sprites/../puun/gf/../../other/stb_image.h"
    $48 = (($47) - 1)|0; //@line 1341 "src/sprites/../puun/gf/../../other/stb_image.h"
    $i = $48; //@line 1341 "src/sprites/../puun/gf/../../other/stb_image.h"
    while(1) {
     $49 = $i; //@line 1341 "src/sprites/../puun/gf/../../other/stb_image.h"
     $50 = ($49|0)>=(0); //@line 1341 "src/sprites/../puun/gf/../../other/stb_image.h"
     if (!($50)) {
      break;
     }
     $51 = $src; //@line 1341 "src/sprites/../puun/gf/../../other/stb_image.h"
     $52 = HEAP8[$51>>0]|0; //@line 1341 "src/sprites/../puun/gf/../../other/stb_image.h"
     $53 = $dest; //@line 1341 "src/sprites/../puun/gf/../../other/stb_image.h"
     HEAP8[$53>>0] = $52; //@line 1341 "src/sprites/../puun/gf/../../other/stb_image.h"
     $54 = $dest; //@line 1341 "src/sprites/../puun/gf/../../other/stb_image.h"
     $55 = (($54) + 1|0); //@line 1341 "src/sprites/../puun/gf/../../other/stb_image.h"
     HEAP8[$55>>0] = -1; //@line 1341 "src/sprites/../puun/gf/../../other/stb_image.h"
     $56 = $i; //@line 1341 "src/sprites/../puun/gf/../../other/stb_image.h"
     $57 = (($56) + -1)|0; //@line 1341 "src/sprites/../puun/gf/../../other/stb_image.h"
     $i = $57; //@line 1341 "src/sprites/../puun/gf/../../other/stb_image.h"
     $58 = $src; //@line 1341 "src/sprites/../puun/gf/../../other/stb_image.h"
     $59 = (($58) + 1|0); //@line 1341 "src/sprites/../puun/gf/../../other/stb_image.h"
     $src = $59; //@line 1341 "src/sprites/../puun/gf/../../other/stb_image.h"
     $60 = $dest; //@line 1341 "src/sprites/../puun/gf/../../other/stb_image.h"
     $61 = (($60) + 2|0); //@line 1341 "src/sprites/../puun/gf/../../other/stb_image.h"
     $dest = $61; //@line 1341 "src/sprites/../puun/gf/../../other/stb_image.h"
    }
    break;
   }
   case 12:  {
    $79 = $4; //@line 1343 "src/sprites/../puun/gf/../../other/stb_image.h"
    $80 = (($79) - 1)|0; //@line 1343 "src/sprites/../puun/gf/../../other/stb_image.h"
    $i = $80; //@line 1343 "src/sprites/../puun/gf/../../other/stb_image.h"
    while(1) {
     $81 = $i; //@line 1343 "src/sprites/../puun/gf/../../other/stb_image.h"
     $82 = ($81|0)>=(0); //@line 1343 "src/sprites/../puun/gf/../../other/stb_image.h"
     if (!($82)) {
      break;
     }
     $83 = $src; //@line 1343 "src/sprites/../puun/gf/../../other/stb_image.h"
     $84 = HEAP8[$83>>0]|0; //@line 1343 "src/sprites/../puun/gf/../../other/stb_image.h"
     $85 = $dest; //@line 1343 "src/sprites/../puun/gf/../../other/stb_image.h"
     $86 = (($85) + 2|0); //@line 1343 "src/sprites/../puun/gf/../../other/stb_image.h"
     HEAP8[$86>>0] = $84; //@line 1343 "src/sprites/../puun/gf/../../other/stb_image.h"
     $87 = $dest; //@line 1343 "src/sprites/../puun/gf/../../other/stb_image.h"
     $88 = (($87) + 1|0); //@line 1343 "src/sprites/../puun/gf/../../other/stb_image.h"
     HEAP8[$88>>0] = $84; //@line 1343 "src/sprites/../puun/gf/../../other/stb_image.h"
     $89 = $dest; //@line 1343 "src/sprites/../puun/gf/../../other/stb_image.h"
     HEAP8[$89>>0] = $84; //@line 1343 "src/sprites/../puun/gf/../../other/stb_image.h"
     $90 = $dest; //@line 1343 "src/sprites/../puun/gf/../../other/stb_image.h"
     $91 = (($90) + 3|0); //@line 1343 "src/sprites/../puun/gf/../../other/stb_image.h"
     HEAP8[$91>>0] = -1; //@line 1343 "src/sprites/../puun/gf/../../other/stb_image.h"
     $92 = $i; //@line 1343 "src/sprites/../puun/gf/../../other/stb_image.h"
     $93 = (($92) + -1)|0; //@line 1343 "src/sprites/../puun/gf/../../other/stb_image.h"
     $i = $93; //@line 1343 "src/sprites/../puun/gf/../../other/stb_image.h"
     $94 = $src; //@line 1343 "src/sprites/../puun/gf/../../other/stb_image.h"
     $95 = (($94) + 1|0); //@line 1343 "src/sprites/../puun/gf/../../other/stb_image.h"
     $src = $95; //@line 1343 "src/sprites/../puun/gf/../../other/stb_image.h"
     $96 = $dest; //@line 1343 "src/sprites/../puun/gf/../../other/stb_image.h"
     $97 = (($96) + 4|0); //@line 1343 "src/sprites/../puun/gf/../../other/stb_image.h"
     $dest = $97; //@line 1343 "src/sprites/../puun/gf/../../other/stb_image.h"
    }
    break;
   }
   case 26:  {
    $198 = $4; //@line 1349 "src/sprites/../puun/gf/../../other/stb_image.h"
    $199 = (($198) - 1)|0; //@line 1349 "src/sprites/../puun/gf/../../other/stb_image.h"
    $i = $199; //@line 1349 "src/sprites/../puun/gf/../../other/stb_image.h"
    while(1) {
     $200 = $i; //@line 1349 "src/sprites/../puun/gf/../../other/stb_image.h"
     $201 = ($200|0)>=(0); //@line 1349 "src/sprites/../puun/gf/../../other/stb_image.h"
     if (!($201)) {
      break;
     }
     $202 = $src; //@line 1349 "src/sprites/../puun/gf/../../other/stb_image.h"
     $203 = HEAP8[$202>>0]|0; //@line 1349 "src/sprites/../puun/gf/../../other/stb_image.h"
     $204 = $203&255; //@line 1349 "src/sprites/../puun/gf/../../other/stb_image.h"
     $205 = $src; //@line 1349 "src/sprites/../puun/gf/../../other/stb_image.h"
     $206 = (($205) + 1|0); //@line 1349 "src/sprites/../puun/gf/../../other/stb_image.h"
     $207 = HEAP8[$206>>0]|0; //@line 1349 "src/sprites/../puun/gf/../../other/stb_image.h"
     $208 = $207&255; //@line 1349 "src/sprites/../puun/gf/../../other/stb_image.h"
     $209 = $src; //@line 1349 "src/sprites/../puun/gf/../../other/stb_image.h"
     $210 = (($209) + 2|0); //@line 1349 "src/sprites/../puun/gf/../../other/stb_image.h"
     $211 = HEAP8[$210>>0]|0; //@line 1349 "src/sprites/../puun/gf/../../other/stb_image.h"
     $212 = $211&255; //@line 1349 "src/sprites/../puun/gf/../../other/stb_image.h"
     $213 = (_stbi__compute_y($204,$208,$212)|0); //@line 1349 "src/sprites/../puun/gf/../../other/stb_image.h"
     $214 = $dest; //@line 1349 "src/sprites/../puun/gf/../../other/stb_image.h"
     HEAP8[$214>>0] = $213; //@line 1349 "src/sprites/../puun/gf/../../other/stb_image.h"
     $215 = $dest; //@line 1349 "src/sprites/../puun/gf/../../other/stb_image.h"
     $216 = (($215) + 1|0); //@line 1349 "src/sprites/../puun/gf/../../other/stb_image.h"
     HEAP8[$216>>0] = -1; //@line 1349 "src/sprites/../puun/gf/../../other/stb_image.h"
     $217 = $i; //@line 1349 "src/sprites/../puun/gf/../../other/stb_image.h"
     $218 = (($217) + -1)|0; //@line 1349 "src/sprites/../puun/gf/../../other/stb_image.h"
     $i = $218; //@line 1349 "src/sprites/../puun/gf/../../other/stb_image.h"
     $219 = $src; //@line 1349 "src/sprites/../puun/gf/../../other/stb_image.h"
     $220 = (($219) + 3|0); //@line 1349 "src/sprites/../puun/gf/../../other/stb_image.h"
     $src = $220; //@line 1349 "src/sprites/../puun/gf/../../other/stb_image.h"
     $221 = $dest; //@line 1349 "src/sprites/../puun/gf/../../other/stb_image.h"
     $222 = (($221) + 2|0); //@line 1349 "src/sprites/../puun/gf/../../other/stb_image.h"
     $dest = $222; //@line 1349 "src/sprites/../puun/gf/../../other/stb_image.h"
    }
    break;
   }
   case 19:  {
    $111 = $4; //@line 1345 "src/sprites/../puun/gf/../../other/stb_image.h"
    $112 = (($111) - 1)|0; //@line 1345 "src/sprites/../puun/gf/../../other/stb_image.h"
    $i = $112; //@line 1345 "src/sprites/../puun/gf/../../other/stb_image.h"
    while(1) {
     $113 = $i; //@line 1345 "src/sprites/../puun/gf/../../other/stb_image.h"
     $114 = ($113|0)>=(0); //@line 1345 "src/sprites/../puun/gf/../../other/stb_image.h"
     if (!($114)) {
      break;
     }
     $115 = $src; //@line 1345 "src/sprites/../puun/gf/../../other/stb_image.h"
     $116 = HEAP8[$115>>0]|0; //@line 1345 "src/sprites/../puun/gf/../../other/stb_image.h"
     $117 = $dest; //@line 1345 "src/sprites/../puun/gf/../../other/stb_image.h"
     $118 = (($117) + 2|0); //@line 1345 "src/sprites/../puun/gf/../../other/stb_image.h"
     HEAP8[$118>>0] = $116; //@line 1345 "src/sprites/../puun/gf/../../other/stb_image.h"
     $119 = $dest; //@line 1345 "src/sprites/../puun/gf/../../other/stb_image.h"
     $120 = (($119) + 1|0); //@line 1345 "src/sprites/../puun/gf/../../other/stb_image.h"
     HEAP8[$120>>0] = $116; //@line 1345 "src/sprites/../puun/gf/../../other/stb_image.h"
     $121 = $dest; //@line 1345 "src/sprites/../puun/gf/../../other/stb_image.h"
     HEAP8[$121>>0] = $116; //@line 1345 "src/sprites/../puun/gf/../../other/stb_image.h"
     $122 = $i; //@line 1345 "src/sprites/../puun/gf/../../other/stb_image.h"
     $123 = (($122) + -1)|0; //@line 1345 "src/sprites/../puun/gf/../../other/stb_image.h"
     $i = $123; //@line 1345 "src/sprites/../puun/gf/../../other/stb_image.h"
     $124 = $src; //@line 1345 "src/sprites/../puun/gf/../../other/stb_image.h"
     $125 = (($124) + 2|0); //@line 1345 "src/sprites/../puun/gf/../../other/stb_image.h"
     $src = $125; //@line 1345 "src/sprites/../puun/gf/../../other/stb_image.h"
     $126 = $dest; //@line 1345 "src/sprites/../puun/gf/../../other/stb_image.h"
     $127 = (($126) + 3|0); //@line 1345 "src/sprites/../puun/gf/../../other/stb_image.h"
     $dest = $127; //@line 1345 "src/sprites/../puun/gf/../../other/stb_image.h"
    }
    break;
   }
   case 28:  {
    $150 = $4; //@line 1347 "src/sprites/../puun/gf/../../other/stb_image.h"
    $151 = (($150) - 1)|0; //@line 1347 "src/sprites/../puun/gf/../../other/stb_image.h"
    $i = $151; //@line 1347 "src/sprites/../puun/gf/../../other/stb_image.h"
    while(1) {
     $152 = $i; //@line 1347 "src/sprites/../puun/gf/../../other/stb_image.h"
     $153 = ($152|0)>=(0); //@line 1347 "src/sprites/../puun/gf/../../other/stb_image.h"
     if (!($153)) {
      break;
     }
     $154 = $src; //@line 1347 "src/sprites/../puun/gf/../../other/stb_image.h"
     $155 = HEAP8[$154>>0]|0; //@line 1347 "src/sprites/../puun/gf/../../other/stb_image.h"
     $156 = $dest; //@line 1347 "src/sprites/../puun/gf/../../other/stb_image.h"
     HEAP8[$156>>0] = $155; //@line 1347 "src/sprites/../puun/gf/../../other/stb_image.h"
     $157 = $src; //@line 1347 "src/sprites/../puun/gf/../../other/stb_image.h"
     $158 = (($157) + 1|0); //@line 1347 "src/sprites/../puun/gf/../../other/stb_image.h"
     $159 = HEAP8[$158>>0]|0; //@line 1347 "src/sprites/../puun/gf/../../other/stb_image.h"
     $160 = $dest; //@line 1347 "src/sprites/../puun/gf/../../other/stb_image.h"
     $161 = (($160) + 1|0); //@line 1347 "src/sprites/../puun/gf/../../other/stb_image.h"
     HEAP8[$161>>0] = $159; //@line 1347 "src/sprites/../puun/gf/../../other/stb_image.h"
     $162 = $src; //@line 1347 "src/sprites/../puun/gf/../../other/stb_image.h"
     $163 = (($162) + 2|0); //@line 1347 "src/sprites/../puun/gf/../../other/stb_image.h"
     $164 = HEAP8[$163>>0]|0; //@line 1347 "src/sprites/../puun/gf/../../other/stb_image.h"
     $165 = $dest; //@line 1347 "src/sprites/../puun/gf/../../other/stb_image.h"
     $166 = (($165) + 2|0); //@line 1347 "src/sprites/../puun/gf/../../other/stb_image.h"
     HEAP8[$166>>0] = $164; //@line 1347 "src/sprites/../puun/gf/../../other/stb_image.h"
     $167 = $dest; //@line 1347 "src/sprites/../puun/gf/../../other/stb_image.h"
     $168 = (($167) + 3|0); //@line 1347 "src/sprites/../puun/gf/../../other/stb_image.h"
     HEAP8[$168>>0] = -1; //@line 1347 "src/sprites/../puun/gf/../../other/stb_image.h"
     $169 = $i; //@line 1347 "src/sprites/../puun/gf/../../other/stb_image.h"
     $170 = (($169) + -1)|0; //@line 1347 "src/sprites/../puun/gf/../../other/stb_image.h"
     $i = $170; //@line 1347 "src/sprites/../puun/gf/../../other/stb_image.h"
     $171 = $src; //@line 1347 "src/sprites/../puun/gf/../../other/stb_image.h"
     $172 = (($171) + 3|0); //@line 1347 "src/sprites/../puun/gf/../../other/stb_image.h"
     $src = $172; //@line 1347 "src/sprites/../puun/gf/../../other/stb_image.h"
     $173 = $dest; //@line 1347 "src/sprites/../puun/gf/../../other/stb_image.h"
     $174 = (($173) + 4|0); //@line 1347 "src/sprites/../puun/gf/../../other/stb_image.h"
     $dest = $174; //@line 1347 "src/sprites/../puun/gf/../../other/stb_image.h"
    }
    break;
   }
   case 20:  {
    $128 = $4; //@line 1346 "src/sprites/../puun/gf/../../other/stb_image.h"
    $129 = (($128) - 1)|0; //@line 1346 "src/sprites/../puun/gf/../../other/stb_image.h"
    $i = $129; //@line 1346 "src/sprites/../puun/gf/../../other/stb_image.h"
    while(1) {
     $130 = $i; //@line 1346 "src/sprites/../puun/gf/../../other/stb_image.h"
     $131 = ($130|0)>=(0); //@line 1346 "src/sprites/../puun/gf/../../other/stb_image.h"
     if (!($131)) {
      break;
     }
     $132 = $src; //@line 1346 "src/sprites/../puun/gf/../../other/stb_image.h"
     $133 = HEAP8[$132>>0]|0; //@line 1346 "src/sprites/../puun/gf/../../other/stb_image.h"
     $134 = $dest; //@line 1346 "src/sprites/../puun/gf/../../other/stb_image.h"
     $135 = (($134) + 2|0); //@line 1346 "src/sprites/../puun/gf/../../other/stb_image.h"
     HEAP8[$135>>0] = $133; //@line 1346 "src/sprites/../puun/gf/../../other/stb_image.h"
     $136 = $dest; //@line 1346 "src/sprites/../puun/gf/../../other/stb_image.h"
     $137 = (($136) + 1|0); //@line 1346 "src/sprites/../puun/gf/../../other/stb_image.h"
     HEAP8[$137>>0] = $133; //@line 1346 "src/sprites/../puun/gf/../../other/stb_image.h"
     $138 = $dest; //@line 1346 "src/sprites/../puun/gf/../../other/stb_image.h"
     HEAP8[$138>>0] = $133; //@line 1346 "src/sprites/../puun/gf/../../other/stb_image.h"
     $139 = $src; //@line 1346 "src/sprites/../puun/gf/../../other/stb_image.h"
     $140 = (($139) + 1|0); //@line 1346 "src/sprites/../puun/gf/../../other/stb_image.h"
     $141 = HEAP8[$140>>0]|0; //@line 1346 "src/sprites/../puun/gf/../../other/stb_image.h"
     $142 = $dest; //@line 1346 "src/sprites/../puun/gf/../../other/stb_image.h"
     $143 = (($142) + 3|0); //@line 1346 "src/sprites/../puun/gf/../../other/stb_image.h"
     HEAP8[$143>>0] = $141; //@line 1346 "src/sprites/../puun/gf/../../other/stb_image.h"
     $144 = $i; //@line 1346 "src/sprites/../puun/gf/../../other/stb_image.h"
     $145 = (($144) + -1)|0; //@line 1346 "src/sprites/../puun/gf/../../other/stb_image.h"
     $i = $145; //@line 1346 "src/sprites/../puun/gf/../../other/stb_image.h"
     $146 = $src; //@line 1346 "src/sprites/../puun/gf/../../other/stb_image.h"
     $147 = (($146) + 2|0); //@line 1346 "src/sprites/../puun/gf/../../other/stb_image.h"
     $src = $147; //@line 1346 "src/sprites/../puun/gf/../../other/stb_image.h"
     $148 = $dest; //@line 1346 "src/sprites/../puun/gf/../../other/stb_image.h"
     $149 = (($148) + 4|0); //@line 1346 "src/sprites/../puun/gf/../../other/stb_image.h"
     $dest = $149; //@line 1346 "src/sprites/../puun/gf/../../other/stb_image.h"
    }
    break;
   }
   case 33:  {
    $223 = $4; //@line 1350 "src/sprites/../puun/gf/../../other/stb_image.h"
    $224 = (($223) - 1)|0; //@line 1350 "src/sprites/../puun/gf/../../other/stb_image.h"
    $i = $224; //@line 1350 "src/sprites/../puun/gf/../../other/stb_image.h"
    while(1) {
     $225 = $i; //@line 1350 "src/sprites/../puun/gf/../../other/stb_image.h"
     $226 = ($225|0)>=(0); //@line 1350 "src/sprites/../puun/gf/../../other/stb_image.h"
     if (!($226)) {
      break;
     }
     $227 = $src; //@line 1350 "src/sprites/../puun/gf/../../other/stb_image.h"
     $228 = HEAP8[$227>>0]|0; //@line 1350 "src/sprites/../puun/gf/../../other/stb_image.h"
     $229 = $228&255; //@line 1350 "src/sprites/../puun/gf/../../other/stb_image.h"
     $230 = $src; //@line 1350 "src/sprites/../puun/gf/../../other/stb_image.h"
     $231 = (($230) + 1|0); //@line 1350 "src/sprites/../puun/gf/../../other/stb_image.h"
     $232 = HEAP8[$231>>0]|0; //@line 1350 "src/sprites/../puun/gf/../../other/stb_image.h"
     $233 = $232&255; //@line 1350 "src/sprites/../puun/gf/../../other/stb_image.h"
     $234 = $src; //@line 1350 "src/sprites/../puun/gf/../../other/stb_image.h"
     $235 = (($234) + 2|0); //@line 1350 "src/sprites/../puun/gf/../../other/stb_image.h"
     $236 = HEAP8[$235>>0]|0; //@line 1350 "src/sprites/../puun/gf/../../other/stb_image.h"
     $237 = $236&255; //@line 1350 "src/sprites/../puun/gf/../../other/stb_image.h"
     $238 = (_stbi__compute_y($229,$233,$237)|0); //@line 1350 "src/sprites/../puun/gf/../../other/stb_image.h"
     $239 = $dest; //@line 1350 "src/sprites/../puun/gf/../../other/stb_image.h"
     HEAP8[$239>>0] = $238; //@line 1350 "src/sprites/../puun/gf/../../other/stb_image.h"
     $240 = $i; //@line 1350 "src/sprites/../puun/gf/../../other/stb_image.h"
     $241 = (($240) + -1)|0; //@line 1350 "src/sprites/../puun/gf/../../other/stb_image.h"
     $i = $241; //@line 1350 "src/sprites/../puun/gf/../../other/stb_image.h"
     $242 = $src; //@line 1350 "src/sprites/../puun/gf/../../other/stb_image.h"
     $243 = (($242) + 4|0); //@line 1350 "src/sprites/../puun/gf/../../other/stb_image.h"
     $src = $243; //@line 1350 "src/sprites/../puun/gf/../../other/stb_image.h"
     $244 = $dest; //@line 1350 "src/sprites/../puun/gf/../../other/stb_image.h"
     $245 = (($244) + 1|0); //@line 1350 "src/sprites/../puun/gf/../../other/stb_image.h"
     $dest = $245; //@line 1350 "src/sprites/../puun/gf/../../other/stb_image.h"
    }
    break;
   }
   case 25:  {
    $175 = $4; //@line 1348 "src/sprites/../puun/gf/../../other/stb_image.h"
    $176 = (($175) - 1)|0; //@line 1348 "src/sprites/../puun/gf/../../other/stb_image.h"
    $i = $176; //@line 1348 "src/sprites/../puun/gf/../../other/stb_image.h"
    while(1) {
     $177 = $i; //@line 1348 "src/sprites/../puun/gf/../../other/stb_image.h"
     $178 = ($177|0)>=(0); //@line 1348 "src/sprites/../puun/gf/../../other/stb_image.h"
     if (!($178)) {
      break;
     }
     $179 = $src; //@line 1348 "src/sprites/../puun/gf/../../other/stb_image.h"
     $180 = HEAP8[$179>>0]|0; //@line 1348 "src/sprites/../puun/gf/../../other/stb_image.h"
     $181 = $180&255; //@line 1348 "src/sprites/../puun/gf/../../other/stb_image.h"
     $182 = $src; //@line 1348 "src/sprites/../puun/gf/../../other/stb_image.h"
     $183 = (($182) + 1|0); //@line 1348 "src/sprites/../puun/gf/../../other/stb_image.h"
     $184 = HEAP8[$183>>0]|0; //@line 1348 "src/sprites/../puun/gf/../../other/stb_image.h"
     $185 = $184&255; //@line 1348 "src/sprites/../puun/gf/../../other/stb_image.h"
     $186 = $src; //@line 1348 "src/sprites/../puun/gf/../../other/stb_image.h"
     $187 = (($186) + 2|0); //@line 1348 "src/sprites/../puun/gf/../../other/stb_image.h"
     $188 = HEAP8[$187>>0]|0; //@line 1348 "src/sprites/../puun/gf/../../other/stb_image.h"
     $189 = $188&255; //@line 1348 "src/sprites/../puun/gf/../../other/stb_image.h"
     $190 = (_stbi__compute_y($181,$185,$189)|0); //@line 1348 "src/sprites/../puun/gf/../../other/stb_image.h"
     $191 = $dest; //@line 1348 "src/sprites/../puun/gf/../../other/stb_image.h"
     HEAP8[$191>>0] = $190; //@line 1348 "src/sprites/../puun/gf/../../other/stb_image.h"
     $192 = $i; //@line 1348 "src/sprites/../puun/gf/../../other/stb_image.h"
     $193 = (($192) + -1)|0; //@line 1348 "src/sprites/../puun/gf/../../other/stb_image.h"
     $i = $193; //@line 1348 "src/sprites/../puun/gf/../../other/stb_image.h"
     $194 = $src; //@line 1348 "src/sprites/../puun/gf/../../other/stb_image.h"
     $195 = (($194) + 3|0); //@line 1348 "src/sprites/../puun/gf/../../other/stb_image.h"
     $src = $195; //@line 1348 "src/sprites/../puun/gf/../../other/stb_image.h"
     $196 = $dest; //@line 1348 "src/sprites/../puun/gf/../../other/stb_image.h"
     $197 = (($196) + 1|0); //@line 1348 "src/sprites/../puun/gf/../../other/stb_image.h"
     $dest = $197; //@line 1348 "src/sprites/../puun/gf/../../other/stb_image.h"
    }
    break;
   }
   case 17:  {
    $98 = $4; //@line 1344 "src/sprites/../puun/gf/../../other/stb_image.h"
    $99 = (($98) - 1)|0; //@line 1344 "src/sprites/../puun/gf/../../other/stb_image.h"
    $i = $99; //@line 1344 "src/sprites/../puun/gf/../../other/stb_image.h"
    while(1) {
     $100 = $i; //@line 1344 "src/sprites/../puun/gf/../../other/stb_image.h"
     $101 = ($100|0)>=(0); //@line 1344 "src/sprites/../puun/gf/../../other/stb_image.h"
     if (!($101)) {
      break;
     }
     $102 = $src; //@line 1344 "src/sprites/../puun/gf/../../other/stb_image.h"
     $103 = HEAP8[$102>>0]|0; //@line 1344 "src/sprites/../puun/gf/../../other/stb_image.h"
     $104 = $dest; //@line 1344 "src/sprites/../puun/gf/../../other/stb_image.h"
     HEAP8[$104>>0] = $103; //@line 1344 "src/sprites/../puun/gf/../../other/stb_image.h"
     $105 = $i; //@line 1344 "src/sprites/../puun/gf/../../other/stb_image.h"
     $106 = (($105) + -1)|0; //@line 1344 "src/sprites/../puun/gf/../../other/stb_image.h"
     $i = $106; //@line 1344 "src/sprites/../puun/gf/../../other/stb_image.h"
     $107 = $src; //@line 1344 "src/sprites/../puun/gf/../../other/stb_image.h"
     $108 = (($107) + 2|0); //@line 1344 "src/sprites/../puun/gf/../../other/stb_image.h"
     $src = $108; //@line 1344 "src/sprites/../puun/gf/../../other/stb_image.h"
     $109 = $dest; //@line 1344 "src/sprites/../puun/gf/../../other/stb_image.h"
     $110 = (($109) + 1|0); //@line 1344 "src/sprites/../puun/gf/../../other/stb_image.h"
     $dest = $110; //@line 1344 "src/sprites/../puun/gf/../../other/stb_image.h"
    }
    break;
   }
   case 34:  {
    $246 = $4; //@line 1351 "src/sprites/../puun/gf/../../other/stb_image.h"
    $247 = (($246) - 1)|0; //@line 1351 "src/sprites/../puun/gf/../../other/stb_image.h"
    $i = $247; //@line 1351 "src/sprites/../puun/gf/../../other/stb_image.h"
    while(1) {
     $248 = $i; //@line 1351 "src/sprites/../puun/gf/../../other/stb_image.h"
     $249 = ($248|0)>=(0); //@line 1351 "src/sprites/../puun/gf/../../other/stb_image.h"
     if (!($249)) {
      break;
     }
     $250 = $src; //@line 1351 "src/sprites/../puun/gf/../../other/stb_image.h"
     $251 = HEAP8[$250>>0]|0; //@line 1351 "src/sprites/../puun/gf/../../other/stb_image.h"
     $252 = $251&255; //@line 1351 "src/sprites/../puun/gf/../../other/stb_image.h"
     $253 = $src; //@line 1351 "src/sprites/../puun/gf/../../other/stb_image.h"
     $254 = (($253) + 1|0); //@line 1351 "src/sprites/../puun/gf/../../other/stb_image.h"
     $255 = HEAP8[$254>>0]|0; //@line 1351 "src/sprites/../puun/gf/../../other/stb_image.h"
     $256 = $255&255; //@line 1351 "src/sprites/../puun/gf/../../other/stb_image.h"
     $257 = $src; //@line 1351 "src/sprites/../puun/gf/../../other/stb_image.h"
     $258 = (($257) + 2|0); //@line 1351 "src/sprites/../puun/gf/../../other/stb_image.h"
     $259 = HEAP8[$258>>0]|0; //@line 1351 "src/sprites/../puun/gf/../../other/stb_image.h"
     $260 = $259&255; //@line 1351 "src/sprites/../puun/gf/../../other/stb_image.h"
     $261 = (_stbi__compute_y($252,$256,$260)|0); //@line 1351 "src/sprites/../puun/gf/../../other/stb_image.h"
     $262 = $dest; //@line 1351 "src/sprites/../puun/gf/../../other/stb_image.h"
     HEAP8[$262>>0] = $261; //@line 1351 "src/sprites/../puun/gf/../../other/stb_image.h"
     $263 = $src; //@line 1351 "src/sprites/../puun/gf/../../other/stb_image.h"
     $264 = (($263) + 3|0); //@line 1351 "src/sprites/../puun/gf/../../other/stb_image.h"
     $265 = HEAP8[$264>>0]|0; //@line 1351 "src/sprites/../puun/gf/../../other/stb_image.h"
     $266 = $dest; //@line 1351 "src/sprites/../puun/gf/../../other/stb_image.h"
     $267 = (($266) + 1|0); //@line 1351 "src/sprites/../puun/gf/../../other/stb_image.h"
     HEAP8[$267>>0] = $265; //@line 1351 "src/sprites/../puun/gf/../../other/stb_image.h"
     $268 = $i; //@line 1351 "src/sprites/../puun/gf/../../other/stb_image.h"
     $269 = (($268) + -1)|0; //@line 1351 "src/sprites/../puun/gf/../../other/stb_image.h"
     $i = $269; //@line 1351 "src/sprites/../puun/gf/../../other/stb_image.h"
     $270 = $src; //@line 1351 "src/sprites/../puun/gf/../../other/stb_image.h"
     $271 = (($270) + 4|0); //@line 1351 "src/sprites/../puun/gf/../../other/stb_image.h"
     $src = $271; //@line 1351 "src/sprites/../puun/gf/../../other/stb_image.h"
     $272 = $dest; //@line 1351 "src/sprites/../puun/gf/../../other/stb_image.h"
     $273 = (($272) + 2|0); //@line 1351 "src/sprites/../puun/gf/../../other/stb_image.h"
     $dest = $273; //@line 1351 "src/sprites/../puun/gf/../../other/stb_image.h"
    }
    break;
   }
   case 35:  {
    $274 = $4; //@line 1352 "src/sprites/../puun/gf/../../other/stb_image.h"
    $275 = (($274) - 1)|0; //@line 1352 "src/sprites/../puun/gf/../../other/stb_image.h"
    $i = $275; //@line 1352 "src/sprites/../puun/gf/../../other/stb_image.h"
    while(1) {
     $276 = $i; //@line 1352 "src/sprites/../puun/gf/../../other/stb_image.h"
     $277 = ($276|0)>=(0); //@line 1352 "src/sprites/../puun/gf/../../other/stb_image.h"
     if (!($277)) {
      break;
     }
     $278 = $src; //@line 1352 "src/sprites/../puun/gf/../../other/stb_image.h"
     $279 = HEAP8[$278>>0]|0; //@line 1352 "src/sprites/../puun/gf/../../other/stb_image.h"
     $280 = $dest; //@line 1352 "src/sprites/../puun/gf/../../other/stb_image.h"
     HEAP8[$280>>0] = $279; //@line 1352 "src/sprites/../puun/gf/../../other/stb_image.h"
     $281 = $src; //@line 1352 "src/sprites/../puun/gf/../../other/stb_image.h"
     $282 = (($281) + 1|0); //@line 1352 "src/sprites/../puun/gf/../../other/stb_image.h"
     $283 = HEAP8[$282>>0]|0; //@line 1352 "src/sprites/../puun/gf/../../other/stb_image.h"
     $284 = $dest; //@line 1352 "src/sprites/../puun/gf/../../other/stb_image.h"
     $285 = (($284) + 1|0); //@line 1352 "src/sprites/../puun/gf/../../other/stb_image.h"
     HEAP8[$285>>0] = $283; //@line 1352 "src/sprites/../puun/gf/../../other/stb_image.h"
     $286 = $src; //@line 1352 "src/sprites/../puun/gf/../../other/stb_image.h"
     $287 = (($286) + 2|0); //@line 1352 "src/sprites/../puun/gf/../../other/stb_image.h"
     $288 = HEAP8[$287>>0]|0; //@line 1352 "src/sprites/../puun/gf/../../other/stb_image.h"
     $289 = $dest; //@line 1352 "src/sprites/../puun/gf/../../other/stb_image.h"
     $290 = (($289) + 2|0); //@line 1352 "src/sprites/../puun/gf/../../other/stb_image.h"
     HEAP8[$290>>0] = $288; //@line 1352 "src/sprites/../puun/gf/../../other/stb_image.h"
     $291 = $i; //@line 1352 "src/sprites/../puun/gf/../../other/stb_image.h"
     $292 = (($291) + -1)|0; //@line 1352 "src/sprites/../puun/gf/../../other/stb_image.h"
     $i = $292; //@line 1352 "src/sprites/../puun/gf/../../other/stb_image.h"
     $293 = $src; //@line 1352 "src/sprites/../puun/gf/../../other/stb_image.h"
     $294 = (($293) + 4|0); //@line 1352 "src/sprites/../puun/gf/../../other/stb_image.h"
     $src = $294; //@line 1352 "src/sprites/../puun/gf/../../other/stb_image.h"
     $295 = $dest; //@line 1352 "src/sprites/../puun/gf/../../other/stb_image.h"
     $296 = (($295) + 3|0); //@line 1352 "src/sprites/../puun/gf/../../other/stb_image.h"
     $dest = $296; //@line 1352 "src/sprites/../puun/gf/../../other/stb_image.h"
    }
    break;
   }
   case 11:  {
    $62 = $4; //@line 1342 "src/sprites/../puun/gf/../../other/stb_image.h"
    $63 = (($62) - 1)|0; //@line 1342 "src/sprites/../puun/gf/../../other/stb_image.h"
    $i = $63; //@line 1342 "src/sprites/../puun/gf/../../other/stb_image.h"
    while(1) {
     $64 = $i; //@line 1342 "src/sprites/../puun/gf/../../other/stb_image.h"
     $65 = ($64|0)>=(0); //@line 1342 "src/sprites/../puun/gf/../../other/stb_image.h"
     if (!($65)) {
      break;
     }
     $66 = $src; //@line 1342 "src/sprites/../puun/gf/../../other/stb_image.h"
     $67 = HEAP8[$66>>0]|0; //@line 1342 "src/sprites/../puun/gf/../../other/stb_image.h"
     $68 = $dest; //@line 1342 "src/sprites/../puun/gf/../../other/stb_image.h"
     $69 = (($68) + 2|0); //@line 1342 "src/sprites/../puun/gf/../../other/stb_image.h"
     HEAP8[$69>>0] = $67; //@line 1342 "src/sprites/../puun/gf/../../other/stb_image.h"
     $70 = $dest; //@line 1342 "src/sprites/../puun/gf/../../other/stb_image.h"
     $71 = (($70) + 1|0); //@line 1342 "src/sprites/../puun/gf/../../other/stb_image.h"
     HEAP8[$71>>0] = $67; //@line 1342 "src/sprites/../puun/gf/../../other/stb_image.h"
     $72 = $dest; //@line 1342 "src/sprites/../puun/gf/../../other/stb_image.h"
     HEAP8[$72>>0] = $67; //@line 1342 "src/sprites/../puun/gf/../../other/stb_image.h"
     $73 = $i; //@line 1342 "src/sprites/../puun/gf/../../other/stb_image.h"
     $74 = (($73) + -1)|0; //@line 1342 "src/sprites/../puun/gf/../../other/stb_image.h"
     $i = $74; //@line 1342 "src/sprites/../puun/gf/../../other/stb_image.h"
     $75 = $src; //@line 1342 "src/sprites/../puun/gf/../../other/stb_image.h"
     $76 = (($75) + 1|0); //@line 1342 "src/sprites/../puun/gf/../../other/stb_image.h"
     $src = $76; //@line 1342 "src/sprites/../puun/gf/../../other/stb_image.h"
     $77 = $dest; //@line 1342 "src/sprites/../puun/gf/../../other/stb_image.h"
     $78 = (($77) + 3|0); //@line 1342 "src/sprites/../puun/gf/../../other/stb_image.h"
     $dest = $78; //@line 1342 "src/sprites/../puun/gf/../../other/stb_image.h"
    }
    break;
   }
   default: {
    label = 71;
    break L15;
   }
   }
  } while(0);
  $297 = $j; //@line 1332 "src/sprites/../puun/gf/../../other/stb_image.h"
  $298 = (($297) + 1)|0; //@line 1332 "src/sprites/../puun/gf/../../other/stb_image.h"
  $j = $298; //@line 1332 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 if ((label|0) == 71) {
  ___assert_fail((9824|0),(7560|0),1353,(9800|0)); //@line 1353 "src/sprites/../puun/gf/../../other/stb_image.h"
  // unreachable; //@line 1353 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $299 = $1; //@line 1358 "src/sprites/../puun/gf/../../other/stb_image.h"
 _free($299); //@line 1358 "src/sprites/../puun/gf/../../other/stb_image.h"
 $300 = $good; //@line 1359 "src/sprites/../puun/gf/../../other/stb_image.h"
 $0 = $300; //@line 1359 "src/sprites/../puun/gf/../../other/stb_image.h"
 $301 = $0; //@line 1360 "src/sprites/../puun/gf/../../other/stb_image.h"
 STACKTOP = sp;return ($301|0); //@line 1360 "src/sprites/../puun/gf/../../other/stb_image.h"
}
function _stbi__compute_y($r,$g,$b) {
 $r = $r|0;
 $g = $g|0;
 $b = $b|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $r;
 $1 = $g;
 $2 = $b;
 $3 = $0; //@line 1315 "src/sprites/../puun/gf/../../other/stb_image.h"
 $4 = ($3*77)|0; //@line 1315 "src/sprites/../puun/gf/../../other/stb_image.h"
 $5 = $1; //@line 1315 "src/sprites/../puun/gf/../../other/stb_image.h"
 $6 = ($5*150)|0; //@line 1315 "src/sprites/../puun/gf/../../other/stb_image.h"
 $7 = (($4) + ($6))|0; //@line 1315 "src/sprites/../puun/gf/../../other/stb_image.h"
 $8 = $2; //@line 1315 "src/sprites/../puun/gf/../../other/stb_image.h"
 $9 = ($8*29)|0; //@line 1315 "src/sprites/../puun/gf/../../other/stb_image.h"
 $10 = (($7) + ($9))|0; //@line 1315 "src/sprites/../puun/gf/../../other/stb_image.h"
 $11 = $10 >> 8; //@line 1315 "src/sprites/../puun/gf/../../other/stb_image.h"
 $12 = $11&255; //@line 1315 "src/sprites/../puun/gf/../../other/stb_image.h"
 STACKTOP = sp;return ($12|0); //@line 1315 "src/sprites/../puun/gf/../../other/stb_image.h"
}
function _stbi__tga_test($s) {
 $s = $s|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $res = 0, $sz = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $s;
 $2 = $1; //@line 4824 "src/sprites/../puun/gf/../../other/stb_image.h"
 (_stbi__get8($2)|0); //@line 4824 "src/sprites/../puun/gf/../../other/stb_image.h"
 $3 = $1; //@line 4825 "src/sprites/../puun/gf/../../other/stb_image.h"
 $4 = (_stbi__get8($3)|0); //@line 4825 "src/sprites/../puun/gf/../../other/stb_image.h"
 $5 = $4&255; //@line 4825 "src/sprites/../puun/gf/../../other/stb_image.h"
 $sz = $5; //@line 4825 "src/sprites/../puun/gf/../../other/stb_image.h"
 $6 = $sz; //@line 4826 "src/sprites/../puun/gf/../../other/stb_image.h"
 $7 = ($6|0)>(1); //@line 4826 "src/sprites/../puun/gf/../../other/stb_image.h"
 if ($7) {
  $0 = 0; //@line 4826 "src/sprites/../puun/gf/../../other/stb_image.h"
  $47 = $0; //@line 4843 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($47|0); //@line 4843 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $8 = $1; //@line 4827 "src/sprites/../puun/gf/../../other/stb_image.h"
 $9 = (_stbi__get8($8)|0); //@line 4827 "src/sprites/../puun/gf/../../other/stb_image.h"
 $10 = $9&255; //@line 4827 "src/sprites/../puun/gf/../../other/stb_image.h"
 $sz = $10; //@line 4827 "src/sprites/../puun/gf/../../other/stb_image.h"
 $11 = $sz; //@line 4828 "src/sprites/../puun/gf/../../other/stb_image.h"
 $12 = ($11|0)!=(1); //@line 4828 "src/sprites/../puun/gf/../../other/stb_image.h"
 if ($12) {
  $13 = $sz; //@line 4828 "src/sprites/../puun/gf/../../other/stb_image.h"
  $14 = ($13|0)!=(2); //@line 4828 "src/sprites/../puun/gf/../../other/stb_image.h"
  if ($14) {
   $15 = $sz; //@line 4828 "src/sprites/../puun/gf/../../other/stb_image.h"
   $16 = ($15|0)!=(3); //@line 4828 "src/sprites/../puun/gf/../../other/stb_image.h"
   if ($16) {
    $17 = $sz; //@line 4828 "src/sprites/../puun/gf/../../other/stb_image.h"
    $18 = ($17|0)!=(9); //@line 4828 "src/sprites/../puun/gf/../../other/stb_image.h"
    if ($18) {
     $19 = $sz; //@line 4828 "src/sprites/../puun/gf/../../other/stb_image.h"
     $20 = ($19|0)!=(10); //@line 4828 "src/sprites/../puun/gf/../../other/stb_image.h"
     if ($20) {
      $21 = $sz; //@line 4828 "src/sprites/../puun/gf/../../other/stb_image.h"
      $22 = ($21|0)!=(11); //@line 4828 "src/sprites/../puun/gf/../../other/stb_image.h"
      if ($22) {
       $0 = 0; //@line 4828 "src/sprites/../puun/gf/../../other/stb_image.h"
       $47 = $0; //@line 4843 "src/sprites/../puun/gf/../../other/stb_image.h"
       STACKTOP = sp;return ($47|0); //@line 4843 "src/sprites/../puun/gf/../../other/stb_image.h"
      }
     }
    }
   }
  }
 }
 $23 = $1; //@line 4829 "src/sprites/../puun/gf/../../other/stb_image.h"
 (_stbi__get16be($23)|0); //@line 4829 "src/sprites/../puun/gf/../../other/stb_image.h"
 $24 = $1; //@line 4830 "src/sprites/../puun/gf/../../other/stb_image.h"
 (_stbi__get16be($24)|0); //@line 4830 "src/sprites/../puun/gf/../../other/stb_image.h"
 $25 = $1; //@line 4831 "src/sprites/../puun/gf/../../other/stb_image.h"
 (_stbi__get8($25)|0); //@line 4831 "src/sprites/../puun/gf/../../other/stb_image.h"
 $26 = $1; //@line 4832 "src/sprites/../puun/gf/../../other/stb_image.h"
 (_stbi__get16be($26)|0); //@line 4832 "src/sprites/../puun/gf/../../other/stb_image.h"
 $27 = $1; //@line 4833 "src/sprites/../puun/gf/../../other/stb_image.h"
 (_stbi__get16be($27)|0); //@line 4833 "src/sprites/../puun/gf/../../other/stb_image.h"
 $28 = $1; //@line 4834 "src/sprites/../puun/gf/../../other/stb_image.h"
 $29 = (_stbi__get16be($28)|0); //@line 4834 "src/sprites/../puun/gf/../../other/stb_image.h"
 $30 = ($29|0)<(1); //@line 4834 "src/sprites/../puun/gf/../../other/stb_image.h"
 if ($30) {
  $0 = 0; //@line 4834 "src/sprites/../puun/gf/../../other/stb_image.h"
  $47 = $0; //@line 4843 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($47|0); //@line 4843 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $31 = $1; //@line 4835 "src/sprites/../puun/gf/../../other/stb_image.h"
 $32 = (_stbi__get16be($31)|0); //@line 4835 "src/sprites/../puun/gf/../../other/stb_image.h"
 $33 = ($32|0)<(1); //@line 4835 "src/sprites/../puun/gf/../../other/stb_image.h"
 if ($33) {
  $0 = 0; //@line 4835 "src/sprites/../puun/gf/../../other/stb_image.h"
  $47 = $0; //@line 4843 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($47|0); //@line 4843 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $34 = $1; //@line 4836 "src/sprites/../puun/gf/../../other/stb_image.h"
 $35 = (_stbi__get8($34)|0); //@line 4836 "src/sprites/../puun/gf/../../other/stb_image.h"
 $36 = $35&255; //@line 4836 "src/sprites/../puun/gf/../../other/stb_image.h"
 $sz = $36; //@line 4836 "src/sprites/../puun/gf/../../other/stb_image.h"
 $37 = $sz; //@line 4837 "src/sprites/../puun/gf/../../other/stb_image.h"
 $38 = ($37|0)!=(8); //@line 4837 "src/sprites/../puun/gf/../../other/stb_image.h"
 if ($38) {
  $39 = $sz; //@line 4837 "src/sprites/../puun/gf/../../other/stb_image.h"
  $40 = ($39|0)!=(16); //@line 4837 "src/sprites/../puun/gf/../../other/stb_image.h"
  if ($40) {
   $41 = $sz; //@line 4837 "src/sprites/../puun/gf/../../other/stb_image.h"
   $42 = ($41|0)!=(24); //@line 4837 "src/sprites/../puun/gf/../../other/stb_image.h"
   if ($42) {
    $43 = $sz; //@line 4837 "src/sprites/../puun/gf/../../other/stb_image.h"
    $44 = ($43|0)!=(32); //@line 4837 "src/sprites/../puun/gf/../../other/stb_image.h"
    if ($44) {
     $res = 0; //@line 4838 "src/sprites/../puun/gf/../../other/stb_image.h"
    } else {
     label = 19;
    }
   } else {
    label = 19;
   }
  } else {
   label = 19;
  }
 } else {
  label = 19;
 }
 if ((label|0) == 19) {
  $res = 1; //@line 4840 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $45 = $1; //@line 4841 "src/sprites/../puun/gf/../../other/stb_image.h"
 _stbi__rewind($45); //@line 4841 "src/sprites/../puun/gf/../../other/stb_image.h"
 $46 = $res; //@line 4842 "src/sprites/../puun/gf/../../other/stb_image.h"
 $0 = $46; //@line 4842 "src/sprites/../puun/gf/../../other/stb_image.h"
 $47 = $0; //@line 4843 "src/sprites/../puun/gf/../../other/stb_image.h"
 STACKTOP = sp;return ($47|0); //@line 4843 "src/sprites/../puun/gf/../../other/stb_image.h"
}
function _stbi__hdr_to_ldr($data,$x,$y,$comp) {
 $data = $data|0;
 $x = $x|0;
 $y = $y|0;
 $comp = $comp|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0.0, $39 = 0.0, $4 = 0, $40 = 0.0, $41 = 0.0, $42 = 0.0, $43 = 0.0, $44 = 0.0;
 var $45 = 0.0, $46 = 0.0, $47 = 0.0, $48 = 0.0, $49 = 0, $5 = 0, $50 = 0.0, $51 = 0, $52 = 0.0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0.0, $75 = 0.0, $76 = 0.0, $77 = 0.0, $78 = 0, $79 = 0.0, $8 = 0, $80 = 0;
 var $81 = 0.0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $i = 0, $k = 0, $n = 0, $output = 0;
 var $z = 0.0, $z1 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $data;
 $2 = $x;
 $3 = $y;
 $4 = $comp;
 $5 = $2; //@line 1386 "src/sprites/../puun/gf/../../other/stb_image.h"
 $6 = $3; //@line 1386 "src/sprites/../puun/gf/../../other/stb_image.h"
 $7 = Math_imul($5, $6)|0; //@line 1386 "src/sprites/../puun/gf/../../other/stb_image.h"
 $8 = $4; //@line 1386 "src/sprites/../puun/gf/../../other/stb_image.h"
 $9 = Math_imul($7, $8)|0; //@line 1386 "src/sprites/../puun/gf/../../other/stb_image.h"
 $10 = (_stbi__malloc($9)|0); //@line 1386 "src/sprites/../puun/gf/../../other/stb_image.h"
 $output = $10; //@line 1386 "src/sprites/../puun/gf/../../other/stb_image.h"
 $11 = $output; //@line 1387 "src/sprites/../puun/gf/../../other/stb_image.h"
 $12 = ($11|0)==(0|0); //@line 1387 "src/sprites/../puun/gf/../../other/stb_image.h"
 if ($12) {
  $13 = $1; //@line 1387 "src/sprites/../puun/gf/../../other/stb_image.h"
  _free($13); //@line 1387 "src/sprites/../puun/gf/../../other/stb_image.h"
  $14 = (_stbi__err(7464)|0); //@line 1387 "src/sprites/../puun/gf/../../other/stb_image.h"
  $15 = ($14|0)!=(0); //@line 1387 "src/sprites/../puun/gf/../../other/stb_image.h"
  $16 = $15 ? 0 : 0; //@line 1387 "src/sprites/../puun/gf/../../other/stb_image.h"
  $0 = $16; //@line 1387 "src/sprites/../puun/gf/../../other/stb_image.h"
  $95 = $0; //@line 1406 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($95|0); //@line 1406 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $17 = $4; //@line 1389 "src/sprites/../puun/gf/../../other/stb_image.h"
 $18 = $17 & 1; //@line 1389 "src/sprites/../puun/gf/../../other/stb_image.h"
 $19 = ($18|0)!=(0); //@line 1389 "src/sprites/../puun/gf/../../other/stb_image.h"
 if ($19) {
  $20 = $4; //@line 1389 "src/sprites/../puun/gf/../../other/stb_image.h"
  $n = $20; //@line 1389 "src/sprites/../puun/gf/../../other/stb_image.h"
 } else {
  $21 = $4; //@line 1389 "src/sprites/../puun/gf/../../other/stb_image.h"
  $22 = (($21) - 1)|0; //@line 1389 "src/sprites/../puun/gf/../../other/stb_image.h"
  $n = $22; //@line 1389 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $i = 0; //@line 1390 "src/sprites/../puun/gf/../../other/stb_image.h"
 while(1) {
  $23 = $i; //@line 1390 "src/sprites/../puun/gf/../../other/stb_image.h"
  $24 = $2; //@line 1390 "src/sprites/../puun/gf/../../other/stb_image.h"
  $25 = $3; //@line 1390 "src/sprites/../puun/gf/../../other/stb_image.h"
  $26 = Math_imul($24, $25)|0; //@line 1390 "src/sprites/../puun/gf/../../other/stb_image.h"
  $27 = ($23|0)<($26|0); //@line 1390 "src/sprites/../puun/gf/../../other/stb_image.h"
  if (!($27)) {
   break;
  }
  $k = 0; //@line 1391 "src/sprites/../puun/gf/../../other/stb_image.h"
  while(1) {
   $28 = $k; //@line 1391 "src/sprites/../puun/gf/../../other/stb_image.h"
   $29 = $n; //@line 1391 "src/sprites/../puun/gf/../../other/stb_image.h"
   $30 = ($28|0)<($29|0); //@line 1391 "src/sprites/../puun/gf/../../other/stb_image.h"
   if (!($30)) {
    break;
   }
   $31 = $i; //@line 1392 "src/sprites/../puun/gf/../../other/stb_image.h"
   $32 = $4; //@line 1392 "src/sprites/../puun/gf/../../other/stb_image.h"
   $33 = Math_imul($31, $32)|0; //@line 1392 "src/sprites/../puun/gf/../../other/stb_image.h"
   $34 = $k; //@line 1392 "src/sprites/../puun/gf/../../other/stb_image.h"
   $35 = (($33) + ($34))|0; //@line 1392 "src/sprites/../puun/gf/../../other/stb_image.h"
   $36 = $1; //@line 1392 "src/sprites/../puun/gf/../../other/stb_image.h"
   $37 = (($36) + ($35<<2)|0); //@line 1392 "src/sprites/../puun/gf/../../other/stb_image.h"
   $38 = +HEAPF32[$37>>2]; //@line 1392 "src/sprites/../puun/gf/../../other/stb_image.h"
   $39 = +HEAPF32[216>>2]; //@line 1392 "src/sprites/../puun/gf/../../other/stb_image.h"
   $40 = $38 * $39; //@line 1392 "src/sprites/../puun/gf/../../other/stb_image.h"
   $41 = $40; //@line 1392 "src/sprites/../puun/gf/../../other/stb_image.h"
   $42 = +HEAPF32[208>>2]; //@line 1392 "src/sprites/../puun/gf/../../other/stb_image.h"
   $43 = $42; //@line 1392 "src/sprites/../puun/gf/../../other/stb_image.h"
   $44 = (+Math_pow((+$41),(+$43))); //@line 1392 "src/sprites/../puun/gf/../../other/stb_image.h"
   $45 = $44; //@line 1392 "src/sprites/../puun/gf/../../other/stb_image.h"
   $46 = $45 * 255.0; //@line 1392 "src/sprites/../puun/gf/../../other/stb_image.h"
   $47 = $46 + 0.5; //@line 1392 "src/sprites/../puun/gf/../../other/stb_image.h"
   $z = $47; //@line 1392 "src/sprites/../puun/gf/../../other/stb_image.h"
   $48 = $z; //@line 1393 "src/sprites/../puun/gf/../../other/stb_image.h"
   $49 = $48 < 0.0; //@line 1393 "src/sprites/../puun/gf/../../other/stb_image.h"
   if ($49) {
    $z = 0.0; //@line 1393 "src/sprites/../puun/gf/../../other/stb_image.h"
   }
   $50 = $z; //@line 1394 "src/sprites/../puun/gf/../../other/stb_image.h"
   $51 = $50 > 255.0; //@line 1394 "src/sprites/../puun/gf/../../other/stb_image.h"
   if ($51) {
    $z = 255.0; //@line 1394 "src/sprites/../puun/gf/../../other/stb_image.h"
   }
   $52 = $z; //@line 1395 "src/sprites/../puun/gf/../../other/stb_image.h"
   $53 = (~~(($52))); //@line 1395 "src/sprites/../puun/gf/../../other/stb_image.h"
   $54 = $53&255; //@line 1395 "src/sprites/../puun/gf/../../other/stb_image.h"
   $55 = $i; //@line 1395 "src/sprites/../puun/gf/../../other/stb_image.h"
   $56 = $4; //@line 1395 "src/sprites/../puun/gf/../../other/stb_image.h"
   $57 = Math_imul($55, $56)|0; //@line 1395 "src/sprites/../puun/gf/../../other/stb_image.h"
   $58 = $k; //@line 1395 "src/sprites/../puun/gf/../../other/stb_image.h"
   $59 = (($57) + ($58))|0; //@line 1395 "src/sprites/../puun/gf/../../other/stb_image.h"
   $60 = $output; //@line 1395 "src/sprites/../puun/gf/../../other/stb_image.h"
   $61 = (($60) + ($59)|0); //@line 1395 "src/sprites/../puun/gf/../../other/stb_image.h"
   HEAP8[$61>>0] = $54; //@line 1395 "src/sprites/../puun/gf/../../other/stb_image.h"
   $62 = $k; //@line 1391 "src/sprites/../puun/gf/../../other/stb_image.h"
   $63 = (($62) + 1)|0; //@line 1391 "src/sprites/../puun/gf/../../other/stb_image.h"
   $k = $63; //@line 1391 "src/sprites/../puun/gf/../../other/stb_image.h"
  }
  $64 = $k; //@line 1397 "src/sprites/../puun/gf/../../other/stb_image.h"
  $65 = $4; //@line 1397 "src/sprites/../puun/gf/../../other/stb_image.h"
  $66 = ($64|0)<($65|0); //@line 1397 "src/sprites/../puun/gf/../../other/stb_image.h"
  if ($66) {
   $67 = $i; //@line 1398 "src/sprites/../puun/gf/../../other/stb_image.h"
   $68 = $4; //@line 1398 "src/sprites/../puun/gf/../../other/stb_image.h"
   $69 = Math_imul($67, $68)|0; //@line 1398 "src/sprites/../puun/gf/../../other/stb_image.h"
   $70 = $k; //@line 1398 "src/sprites/../puun/gf/../../other/stb_image.h"
   $71 = (($69) + ($70))|0; //@line 1398 "src/sprites/../puun/gf/../../other/stb_image.h"
   $72 = $1; //@line 1398 "src/sprites/../puun/gf/../../other/stb_image.h"
   $73 = (($72) + ($71<<2)|0); //@line 1398 "src/sprites/../puun/gf/../../other/stb_image.h"
   $74 = +HEAPF32[$73>>2]; //@line 1398 "src/sprites/../puun/gf/../../other/stb_image.h"
   $75 = $74 * 255.0; //@line 1398 "src/sprites/../puun/gf/../../other/stb_image.h"
   $76 = $75 + 0.5; //@line 1398 "src/sprites/../puun/gf/../../other/stb_image.h"
   $z1 = $76; //@line 1398 "src/sprites/../puun/gf/../../other/stb_image.h"
   $77 = $z1; //@line 1399 "src/sprites/../puun/gf/../../other/stb_image.h"
   $78 = $77 < 0.0; //@line 1399 "src/sprites/../puun/gf/../../other/stb_image.h"
   if ($78) {
    $z1 = 0.0; //@line 1399 "src/sprites/../puun/gf/../../other/stb_image.h"
   }
   $79 = $z1; //@line 1400 "src/sprites/../puun/gf/../../other/stb_image.h"
   $80 = $79 > 255.0; //@line 1400 "src/sprites/../puun/gf/../../other/stb_image.h"
   if ($80) {
    $z1 = 255.0; //@line 1400 "src/sprites/../puun/gf/../../other/stb_image.h"
   }
   $81 = $z1; //@line 1401 "src/sprites/../puun/gf/../../other/stb_image.h"
   $82 = (~~(($81))); //@line 1401 "src/sprites/../puun/gf/../../other/stb_image.h"
   $83 = $82&255; //@line 1401 "src/sprites/../puun/gf/../../other/stb_image.h"
   $84 = $i; //@line 1401 "src/sprites/../puun/gf/../../other/stb_image.h"
   $85 = $4; //@line 1401 "src/sprites/../puun/gf/../../other/stb_image.h"
   $86 = Math_imul($84, $85)|0; //@line 1401 "src/sprites/../puun/gf/../../other/stb_image.h"
   $87 = $k; //@line 1401 "src/sprites/../puun/gf/../../other/stb_image.h"
   $88 = (($86) + ($87))|0; //@line 1401 "src/sprites/../puun/gf/../../other/stb_image.h"
   $89 = $output; //@line 1401 "src/sprites/../puun/gf/../../other/stb_image.h"
   $90 = (($89) + ($88)|0); //@line 1401 "src/sprites/../puun/gf/../../other/stb_image.h"
   HEAP8[$90>>0] = $83; //@line 1401 "src/sprites/../puun/gf/../../other/stb_image.h"
  }
  $91 = $i; //@line 1390 "src/sprites/../puun/gf/../../other/stb_image.h"
  $92 = (($91) + 1)|0; //@line 1390 "src/sprites/../puun/gf/../../other/stb_image.h"
  $i = $92; //@line 1390 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $93 = $1; //@line 1404 "src/sprites/../puun/gf/../../other/stb_image.h"
 _free($93); //@line 1404 "src/sprites/../puun/gf/../../other/stb_image.h"
 $94 = $output; //@line 1405 "src/sprites/../puun/gf/../../other/stb_image.h"
 $0 = $94; //@line 1405 "src/sprites/../puun/gf/../../other/stb_image.h"
 $95 = $0; //@line 1406 "src/sprites/../puun/gf/../../other/stb_image.h"
 STACKTOP = sp;return ($95|0); //@line 1406 "src/sprites/../puun/gf/../../other/stb_image.h"
}
function _stbi__pnm_load($s,$x,$y,$comp,$req_comp) {
 $s = $s|0;
 $x = $x|0;
 $y = $y|0;
 $comp = $comp|0;
 $req_comp = $req_comp|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $8 = 0, $9 = 0, $out = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $s;
 $2 = $x;
 $3 = $y;
 $4 = $comp;
 $5 = $req_comp;
 $6 = $1; //@line 6132 "src/sprites/../puun/gf/../../other/stb_image.h"
 $7 = $1; //@line 6132 "src/sprites/../puun/gf/../../other/stb_image.h"
 $8 = $1; //@line 6132 "src/sprites/../puun/gf/../../other/stb_image.h"
 $9 = (($8) + 4|0); //@line 6132 "src/sprites/../puun/gf/../../other/stb_image.h"
 $10 = $1; //@line 6132 "src/sprites/../puun/gf/../../other/stb_image.h"
 $11 = (($10) + 8|0); //@line 6132 "src/sprites/../puun/gf/../../other/stb_image.h"
 $12 = (_stbi__pnm_info($6,$7,$9,$11)|0); //@line 6132 "src/sprites/../puun/gf/../../other/stb_image.h"
 $13 = ($12|0)!=(0); //@line 6132 "src/sprites/../puun/gf/../../other/stb_image.h"
 if (!($13)) {
  $0 = 0; //@line 6133 "src/sprites/../puun/gf/../../other/stb_image.h"
  $75 = $0; //@line 6147 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($75|0); //@line 6147 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $14 = $1; //@line 6134 "src/sprites/../puun/gf/../../other/stb_image.h"
 $15 = HEAP32[$14>>2]|0; //@line 6134 "src/sprites/../puun/gf/../../other/stb_image.h"
 $16 = $2; //@line 6134 "src/sprites/../puun/gf/../../other/stb_image.h"
 HEAP32[$16>>2] = $15; //@line 6134 "src/sprites/../puun/gf/../../other/stb_image.h"
 $17 = $1; //@line 6135 "src/sprites/../puun/gf/../../other/stb_image.h"
 $18 = (($17) + 4|0); //@line 6135 "src/sprites/../puun/gf/../../other/stb_image.h"
 $19 = HEAP32[$18>>2]|0; //@line 6135 "src/sprites/../puun/gf/../../other/stb_image.h"
 $20 = $3; //@line 6135 "src/sprites/../puun/gf/../../other/stb_image.h"
 HEAP32[$20>>2] = $19; //@line 6135 "src/sprites/../puun/gf/../../other/stb_image.h"
 $21 = $1; //@line 6136 "src/sprites/../puun/gf/../../other/stb_image.h"
 $22 = (($21) + 8|0); //@line 6136 "src/sprites/../puun/gf/../../other/stb_image.h"
 $23 = HEAP32[$22>>2]|0; //@line 6136 "src/sprites/../puun/gf/../../other/stb_image.h"
 $24 = $4; //@line 6136 "src/sprites/../puun/gf/../../other/stb_image.h"
 HEAP32[$24>>2] = $23; //@line 6136 "src/sprites/../puun/gf/../../other/stb_image.h"
 $25 = $1; //@line 6138 "src/sprites/../puun/gf/../../other/stb_image.h"
 $26 = (($25) + 8|0); //@line 6138 "src/sprites/../puun/gf/../../other/stb_image.h"
 $27 = HEAP32[$26>>2]|0; //@line 6138 "src/sprites/../puun/gf/../../other/stb_image.h"
 $28 = $1; //@line 6138 "src/sprites/../puun/gf/../../other/stb_image.h"
 $29 = HEAP32[$28>>2]|0; //@line 6138 "src/sprites/../puun/gf/../../other/stb_image.h"
 $30 = Math_imul($27, $29)|0; //@line 6138 "src/sprites/../puun/gf/../../other/stb_image.h"
 $31 = $1; //@line 6138 "src/sprites/../puun/gf/../../other/stb_image.h"
 $32 = (($31) + 4|0); //@line 6138 "src/sprites/../puun/gf/../../other/stb_image.h"
 $33 = HEAP32[$32>>2]|0; //@line 6138 "src/sprites/../puun/gf/../../other/stb_image.h"
 $34 = Math_imul($30, $33)|0; //@line 6138 "src/sprites/../puun/gf/../../other/stb_image.h"
 $35 = (_stbi__malloc($34)|0); //@line 6138 "src/sprites/../puun/gf/../../other/stb_image.h"
 $out = $35; //@line 6138 "src/sprites/../puun/gf/../../other/stb_image.h"
 $36 = $out; //@line 6139 "src/sprites/../puun/gf/../../other/stb_image.h"
 $37 = ($36|0)!=(0|0); //@line 6139 "src/sprites/../puun/gf/../../other/stb_image.h"
 if (!($37)) {
  $38 = (_stbi__err(7464)|0); //@line 6139 "src/sprites/../puun/gf/../../other/stb_image.h"
  $39 = ($38|0)!=(0); //@line 6139 "src/sprites/../puun/gf/../../other/stb_image.h"
  $40 = $39 ? 0 : 0; //@line 6139 "src/sprites/../puun/gf/../../other/stb_image.h"
  $0 = $40; //@line 6139 "src/sprites/../puun/gf/../../other/stb_image.h"
  $75 = $0; //@line 6147 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($75|0); //@line 6147 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $41 = $1; //@line 6140 "src/sprites/../puun/gf/../../other/stb_image.h"
 $42 = $out; //@line 6140 "src/sprites/../puun/gf/../../other/stb_image.h"
 $43 = $1; //@line 6140 "src/sprites/../puun/gf/../../other/stb_image.h"
 $44 = (($43) + 8|0); //@line 6140 "src/sprites/../puun/gf/../../other/stb_image.h"
 $45 = HEAP32[$44>>2]|0; //@line 6140 "src/sprites/../puun/gf/../../other/stb_image.h"
 $46 = $1; //@line 6140 "src/sprites/../puun/gf/../../other/stb_image.h"
 $47 = HEAP32[$46>>2]|0; //@line 6140 "src/sprites/../puun/gf/../../other/stb_image.h"
 $48 = Math_imul($45, $47)|0; //@line 6140 "src/sprites/../puun/gf/../../other/stb_image.h"
 $49 = $1; //@line 6140 "src/sprites/../puun/gf/../../other/stb_image.h"
 $50 = (($49) + 4|0); //@line 6140 "src/sprites/../puun/gf/../../other/stb_image.h"
 $51 = HEAP32[$50>>2]|0; //@line 6140 "src/sprites/../puun/gf/../../other/stb_image.h"
 $52 = Math_imul($48, $51)|0; //@line 6140 "src/sprites/../puun/gf/../../other/stb_image.h"
 (_stbi__getn($41,$42,$52)|0); //@line 6140 "src/sprites/../puun/gf/../../other/stb_image.h"
 $53 = $5; //@line 6142 "src/sprites/../puun/gf/../../other/stb_image.h"
 $54 = ($53|0)!=(0); //@line 6142 "src/sprites/../puun/gf/../../other/stb_image.h"
 do {
  if ($54) {
   $55 = $5; //@line 6142 "src/sprites/../puun/gf/../../other/stb_image.h"
   $56 = $1; //@line 6142 "src/sprites/../puun/gf/../../other/stb_image.h"
   $57 = (($56) + 8|0); //@line 6142 "src/sprites/../puun/gf/../../other/stb_image.h"
   $58 = HEAP32[$57>>2]|0; //@line 6142 "src/sprites/../puun/gf/../../other/stb_image.h"
   $59 = ($55|0)!=($58|0); //@line 6142 "src/sprites/../puun/gf/../../other/stb_image.h"
   if ($59) {
    $60 = $out; //@line 6143 "src/sprites/../puun/gf/../../other/stb_image.h"
    $61 = $1; //@line 6143 "src/sprites/../puun/gf/../../other/stb_image.h"
    $62 = (($61) + 8|0); //@line 6143 "src/sprites/../puun/gf/../../other/stb_image.h"
    $63 = HEAP32[$62>>2]|0; //@line 6143 "src/sprites/../puun/gf/../../other/stb_image.h"
    $64 = $5; //@line 6143 "src/sprites/../puun/gf/../../other/stb_image.h"
    $65 = $1; //@line 6143 "src/sprites/../puun/gf/../../other/stb_image.h"
    $66 = HEAP32[$65>>2]|0; //@line 6143 "src/sprites/../puun/gf/../../other/stb_image.h"
    $67 = $1; //@line 6143 "src/sprites/../puun/gf/../../other/stb_image.h"
    $68 = (($67) + 4|0); //@line 6143 "src/sprites/../puun/gf/../../other/stb_image.h"
    $69 = HEAP32[$68>>2]|0; //@line 6143 "src/sprites/../puun/gf/../../other/stb_image.h"
    $70 = (_stbi__convert_format($60,$63,$64,$66,$69)|0); //@line 6143 "src/sprites/../puun/gf/../../other/stb_image.h"
    $out = $70; //@line 6143 "src/sprites/../puun/gf/../../other/stb_image.h"
    $71 = $out; //@line 6144 "src/sprites/../puun/gf/../../other/stb_image.h"
    $72 = ($71|0)==(0|0); //@line 6144 "src/sprites/../puun/gf/../../other/stb_image.h"
    if (!($72)) {
     break;
    }
    $73 = $out; //@line 6144 "src/sprites/../puun/gf/../../other/stb_image.h"
    $0 = $73; //@line 6144 "src/sprites/../puun/gf/../../other/stb_image.h"
    $75 = $0; //@line 6147 "src/sprites/../puun/gf/../../other/stb_image.h"
    STACKTOP = sp;return ($75|0); //@line 6147 "src/sprites/../puun/gf/../../other/stb_image.h"
   }
  }
 } while(0);
 $74 = $out; //@line 6146 "src/sprites/../puun/gf/../../other/stb_image.h"
 $0 = $74; //@line 6146 "src/sprites/../puun/gf/../../other/stb_image.h"
 $75 = $0; //@line 6147 "src/sprites/../puun/gf/../../other/stb_image.h"
 STACKTOP = sp;return ($75|0); //@line 6147 "src/sprites/../puun/gf/../../other/stb_image.h"
}
function _stbi__pnm_test($s) {
 $s = $s|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $p = 0, $t = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $s;
 $2 = $1; //@line 6120 "src/sprites/../puun/gf/../../other/stb_image.h"
 $3 = (_stbi__get8($2)|0); //@line 6120 "src/sprites/../puun/gf/../../other/stb_image.h"
 $p = $3; //@line 6120 "src/sprites/../puun/gf/../../other/stb_image.h"
 $4 = $1; //@line 6121 "src/sprites/../puun/gf/../../other/stb_image.h"
 $5 = (_stbi__get8($4)|0); //@line 6121 "src/sprites/../puun/gf/../../other/stb_image.h"
 $t = $5; //@line 6121 "src/sprites/../puun/gf/../../other/stb_image.h"
 $6 = $p; //@line 6122 "src/sprites/../puun/gf/../../other/stb_image.h"
 $7 = $6 << 24 >> 24; //@line 6122 "src/sprites/../puun/gf/../../other/stb_image.h"
 $8 = ($7|0)!=(80); //@line 6122 "src/sprites/../puun/gf/../../other/stb_image.h"
 do {
  if (!($8)) {
   $9 = $t; //@line 6122 "src/sprites/../puun/gf/../../other/stb_image.h"
   $10 = $9 << 24 >> 24; //@line 6122 "src/sprites/../puun/gf/../../other/stb_image.h"
   $11 = ($10|0)!=(53); //@line 6122 "src/sprites/../puun/gf/../../other/stb_image.h"
   if ($11) {
    $12 = $t; //@line 6122 "src/sprites/../puun/gf/../../other/stb_image.h"
    $13 = $12 << 24 >> 24; //@line 6122 "src/sprites/../puun/gf/../../other/stb_image.h"
    $14 = ($13|0)!=(54); //@line 6122 "src/sprites/../puun/gf/../../other/stb_image.h"
    if ($14) {
     break;
    }
   }
   $0 = 1; //@line 6126 "src/sprites/../puun/gf/../../other/stb_image.h"
   $16 = $0; //@line 6127 "src/sprites/../puun/gf/../../other/stb_image.h"
   STACKTOP = sp;return ($16|0); //@line 6127 "src/sprites/../puun/gf/../../other/stb_image.h"
  }
 } while(0);
 $15 = $1; //@line 6123 "src/sprites/../puun/gf/../../other/stb_image.h"
 _stbi__rewind($15); //@line 6123 "src/sprites/../puun/gf/../../other/stb_image.h"
 $0 = 0; //@line 6124 "src/sprites/../puun/gf/../../other/stb_image.h"
 $16 = $0; //@line 6127 "src/sprites/../puun/gf/../../other/stb_image.h"
 STACKTOP = sp;return ($16|0); //@line 6127 "src/sprites/../puun/gf/../../other/stb_image.h"
}
function _stbi__pic_load($s,$px,$py,$comp,$req_comp) {
 $s = $s|0;
 $px = $px|0;
 $py = $py|0;
 $comp = $comp|0;
 $req_comp = $req_comp|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $7 = 0, $8 = 0, $9 = 0, $i = 0, $result = 0, $x = 0, $y = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $s;
 $2 = $px;
 $3 = $py;
 $4 = $comp;
 $5 = $req_comp;
 $i = 0; //@line 5388 "src/sprites/../puun/gf/../../other/stb_image.h"
 while(1) {
  $6 = $i; //@line 5388 "src/sprites/../puun/gf/../../other/stb_image.h"
  $7 = ($6|0)<(92); //@line 5388 "src/sprites/../puun/gf/../../other/stb_image.h"
  if (!($7)) {
   break;
  }
  $8 = $1; //@line 5389 "src/sprites/../puun/gf/../../other/stb_image.h"
  (_stbi__get8($8)|0); //@line 5389 "src/sprites/../puun/gf/../../other/stb_image.h"
  $9 = $i; //@line 5388 "src/sprites/../puun/gf/../../other/stb_image.h"
  $10 = (($9) + 1)|0; //@line 5388 "src/sprites/../puun/gf/../../other/stb_image.h"
  $i = $10; //@line 5388 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $11 = $1; //@line 5391 "src/sprites/../puun/gf/../../other/stb_image.h"
 $12 = (_stbi__get16be($11)|0); //@line 5391 "src/sprites/../puun/gf/../../other/stb_image.h"
 $x = $12; //@line 5391 "src/sprites/../puun/gf/../../other/stb_image.h"
 $13 = $1; //@line 5392 "src/sprites/../puun/gf/../../other/stb_image.h"
 $14 = (_stbi__get16be($13)|0); //@line 5392 "src/sprites/../puun/gf/../../other/stb_image.h"
 $y = $14; //@line 5392 "src/sprites/../puun/gf/../../other/stb_image.h"
 $15 = $1; //@line 5393 "src/sprites/../puun/gf/../../other/stb_image.h"
 $16 = (_stbi__at_eof($15)|0); //@line 5393 "src/sprites/../puun/gf/../../other/stb_image.h"
 $17 = ($16|0)!=(0); //@line 5393 "src/sprites/../puun/gf/../../other/stb_image.h"
 if ($17) {
  $18 = (_stbi__err(9832)|0); //@line 5393 "src/sprites/../puun/gf/../../other/stb_image.h"
  $19 = ($18|0)!=(0); //@line 5393 "src/sprites/../puun/gf/../../other/stb_image.h"
  $20 = $19 ? 0 : 0; //@line 5393 "src/sprites/../puun/gf/../../other/stb_image.h"
  $0 = $20; //@line 5393 "src/sprites/../puun/gf/../../other/stb_image.h"
  $63 = $0; //@line 5414 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($63|0); //@line 5414 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $21 = $x; //@line 5394 "src/sprites/../puun/gf/../../other/stb_image.h"
 $22 = (268435456 / ($21|0))&-1; //@line 5394 "src/sprites/../puun/gf/../../other/stb_image.h"
 $23 = $y; //@line 5394 "src/sprites/../puun/gf/../../other/stb_image.h"
 $24 = ($22|0)<($23|0); //@line 5394 "src/sprites/../puun/gf/../../other/stb_image.h"
 if ($24) {
  $25 = (_stbi__err(7200)|0); //@line 5394 "src/sprites/../puun/gf/../../other/stb_image.h"
  $26 = ($25|0)!=(0); //@line 5394 "src/sprites/../puun/gf/../../other/stb_image.h"
  $27 = $26 ? 0 : 0; //@line 5394 "src/sprites/../puun/gf/../../other/stb_image.h"
  $0 = $27; //@line 5394 "src/sprites/../puun/gf/../../other/stb_image.h"
  $63 = $0; //@line 5414 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($63|0); //@line 5414 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $28 = $1; //@line 5396 "src/sprites/../puun/gf/../../other/stb_image.h"
 (_stbi__get32be($28)|0); //@line 5396 "src/sprites/../puun/gf/../../other/stb_image.h"
 $29 = $1; //@line 5397 "src/sprites/../puun/gf/../../other/stb_image.h"
 (_stbi__get16be($29)|0); //@line 5397 "src/sprites/../puun/gf/../../other/stb_image.h"
 $30 = $1; //@line 5398 "src/sprites/../puun/gf/../../other/stb_image.h"
 (_stbi__get16be($30)|0); //@line 5398 "src/sprites/../puun/gf/../../other/stb_image.h"
 $31 = $x; //@line 5401 "src/sprites/../puun/gf/../../other/stb_image.h"
 $32 = $y; //@line 5401 "src/sprites/../puun/gf/../../other/stb_image.h"
 $33 = Math_imul($31, $32)|0; //@line 5401 "src/sprites/../puun/gf/../../other/stb_image.h"
 $34 = $33<<2; //@line 5401 "src/sprites/../puun/gf/../../other/stb_image.h"
 $35 = (_stbi__malloc($34)|0); //@line 5401 "src/sprites/../puun/gf/../../other/stb_image.h"
 $result = $35; //@line 5401 "src/sprites/../puun/gf/../../other/stb_image.h"
 $36 = $result; //@line 5402 "src/sprites/../puun/gf/../../other/stb_image.h"
 $37 = $x; //@line 5402 "src/sprites/../puun/gf/../../other/stb_image.h"
 $38 = $y; //@line 5402 "src/sprites/../puun/gf/../../other/stb_image.h"
 $39 = Math_imul($37, $38)|0; //@line 5402 "src/sprites/../puun/gf/../../other/stb_image.h"
 $40 = $39<<2; //@line 5402 "src/sprites/../puun/gf/../../other/stb_image.h"
 _memset(($36|0),-1,($40|0))|0; //@line 5402 "src/sprites/../puun/gf/../../other/stb_image.h"
 $41 = $1; //@line 5404 "src/sprites/../puun/gf/../../other/stb_image.h"
 $42 = $x; //@line 5404 "src/sprites/../puun/gf/../../other/stb_image.h"
 $43 = $y; //@line 5404 "src/sprites/../puun/gf/../../other/stb_image.h"
 $44 = $4; //@line 5404 "src/sprites/../puun/gf/../../other/stb_image.h"
 $45 = $result; //@line 5404 "src/sprites/../puun/gf/../../other/stb_image.h"
 $46 = (_stbi__pic_load_core($41,$42,$43,$44,$45)|0); //@line 5404 "src/sprites/../puun/gf/../../other/stb_image.h"
 $47 = ($46|0)!=(0|0); //@line 5404 "src/sprites/../puun/gf/../../other/stb_image.h"
 if (!($47)) {
  $48 = $result; //@line 5405 "src/sprites/../puun/gf/../../other/stb_image.h"
  _free($48); //@line 5405 "src/sprites/../puun/gf/../../other/stb_image.h"
  $result = 0; //@line 5406 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $49 = $x; //@line 5408 "src/sprites/../puun/gf/../../other/stb_image.h"
 $50 = $2; //@line 5408 "src/sprites/../puun/gf/../../other/stb_image.h"
 HEAP32[$50>>2] = $49; //@line 5408 "src/sprites/../puun/gf/../../other/stb_image.h"
 $51 = $y; //@line 5409 "src/sprites/../puun/gf/../../other/stb_image.h"
 $52 = $3; //@line 5409 "src/sprites/../puun/gf/../../other/stb_image.h"
 HEAP32[$52>>2] = $51; //@line 5409 "src/sprites/../puun/gf/../../other/stb_image.h"
 $53 = $5; //@line 5410 "src/sprites/../puun/gf/../../other/stb_image.h"
 $54 = ($53|0)==(0); //@line 5410 "src/sprites/../puun/gf/../../other/stb_image.h"
 if ($54) {
  $55 = $4; //@line 5410 "src/sprites/../puun/gf/../../other/stb_image.h"
  $56 = HEAP32[$55>>2]|0; //@line 5410 "src/sprites/../puun/gf/../../other/stb_image.h"
  $5 = $56; //@line 5410 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $57 = $result; //@line 5411 "src/sprites/../puun/gf/../../other/stb_image.h"
 $58 = $5; //@line 5411 "src/sprites/../puun/gf/../../other/stb_image.h"
 $59 = $x; //@line 5411 "src/sprites/../puun/gf/../../other/stb_image.h"
 $60 = $y; //@line 5411 "src/sprites/../puun/gf/../../other/stb_image.h"
 $61 = (_stbi__convert_format($57,4,$58,$59,$60)|0); //@line 5411 "src/sprites/../puun/gf/../../other/stb_image.h"
 $result = $61; //@line 5411 "src/sprites/../puun/gf/../../other/stb_image.h"
 $62 = $result; //@line 5413 "src/sprites/../puun/gf/../../other/stb_image.h"
 $0 = $62; //@line 5413 "src/sprites/../puun/gf/../../other/stb_image.h"
 $63 = $0; //@line 5414 "src/sprites/../puun/gf/../../other/stb_image.h"
 STACKTOP = sp;return ($63|0); //@line 5414 "src/sprites/../puun/gf/../../other/stb_image.h"
}
function _stbi__pic_load_core($s,$width,$height,$comp,$result) {
 $s = $s|0;
 $width = $width|0;
 $height = $height|0;
 $comp = $comp|0;
 $result = $result|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0;
 var $206 = 0, $207 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;
 var $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0;
 var $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0;
 var $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0;
 var $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $act_comp = 0, $chained = 0, $count = 0, $count3 = 0, $dest = 0, $i = 0, $i4 = 0, $i6 = 0, $left = 0, $left2 = 0, $num_packets = 0, $packet = 0;
 var $packet1 = 0, $packet_idx = 0, $packets = 0, $value = 0, $value5 = 0, $x = 0, $y = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $packets = sp + 94|0;
 $value = sp + 88|0;
 $value5 = sp + 84|0;
 $1 = $s;
 $2 = $width;
 $3 = $height;
 $4 = $comp;
 $5 = $result;
 $act_comp = 0; //@line 5274 "src/sprites/../puun/gf/../../other/stb_image.h"
 $num_packets = 0; //@line 5274 "src/sprites/../puun/gf/../../other/stb_image.h"
 while(1) {
  $6 = $num_packets; //@line 5282 "src/sprites/../puun/gf/../../other/stb_image.h"
  $7 = ($6|0)==(10); //@line 5282 "src/sprites/../puun/gf/../../other/stb_image.h"
  if ($7) {
   label = 3;
   break;
  }
  $11 = $num_packets; //@line 5285 "src/sprites/../puun/gf/../../other/stb_image.h"
  $12 = (($11) + 1)|0; //@line 5285 "src/sprites/../puun/gf/../../other/stb_image.h"
  $num_packets = $12; //@line 5285 "src/sprites/../puun/gf/../../other/stb_image.h"
  $13 = (($packets) + (($11*3)|0)|0); //@line 5285 "src/sprites/../puun/gf/../../other/stb_image.h"
  $packet = $13; //@line 5285 "src/sprites/../puun/gf/../../other/stb_image.h"
  $14 = $1; //@line 5287 "src/sprites/../puun/gf/../../other/stb_image.h"
  $15 = (_stbi__get8($14)|0); //@line 5287 "src/sprites/../puun/gf/../../other/stb_image.h"
  $16 = $15&255; //@line 5287 "src/sprites/../puun/gf/../../other/stb_image.h"
  $chained = $16; //@line 5287 "src/sprites/../puun/gf/../../other/stb_image.h"
  $17 = $1; //@line 5288 "src/sprites/../puun/gf/../../other/stb_image.h"
  $18 = (_stbi__get8($17)|0); //@line 5288 "src/sprites/../puun/gf/../../other/stb_image.h"
  $19 = $packet; //@line 5288 "src/sprites/../puun/gf/../../other/stb_image.h"
  HEAP8[$19>>0] = $18; //@line 5288 "src/sprites/../puun/gf/../../other/stb_image.h"
  $20 = $1; //@line 5289 "src/sprites/../puun/gf/../../other/stb_image.h"
  $21 = (_stbi__get8($20)|0); //@line 5289 "src/sprites/../puun/gf/../../other/stb_image.h"
  $22 = $packet; //@line 5289 "src/sprites/../puun/gf/../../other/stb_image.h"
  $23 = (($22) + 1|0); //@line 5289 "src/sprites/../puun/gf/../../other/stb_image.h"
  HEAP8[$23>>0] = $21; //@line 5289 "src/sprites/../puun/gf/../../other/stb_image.h"
  $24 = $1; //@line 5290 "src/sprites/../puun/gf/../../other/stb_image.h"
  $25 = (_stbi__get8($24)|0); //@line 5290 "src/sprites/../puun/gf/../../other/stb_image.h"
  $26 = $packet; //@line 5290 "src/sprites/../puun/gf/../../other/stb_image.h"
  $27 = (($26) + 2|0); //@line 5290 "src/sprites/../puun/gf/../../other/stb_image.h"
  HEAP8[$27>>0] = $25; //@line 5290 "src/sprites/../puun/gf/../../other/stb_image.h"
  $28 = $packet; //@line 5292 "src/sprites/../puun/gf/../../other/stb_image.h"
  $29 = (($28) + 2|0); //@line 5292 "src/sprites/../puun/gf/../../other/stb_image.h"
  $30 = HEAP8[$29>>0]|0; //@line 5292 "src/sprites/../puun/gf/../../other/stb_image.h"
  $31 = $30&255; //@line 5292 "src/sprites/../puun/gf/../../other/stb_image.h"
  $32 = $act_comp; //@line 5292 "src/sprites/../puun/gf/../../other/stb_image.h"
  $33 = $32 | $31; //@line 5292 "src/sprites/../puun/gf/../../other/stb_image.h"
  $act_comp = $33; //@line 5292 "src/sprites/../puun/gf/../../other/stb_image.h"
  $34 = $1; //@line 5294 "src/sprites/../puun/gf/../../other/stb_image.h"
  $35 = (_stbi__at_eof($34)|0); //@line 5294 "src/sprites/../puun/gf/../../other/stb_image.h"
  $36 = ($35|0)!=(0); //@line 5294 "src/sprites/../puun/gf/../../other/stb_image.h"
  if ($36) {
   label = 5;
   break;
  }
  $40 = $packet; //@line 5295 "src/sprites/../puun/gf/../../other/stb_image.h"
  $41 = HEAP8[$40>>0]|0; //@line 5295 "src/sprites/../puun/gf/../../other/stb_image.h"
  $42 = $41&255; //@line 5295 "src/sprites/../puun/gf/../../other/stb_image.h"
  $43 = ($42|0)!=(8); //@line 5295 "src/sprites/../puun/gf/../../other/stb_image.h"
  if ($43) {
   label = 7;
   break;
  }
  $47 = $chained; //@line 5296 "src/sprites/../puun/gf/../../other/stb_image.h"
  $48 = ($47|0)!=(0); //@line 5296 "src/sprites/../puun/gf/../../other/stb_image.h"
  if (!($48)) {
   label = 10;
   break;
  }
 }
 if ((label|0) == 3) {
  $8 = (_stbi__err(9848)|0); //@line 5283 "src/sprites/../puun/gf/../../other/stb_image.h"
  $9 = ($8|0)!=(0); //@line 5283 "src/sprites/../puun/gf/../../other/stb_image.h"
  $10 = $9 ? 0 : 0; //@line 5283 "src/sprites/../puun/gf/../../other/stb_image.h"
  $0 = $10; //@line 5283 "src/sprites/../puun/gf/../../other/stb_image.h"
  $207 = $0; //@line 5381 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($207|0); //@line 5381 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 else if ((label|0) == 5) {
  $37 = (_stbi__err(9832)|0); //@line 5294 "src/sprites/../puun/gf/../../other/stb_image.h"
  $38 = ($37|0)!=(0); //@line 5294 "src/sprites/../puun/gf/../../other/stb_image.h"
  $39 = $38 ? 0 : 0; //@line 5294 "src/sprites/../puun/gf/../../other/stb_image.h"
  $0 = $39; //@line 5294 "src/sprites/../puun/gf/../../other/stb_image.h"
  $207 = $0; //@line 5381 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($207|0); //@line 5381 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 else if ((label|0) == 7) {
  $44 = (_stbi__err(9848)|0); //@line 5295 "src/sprites/../puun/gf/../../other/stb_image.h"
  $45 = ($44|0)!=(0); //@line 5295 "src/sprites/../puun/gf/../../other/stb_image.h"
  $46 = $45 ? 0 : 0; //@line 5295 "src/sprites/../puun/gf/../../other/stb_image.h"
  $0 = $46; //@line 5295 "src/sprites/../puun/gf/../../other/stb_image.h"
  $207 = $0; //@line 5381 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($207|0); //@line 5381 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 else if ((label|0) == 10) {
  $49 = $act_comp; //@line 5298 "src/sprites/../puun/gf/../../other/stb_image.h"
  $50 = $49 & 16; //@line 5298 "src/sprites/../puun/gf/../../other/stb_image.h"
  $51 = ($50|0)!=(0); //@line 5298 "src/sprites/../puun/gf/../../other/stb_image.h"
  $52 = $51 ? 4 : 3; //@line 5298 "src/sprites/../puun/gf/../../other/stb_image.h"
  $53 = $4; //@line 5298 "src/sprites/../puun/gf/../../other/stb_image.h"
  HEAP32[$53>>2] = $52; //@line 5298 "src/sprites/../puun/gf/../../other/stb_image.h"
  $y = 0; //@line 5300 "src/sprites/../puun/gf/../../other/stb_image.h"
  L11: while(1) {
   $54 = $y; //@line 5300 "src/sprites/../puun/gf/../../other/stb_image.h"
   $55 = $3; //@line 5300 "src/sprites/../puun/gf/../../other/stb_image.h"
   $56 = ($54|0)<($55|0); //@line 5300 "src/sprites/../puun/gf/../../other/stb_image.h"
   if (!($56)) {
    label = 69;
    break;
   }
   $packet_idx = 0; //@line 5303 "src/sprites/../puun/gf/../../other/stb_image.h"
   while(1) {
    $57 = $packet_idx; //@line 5303 "src/sprites/../puun/gf/../../other/stb_image.h"
    $58 = $num_packets; //@line 5303 "src/sprites/../puun/gf/../../other/stb_image.h"
    $59 = ($57|0)<($58|0); //@line 5303 "src/sprites/../puun/gf/../../other/stb_image.h"
    if (!($59)) {
     break;
    }
    $60 = $packet_idx; //@line 5304 "src/sprites/../puun/gf/../../other/stb_image.h"
    $61 = (($packets) + (($60*3)|0)|0); //@line 5304 "src/sprites/../puun/gf/../../other/stb_image.h"
    $packet1 = $61; //@line 5304 "src/sprites/../puun/gf/../../other/stb_image.h"
    $62 = $5; //@line 5305 "src/sprites/../puun/gf/../../other/stb_image.h"
    $63 = $y; //@line 5305 "src/sprites/../puun/gf/../../other/stb_image.h"
    $64 = $2; //@line 5305 "src/sprites/../puun/gf/../../other/stb_image.h"
    $65 = Math_imul($63, $64)|0; //@line 5305 "src/sprites/../puun/gf/../../other/stb_image.h"
    $66 = $65<<2; //@line 5305 "src/sprites/../puun/gf/../../other/stb_image.h"
    $67 = (($62) + ($66)|0); //@line 5305 "src/sprites/../puun/gf/../../other/stb_image.h"
    $dest = $67; //@line 5305 "src/sprites/../puun/gf/../../other/stb_image.h"
    $68 = $packet1; //@line 5307 "src/sprites/../puun/gf/../../other/stb_image.h"
    $69 = (($68) + 1|0); //@line 5307 "src/sprites/../puun/gf/../../other/stb_image.h"
    $70 = HEAP8[$69>>0]|0; //@line 5307 "src/sprites/../puun/gf/../../other/stb_image.h"
    $71 = $70&255; //@line 5307 "src/sprites/../puun/gf/../../other/stb_image.h"
    if ((($71|0) == 1)) {
     $90 = $2; //@line 5322 "src/sprites/../puun/gf/../../other/stb_image.h"
     $left = $90; //@line 5322 "src/sprites/../puun/gf/../../other/stb_image.h"
     while(1) {
      $91 = $left; //@line 5324 "src/sprites/../puun/gf/../../other/stb_image.h"
      $92 = ($91|0)>(0); //@line 5324 "src/sprites/../puun/gf/../../other/stb_image.h"
      if (!($92)) {
       break;
      }
      $93 = $1; //@line 5327 "src/sprites/../puun/gf/../../other/stb_image.h"
      $94 = (_stbi__get8($93)|0); //@line 5327 "src/sprites/../puun/gf/../../other/stb_image.h"
      $count = $94; //@line 5327 "src/sprites/../puun/gf/../../other/stb_image.h"
      $95 = $1; //@line 5328 "src/sprites/../puun/gf/../../other/stb_image.h"
      $96 = (_stbi__at_eof($95)|0); //@line 5328 "src/sprites/../puun/gf/../../other/stb_image.h"
      $97 = ($96|0)!=(0); //@line 5328 "src/sprites/../puun/gf/../../other/stb_image.h"
      if ($97) {
       label = 26;
       break L11;
      }
      $101 = $count; //@line 5330 "src/sprites/../puun/gf/../../other/stb_image.h"
      $102 = $101&255; //@line 5330 "src/sprites/../puun/gf/../../other/stb_image.h"
      $103 = $left; //@line 5330 "src/sprites/../puun/gf/../../other/stb_image.h"
      $104 = ($102|0)>($103|0); //@line 5330 "src/sprites/../puun/gf/../../other/stb_image.h"
      if ($104) {
       $105 = $left; //@line 5331 "src/sprites/../puun/gf/../../other/stb_image.h"
       $106 = $105&255; //@line 5331 "src/sprites/../puun/gf/../../other/stb_image.h"
       $count = $106; //@line 5331 "src/sprites/../puun/gf/../../other/stb_image.h"
      }
      $107 = $1; //@line 5333 "src/sprites/../puun/gf/../../other/stb_image.h"
      $108 = $packet1; //@line 5333 "src/sprites/../puun/gf/../../other/stb_image.h"
      $109 = (($108) + 2|0); //@line 5333 "src/sprites/../puun/gf/../../other/stb_image.h"
      $110 = HEAP8[$109>>0]|0; //@line 5333 "src/sprites/../puun/gf/../../other/stb_image.h"
      $111 = $110&255; //@line 5333 "src/sprites/../puun/gf/../../other/stb_image.h"
      $112 = (_stbi__readval($107,$111,$value)|0); //@line 5333 "src/sprites/../puun/gf/../../other/stb_image.h"
      $113 = ($112|0)!=(0|0); //@line 5333 "src/sprites/../puun/gf/../../other/stb_image.h"
      if (!($113)) {
       label = 30;
       break L11;
      }
      $i = 0; //@line 5335 "src/sprites/../puun/gf/../../other/stb_image.h"
      while(1) {
       $114 = $i; //@line 5335 "src/sprites/../puun/gf/../../other/stb_image.h"
       $115 = $count; //@line 5335 "src/sprites/../puun/gf/../../other/stb_image.h"
       $116 = $115&255; //@line 5335 "src/sprites/../puun/gf/../../other/stb_image.h"
       $117 = ($114|0)<($116|0); //@line 5335 "src/sprites/../puun/gf/../../other/stb_image.h"
       if (!($117)) {
        break;
       }
       $118 = $packet1; //@line 5336 "src/sprites/../puun/gf/../../other/stb_image.h"
       $119 = (($118) + 2|0); //@line 5336 "src/sprites/../puun/gf/../../other/stb_image.h"
       $120 = HEAP8[$119>>0]|0; //@line 5336 "src/sprites/../puun/gf/../../other/stb_image.h"
       $121 = $120&255; //@line 5336 "src/sprites/../puun/gf/../../other/stb_image.h"
       $122 = $dest; //@line 5336 "src/sprites/../puun/gf/../../other/stb_image.h"
       _stbi__copyval($121,$122,$value); //@line 5336 "src/sprites/../puun/gf/../../other/stb_image.h"
       $123 = $i; //@line 5335 "src/sprites/../puun/gf/../../other/stb_image.h"
       $124 = (($123) + 1)|0; //@line 5335 "src/sprites/../puun/gf/../../other/stb_image.h"
       $i = $124; //@line 5335 "src/sprites/../puun/gf/../../other/stb_image.h"
       $125 = $dest; //@line 5335 "src/sprites/../puun/gf/../../other/stb_image.h"
       $126 = (($125) + 4|0); //@line 5335 "src/sprites/../puun/gf/../../other/stb_image.h"
       $dest = $126; //@line 5335 "src/sprites/../puun/gf/../../other/stb_image.h"
      }
      $127 = $count; //@line 5337 "src/sprites/../puun/gf/../../other/stb_image.h"
      $128 = $127&255; //@line 5337 "src/sprites/../puun/gf/../../other/stb_image.h"
      $129 = $left; //@line 5337 "src/sprites/../puun/gf/../../other/stb_image.h"
      $130 = (($129) - ($128))|0; //@line 5337 "src/sprites/../puun/gf/../../other/stb_image.h"
      $left = $130; //@line 5337 "src/sprites/../puun/gf/../../other/stb_image.h"
     }
    } else if ((($71|0) == 0)) {
     $x = 0; //@line 5314 "src/sprites/../puun/gf/../../other/stb_image.h"
     while(1) {
      $75 = $x; //@line 5314 "src/sprites/../puun/gf/../../other/stb_image.h"
      $76 = $2; //@line 5314 "src/sprites/../puun/gf/../../other/stb_image.h"
      $77 = ($75|0)<($76|0); //@line 5314 "src/sprites/../puun/gf/../../other/stb_image.h"
      if (!($77)) {
       break;
      }
      $78 = $1; //@line 5315 "src/sprites/../puun/gf/../../other/stb_image.h"
      $79 = $packet1; //@line 5315 "src/sprites/../puun/gf/../../other/stb_image.h"
      $80 = (($79) + 2|0); //@line 5315 "src/sprites/../puun/gf/../../other/stb_image.h"
      $81 = HEAP8[$80>>0]|0; //@line 5315 "src/sprites/../puun/gf/../../other/stb_image.h"
      $82 = $81&255; //@line 5315 "src/sprites/../puun/gf/../../other/stb_image.h"
      $83 = $dest; //@line 5315 "src/sprites/../puun/gf/../../other/stb_image.h"
      $84 = (_stbi__readval($78,$82,$83)|0); //@line 5315 "src/sprites/../puun/gf/../../other/stb_image.h"
      $85 = ($84|0)!=(0|0); //@line 5315 "src/sprites/../puun/gf/../../other/stb_image.h"
      if (!($85)) {
       label = 19;
       break L11;
      }
      $86 = $x; //@line 5314 "src/sprites/../puun/gf/../../other/stb_image.h"
      $87 = (($86) + 1)|0; //@line 5314 "src/sprites/../puun/gf/../../other/stb_image.h"
      $x = $87; //@line 5314 "src/sprites/../puun/gf/../../other/stb_image.h"
      $88 = $dest; //@line 5314 "src/sprites/../puun/gf/../../other/stb_image.h"
      $89 = (($88) + 4|0); //@line 5314 "src/sprites/../puun/gf/../../other/stb_image.h"
      $dest = $89; //@line 5314 "src/sprites/../puun/gf/../../other/stb_image.h"
     }
    } else if ((($71|0) == 2)) {
     $131 = $2; //@line 5343 "src/sprites/../puun/gf/../../other/stb_image.h"
     $left2 = $131; //@line 5343 "src/sprites/../puun/gf/../../other/stb_image.h"
     while(1) {
      $132 = $left2; //@line 5344 "src/sprites/../puun/gf/../../other/stb_image.h"
      $133 = ($132|0)>(0); //@line 5344 "src/sprites/../puun/gf/../../other/stb_image.h"
      if (!($133)) {
       break;
      }
      $134 = $1; //@line 5345 "src/sprites/../puun/gf/../../other/stb_image.h"
      $135 = (_stbi__get8($134)|0); //@line 5345 "src/sprites/../puun/gf/../../other/stb_image.h"
      $136 = $135&255; //@line 5345 "src/sprites/../puun/gf/../../other/stb_image.h"
      $count3 = $136; //@line 5345 "src/sprites/../puun/gf/../../other/stb_image.h"
      $137 = $1; //@line 5346 "src/sprites/../puun/gf/../../other/stb_image.h"
      $138 = (_stbi__at_eof($137)|0); //@line 5346 "src/sprites/../puun/gf/../../other/stb_image.h"
      $139 = ($138|0)!=(0); //@line 5346 "src/sprites/../puun/gf/../../other/stb_image.h"
      if ($139) {
       label = 40;
       break L11;
      }
      $143 = $count3; //@line 5348 "src/sprites/../puun/gf/../../other/stb_image.h"
      $144 = ($143|0)>=(128); //@line 5348 "src/sprites/../puun/gf/../../other/stb_image.h"
      if ($144) {
       $145 = $count3; //@line 5352 "src/sprites/../puun/gf/../../other/stb_image.h"
       $146 = ($145|0)==(128); //@line 5352 "src/sprites/../puun/gf/../../other/stb_image.h"
       if ($146) {
        $147 = $1; //@line 5353 "src/sprites/../puun/gf/../../other/stb_image.h"
        $148 = (_stbi__get16be($147)|0); //@line 5353 "src/sprites/../puun/gf/../../other/stb_image.h"
        $count3 = $148; //@line 5353 "src/sprites/../puun/gf/../../other/stb_image.h"
       } else {
        $149 = $count3; //@line 5355 "src/sprites/../puun/gf/../../other/stb_image.h"
        $150 = (($149) - 127)|0; //@line 5355 "src/sprites/../puun/gf/../../other/stb_image.h"
        $count3 = $150; //@line 5355 "src/sprites/../puun/gf/../../other/stb_image.h"
       }
       $151 = $count3; //@line 5356 "src/sprites/../puun/gf/../../other/stb_image.h"
       $152 = $left2; //@line 5356 "src/sprites/../puun/gf/../../other/stb_image.h"
       $153 = ($151|0)>($152|0); //@line 5356 "src/sprites/../puun/gf/../../other/stb_image.h"
       if ($153) {
        label = 46;
        break L11;
       }
       $157 = $1; //@line 5359 "src/sprites/../puun/gf/../../other/stb_image.h"
       $158 = $packet1; //@line 5359 "src/sprites/../puun/gf/../../other/stb_image.h"
       $159 = (($158) + 2|0); //@line 5359 "src/sprites/../puun/gf/../../other/stb_image.h"
       $160 = HEAP8[$159>>0]|0; //@line 5359 "src/sprites/../puun/gf/../../other/stb_image.h"
       $161 = $160&255; //@line 5359 "src/sprites/../puun/gf/../../other/stb_image.h"
       $162 = (_stbi__readval($157,$161,$value5)|0); //@line 5359 "src/sprites/../puun/gf/../../other/stb_image.h"
       $163 = ($162|0)!=(0|0); //@line 5359 "src/sprites/../puun/gf/../../other/stb_image.h"
       if (!($163)) {
        label = 48;
        break L11;
       }
       $i6 = 0; //@line 5362 "src/sprites/../puun/gf/../../other/stb_image.h"
       while(1) {
        $164 = $i6; //@line 5362 "src/sprites/../puun/gf/../../other/stb_image.h"
        $165 = $count3; //@line 5362 "src/sprites/../puun/gf/../../other/stb_image.h"
        $166 = ($164|0)<($165|0); //@line 5362 "src/sprites/../puun/gf/../../other/stb_image.h"
        if (!($166)) {
         break;
        }
        $167 = $packet1; //@line 5363 "src/sprites/../puun/gf/../../other/stb_image.h"
        $168 = (($167) + 2|0); //@line 5363 "src/sprites/../puun/gf/../../other/stb_image.h"
        $169 = HEAP8[$168>>0]|0; //@line 5363 "src/sprites/../puun/gf/../../other/stb_image.h"
        $170 = $169&255; //@line 5363 "src/sprites/../puun/gf/../../other/stb_image.h"
        $171 = $dest; //@line 5363 "src/sprites/../puun/gf/../../other/stb_image.h"
        _stbi__copyval($170,$171,$value5); //@line 5363 "src/sprites/../puun/gf/../../other/stb_image.h"
        $172 = $i6; //@line 5362 "src/sprites/../puun/gf/../../other/stb_image.h"
        $173 = (($172) + 1)|0; //@line 5362 "src/sprites/../puun/gf/../../other/stb_image.h"
        $i6 = $173; //@line 5362 "src/sprites/../puun/gf/../../other/stb_image.h"
        $174 = $dest; //@line 5362 "src/sprites/../puun/gf/../../other/stb_image.h"
        $175 = (($174) + 4|0); //@line 5362 "src/sprites/../puun/gf/../../other/stb_image.h"
        $dest = $175; //@line 5362 "src/sprites/../puun/gf/../../other/stb_image.h"
       }
      } else {
       $176 = $count3; //@line 5365 "src/sprites/../puun/gf/../../other/stb_image.h"
       $177 = (($176) + 1)|0; //@line 5365 "src/sprites/../puun/gf/../../other/stb_image.h"
       $count3 = $177; //@line 5365 "src/sprites/../puun/gf/../../other/stb_image.h"
       $178 = $count3; //@line 5366 "src/sprites/../puun/gf/../../other/stb_image.h"
       $179 = $left2; //@line 5366 "src/sprites/../puun/gf/../../other/stb_image.h"
       $180 = ($178|0)>($179|0); //@line 5366 "src/sprites/../puun/gf/../../other/stb_image.h"
       if ($180) {
        label = 55;
        break L11;
       }
       $i4 = 0; //@line 5368 "src/sprites/../puun/gf/../../other/stb_image.h"
       while(1) {
        $184 = $i4; //@line 5368 "src/sprites/../puun/gf/../../other/stb_image.h"
        $185 = $count3; //@line 5368 "src/sprites/../puun/gf/../../other/stb_image.h"
        $186 = ($184|0)<($185|0); //@line 5368 "src/sprites/../puun/gf/../../other/stb_image.h"
        if (!($186)) {
         break;
        }
        $187 = $1; //@line 5369 "src/sprites/../puun/gf/../../other/stb_image.h"
        $188 = $packet1; //@line 5369 "src/sprites/../puun/gf/../../other/stb_image.h"
        $189 = (($188) + 2|0); //@line 5369 "src/sprites/../puun/gf/../../other/stb_image.h"
        $190 = HEAP8[$189>>0]|0; //@line 5369 "src/sprites/../puun/gf/../../other/stb_image.h"
        $191 = $190&255; //@line 5369 "src/sprites/../puun/gf/../../other/stb_image.h"
        $192 = $dest; //@line 5369 "src/sprites/../puun/gf/../../other/stb_image.h"
        $193 = (_stbi__readval($187,$191,$192)|0); //@line 5369 "src/sprites/../puun/gf/../../other/stb_image.h"
        $194 = ($193|0)!=(0|0); //@line 5369 "src/sprites/../puun/gf/../../other/stb_image.h"
        if (!($194)) {
         label = 59;
         break L11;
        }
        $195 = $i4; //@line 5368 "src/sprites/../puun/gf/../../other/stb_image.h"
        $196 = (($195) + 1)|0; //@line 5368 "src/sprites/../puun/gf/../../other/stb_image.h"
        $i4 = $196; //@line 5368 "src/sprites/../puun/gf/../../other/stb_image.h"
        $197 = $dest; //@line 5368 "src/sprites/../puun/gf/../../other/stb_image.h"
        $198 = (($197) + 4|0); //@line 5368 "src/sprites/../puun/gf/../../other/stb_image.h"
        $dest = $198; //@line 5368 "src/sprites/../puun/gf/../../other/stb_image.h"
       }
      }
      $199 = $count3; //@line 5372 "src/sprites/../puun/gf/../../other/stb_image.h"
      $200 = $left2; //@line 5372 "src/sprites/../puun/gf/../../other/stb_image.h"
      $201 = (($200) - ($199))|0; //@line 5372 "src/sprites/../puun/gf/../../other/stb_image.h"
      $left2 = $201; //@line 5372 "src/sprites/../puun/gf/../../other/stb_image.h"
     }
    } else {
     label = 15;
     break L11;
    }
    $202 = $packet_idx; //@line 5303 "src/sprites/../puun/gf/../../other/stb_image.h"
    $203 = (($202) + 1)|0; //@line 5303 "src/sprites/../puun/gf/../../other/stb_image.h"
    $packet_idx = $203; //@line 5303 "src/sprites/../puun/gf/../../other/stb_image.h"
   }
   $204 = $y; //@line 5300 "src/sprites/../puun/gf/../../other/stb_image.h"
   $205 = (($204) + 1)|0; //@line 5300 "src/sprites/../puun/gf/../../other/stb_image.h"
   $y = $205; //@line 5300 "src/sprites/../puun/gf/../../other/stb_image.h"
  }
  switch (label|0) {
   case 15: {
    $72 = (_stbi__err(9848)|0); //@line 5309 "src/sprites/../puun/gf/../../other/stb_image.h"
    $73 = ($72|0)!=(0); //@line 5309 "src/sprites/../puun/gf/../../other/stb_image.h"
    $74 = $73 ? 0 : 0; //@line 5309 "src/sprites/../puun/gf/../../other/stb_image.h"
    $0 = $74; //@line 5309 "src/sprites/../puun/gf/../../other/stb_image.h"
    $207 = $0; //@line 5381 "src/sprites/../puun/gf/../../other/stb_image.h"
    STACKTOP = sp;return ($207|0); //@line 5381 "src/sprites/../puun/gf/../../other/stb_image.h"
    break;
   }
   case 19: {
    $0 = 0; //@line 5316 "src/sprites/../puun/gf/../../other/stb_image.h"
    $207 = $0; //@line 5381 "src/sprites/../puun/gf/../../other/stb_image.h"
    STACKTOP = sp;return ($207|0); //@line 5381 "src/sprites/../puun/gf/../../other/stb_image.h"
    break;
   }
   case 26: {
    $98 = (_stbi__err(9832)|0); //@line 5328 "src/sprites/../puun/gf/../../other/stb_image.h"
    $99 = ($98|0)!=(0); //@line 5328 "src/sprites/../puun/gf/../../other/stb_image.h"
    $100 = $99 ? 0 : 0; //@line 5328 "src/sprites/../puun/gf/../../other/stb_image.h"
    $0 = $100; //@line 5328 "src/sprites/../puun/gf/../../other/stb_image.h"
    $207 = $0; //@line 5381 "src/sprites/../puun/gf/../../other/stb_image.h"
    STACKTOP = sp;return ($207|0); //@line 5381 "src/sprites/../puun/gf/../../other/stb_image.h"
    break;
   }
   case 30: {
    $0 = 0; //@line 5333 "src/sprites/../puun/gf/../../other/stb_image.h"
    $207 = $0; //@line 5381 "src/sprites/../puun/gf/../../other/stb_image.h"
    STACKTOP = sp;return ($207|0); //@line 5381 "src/sprites/../puun/gf/../../other/stb_image.h"
    break;
   }
   case 40: {
    $140 = (_stbi__err(9832)|0); //@line 5346 "src/sprites/../puun/gf/../../other/stb_image.h"
    $141 = ($140|0)!=(0); //@line 5346 "src/sprites/../puun/gf/../../other/stb_image.h"
    $142 = $141 ? 0 : 0; //@line 5346 "src/sprites/../puun/gf/../../other/stb_image.h"
    $0 = $142; //@line 5346 "src/sprites/../puun/gf/../../other/stb_image.h"
    $207 = $0; //@line 5381 "src/sprites/../puun/gf/../../other/stb_image.h"
    STACKTOP = sp;return ($207|0); //@line 5381 "src/sprites/../puun/gf/../../other/stb_image.h"
    break;
   }
   case 46: {
    $154 = (_stbi__err(9832)|0); //@line 5357 "src/sprites/../puun/gf/../../other/stb_image.h"
    $155 = ($154|0)!=(0); //@line 5357 "src/sprites/../puun/gf/../../other/stb_image.h"
    $156 = $155 ? 0 : 0; //@line 5357 "src/sprites/../puun/gf/../../other/stb_image.h"
    $0 = $156; //@line 5357 "src/sprites/../puun/gf/../../other/stb_image.h"
    $207 = $0; //@line 5381 "src/sprites/../puun/gf/../../other/stb_image.h"
    STACKTOP = sp;return ($207|0); //@line 5381 "src/sprites/../puun/gf/../../other/stb_image.h"
    break;
   }
   case 48: {
    $0 = 0; //@line 5360 "src/sprites/../puun/gf/../../other/stb_image.h"
    $207 = $0; //@line 5381 "src/sprites/../puun/gf/../../other/stb_image.h"
    STACKTOP = sp;return ($207|0); //@line 5381 "src/sprites/../puun/gf/../../other/stb_image.h"
    break;
   }
   case 55: {
    $181 = (_stbi__err(9832)|0); //@line 5366 "src/sprites/../puun/gf/../../other/stb_image.h"
    $182 = ($181|0)!=(0); //@line 5366 "src/sprites/../puun/gf/../../other/stb_image.h"
    $183 = $182 ? 0 : 0; //@line 5366 "src/sprites/../puun/gf/../../other/stb_image.h"
    $0 = $183; //@line 5366 "src/sprites/../puun/gf/../../other/stb_image.h"
    $207 = $0; //@line 5381 "src/sprites/../puun/gf/../../other/stb_image.h"
    STACKTOP = sp;return ($207|0); //@line 5381 "src/sprites/../puun/gf/../../other/stb_image.h"
    break;
   }
   case 59: {
    $0 = 0; //@line 5370 "src/sprites/../puun/gf/../../other/stb_image.h"
    $207 = $0; //@line 5381 "src/sprites/../puun/gf/../../other/stb_image.h"
    STACKTOP = sp;return ($207|0); //@line 5381 "src/sprites/../puun/gf/../../other/stb_image.h"
    break;
   }
   case 69: {
    $206 = $5; //@line 5380 "src/sprites/../puun/gf/../../other/stb_image.h"
    $0 = $206; //@line 5380 "src/sprites/../puun/gf/../../other/stb_image.h"
    $207 = $0; //@line 5381 "src/sprites/../puun/gf/../../other/stb_image.h"
    STACKTOP = sp;return ($207|0); //@line 5381 "src/sprites/../puun/gf/../../other/stb_image.h"
    break;
   }
  }
 }
 return (0)|0;
}
function _stbi__copyval($channel,$dest,$src) {
 $channel = $channel|0;
 $dest = $dest|0;
 $src = $src|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $i = 0, $mask = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $channel;
 $1 = $dest;
 $2 = $src;
 $mask = 128; //@line 5265 "src/sprites/../puun/gf/../../other/stb_image.h"
 $i = 0; //@line 5267 "src/sprites/../puun/gf/../../other/stb_image.h"
 while(1) {
  $3 = $i; //@line 5267 "src/sprites/../puun/gf/../../other/stb_image.h"
  $4 = ($3|0)<(4); //@line 5267 "src/sprites/../puun/gf/../../other/stb_image.h"
  if (!($4)) {
   break;
  }
  $5 = $0; //@line 5268 "src/sprites/../puun/gf/../../other/stb_image.h"
  $6 = $mask; //@line 5268 "src/sprites/../puun/gf/../../other/stb_image.h"
  $7 = $5 & $6; //@line 5268 "src/sprites/../puun/gf/../../other/stb_image.h"
  $8 = ($7|0)!=(0); //@line 5268 "src/sprites/../puun/gf/../../other/stb_image.h"
  if ($8) {
   $9 = $i; //@line 5269 "src/sprites/../puun/gf/../../other/stb_image.h"
   $10 = $2; //@line 5269 "src/sprites/../puun/gf/../../other/stb_image.h"
   $11 = (($10) + ($9)|0); //@line 5269 "src/sprites/../puun/gf/../../other/stb_image.h"
   $12 = HEAP8[$11>>0]|0; //@line 5269 "src/sprites/../puun/gf/../../other/stb_image.h"
   $13 = $i; //@line 5269 "src/sprites/../puun/gf/../../other/stb_image.h"
   $14 = $1; //@line 5269 "src/sprites/../puun/gf/../../other/stb_image.h"
   $15 = (($14) + ($13)|0); //@line 5269 "src/sprites/../puun/gf/../../other/stb_image.h"
   HEAP8[$15>>0] = $12; //@line 5269 "src/sprites/../puun/gf/../../other/stb_image.h"
  }
  $16 = $i; //@line 5267 "src/sprites/../puun/gf/../../other/stb_image.h"
  $17 = (($16) + 1)|0; //@line 5267 "src/sprites/../puun/gf/../../other/stb_image.h"
  $i = $17; //@line 5267 "src/sprites/../puun/gf/../../other/stb_image.h"
  $18 = $mask; //@line 5267 "src/sprites/../puun/gf/../../other/stb_image.h"
  $19 = $18 >> 1; //@line 5267 "src/sprites/../puun/gf/../../other/stb_image.h"
  $mask = $19; //@line 5267 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 STACKTOP = sp;return; //@line 5270 "src/sprites/../puun/gf/../../other/stb_image.h"
}
function _stbi__readval($s,$channel,$dest) {
 $s = $s|0;
 $channel = $channel|0;
 $dest = $dest|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $i = 0, $mask = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $s;
 $2 = $channel;
 $3 = $dest;
 $mask = 128; //@line 5251 "src/sprites/../puun/gf/../../other/stb_image.h"
 $i = 0; //@line 5253 "src/sprites/../puun/gf/../../other/stb_image.h"
 while(1) {
  $4 = $i; //@line 5253 "src/sprites/../puun/gf/../../other/stb_image.h"
  $5 = ($4|0)<(4); //@line 5253 "src/sprites/../puun/gf/../../other/stb_image.h"
  if (!($5)) {
   label = 9;
   break;
  }
  $6 = $2; //@line 5254 "src/sprites/../puun/gf/../../other/stb_image.h"
  $7 = $mask; //@line 5254 "src/sprites/../puun/gf/../../other/stb_image.h"
  $8 = $6 & $7; //@line 5254 "src/sprites/../puun/gf/../../other/stb_image.h"
  $9 = ($8|0)!=(0); //@line 5254 "src/sprites/../puun/gf/../../other/stb_image.h"
  if ($9) {
   $10 = $1; //@line 5255 "src/sprites/../puun/gf/../../other/stb_image.h"
   $11 = (_stbi__at_eof($10)|0); //@line 5255 "src/sprites/../puun/gf/../../other/stb_image.h"
   $12 = ($11|0)!=(0); //@line 5255 "src/sprites/../puun/gf/../../other/stb_image.h"
   if ($12) {
    label = 5;
    break;
   }
   $16 = $1; //@line 5256 "src/sprites/../puun/gf/../../other/stb_image.h"
   $17 = (_stbi__get8($16)|0); //@line 5256 "src/sprites/../puun/gf/../../other/stb_image.h"
   $18 = $i; //@line 5256 "src/sprites/../puun/gf/../../other/stb_image.h"
   $19 = $3; //@line 5256 "src/sprites/../puun/gf/../../other/stb_image.h"
   $20 = (($19) + ($18)|0); //@line 5256 "src/sprites/../puun/gf/../../other/stb_image.h"
   HEAP8[$20>>0] = $17; //@line 5256 "src/sprites/../puun/gf/../../other/stb_image.h"
  }
  $21 = $i; //@line 5253 "src/sprites/../puun/gf/../../other/stb_image.h"
  $22 = (($21) + 1)|0; //@line 5253 "src/sprites/../puun/gf/../../other/stb_image.h"
  $i = $22; //@line 5253 "src/sprites/../puun/gf/../../other/stb_image.h"
  $23 = $mask; //@line 5253 "src/sprites/../puun/gf/../../other/stb_image.h"
  $24 = $23 >> 1; //@line 5253 "src/sprites/../puun/gf/../../other/stb_image.h"
  $mask = $24; //@line 5253 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 if ((label|0) == 5) {
  $13 = (_stbi__err(9832)|0); //@line 5255 "src/sprites/../puun/gf/../../other/stb_image.h"
  $14 = ($13|0)!=(0); //@line 5255 "src/sprites/../puun/gf/../../other/stb_image.h"
  $15 = $14 ? 0 : 0; //@line 5255 "src/sprites/../puun/gf/../../other/stb_image.h"
  $0 = $15; //@line 5255 "src/sprites/../puun/gf/../../other/stb_image.h"
  $26 = $0; //@line 5261 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($26|0); //@line 5261 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 else if ((label|0) == 9) {
  $25 = $3; //@line 5260 "src/sprites/../puun/gf/../../other/stb_image.h"
  $0 = $25; //@line 5260 "src/sprites/../puun/gf/../../other/stb_image.h"
  $26 = $0; //@line 5261 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($26|0); //@line 5261 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 return (0)|0;
}
function _stbi__pic_test($s) {
 $s = $s|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $r = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $s;
 $1 = $0; //@line 5418 "src/sprites/../puun/gf/../../other/stb_image.h"
 $2 = (_stbi__pic_test_core($1)|0); //@line 5418 "src/sprites/../puun/gf/../../other/stb_image.h"
 $r = $2; //@line 5418 "src/sprites/../puun/gf/../../other/stb_image.h"
 $3 = $0; //@line 5419 "src/sprites/../puun/gf/../../other/stb_image.h"
 _stbi__rewind($3); //@line 5419 "src/sprites/../puun/gf/../../other/stb_image.h"
 $4 = $r; //@line 5420 "src/sprites/../puun/gf/../../other/stb_image.h"
 STACKTOP = sp;return ($4|0); //@line 5420 "src/sprites/../puun/gf/../../other/stb_image.h"
}
function _stbi__pic_test_core($s) {
 $s = $s|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $s;
 $2 = $1; //@line 5232 "src/sprites/../puun/gf/../../other/stb_image.h"
 $3 = (_stbi__pic_is4($2,9864)|0); //@line 5232 "src/sprites/../puun/gf/../../other/stb_image.h"
 $4 = ($3|0)!=(0); //@line 5232 "src/sprites/../puun/gf/../../other/stb_image.h"
 do {
  if ($4) {
   $i = 0; //@line 5235 "src/sprites/../puun/gf/../../other/stb_image.h"
   while(1) {
    $5 = $i; //@line 5235 "src/sprites/../puun/gf/../../other/stb_image.h"
    $6 = ($5|0)<(84); //@line 5235 "src/sprites/../puun/gf/../../other/stb_image.h"
    if (!($6)) {
     break;
    }
    $7 = $1; //@line 5236 "src/sprites/../puun/gf/../../other/stb_image.h"
    (_stbi__get8($7)|0); //@line 5236 "src/sprites/../puun/gf/../../other/stb_image.h"
    $8 = $i; //@line 5235 "src/sprites/../puun/gf/../../other/stb_image.h"
    $9 = (($8) + 1)|0; //@line 5235 "src/sprites/../puun/gf/../../other/stb_image.h"
    $i = $9; //@line 5235 "src/sprites/../puun/gf/../../other/stb_image.h"
   }
   $10 = $1; //@line 5238 "src/sprites/../puun/gf/../../other/stb_image.h"
   $11 = (_stbi__pic_is4($10,9872)|0); //@line 5238 "src/sprites/../puun/gf/../../other/stb_image.h"
   $12 = ($11|0)!=(0); //@line 5238 "src/sprites/../puun/gf/../../other/stb_image.h"
   if ($12) {
    $0 = 1; //@line 5241 "src/sprites/../puun/gf/../../other/stb_image.h"
    break;
   } else {
    $0 = 0; //@line 5239 "src/sprites/../puun/gf/../../other/stb_image.h"
    break;
   }
  } else {
   $0 = 0; //@line 5233 "src/sprites/../puun/gf/../../other/stb_image.h"
  }
 } while(0);
 $13 = $0; //@line 5242 "src/sprites/../puun/gf/../../other/stb_image.h"
 STACKTOP = sp;return ($13|0); //@line 5242 "src/sprites/../puun/gf/../../other/stb_image.h"
}
function _stbi__pic_is4($s,$str) {
 $s = $s|0;
 $str = $str|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $s;
 $2 = $str;
 $i = 0; //@line 5221 "src/sprites/../puun/gf/../../other/stb_image.h"
 while(1) {
  $3 = $i; //@line 5221 "src/sprites/../puun/gf/../../other/stb_image.h"
  $4 = ($3|0)<(4); //@line 5221 "src/sprites/../puun/gf/../../other/stb_image.h"
  if (!($4)) {
   label = 7;
   break;
  }
  $5 = $1; //@line 5222 "src/sprites/../puun/gf/../../other/stb_image.h"
  $6 = (_stbi__get8($5)|0); //@line 5222 "src/sprites/../puun/gf/../../other/stb_image.h"
  $7 = $6&255; //@line 5222 "src/sprites/../puun/gf/../../other/stb_image.h"
  $8 = $i; //@line 5222 "src/sprites/../puun/gf/../../other/stb_image.h"
  $9 = $2; //@line 5222 "src/sprites/../puun/gf/../../other/stb_image.h"
  $10 = (($9) + ($8)|0); //@line 5222 "src/sprites/../puun/gf/../../other/stb_image.h"
  $11 = HEAP8[$10>>0]|0; //@line 5222 "src/sprites/../puun/gf/../../other/stb_image.h"
  $12 = $11&255; //@line 5222 "src/sprites/../puun/gf/../../other/stb_image.h"
  $13 = ($7|0)!=($12|0); //@line 5222 "src/sprites/../puun/gf/../../other/stb_image.h"
  if ($13) {
   label = 4;
   break;
  }
  $14 = $i; //@line 5221 "src/sprites/../puun/gf/../../other/stb_image.h"
  $15 = (($14) + 1)|0; //@line 5221 "src/sprites/../puun/gf/../../other/stb_image.h"
  $i = $15; //@line 5221 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 if ((label|0) == 4) {
  $0 = 0; //@line 5223 "src/sprites/../puun/gf/../../other/stb_image.h"
  $16 = $0; //@line 5226 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($16|0); //@line 5226 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 else if ((label|0) == 7) {
  $0 = 1; //@line 5225 "src/sprites/../puun/gf/../../other/stb_image.h"
  $16 = $0; //@line 5226 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($16|0); //@line 5226 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 return (0)|0;
}
function _stbi__psd_load($s,$x,$y,$comp,$req_comp) {
 $s = $s|0;
 $x = $x|0;
 $y = $y|0;
 $comp = $comp|0;
 $req_comp = $req_comp|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $channel = 0;
 var $channelCount = 0, $compression = 0, $count = 0, $h = 0, $i = 0, $len = 0, $out = 0, $p = 0, $p1 = 0, $pixelCount = 0, $val = 0, $w = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $s;
 $2 = $x;
 $3 = $y;
 $4 = $comp;
 $5 = $req_comp;
 $6 = $1; //@line 5060 "src/sprites/../puun/gf/../../other/stb_image.h"
 $7 = (_stbi__get32be($6)|0); //@line 5060 "src/sprites/../puun/gf/../../other/stb_image.h"
 $8 = ($7|0)!=(943870035); //@line 5060 "src/sprites/../puun/gf/../../other/stb_image.h"
 if ($8) {
  $9 = (_stbi__err(9880)|0); //@line 5061 "src/sprites/../puun/gf/../../other/stb_image.h"
  $10 = ($9|0)!=(0); //@line 5061 "src/sprites/../puun/gf/../../other/stb_image.h"
  $11 = $10 ? 0 : 0; //@line 5061 "src/sprites/../puun/gf/../../other/stb_image.h"
  $0 = $11; //@line 5061 "src/sprites/../puun/gf/../../other/stb_image.h"
  $198 = $0; //@line 5207 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($198|0); //@line 5207 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $12 = $1; //@line 5064 "src/sprites/../puun/gf/../../other/stb_image.h"
 $13 = (_stbi__get16be($12)|0); //@line 5064 "src/sprites/../puun/gf/../../other/stb_image.h"
 $14 = ($13|0)!=(1); //@line 5064 "src/sprites/../puun/gf/../../other/stb_image.h"
 if ($14) {
  $15 = (_stbi__err(9888)|0); //@line 5065 "src/sprites/../puun/gf/../../other/stb_image.h"
  $16 = ($15|0)!=(0); //@line 5065 "src/sprites/../puun/gf/../../other/stb_image.h"
  $17 = $16 ? 0 : 0; //@line 5065 "src/sprites/../puun/gf/../../other/stb_image.h"
  $0 = $17; //@line 5065 "src/sprites/../puun/gf/../../other/stb_image.h"
  $198 = $0; //@line 5207 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($198|0); //@line 5207 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $18 = $1; //@line 5068 "src/sprites/../puun/gf/../../other/stb_image.h"
 _stbi__skip($18,6); //@line 5068 "src/sprites/../puun/gf/../../other/stb_image.h"
 $19 = $1; //@line 5071 "src/sprites/../puun/gf/../../other/stb_image.h"
 $20 = (_stbi__get16be($19)|0); //@line 5071 "src/sprites/../puun/gf/../../other/stb_image.h"
 $channelCount = $20; //@line 5071 "src/sprites/../puun/gf/../../other/stb_image.h"
 $21 = $channelCount; //@line 5072 "src/sprites/../puun/gf/../../other/stb_image.h"
 $22 = ($21|0)<(0); //@line 5072 "src/sprites/../puun/gf/../../other/stb_image.h"
 if (!($22)) {
  $23 = $channelCount; //@line 5072 "src/sprites/../puun/gf/../../other/stb_image.h"
  $24 = ($23|0)>(16); //@line 5072 "src/sprites/../puun/gf/../../other/stb_image.h"
  if (!($24)) {
   $28 = $1; //@line 5076 "src/sprites/../puun/gf/../../other/stb_image.h"
   $29 = (_stbi__get32be($28)|0); //@line 5076 "src/sprites/../puun/gf/../../other/stb_image.h"
   $h = $29; //@line 5076 "src/sprites/../puun/gf/../../other/stb_image.h"
   $30 = $1; //@line 5077 "src/sprites/../puun/gf/../../other/stb_image.h"
   $31 = (_stbi__get32be($30)|0); //@line 5077 "src/sprites/../puun/gf/../../other/stb_image.h"
   $w = $31; //@line 5077 "src/sprites/../puun/gf/../../other/stb_image.h"
   $32 = $1; //@line 5080 "src/sprites/../puun/gf/../../other/stb_image.h"
   $33 = (_stbi__get16be($32)|0); //@line 5080 "src/sprites/../puun/gf/../../other/stb_image.h"
   $34 = ($33|0)!=(8); //@line 5080 "src/sprites/../puun/gf/../../other/stb_image.h"
   if ($34) {
    $35 = (_stbi__err(9928)|0); //@line 5081 "src/sprites/../puun/gf/../../other/stb_image.h"
    $36 = ($35|0)!=(0); //@line 5081 "src/sprites/../puun/gf/../../other/stb_image.h"
    $37 = $36 ? 0 : 0; //@line 5081 "src/sprites/../puun/gf/../../other/stb_image.h"
    $0 = $37; //@line 5081 "src/sprites/../puun/gf/../../other/stb_image.h"
    $198 = $0; //@line 5207 "src/sprites/../puun/gf/../../other/stb_image.h"
    STACKTOP = sp;return ($198|0); //@line 5207 "src/sprites/../puun/gf/../../other/stb_image.h"
   }
   $38 = $1; //@line 5093 "src/sprites/../puun/gf/../../other/stb_image.h"
   $39 = (_stbi__get16be($38)|0); //@line 5093 "src/sprites/../puun/gf/../../other/stb_image.h"
   $40 = ($39|0)!=(3); //@line 5093 "src/sprites/../puun/gf/../../other/stb_image.h"
   if ($40) {
    $41 = (_stbi__err(9952)|0); //@line 5094 "src/sprites/../puun/gf/../../other/stb_image.h"
    $42 = ($41|0)!=(0); //@line 5094 "src/sprites/../puun/gf/../../other/stb_image.h"
    $43 = $42 ? 0 : 0; //@line 5094 "src/sprites/../puun/gf/../../other/stb_image.h"
    $0 = $43; //@line 5094 "src/sprites/../puun/gf/../../other/stb_image.h"
    $198 = $0; //@line 5207 "src/sprites/../puun/gf/../../other/stb_image.h"
    STACKTOP = sp;return ($198|0); //@line 5207 "src/sprites/../puun/gf/../../other/stb_image.h"
   }
   $44 = $1; //@line 5097 "src/sprites/../puun/gf/../../other/stb_image.h"
   $45 = $1; //@line 5097 "src/sprites/../puun/gf/../../other/stb_image.h"
   $46 = (_stbi__get32be($45)|0); //@line 5097 "src/sprites/../puun/gf/../../other/stb_image.h"
   _stbi__skip($44,$46); //@line 5097 "src/sprites/../puun/gf/../../other/stb_image.h"
   $47 = $1; //@line 5100 "src/sprites/../puun/gf/../../other/stb_image.h"
   $48 = $1; //@line 5100 "src/sprites/../puun/gf/../../other/stb_image.h"
   $49 = (_stbi__get32be($48)|0); //@line 5100 "src/sprites/../puun/gf/../../other/stb_image.h"
   _stbi__skip($47,$49); //@line 5100 "src/sprites/../puun/gf/../../other/stb_image.h"
   $50 = $1; //@line 5103 "src/sprites/../puun/gf/../../other/stb_image.h"
   $51 = $1; //@line 5103 "src/sprites/../puun/gf/../../other/stb_image.h"
   $52 = (_stbi__get32be($51)|0); //@line 5103 "src/sprites/../puun/gf/../../other/stb_image.h"
   _stbi__skip($50,$52); //@line 5103 "src/sprites/../puun/gf/../../other/stb_image.h"
   $53 = $1; //@line 5109 "src/sprites/../puun/gf/../../other/stb_image.h"
   $54 = (_stbi__get16be($53)|0); //@line 5109 "src/sprites/../puun/gf/../../other/stb_image.h"
   $compression = $54; //@line 5109 "src/sprites/../puun/gf/../../other/stb_image.h"
   $55 = $compression; //@line 5110 "src/sprites/../puun/gf/../../other/stb_image.h"
   $56 = ($55|0)>(1); //@line 5110 "src/sprites/../puun/gf/../../other/stb_image.h"
   if ($56) {
    $57 = (_stbi__err(9648)|0); //@line 5111 "src/sprites/../puun/gf/../../other/stb_image.h"
    $58 = ($57|0)!=(0); //@line 5111 "src/sprites/../puun/gf/../../other/stb_image.h"
    $59 = $58 ? 0 : 0; //@line 5111 "src/sprites/../puun/gf/../../other/stb_image.h"
    $0 = $59; //@line 5111 "src/sprites/../puun/gf/../../other/stb_image.h"
    $198 = $0; //@line 5207 "src/sprites/../puun/gf/../../other/stb_image.h"
    STACKTOP = sp;return ($198|0); //@line 5207 "src/sprites/../puun/gf/../../other/stb_image.h"
   }
   $60 = $w; //@line 5114 "src/sprites/../puun/gf/../../other/stb_image.h"
   $61 = $60<<2; //@line 5114 "src/sprites/../puun/gf/../../other/stb_image.h"
   $62 = $h; //@line 5114 "src/sprites/../puun/gf/../../other/stb_image.h"
   $63 = Math_imul($61, $62)|0; //@line 5114 "src/sprites/../puun/gf/../../other/stb_image.h"
   $64 = (_stbi__malloc($63)|0); //@line 5114 "src/sprites/../puun/gf/../../other/stb_image.h"
   $out = $64; //@line 5114 "src/sprites/../puun/gf/../../other/stb_image.h"
   $65 = $out; //@line 5115 "src/sprites/../puun/gf/../../other/stb_image.h"
   $66 = ($65|0)!=(0|0); //@line 5115 "src/sprites/../puun/gf/../../other/stb_image.h"
   if (!($66)) {
    $67 = (_stbi__err(7464)|0); //@line 5115 "src/sprites/../puun/gf/../../other/stb_image.h"
    $68 = ($67|0)!=(0); //@line 5115 "src/sprites/../puun/gf/../../other/stb_image.h"
    $69 = $68 ? 0 : 0; //@line 5115 "src/sprites/../puun/gf/../../other/stb_image.h"
    $0 = $69; //@line 5115 "src/sprites/../puun/gf/../../other/stb_image.h"
    $198 = $0; //@line 5207 "src/sprites/../puun/gf/../../other/stb_image.h"
    STACKTOP = sp;return ($198|0); //@line 5207 "src/sprites/../puun/gf/../../other/stb_image.h"
   }
   $70 = $w; //@line 5116 "src/sprites/../puun/gf/../../other/stb_image.h"
   $71 = $h; //@line 5116 "src/sprites/../puun/gf/../../other/stb_image.h"
   $72 = Math_imul($70, $71)|0; //@line 5116 "src/sprites/../puun/gf/../../other/stb_image.h"
   $pixelCount = $72; //@line 5116 "src/sprites/../puun/gf/../../other/stb_image.h"
   $73 = $compression; //@line 5122 "src/sprites/../puun/gf/../../other/stb_image.h"
   $74 = ($73|0)!=(0); //@line 5122 "src/sprites/../puun/gf/../../other/stb_image.h"
   if ($74) {
    $75 = $1; //@line 5133 "src/sprites/../puun/gf/../../other/stb_image.h"
    $76 = $h; //@line 5133 "src/sprites/../puun/gf/../../other/stb_image.h"
    $77 = $channelCount; //@line 5133 "src/sprites/../puun/gf/../../other/stb_image.h"
    $78 = Math_imul($76, $77)|0; //@line 5133 "src/sprites/../puun/gf/../../other/stb_image.h"
    $79 = $78<<1; //@line 5133 "src/sprites/../puun/gf/../../other/stb_image.h"
    _stbi__skip($75,$79); //@line 5133 "src/sprites/../puun/gf/../../other/stb_image.h"
    $channel = 0; //@line 5136 "src/sprites/../puun/gf/../../other/stb_image.h"
    while(1) {
     $80 = $channel; //@line 5136 "src/sprites/../puun/gf/../../other/stb_image.h"
     $81 = ($80|0)<(4); //@line 5136 "src/sprites/../puun/gf/../../other/stb_image.h"
     if (!($81)) {
      break;
     }
     $82 = $out; //@line 5139 "src/sprites/../puun/gf/../../other/stb_image.h"
     $83 = $channel; //@line 5139 "src/sprites/../puun/gf/../../other/stb_image.h"
     $84 = (($82) + ($83)|0); //@line 5139 "src/sprites/../puun/gf/../../other/stb_image.h"
     $p = $84; //@line 5139 "src/sprites/../puun/gf/../../other/stb_image.h"
     $85 = $channel; //@line 5140 "src/sprites/../puun/gf/../../other/stb_image.h"
     $86 = $channelCount; //@line 5140 "src/sprites/../puun/gf/../../other/stb_image.h"
     $87 = ($85|0)>=($86|0); //@line 5140 "src/sprites/../puun/gf/../../other/stb_image.h"
     if ($87) {
      $i = 0; //@line 5142 "src/sprites/../puun/gf/../../other/stb_image.h"
      while(1) {
       $88 = $i; //@line 5142 "src/sprites/../puun/gf/../../other/stb_image.h"
       $89 = $pixelCount; //@line 5142 "src/sprites/../puun/gf/../../other/stb_image.h"
       $90 = ($88|0)<($89|0); //@line 5142 "src/sprites/../puun/gf/../../other/stb_image.h"
       if (!($90)) {
        break;
       }
       $91 = $channel; //@line 5142 "src/sprites/../puun/gf/../../other/stb_image.h"
       $92 = ($91|0)==(3); //@line 5142 "src/sprites/../puun/gf/../../other/stb_image.h"
       $93 = $92 ? 255 : 0; //@line 5142 "src/sprites/../puun/gf/../../other/stb_image.h"
       $94 = $93&255; //@line 5142 "src/sprites/../puun/gf/../../other/stb_image.h"
       $95 = $p; //@line 5142 "src/sprites/../puun/gf/../../other/stb_image.h"
       HEAP8[$95>>0] = $94; //@line 5142 "src/sprites/../puun/gf/../../other/stb_image.h"
       $96 = $p; //@line 5142 "src/sprites/../puun/gf/../../other/stb_image.h"
       $97 = (($96) + 4|0); //@line 5142 "src/sprites/../puun/gf/../../other/stb_image.h"
       $p = $97; //@line 5142 "src/sprites/../puun/gf/../../other/stb_image.h"
       $98 = $i; //@line 5142 "src/sprites/../puun/gf/../../other/stb_image.h"
       $99 = (($98) + 1)|0; //@line 5142 "src/sprites/../puun/gf/../../other/stb_image.h"
       $i = $99; //@line 5142 "src/sprites/../puun/gf/../../other/stb_image.h"
      }
     } else {
      $count = 0; //@line 5145 "src/sprites/../puun/gf/../../other/stb_image.h"
      while(1) {
       $100 = $count; //@line 5146 "src/sprites/../puun/gf/../../other/stb_image.h"
       $101 = $pixelCount; //@line 5146 "src/sprites/../puun/gf/../../other/stb_image.h"
       $102 = ($100|0)<($101|0); //@line 5146 "src/sprites/../puun/gf/../../other/stb_image.h"
       if (!($102)) {
        break;
       }
       $103 = $1; //@line 5147 "src/sprites/../puun/gf/../../other/stb_image.h"
       $104 = (_stbi__get8($103)|0); //@line 5147 "src/sprites/../puun/gf/../../other/stb_image.h"
       $105 = $104&255; //@line 5147 "src/sprites/../puun/gf/../../other/stb_image.h"
       $len = $105; //@line 5147 "src/sprites/../puun/gf/../../other/stb_image.h"
       $106 = $len; //@line 5148 "src/sprites/../puun/gf/../../other/stb_image.h"
       $107 = ($106|0)==(128); //@line 5148 "src/sprites/../puun/gf/../../other/stb_image.h"
       if ($107) {
       } else {
        $108 = $len; //@line 5150 "src/sprites/../puun/gf/../../other/stb_image.h"
        $109 = ($108|0)<(128); //@line 5150 "src/sprites/../puun/gf/../../other/stb_image.h"
        if ($109) {
         $110 = $len; //@line 5152 "src/sprites/../puun/gf/../../other/stb_image.h"
         $111 = (($110) + 1)|0; //@line 5152 "src/sprites/../puun/gf/../../other/stb_image.h"
         $len = $111; //@line 5152 "src/sprites/../puun/gf/../../other/stb_image.h"
         $112 = $len; //@line 5153 "src/sprites/../puun/gf/../../other/stb_image.h"
         $113 = $count; //@line 5153 "src/sprites/../puun/gf/../../other/stb_image.h"
         $114 = (($113) + ($112))|0; //@line 5153 "src/sprites/../puun/gf/../../other/stb_image.h"
         $count = $114; //@line 5153 "src/sprites/../puun/gf/../../other/stb_image.h"
         while(1) {
          $115 = $len; //@line 5154 "src/sprites/../puun/gf/../../other/stb_image.h"
          $116 = ($115|0)!=(0); //@line 5154 "src/sprites/../puun/gf/../../other/stb_image.h"
          if (!($116)) {
           break;
          }
          $117 = $1; //@line 5155 "src/sprites/../puun/gf/../../other/stb_image.h"
          $118 = (_stbi__get8($117)|0); //@line 5155 "src/sprites/../puun/gf/../../other/stb_image.h"
          $119 = $p; //@line 5155 "src/sprites/../puun/gf/../../other/stb_image.h"
          HEAP8[$119>>0] = $118; //@line 5155 "src/sprites/../puun/gf/../../other/stb_image.h"
          $120 = $p; //@line 5156 "src/sprites/../puun/gf/../../other/stb_image.h"
          $121 = (($120) + 4|0); //@line 5156 "src/sprites/../puun/gf/../../other/stb_image.h"
          $p = $121; //@line 5156 "src/sprites/../puun/gf/../../other/stb_image.h"
          $122 = $len; //@line 5157 "src/sprites/../puun/gf/../../other/stb_image.h"
          $123 = (($122) + -1)|0; //@line 5157 "src/sprites/../puun/gf/../../other/stb_image.h"
          $len = $123; //@line 5157 "src/sprites/../puun/gf/../../other/stb_image.h"
         }
        } else {
         $124 = $len; //@line 5159 "src/sprites/../puun/gf/../../other/stb_image.h"
         $125 = ($124|0)>(128); //@line 5159 "src/sprites/../puun/gf/../../other/stb_image.h"
         if ($125) {
          $126 = $len; //@line 5163 "src/sprites/../puun/gf/../../other/stb_image.h"
          $127 = $126 ^ 255; //@line 5163 "src/sprites/../puun/gf/../../other/stb_image.h"
          $len = $127; //@line 5163 "src/sprites/../puun/gf/../../other/stb_image.h"
          $128 = $len; //@line 5164 "src/sprites/../puun/gf/../../other/stb_image.h"
          $129 = (($128) + 2)|0; //@line 5164 "src/sprites/../puun/gf/../../other/stb_image.h"
          $len = $129; //@line 5164 "src/sprites/../puun/gf/../../other/stb_image.h"
          $130 = $1; //@line 5165 "src/sprites/../puun/gf/../../other/stb_image.h"
          $131 = (_stbi__get8($130)|0); //@line 5165 "src/sprites/../puun/gf/../../other/stb_image.h"
          $val = $131; //@line 5165 "src/sprites/../puun/gf/../../other/stb_image.h"
          $132 = $len; //@line 5166 "src/sprites/../puun/gf/../../other/stb_image.h"
          $133 = $count; //@line 5166 "src/sprites/../puun/gf/../../other/stb_image.h"
          $134 = (($133) + ($132))|0; //@line 5166 "src/sprites/../puun/gf/../../other/stb_image.h"
          $count = $134; //@line 5166 "src/sprites/../puun/gf/../../other/stb_image.h"
          while(1) {
           $135 = $len; //@line 5167 "src/sprites/../puun/gf/../../other/stb_image.h"
           $136 = ($135|0)!=(0); //@line 5167 "src/sprites/../puun/gf/../../other/stb_image.h"
           if (!($136)) {
            break;
           }
           $137 = $val; //@line 5168 "src/sprites/../puun/gf/../../other/stb_image.h"
           $138 = $p; //@line 5168 "src/sprites/../puun/gf/../../other/stb_image.h"
           HEAP8[$138>>0] = $137; //@line 5168 "src/sprites/../puun/gf/../../other/stb_image.h"
           $139 = $p; //@line 5169 "src/sprites/../puun/gf/../../other/stb_image.h"
           $140 = (($139) + 4|0); //@line 5169 "src/sprites/../puun/gf/../../other/stb_image.h"
           $p = $140; //@line 5169 "src/sprites/../puun/gf/../../other/stb_image.h"
           $141 = $len; //@line 5170 "src/sprites/../puun/gf/../../other/stb_image.h"
           $142 = (($141) + -1)|0; //@line 5170 "src/sprites/../puun/gf/../../other/stb_image.h"
           $len = $142; //@line 5170 "src/sprites/../puun/gf/../../other/stb_image.h"
          }
         }
        }
       }
      }
     }
     $143 = $channel; //@line 5136 "src/sprites/../puun/gf/../../other/stb_image.h"
     $144 = (($143) + 1)|0; //@line 5136 "src/sprites/../puun/gf/../../other/stb_image.h"
     $channel = $144; //@line 5136 "src/sprites/../puun/gf/../../other/stb_image.h"
    }
   } else {
    $channel = 0; //@line 5182 "src/sprites/../puun/gf/../../other/stb_image.h"
    while(1) {
     $145 = $channel; //@line 5182 "src/sprites/../puun/gf/../../other/stb_image.h"
     $146 = ($145|0)<(4); //@line 5182 "src/sprites/../puun/gf/../../other/stb_image.h"
     if (!($146)) {
      break;
     }
     $147 = $out; //@line 5185 "src/sprites/../puun/gf/../../other/stb_image.h"
     $148 = $channel; //@line 5185 "src/sprites/../puun/gf/../../other/stb_image.h"
     $149 = (($147) + ($148)|0); //@line 5185 "src/sprites/../puun/gf/../../other/stb_image.h"
     $p1 = $149; //@line 5185 "src/sprites/../puun/gf/../../other/stb_image.h"
     $150 = $channel; //@line 5186 "src/sprites/../puun/gf/../../other/stb_image.h"
     $151 = $channelCount; //@line 5186 "src/sprites/../puun/gf/../../other/stb_image.h"
     $152 = ($150|0)>($151|0); //@line 5186 "src/sprites/../puun/gf/../../other/stb_image.h"
     if ($152) {
      $i = 0; //@line 5188 "src/sprites/../puun/gf/../../other/stb_image.h"
      while(1) {
       $153 = $i; //@line 5188 "src/sprites/../puun/gf/../../other/stb_image.h"
       $154 = $pixelCount; //@line 5188 "src/sprites/../puun/gf/../../other/stb_image.h"
       $155 = ($153|0)<($154|0); //@line 5188 "src/sprites/../puun/gf/../../other/stb_image.h"
       if (!($155)) {
        break;
       }
       $156 = $channel; //@line 5188 "src/sprites/../puun/gf/../../other/stb_image.h"
       $157 = ($156|0)==(3); //@line 5188 "src/sprites/../puun/gf/../../other/stb_image.h"
       $158 = $157 ? 255 : 0; //@line 5188 "src/sprites/../puun/gf/../../other/stb_image.h"
       $159 = $158&255; //@line 5188 "src/sprites/../puun/gf/../../other/stb_image.h"
       $160 = $p1; //@line 5188 "src/sprites/../puun/gf/../../other/stb_image.h"
       HEAP8[$160>>0] = $159; //@line 5188 "src/sprites/../puun/gf/../../other/stb_image.h"
       $161 = $p1; //@line 5188 "src/sprites/../puun/gf/../../other/stb_image.h"
       $162 = (($161) + 4|0); //@line 5188 "src/sprites/../puun/gf/../../other/stb_image.h"
       $p1 = $162; //@line 5188 "src/sprites/../puun/gf/../../other/stb_image.h"
       $163 = $i; //@line 5188 "src/sprites/../puun/gf/../../other/stb_image.h"
       $164 = (($163) + 1)|0; //@line 5188 "src/sprites/../puun/gf/../../other/stb_image.h"
       $i = $164; //@line 5188 "src/sprites/../puun/gf/../../other/stb_image.h"
      }
     } else {
      $i = 0; //@line 5191 "src/sprites/../puun/gf/../../other/stb_image.h"
      while(1) {
       $165 = $i; //@line 5191 "src/sprites/../puun/gf/../../other/stb_image.h"
       $166 = $pixelCount; //@line 5191 "src/sprites/../puun/gf/../../other/stb_image.h"
       $167 = ($165|0)<($166|0); //@line 5191 "src/sprites/../puun/gf/../../other/stb_image.h"
       if (!($167)) {
        break;
       }
       $168 = $1; //@line 5192 "src/sprites/../puun/gf/../../other/stb_image.h"
       $169 = (_stbi__get8($168)|0); //@line 5192 "src/sprites/../puun/gf/../../other/stb_image.h"
       $170 = $p1; //@line 5192 "src/sprites/../puun/gf/../../other/stb_image.h"
       HEAP8[$170>>0] = $169; //@line 5192 "src/sprites/../puun/gf/../../other/stb_image.h"
       $171 = $p1; //@line 5192 "src/sprites/../puun/gf/../../other/stb_image.h"
       $172 = (($171) + 4|0); //@line 5192 "src/sprites/../puun/gf/../../other/stb_image.h"
       $p1 = $172; //@line 5192 "src/sprites/../puun/gf/../../other/stb_image.h"
       $173 = $i; //@line 5191 "src/sprites/../puun/gf/../../other/stb_image.h"
       $174 = (($173) + 1)|0; //@line 5191 "src/sprites/../puun/gf/../../other/stb_image.h"
       $i = $174; //@line 5191 "src/sprites/../puun/gf/../../other/stb_image.h"
      }
     }
     $175 = $channel; //@line 5182 "src/sprites/../puun/gf/../../other/stb_image.h"
     $176 = (($175) + 1)|0; //@line 5182 "src/sprites/../puun/gf/../../other/stb_image.h"
     $channel = $176; //@line 5182 "src/sprites/../puun/gf/../../other/stb_image.h"
    }
   }
   $177 = $5; //@line 5197 "src/sprites/../puun/gf/../../other/stb_image.h"
   $178 = ($177|0)!=(0); //@line 5197 "src/sprites/../puun/gf/../../other/stb_image.h"
   do {
    if ($178) {
     $179 = $5; //@line 5197 "src/sprites/../puun/gf/../../other/stb_image.h"
     $180 = ($179|0)!=(4); //@line 5197 "src/sprites/../puun/gf/../../other/stb_image.h"
     if ($180) {
      $181 = $out; //@line 5198 "src/sprites/../puun/gf/../../other/stb_image.h"
      $182 = $5; //@line 5198 "src/sprites/../puun/gf/../../other/stb_image.h"
      $183 = $w; //@line 5198 "src/sprites/../puun/gf/../../other/stb_image.h"
      $184 = $h; //@line 5198 "src/sprites/../puun/gf/../../other/stb_image.h"
      $185 = (_stbi__convert_format($181,4,$182,$183,$184)|0); //@line 5198 "src/sprites/../puun/gf/../../other/stb_image.h"
      $out = $185; //@line 5198 "src/sprites/../puun/gf/../../other/stb_image.h"
      $186 = $out; //@line 5199 "src/sprites/../puun/gf/../../other/stb_image.h"
      $187 = ($186|0)==(0|0); //@line 5199 "src/sprites/../puun/gf/../../other/stb_image.h"
      if (!($187)) {
       break;
      }
      $188 = $out; //@line 5199 "src/sprites/../puun/gf/../../other/stb_image.h"
      $0 = $188; //@line 5199 "src/sprites/../puun/gf/../../other/stb_image.h"
      $198 = $0; //@line 5207 "src/sprites/../puun/gf/../../other/stb_image.h"
      STACKTOP = sp;return ($198|0); //@line 5207 "src/sprites/../puun/gf/../../other/stb_image.h"
     }
    }
   } while(0);
   $189 = $4; //@line 5202 "src/sprites/../puun/gf/../../other/stb_image.h"
   $190 = ($189|0)!=(0|0); //@line 5202 "src/sprites/../puun/gf/../../other/stb_image.h"
   if ($190) {
    $191 = $channelCount; //@line 5202 "src/sprites/../puun/gf/../../other/stb_image.h"
    $192 = $4; //@line 5202 "src/sprites/../puun/gf/../../other/stb_image.h"
    HEAP32[$192>>2] = $191; //@line 5202 "src/sprites/../puun/gf/../../other/stb_image.h"
   }
   $193 = $h; //@line 5203 "src/sprites/../puun/gf/../../other/stb_image.h"
   $194 = $3; //@line 5203 "src/sprites/../puun/gf/../../other/stb_image.h"
   HEAP32[$194>>2] = $193; //@line 5203 "src/sprites/../puun/gf/../../other/stb_image.h"
   $195 = $w; //@line 5204 "src/sprites/../puun/gf/../../other/stb_image.h"
   $196 = $2; //@line 5204 "src/sprites/../puun/gf/../../other/stb_image.h"
   HEAP32[$196>>2] = $195; //@line 5204 "src/sprites/../puun/gf/../../other/stb_image.h"
   $197 = $out; //@line 5206 "src/sprites/../puun/gf/../../other/stb_image.h"
   $0 = $197; //@line 5206 "src/sprites/../puun/gf/../../other/stb_image.h"
   $198 = $0; //@line 5207 "src/sprites/../puun/gf/../../other/stb_image.h"
   STACKTOP = sp;return ($198|0); //@line 5207 "src/sprites/../puun/gf/../../other/stb_image.h"
  }
 }
 $25 = (_stbi__err(9904)|0); //@line 5073 "src/sprites/../puun/gf/../../other/stb_image.h"
 $26 = ($25|0)!=(0); //@line 5073 "src/sprites/../puun/gf/../../other/stb_image.h"
 $27 = $26 ? 0 : 0; //@line 5073 "src/sprites/../puun/gf/../../other/stb_image.h"
 $0 = $27; //@line 5073 "src/sprites/../puun/gf/../../other/stb_image.h"
 $198 = $0; //@line 5207 "src/sprites/../puun/gf/../../other/stb_image.h"
 STACKTOP = sp;return ($198|0); //@line 5207 "src/sprites/../puun/gf/../../other/stb_image.h"
}
function _stbi__psd_test($s) {
 $s = $s|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $r = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $s;
 $1 = $0; //@line 5046 "src/sprites/../puun/gf/../../other/stb_image.h"
 $2 = (_stbi__get32be($1)|0); //@line 5046 "src/sprites/../puun/gf/../../other/stb_image.h"
 $3 = ($2|0)==(943870035); //@line 5046 "src/sprites/../puun/gf/../../other/stb_image.h"
 $4 = $3&1; //@line 5046 "src/sprites/../puun/gf/../../other/stb_image.h"
 $r = $4; //@line 5046 "src/sprites/../puun/gf/../../other/stb_image.h"
 $5 = $0; //@line 5047 "src/sprites/../puun/gf/../../other/stb_image.h"
 _stbi__rewind($5); //@line 5047 "src/sprites/../puun/gf/../../other/stb_image.h"
 $6 = $r; //@line 5048 "src/sprites/../puun/gf/../../other/stb_image.h"
 STACKTOP = sp;return ($6|0); //@line 5048 "src/sprites/../puun/gf/../../other/stb_image.h"
}
function _stbi__gif_load($s,$x,$y,$comp,$req_comp) {
 $s = $s|0;
 $x = $x|0;
 $y = $y|0;
 $comp = $comp|0;
 $req_comp = $req_comp|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $g = 0, $u = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 18544|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $g = sp;
 $0 = $s;
 $1 = $x;
 $2 = $y;
 $3 = $comp;
 $4 = $req_comp;
 $u = 0; //@line 5751 "src/sprites/../puun/gf/../../other/stb_image.h"
 _memset(($g|0),0,18508)|0; //@line 5753 "src/sprites/../puun/gf/../../other/stb_image.h"
 $5 = $0; //@line 5755 "src/sprites/../puun/gf/../../other/stb_image.h"
 $6 = $3; //@line 5755 "src/sprites/../puun/gf/../../other/stb_image.h"
 $7 = $4; //@line 5755 "src/sprites/../puun/gf/../../other/stb_image.h"
 $8 = (_stbi__gif_load_next($5,$g,$6,$7)|0); //@line 5755 "src/sprites/../puun/gf/../../other/stb_image.h"
 $u = $8; //@line 5755 "src/sprites/../puun/gf/../../other/stb_image.h"
 $9 = $u; //@line 5756 "src/sprites/../puun/gf/../../other/stb_image.h"
 $10 = $0; //@line 5756 "src/sprites/../puun/gf/../../other/stb_image.h"
 $11 = ($9|0)==($10|0); //@line 5756 "src/sprites/../puun/gf/../../other/stb_image.h"
 if ($11) {
  $u = 0; //@line 5756 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $12 = $u; //@line 5757 "src/sprites/../puun/gf/../../other/stb_image.h"
 $13 = ($12|0)!=(0|0); //@line 5757 "src/sprites/../puun/gf/../../other/stb_image.h"
 if (!($13)) {
  $19 = $u; //@line 5762 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($19|0); //@line 5762 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $14 = HEAP32[$g>>2]|0; //@line 5758 "src/sprites/../puun/gf/../../other/stb_image.h"
 $15 = $1; //@line 5758 "src/sprites/../puun/gf/../../other/stb_image.h"
 HEAP32[$15>>2] = $14; //@line 5758 "src/sprites/../puun/gf/../../other/stb_image.h"
 $16 = (($g) + 4|0); //@line 5759 "src/sprites/../puun/gf/../../other/stb_image.h"
 $17 = HEAP32[$16>>2]|0; //@line 5759 "src/sprites/../puun/gf/../../other/stb_image.h"
 $18 = $2; //@line 5759 "src/sprites/../puun/gf/../../other/stb_image.h"
 HEAP32[$18>>2] = $17; //@line 5759 "src/sprites/../puun/gf/../../other/stb_image.h"
 $19 = $u; //@line 5762 "src/sprites/../puun/gf/../../other/stb_image.h"
 STACKTOP = sp;return ($19|0); //@line 5762 "src/sprites/../puun/gf/../../other/stb_image.h"
}
function _stbi__gif_load_next($s,$g,$comp,$req_comp) {
 $s = $s|0;
 $g = $g|0;
 $comp = $comp|0;
 $req_comp = $req_comp|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0;
 var $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0;
 var $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0;
 var $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0;
 var $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0;
 var $279 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0;
 var $h = 0, $i = 0, $len = 0, $o = 0, $old_out = 0, $w = 0, $x = 0, $y = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $s;
 $2 = $g;
 $3 = $comp;
 $4 = $req_comp;
 $old_out = 0; //@line 5652 "src/sprites/../puun/gf/../../other/stb_image.h"
 $5 = $2; //@line 5654 "src/sprites/../puun/gf/../../other/stb_image.h"
 $6 = (($5) + 8|0); //@line 5654 "src/sprites/../puun/gf/../../other/stb_image.h"
 $7 = HEAP32[$6>>2]|0; //@line 5654 "src/sprites/../puun/gf/../../other/stb_image.h"
 $8 = ($7|0)==(0|0); //@line 5654 "src/sprites/../puun/gf/../../other/stb_image.h"
 do {
  if ($8) {
   $9 = $1; //@line 5655 "src/sprites/../puun/gf/../../other/stb_image.h"
   $10 = $2; //@line 5655 "src/sprites/../puun/gf/../../other/stb_image.h"
   $11 = $3; //@line 5655 "src/sprites/../puun/gf/../../other/stb_image.h"
   $12 = (_stbi__gif_header($9,$10,$11,0)|0); //@line 5655 "src/sprites/../puun/gf/../../other/stb_image.h"
   $13 = ($12|0)!=(0); //@line 5655 "src/sprites/../puun/gf/../../other/stb_image.h"
   if (!($13)) {
    $0 = 0; //@line 5655 "src/sprites/../puun/gf/../../other/stb_image.h"
    $279 = $0; //@line 5747 "src/sprites/../puun/gf/../../other/stb_image.h"
    STACKTOP = sp;return ($279|0); //@line 5747 "src/sprites/../puun/gf/../../other/stb_image.h"
   }
   $14 = $2; //@line 5656 "src/sprites/../puun/gf/../../other/stb_image.h"
   $15 = HEAP32[$14>>2]|0; //@line 5656 "src/sprites/../puun/gf/../../other/stb_image.h"
   $16 = $15<<2; //@line 5656 "src/sprites/../puun/gf/../../other/stb_image.h"
   $17 = $2; //@line 5656 "src/sprites/../puun/gf/../../other/stb_image.h"
   $18 = (($17) + 4|0); //@line 5656 "src/sprites/../puun/gf/../../other/stb_image.h"
   $19 = HEAP32[$18>>2]|0; //@line 5656 "src/sprites/../puun/gf/../../other/stb_image.h"
   $20 = Math_imul($16, $19)|0; //@line 5656 "src/sprites/../puun/gf/../../other/stb_image.h"
   $21 = (_stbi__malloc($20)|0); //@line 5656 "src/sprites/../puun/gf/../../other/stb_image.h"
   $22 = $2; //@line 5656 "src/sprites/../puun/gf/../../other/stb_image.h"
   $23 = (($22) + 8|0); //@line 5656 "src/sprites/../puun/gf/../../other/stb_image.h"
   HEAP32[$23>>2] = $21; //@line 5656 "src/sprites/../puun/gf/../../other/stb_image.h"
   $24 = $2; //@line 5657 "src/sprites/../puun/gf/../../other/stb_image.h"
   $25 = (($24) + 8|0); //@line 5657 "src/sprites/../puun/gf/../../other/stb_image.h"
   $26 = HEAP32[$25>>2]|0; //@line 5657 "src/sprites/../puun/gf/../../other/stb_image.h"
   $27 = ($26|0)==(0|0); //@line 5657 "src/sprites/../puun/gf/../../other/stb_image.h"
   if (!($27)) {
    $31 = $2; //@line 5658 "src/sprites/../puun/gf/../../other/stb_image.h"
    _stbi__fill_gif_background($31); //@line 5658 "src/sprites/../puun/gf/../../other/stb_image.h"
    break;
   }
   $28 = (_stbi__err(7464)|0); //@line 5657 "src/sprites/../puun/gf/../../other/stb_image.h"
   $29 = ($28|0)!=(0); //@line 5657 "src/sprites/../puun/gf/../../other/stb_image.h"
   $30 = $29 ? 0 : 0; //@line 5657 "src/sprites/../puun/gf/../../other/stb_image.h"
   $0 = $30; //@line 5657 "src/sprites/../puun/gf/../../other/stb_image.h"
   $279 = $0; //@line 5747 "src/sprites/../puun/gf/../../other/stb_image.h"
   STACKTOP = sp;return ($279|0); //@line 5747 "src/sprites/../puun/gf/../../other/stb_image.h"
  } else {
   $32 = $2; //@line 5661 "src/sprites/../puun/gf/../../other/stb_image.h"
   $33 = (($32) + 28|0); //@line 5661 "src/sprites/../puun/gf/../../other/stb_image.h"
   $34 = HEAP32[$33>>2]|0; //@line 5661 "src/sprites/../puun/gf/../../other/stb_image.h"
   $35 = $34 & 28; //@line 5661 "src/sprites/../puun/gf/../../other/stb_image.h"
   $36 = $35 >> 2; //@line 5661 "src/sprites/../puun/gf/../../other/stb_image.h"
   $37 = ($36|0)==(3); //@line 5661 "src/sprites/../puun/gf/../../other/stb_image.h"
   do {
    if ($37) {
     $38 = $2; //@line 5662 "src/sprites/../puun/gf/../../other/stb_image.h"
     $39 = (($38) + 8|0); //@line 5662 "src/sprites/../puun/gf/../../other/stb_image.h"
     $40 = HEAP32[$39>>2]|0; //@line 5662 "src/sprites/../puun/gf/../../other/stb_image.h"
     $old_out = $40; //@line 5662 "src/sprites/../puun/gf/../../other/stb_image.h"
     $41 = $2; //@line 5663 "src/sprites/../puun/gf/../../other/stb_image.h"
     $42 = HEAP32[$41>>2]|0; //@line 5663 "src/sprites/../puun/gf/../../other/stb_image.h"
     $43 = $42<<2; //@line 5663 "src/sprites/../puun/gf/../../other/stb_image.h"
     $44 = $2; //@line 5663 "src/sprites/../puun/gf/../../other/stb_image.h"
     $45 = (($44) + 4|0); //@line 5663 "src/sprites/../puun/gf/../../other/stb_image.h"
     $46 = HEAP32[$45>>2]|0; //@line 5663 "src/sprites/../puun/gf/../../other/stb_image.h"
     $47 = Math_imul($43, $46)|0; //@line 5663 "src/sprites/../puun/gf/../../other/stb_image.h"
     $48 = (_stbi__malloc($47)|0); //@line 5663 "src/sprites/../puun/gf/../../other/stb_image.h"
     $49 = $2; //@line 5663 "src/sprites/../puun/gf/../../other/stb_image.h"
     $50 = (($49) + 8|0); //@line 5663 "src/sprites/../puun/gf/../../other/stb_image.h"
     HEAP32[$50>>2] = $48; //@line 5663 "src/sprites/../puun/gf/../../other/stb_image.h"
     $51 = $2; //@line 5664 "src/sprites/../puun/gf/../../other/stb_image.h"
     $52 = (($51) + 8|0); //@line 5664 "src/sprites/../puun/gf/../../other/stb_image.h"
     $53 = HEAP32[$52>>2]|0; //@line 5664 "src/sprites/../puun/gf/../../other/stb_image.h"
     $54 = ($53|0)==(0|0); //@line 5664 "src/sprites/../puun/gf/../../other/stb_image.h"
     if (!($54)) {
      $58 = $2; //@line 5665 "src/sprites/../puun/gf/../../other/stb_image.h"
      $59 = (($58) + 8|0); //@line 5665 "src/sprites/../puun/gf/../../other/stb_image.h"
      $60 = HEAP32[$59>>2]|0; //@line 5665 "src/sprites/../puun/gf/../../other/stb_image.h"
      $61 = $old_out; //@line 5665 "src/sprites/../puun/gf/../../other/stb_image.h"
      $62 = $2; //@line 5665 "src/sprites/../puun/gf/../../other/stb_image.h"
      $63 = HEAP32[$62>>2]|0; //@line 5665 "src/sprites/../puun/gf/../../other/stb_image.h"
      $64 = $2; //@line 5665 "src/sprites/../puun/gf/../../other/stb_image.h"
      $65 = (($64) + 4|0); //@line 5665 "src/sprites/../puun/gf/../../other/stb_image.h"
      $66 = HEAP32[$65>>2]|0; //@line 5665 "src/sprites/../puun/gf/../../other/stb_image.h"
      $67 = Math_imul($63, $66)|0; //@line 5665 "src/sprites/../puun/gf/../../other/stb_image.h"
      $68 = $67<<2; //@line 5665 "src/sprites/../puun/gf/../../other/stb_image.h"
      _memcpy(($60|0),($61|0),($68|0))|0; //@line 5665 "src/sprites/../puun/gf/../../other/stb_image.h"
      break;
     }
     $55 = (_stbi__err(7464)|0); //@line 5664 "src/sprites/../puun/gf/../../other/stb_image.h"
     $56 = ($55|0)!=(0); //@line 5664 "src/sprites/../puun/gf/../../other/stb_image.h"
     $57 = $56 ? 0 : 0; //@line 5664 "src/sprites/../puun/gf/../../other/stb_image.h"
     $0 = $57; //@line 5664 "src/sprites/../puun/gf/../../other/stb_image.h"
     $279 = $0; //@line 5747 "src/sprites/../puun/gf/../../other/stb_image.h"
     STACKTOP = sp;return ($279|0); //@line 5747 "src/sprites/../puun/gf/../../other/stb_image.h"
    }
   } while(0);
  }
 } while(0);
 while(1) {
  $69 = $1; //@line 5670 "src/sprites/../puun/gf/../../other/stb_image.h"
  $70 = (_stbi__get8($69)|0); //@line 5670 "src/sprites/../puun/gf/../../other/stb_image.h"
  $71 = $70&255; //@line 5670 "src/sprites/../puun/gf/../../other/stb_image.h"
  if ((($71|0) == 44)) {
   label = 14;
   break;
  } else if ((($71|0) == 59)) {
   label = 51;
   break;
  } else if (!((($71|0) == 33))) {
   label = 52;
   break;
  }
  $247 = $1; //@line 5724 "src/sprites/../puun/gf/../../other/stb_image.h"
  $248 = (_stbi__get8($247)|0); //@line 5724 "src/sprites/../puun/gf/../../other/stb_image.h"
  $249 = $248&255; //@line 5724 "src/sprites/../puun/gf/../../other/stb_image.h"
  $250 = ($249|0)==(249); //@line 5724 "src/sprites/../puun/gf/../../other/stb_image.h"
  do {
   if ($250) {
    $251 = $1; //@line 5725 "src/sprites/../puun/gf/../../other/stb_image.h"
    $252 = (_stbi__get8($251)|0); //@line 5725 "src/sprites/../puun/gf/../../other/stb_image.h"
    $253 = $252&255; //@line 5725 "src/sprites/../puun/gf/../../other/stb_image.h"
    $len = $253; //@line 5725 "src/sprites/../puun/gf/../../other/stb_image.h"
    $254 = $len; //@line 5726 "src/sprites/../puun/gf/../../other/stb_image.h"
    $255 = ($254|0)==(4); //@line 5726 "src/sprites/../puun/gf/../../other/stb_image.h"
    if (!($255)) {
     $267 = $1; //@line 5731 "src/sprites/../puun/gf/../../other/stb_image.h"
     $268 = $len; //@line 5731 "src/sprites/../puun/gf/../../other/stb_image.h"
     _stbi__skip($267,$268); //@line 5731 "src/sprites/../puun/gf/../../other/stb_image.h"
     break;
    }
    $256 = $1; //@line 5727 "src/sprites/../puun/gf/../../other/stb_image.h"
    $257 = (_stbi__get8($256)|0); //@line 5727 "src/sprites/../puun/gf/../../other/stb_image.h"
    $258 = $257&255; //@line 5727 "src/sprites/../puun/gf/../../other/stb_image.h"
    $259 = $2; //@line 5727 "src/sprites/../puun/gf/../../other/stb_image.h"
    $260 = (($259) + 28|0); //@line 5727 "src/sprites/../puun/gf/../../other/stb_image.h"
    HEAP32[$260>>2] = $258; //@line 5727 "src/sprites/../puun/gf/../../other/stb_image.h"
    $261 = $1; //@line 5728 "src/sprites/../puun/gf/../../other/stb_image.h"
    (_stbi__get16le($261)|0); //@line 5728 "src/sprites/../puun/gf/../../other/stb_image.h"
    $262 = $1; //@line 5729 "src/sprites/../puun/gf/../../other/stb_image.h"
    $263 = (_stbi__get8($262)|0); //@line 5729 "src/sprites/../puun/gf/../../other/stb_image.h"
    $264 = $263&255; //@line 5729 "src/sprites/../puun/gf/../../other/stb_image.h"
    $265 = $2; //@line 5729 "src/sprites/../puun/gf/../../other/stb_image.h"
    $266 = (($265) + 24|0); //@line 5729 "src/sprites/../puun/gf/../../other/stb_image.h"
    HEAP32[$266>>2] = $264; //@line 5729 "src/sprites/../puun/gf/../../other/stb_image.h"
    label = 47;
   } else {
    label = 47;
   }
  } while(0);
  if ((label|0) == 47) {
   label = 0;
   while(1) {
    $269 = $1; //@line 5735 "src/sprites/../puun/gf/../../other/stb_image.h"
    $270 = (_stbi__get8($269)|0); //@line 5735 "src/sprites/../puun/gf/../../other/stb_image.h"
    $271 = $270&255; //@line 5735 "src/sprites/../puun/gf/../../other/stb_image.h"
    $len = $271; //@line 5735 "src/sprites/../puun/gf/../../other/stb_image.h"
    $272 = ($271|0)!=(0); //@line 5735 "src/sprites/../puun/gf/../../other/stb_image.h"
    if (!($272)) {
     break;
    }
    $273 = $1; //@line 5736 "src/sprites/../puun/gf/../../other/stb_image.h"
    $274 = $len; //@line 5736 "src/sprites/../puun/gf/../../other/stb_image.h"
    _stbi__skip($273,$274); //@line 5736 "src/sprites/../puun/gf/../../other/stb_image.h"
   }
  }
 }
 if ((label|0) == 14) {
  $72 = $1; //@line 5676 "src/sprites/../puun/gf/../../other/stb_image.h"
  $73 = (_stbi__get16le($72)|0); //@line 5676 "src/sprites/../puun/gf/../../other/stb_image.h"
  $x = $73; //@line 5676 "src/sprites/../puun/gf/../../other/stb_image.h"
  $74 = $1; //@line 5677 "src/sprites/../puun/gf/../../other/stb_image.h"
  $75 = (_stbi__get16le($74)|0); //@line 5677 "src/sprites/../puun/gf/../../other/stb_image.h"
  $y = $75; //@line 5677 "src/sprites/../puun/gf/../../other/stb_image.h"
  $76 = $1; //@line 5678 "src/sprites/../puun/gf/../../other/stb_image.h"
  $77 = (_stbi__get16le($76)|0); //@line 5678 "src/sprites/../puun/gf/../../other/stb_image.h"
  $w = $77; //@line 5678 "src/sprites/../puun/gf/../../other/stb_image.h"
  $78 = $1; //@line 5679 "src/sprites/../puun/gf/../../other/stb_image.h"
  $79 = (_stbi__get16le($78)|0); //@line 5679 "src/sprites/../puun/gf/../../other/stb_image.h"
  $h = $79; //@line 5679 "src/sprites/../puun/gf/../../other/stb_image.h"
  $80 = $x; //@line 5680 "src/sprites/../puun/gf/../../other/stb_image.h"
  $81 = $w; //@line 5680 "src/sprites/../puun/gf/../../other/stb_image.h"
  $82 = (($80) + ($81))|0; //@line 5680 "src/sprites/../puun/gf/../../other/stb_image.h"
  $83 = $2; //@line 5680 "src/sprites/../puun/gf/../../other/stb_image.h"
  $84 = HEAP32[$83>>2]|0; //@line 5680 "src/sprites/../puun/gf/../../other/stb_image.h"
  $85 = ($82|0)>($84|0); //@line 5680 "src/sprites/../puun/gf/../../other/stb_image.h"
  if (!($85)) {
   $86 = $y; //@line 5680 "src/sprites/../puun/gf/../../other/stb_image.h"
   $87 = $h; //@line 5680 "src/sprites/../puun/gf/../../other/stb_image.h"
   $88 = (($86) + ($87))|0; //@line 5680 "src/sprites/../puun/gf/../../other/stb_image.h"
   $89 = $2; //@line 5680 "src/sprites/../puun/gf/../../other/stb_image.h"
   $90 = (($89) + 4|0); //@line 5680 "src/sprites/../puun/gf/../../other/stb_image.h"
   $91 = HEAP32[$90>>2]|0; //@line 5680 "src/sprites/../puun/gf/../../other/stb_image.h"
   $92 = ($88|0)>($91|0); //@line 5680 "src/sprites/../puun/gf/../../other/stb_image.h"
   if (!($92)) {
    $96 = $2; //@line 5683 "src/sprites/../puun/gf/../../other/stb_image.h"
    $97 = HEAP32[$96>>2]|0; //@line 5683 "src/sprites/../puun/gf/../../other/stb_image.h"
    $98 = $97<<2; //@line 5683 "src/sprites/../puun/gf/../../other/stb_image.h"
    $99 = $2; //@line 5683 "src/sprites/../puun/gf/../../other/stb_image.h"
    $100 = (($99) + 18504|0); //@line 5683 "src/sprites/../puun/gf/../../other/stb_image.h"
    HEAP32[$100>>2] = $98; //@line 5683 "src/sprites/../puun/gf/../../other/stb_image.h"
    $101 = $x; //@line 5684 "src/sprites/../puun/gf/../../other/stb_image.h"
    $102 = $101<<2; //@line 5684 "src/sprites/../puun/gf/../../other/stb_image.h"
    $103 = $2; //@line 5684 "src/sprites/../puun/gf/../../other/stb_image.h"
    $104 = (($103) + 18480|0); //@line 5684 "src/sprites/../puun/gf/../../other/stb_image.h"
    HEAP32[$104>>2] = $102; //@line 5684 "src/sprites/../puun/gf/../../other/stb_image.h"
    $105 = $y; //@line 5685 "src/sprites/../puun/gf/../../other/stb_image.h"
    $106 = $2; //@line 5685 "src/sprites/../puun/gf/../../other/stb_image.h"
    $107 = (($106) + 18504|0); //@line 5685 "src/sprites/../puun/gf/../../other/stb_image.h"
    $108 = HEAP32[$107>>2]|0; //@line 5685 "src/sprites/../puun/gf/../../other/stb_image.h"
    $109 = Math_imul($105, $108)|0; //@line 5685 "src/sprites/../puun/gf/../../other/stb_image.h"
    $110 = $2; //@line 5685 "src/sprites/../puun/gf/../../other/stb_image.h"
    $111 = (($110) + 18484|0); //@line 5685 "src/sprites/../puun/gf/../../other/stb_image.h"
    HEAP32[$111>>2] = $109; //@line 5685 "src/sprites/../puun/gf/../../other/stb_image.h"
    $112 = $2; //@line 5686 "src/sprites/../puun/gf/../../other/stb_image.h"
    $113 = (($112) + 18480|0); //@line 5686 "src/sprites/../puun/gf/../../other/stb_image.h"
    $114 = HEAP32[$113>>2]|0; //@line 5686 "src/sprites/../puun/gf/../../other/stb_image.h"
    $115 = $w; //@line 5686 "src/sprites/../puun/gf/../../other/stb_image.h"
    $116 = $115<<2; //@line 5686 "src/sprites/../puun/gf/../../other/stb_image.h"
    $117 = (($114) + ($116))|0; //@line 5686 "src/sprites/../puun/gf/../../other/stb_image.h"
    $118 = $2; //@line 5686 "src/sprites/../puun/gf/../../other/stb_image.h"
    $119 = (($118) + 18488|0); //@line 5686 "src/sprites/../puun/gf/../../other/stb_image.h"
    HEAP32[$119>>2] = $117; //@line 5686 "src/sprites/../puun/gf/../../other/stb_image.h"
    $120 = $2; //@line 5687 "src/sprites/../puun/gf/../../other/stb_image.h"
    $121 = (($120) + 18484|0); //@line 5687 "src/sprites/../puun/gf/../../other/stb_image.h"
    $122 = HEAP32[$121>>2]|0; //@line 5687 "src/sprites/../puun/gf/../../other/stb_image.h"
    $123 = $h; //@line 5687 "src/sprites/../puun/gf/../../other/stb_image.h"
    $124 = $2; //@line 5687 "src/sprites/../puun/gf/../../other/stb_image.h"
    $125 = (($124) + 18504|0); //@line 5687 "src/sprites/../puun/gf/../../other/stb_image.h"
    $126 = HEAP32[$125>>2]|0; //@line 5687 "src/sprites/../puun/gf/../../other/stb_image.h"
    $127 = Math_imul($123, $126)|0; //@line 5687 "src/sprites/../puun/gf/../../other/stb_image.h"
    $128 = (($122) + ($127))|0; //@line 5687 "src/sprites/../puun/gf/../../other/stb_image.h"
    $129 = $2; //@line 5687 "src/sprites/../puun/gf/../../other/stb_image.h"
    $130 = (($129) + 18492|0); //@line 5687 "src/sprites/../puun/gf/../../other/stb_image.h"
    HEAP32[$130>>2] = $128; //@line 5687 "src/sprites/../puun/gf/../../other/stb_image.h"
    $131 = $2; //@line 5688 "src/sprites/../puun/gf/../../other/stb_image.h"
    $132 = (($131) + 18480|0); //@line 5688 "src/sprites/../puun/gf/../../other/stb_image.h"
    $133 = HEAP32[$132>>2]|0; //@line 5688 "src/sprites/../puun/gf/../../other/stb_image.h"
    $134 = $2; //@line 5688 "src/sprites/../puun/gf/../../other/stb_image.h"
    $135 = (($134) + 18496|0); //@line 5688 "src/sprites/../puun/gf/../../other/stb_image.h"
    HEAP32[$135>>2] = $133; //@line 5688 "src/sprites/../puun/gf/../../other/stb_image.h"
    $136 = $2; //@line 5689 "src/sprites/../puun/gf/../../other/stb_image.h"
    $137 = (($136) + 18484|0); //@line 5689 "src/sprites/../puun/gf/../../other/stb_image.h"
    $138 = HEAP32[$137>>2]|0; //@line 5689 "src/sprites/../puun/gf/../../other/stb_image.h"
    $139 = $2; //@line 5689 "src/sprites/../puun/gf/../../other/stb_image.h"
    $140 = (($139) + 18500|0); //@line 5689 "src/sprites/../puun/gf/../../other/stb_image.h"
    HEAP32[$140>>2] = $138; //@line 5689 "src/sprites/../puun/gf/../../other/stb_image.h"
    $141 = $1; //@line 5691 "src/sprites/../puun/gf/../../other/stb_image.h"
    $142 = (_stbi__get8($141)|0); //@line 5691 "src/sprites/../puun/gf/../../other/stb_image.h"
    $143 = $142&255; //@line 5691 "src/sprites/../puun/gf/../../other/stb_image.h"
    $144 = $2; //@line 5691 "src/sprites/../puun/gf/../../other/stb_image.h"
    $145 = (($144) + 18476|0); //@line 5691 "src/sprites/../puun/gf/../../other/stb_image.h"
    HEAP32[$145>>2] = $143; //@line 5691 "src/sprites/../puun/gf/../../other/stb_image.h"
    $146 = $2; //@line 5693 "src/sprites/../puun/gf/../../other/stb_image.h"
    $147 = (($146) + 18476|0); //@line 5693 "src/sprites/../puun/gf/../../other/stb_image.h"
    $148 = HEAP32[$147>>2]|0; //@line 5693 "src/sprites/../puun/gf/../../other/stb_image.h"
    $149 = $148 & 64; //@line 5693 "src/sprites/../puun/gf/../../other/stb_image.h"
    $150 = ($149|0)!=(0); //@line 5693 "src/sprites/../puun/gf/../../other/stb_image.h"
    if ($150) {
     $151 = $2; //@line 5694 "src/sprites/../puun/gf/../../other/stb_image.h"
     $152 = (($151) + 18504|0); //@line 5694 "src/sprites/../puun/gf/../../other/stb_image.h"
     $153 = HEAP32[$152>>2]|0; //@line 5694 "src/sprites/../puun/gf/../../other/stb_image.h"
     $154 = $153<<3; //@line 5694 "src/sprites/../puun/gf/../../other/stb_image.h"
     $155 = $2; //@line 5694 "src/sprites/../puun/gf/../../other/stb_image.h"
     $156 = (($155) + 18472|0); //@line 5694 "src/sprites/../puun/gf/../../other/stb_image.h"
     HEAP32[$156>>2] = $154; //@line 5694 "src/sprites/../puun/gf/../../other/stb_image.h"
     $157 = $2; //@line 5695 "src/sprites/../puun/gf/../../other/stb_image.h"
     $158 = (($157) + 18468|0); //@line 5695 "src/sprites/../puun/gf/../../other/stb_image.h"
     HEAP32[$158>>2] = 3; //@line 5695 "src/sprites/../puun/gf/../../other/stb_image.h"
    } else {
     $159 = $2; //@line 5697 "src/sprites/../puun/gf/../../other/stb_image.h"
     $160 = (($159) + 18504|0); //@line 5697 "src/sprites/../puun/gf/../../other/stb_image.h"
     $161 = HEAP32[$160>>2]|0; //@line 5697 "src/sprites/../puun/gf/../../other/stb_image.h"
     $162 = $2; //@line 5697 "src/sprites/../puun/gf/../../other/stb_image.h"
     $163 = (($162) + 18472|0); //@line 5697 "src/sprites/../puun/gf/../../other/stb_image.h"
     HEAP32[$163>>2] = $161; //@line 5697 "src/sprites/../puun/gf/../../other/stb_image.h"
     $164 = $2; //@line 5698 "src/sprites/../puun/gf/../../other/stb_image.h"
     $165 = (($164) + 18468|0); //@line 5698 "src/sprites/../puun/gf/../../other/stb_image.h"
     HEAP32[$165>>2] = 0; //@line 5698 "src/sprites/../puun/gf/../../other/stb_image.h"
    }
    $166 = $2; //@line 5701 "src/sprites/../puun/gf/../../other/stb_image.h"
    $167 = (($166) + 18476|0); //@line 5701 "src/sprites/../puun/gf/../../other/stb_image.h"
    $168 = HEAP32[$167>>2]|0; //@line 5701 "src/sprites/../puun/gf/../../other/stb_image.h"
    $169 = $168 & 128; //@line 5701 "src/sprites/../puun/gf/../../other/stb_image.h"
    $170 = ($169|0)!=(0); //@line 5701 "src/sprites/../puun/gf/../../other/stb_image.h"
    if ($170) {
     $171 = $1; //@line 5702 "src/sprites/../puun/gf/../../other/stb_image.h"
     $172 = $2; //@line 5702 "src/sprites/../puun/gf/../../other/stb_image.h"
     $173 = (($172) + 1056|0); //@line 5702 "src/sprites/../puun/gf/../../other/stb_image.h"
     $174 = $2; //@line 5702 "src/sprites/../puun/gf/../../other/stb_image.h"
     $175 = (($174) + 18476|0); //@line 5702 "src/sprites/../puun/gf/../../other/stb_image.h"
     $176 = HEAP32[$175>>2]|0; //@line 5702 "src/sprites/../puun/gf/../../other/stb_image.h"
     $177 = $176 & 7; //@line 5702 "src/sprites/../puun/gf/../../other/stb_image.h"
     $178 = 2 << $177; //@line 5702 "src/sprites/../puun/gf/../../other/stb_image.h"
     $179 = $2; //@line 5702 "src/sprites/../puun/gf/../../other/stb_image.h"
     $180 = (($179) + 28|0); //@line 5702 "src/sprites/../puun/gf/../../other/stb_image.h"
     $181 = HEAP32[$180>>2]|0; //@line 5702 "src/sprites/../puun/gf/../../other/stb_image.h"
     $182 = $181 & 1; //@line 5702 "src/sprites/../puun/gf/../../other/stb_image.h"
     $183 = ($182|0)!=(0); //@line 5702 "src/sprites/../puun/gf/../../other/stb_image.h"
     if ($183) {
      $184 = $2; //@line 5702 "src/sprites/../puun/gf/../../other/stb_image.h"
      $185 = (($184) + 24|0); //@line 5702 "src/sprites/../puun/gf/../../other/stb_image.h"
      $186 = HEAP32[$185>>2]|0; //@line 5702 "src/sprites/../puun/gf/../../other/stb_image.h"
      $187 = $186;
     } else {
      $187 = -1;
     }
     _stbi__gif_parse_colortable($171,$173,$178,$187); //@line 5702 "src/sprites/../puun/gf/../../other/stb_image.h"
     $188 = $2; //@line 5703 "src/sprites/../puun/gf/../../other/stb_image.h"
     $189 = (($188) + 1056|0); //@line 5703 "src/sprites/../puun/gf/../../other/stb_image.h"
     $190 = $2; //@line 5703 "src/sprites/../puun/gf/../../other/stb_image.h"
     $191 = (($190) + 18464|0); //@line 5703 "src/sprites/../puun/gf/../../other/stb_image.h"
     HEAP32[$191>>2] = $189; //@line 5703 "src/sprites/../puun/gf/../../other/stb_image.h"
    } else {
     $192 = $2; //@line 5704 "src/sprites/../puun/gf/../../other/stb_image.h"
     $193 = (($192) + 12|0); //@line 5704 "src/sprites/../puun/gf/../../other/stb_image.h"
     $194 = HEAP32[$193>>2]|0; //@line 5704 "src/sprites/../puun/gf/../../other/stb_image.h"
     $195 = $194 & 128; //@line 5704 "src/sprites/../puun/gf/../../other/stb_image.h"
     $196 = ($195|0)!=(0); //@line 5704 "src/sprites/../puun/gf/../../other/stb_image.h"
     if (!($196)) {
      $226 = (_stbi__err(10000)|0); //@line 5711 "src/sprites/../puun/gf/../../other/stb_image.h"
      $227 = ($226|0)!=(0); //@line 5711 "src/sprites/../puun/gf/../../other/stb_image.h"
      $228 = $227 ? 0 : 0; //@line 5711 "src/sprites/../puun/gf/../../other/stb_image.h"
      $0 = $228; //@line 5711 "src/sprites/../puun/gf/../../other/stb_image.h"
      $279 = $0; //@line 5747 "src/sprites/../puun/gf/../../other/stb_image.h"
      STACKTOP = sp;return ($279|0); //@line 5747 "src/sprites/../puun/gf/../../other/stb_image.h"
     }
     $i = 0; //@line 5705 "src/sprites/../puun/gf/../../other/stb_image.h"
     while(1) {
      $197 = $i; //@line 5705 "src/sprites/../puun/gf/../../other/stb_image.h"
      $198 = ($197|0)<(256); //@line 5705 "src/sprites/../puun/gf/../../other/stb_image.h"
      if (!($198)) {
       break;
      }
      $199 = $i; //@line 5706 "src/sprites/../puun/gf/../../other/stb_image.h"
      $200 = $2; //@line 5706 "src/sprites/../puun/gf/../../other/stb_image.h"
      $201 = (($200) + 32|0); //@line 5706 "src/sprites/../puun/gf/../../other/stb_image.h"
      $202 = (($201) + ($199<<2)|0); //@line 5706 "src/sprites/../puun/gf/../../other/stb_image.h"
      $203 = (($202) + 3|0); //@line 5706 "src/sprites/../puun/gf/../../other/stb_image.h"
      HEAP8[$203>>0] = -1; //@line 5706 "src/sprites/../puun/gf/../../other/stb_image.h"
      $204 = $i; //@line 5705 "src/sprites/../puun/gf/../../other/stb_image.h"
      $205 = (($204) + 1)|0; //@line 5705 "src/sprites/../puun/gf/../../other/stb_image.h"
      $i = $205; //@line 5705 "src/sprites/../puun/gf/../../other/stb_image.h"
     }
     $206 = $2; //@line 5707 "src/sprites/../puun/gf/../../other/stb_image.h"
     $207 = (($206) + 24|0); //@line 5707 "src/sprites/../puun/gf/../../other/stb_image.h"
     $208 = HEAP32[$207>>2]|0; //@line 5707 "src/sprites/../puun/gf/../../other/stb_image.h"
     $209 = ($208|0)>=(0); //@line 5707 "src/sprites/../puun/gf/../../other/stb_image.h"
     if ($209) {
      $210 = $2; //@line 5707 "src/sprites/../puun/gf/../../other/stb_image.h"
      $211 = (($210) + 28|0); //@line 5707 "src/sprites/../puun/gf/../../other/stb_image.h"
      $212 = HEAP32[$211>>2]|0; //@line 5707 "src/sprites/../puun/gf/../../other/stb_image.h"
      $213 = $212 & 1; //@line 5707 "src/sprites/../puun/gf/../../other/stb_image.h"
      $214 = ($213|0)!=(0); //@line 5707 "src/sprites/../puun/gf/../../other/stb_image.h"
      if ($214) {
       $215 = $2; //@line 5708 "src/sprites/../puun/gf/../../other/stb_image.h"
       $216 = (($215) + 24|0); //@line 5708 "src/sprites/../puun/gf/../../other/stb_image.h"
       $217 = HEAP32[$216>>2]|0; //@line 5708 "src/sprites/../puun/gf/../../other/stb_image.h"
       $218 = $2; //@line 5708 "src/sprites/../puun/gf/../../other/stb_image.h"
       $219 = (($218) + 32|0); //@line 5708 "src/sprites/../puun/gf/../../other/stb_image.h"
       $220 = (($219) + ($217<<2)|0); //@line 5708 "src/sprites/../puun/gf/../../other/stb_image.h"
       $221 = (($220) + 3|0); //@line 5708 "src/sprites/../puun/gf/../../other/stb_image.h"
       HEAP8[$221>>0] = 0; //@line 5708 "src/sprites/../puun/gf/../../other/stb_image.h"
      }
     }
     $222 = $2; //@line 5709 "src/sprites/../puun/gf/../../other/stb_image.h"
     $223 = (($222) + 32|0); //@line 5709 "src/sprites/../puun/gf/../../other/stb_image.h"
     $224 = $2; //@line 5709 "src/sprites/../puun/gf/../../other/stb_image.h"
     $225 = (($224) + 18464|0); //@line 5709 "src/sprites/../puun/gf/../../other/stb_image.h"
     HEAP32[$225>>2] = $223; //@line 5709 "src/sprites/../puun/gf/../../other/stb_image.h"
    }
    $229 = $1; //@line 5713 "src/sprites/../puun/gf/../../other/stb_image.h"
    $230 = $2; //@line 5713 "src/sprites/../puun/gf/../../other/stb_image.h"
    $231 = (_stbi__process_gif_raster($229,$230)|0); //@line 5713 "src/sprites/../puun/gf/../../other/stb_image.h"
    $o = $231; //@line 5713 "src/sprites/../puun/gf/../../other/stb_image.h"
    $232 = $o; //@line 5714 "src/sprites/../puun/gf/../../other/stb_image.h"
    $233 = ($232|0)==(0|0); //@line 5714 "src/sprites/../puun/gf/../../other/stb_image.h"
    if ($233) {
     $0 = 0; //@line 5714 "src/sprites/../puun/gf/../../other/stb_image.h"
     $279 = $0; //@line 5747 "src/sprites/../puun/gf/../../other/stb_image.h"
     STACKTOP = sp;return ($279|0); //@line 5747 "src/sprites/../puun/gf/../../other/stb_image.h"
    }
    $234 = $4; //@line 5716 "src/sprites/../puun/gf/../../other/stb_image.h"
    $235 = ($234|0)!=(0); //@line 5716 "src/sprites/../puun/gf/../../other/stb_image.h"
    if ($235) {
     $236 = $4; //@line 5716 "src/sprites/../puun/gf/../../other/stb_image.h"
     $237 = ($236|0)!=(4); //@line 5716 "src/sprites/../puun/gf/../../other/stb_image.h"
     if ($237) {
      $238 = $o; //@line 5717 "src/sprites/../puun/gf/../../other/stb_image.h"
      $239 = $4; //@line 5717 "src/sprites/../puun/gf/../../other/stb_image.h"
      $240 = $2; //@line 5717 "src/sprites/../puun/gf/../../other/stb_image.h"
      $241 = HEAP32[$240>>2]|0; //@line 5717 "src/sprites/../puun/gf/../../other/stb_image.h"
      $242 = $2; //@line 5717 "src/sprites/../puun/gf/../../other/stb_image.h"
      $243 = (($242) + 4|0); //@line 5717 "src/sprites/../puun/gf/../../other/stb_image.h"
      $244 = HEAP32[$243>>2]|0; //@line 5717 "src/sprites/../puun/gf/../../other/stb_image.h"
      $245 = (_stbi__convert_format($238,4,$239,$241,$244)|0); //@line 5717 "src/sprites/../puun/gf/../../other/stb_image.h"
      $o = $245; //@line 5717 "src/sprites/../puun/gf/../../other/stb_image.h"
     }
    }
    $246 = $o; //@line 5718 "src/sprites/../puun/gf/../../other/stb_image.h"
    $0 = $246; //@line 5718 "src/sprites/../puun/gf/../../other/stb_image.h"
    $279 = $0; //@line 5747 "src/sprites/../puun/gf/../../other/stb_image.h"
    STACKTOP = sp;return ($279|0); //@line 5747 "src/sprites/../puun/gf/../../other/stb_image.h"
   }
  }
  $93 = (_stbi__err(9976)|0); //@line 5681 "src/sprites/../puun/gf/../../other/stb_image.h"
  $94 = ($93|0)!=(0); //@line 5681 "src/sprites/../puun/gf/../../other/stb_image.h"
  $95 = $94 ? 0 : 0; //@line 5681 "src/sprites/../puun/gf/../../other/stb_image.h"
  $0 = $95; //@line 5681 "src/sprites/../puun/gf/../../other/stb_image.h"
  $279 = $0; //@line 5747 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($279|0); //@line 5747 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 else if ((label|0) == 51) {
  $275 = $1; //@line 5741 "src/sprites/../puun/gf/../../other/stb_image.h"
  $0 = $275; //@line 5741 "src/sprites/../puun/gf/../../other/stb_image.h"
  $279 = $0; //@line 5747 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($279|0); //@line 5747 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 else if ((label|0) == 52) {
  $276 = (_stbi__err(10024)|0); //@line 5744 "src/sprites/../puun/gf/../../other/stb_image.h"
  $277 = ($276|0)!=(0); //@line 5744 "src/sprites/../puun/gf/../../other/stb_image.h"
  $278 = $277 ? 0 : 0; //@line 5744 "src/sprites/../puun/gf/../../other/stb_image.h"
  $0 = $278; //@line 5744 "src/sprites/../puun/gf/../../other/stb_image.h"
  $279 = $0; //@line 5747 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($279|0); //@line 5747 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 return (0)|0;
}
function _stbi__process_gif_raster($s,$g) {
 $s = $s|0;
 $g = $g|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0;
 var $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0;
 var $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0;
 var $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $avail = 0, $bits = 0, $clear = 0, $code = 0, $code1 = 0;
 var $codemask = 0, $codesize = 0, $first = 0, $len = 0, $lzw_cs = 0, $oldcode = 0, $p = 0, $valid_bits = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $s;
 $2 = $g;
 $3 = $1; //@line 5562 "src/sprites/../puun/gf/../../other/stb_image.h"
 $4 = (_stbi__get8($3)|0); //@line 5562 "src/sprites/../puun/gf/../../other/stb_image.h"
 $lzw_cs = $4; //@line 5562 "src/sprites/../puun/gf/../../other/stb_image.h"
 $5 = $lzw_cs; //@line 5563 "src/sprites/../puun/gf/../../other/stb_image.h"
 $6 = $5&255; //@line 5563 "src/sprites/../puun/gf/../../other/stb_image.h"
 $7 = ($6|0)>(12); //@line 5563 "src/sprites/../puun/gf/../../other/stb_image.h"
 if ($7) {
  $0 = 0; //@line 5563 "src/sprites/../puun/gf/../../other/stb_image.h"
  $174 = $0; //@line 5632 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($174|0); //@line 5632 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $8 = $lzw_cs; //@line 5564 "src/sprites/../puun/gf/../../other/stb_image.h"
 $9 = $8&255; //@line 5564 "src/sprites/../puun/gf/../../other/stb_image.h"
 $10 = 1 << $9; //@line 5564 "src/sprites/../puun/gf/../../other/stb_image.h"
 $clear = $10; //@line 5564 "src/sprites/../puun/gf/../../other/stb_image.h"
 $first = 1; //@line 5565 "src/sprites/../puun/gf/../../other/stb_image.h"
 $11 = $lzw_cs; //@line 5566 "src/sprites/../puun/gf/../../other/stb_image.h"
 $12 = $11&255; //@line 5566 "src/sprites/../puun/gf/../../other/stb_image.h"
 $13 = (($12) + 1)|0; //@line 5566 "src/sprites/../puun/gf/../../other/stb_image.h"
 $codesize = $13; //@line 5566 "src/sprites/../puun/gf/../../other/stb_image.h"
 $14 = $codesize; //@line 5567 "src/sprites/../puun/gf/../../other/stb_image.h"
 $15 = 1 << $14; //@line 5567 "src/sprites/../puun/gf/../../other/stb_image.h"
 $16 = (($15) - 1)|0; //@line 5567 "src/sprites/../puun/gf/../../other/stb_image.h"
 $codemask = $16; //@line 5567 "src/sprites/../puun/gf/../../other/stb_image.h"
 $bits = 0; //@line 5568 "src/sprites/../puun/gf/../../other/stb_image.h"
 $valid_bits = 0; //@line 5569 "src/sprites/../puun/gf/../../other/stb_image.h"
 $code = 0; //@line 5570 "src/sprites/../puun/gf/../../other/stb_image.h"
 while(1) {
  $17 = $code; //@line 5570 "src/sprites/../puun/gf/../../other/stb_image.h"
  $18 = $clear; //@line 5570 "src/sprites/../puun/gf/../../other/stb_image.h"
  $19 = ($17|0)<($18|0); //@line 5570 "src/sprites/../puun/gf/../../other/stb_image.h"
  if (!($19)) {
   break;
  }
  $20 = $code; //@line 5571 "src/sprites/../puun/gf/../../other/stb_image.h"
  $21 = $2; //@line 5571 "src/sprites/../puun/gf/../../other/stb_image.h"
  $22 = (($21) + 2080|0); //@line 5571 "src/sprites/../puun/gf/../../other/stb_image.h"
  $23 = (($22) + ($20<<2)|0); //@line 5571 "src/sprites/../puun/gf/../../other/stb_image.h"
  HEAP16[$23>>1] = -1; //@line 5571 "src/sprites/../puun/gf/../../other/stb_image.h"
  $24 = $code; //@line 5572 "src/sprites/../puun/gf/../../other/stb_image.h"
  $25 = $24&255; //@line 5572 "src/sprites/../puun/gf/../../other/stb_image.h"
  $26 = $code; //@line 5572 "src/sprites/../puun/gf/../../other/stb_image.h"
  $27 = $2; //@line 5572 "src/sprites/../puun/gf/../../other/stb_image.h"
  $28 = (($27) + 2080|0); //@line 5572 "src/sprites/../puun/gf/../../other/stb_image.h"
  $29 = (($28) + ($26<<2)|0); //@line 5572 "src/sprites/../puun/gf/../../other/stb_image.h"
  $30 = (($29) + 2|0); //@line 5572 "src/sprites/../puun/gf/../../other/stb_image.h"
  HEAP8[$30>>0] = $25; //@line 5572 "src/sprites/../puun/gf/../../other/stb_image.h"
  $31 = $code; //@line 5573 "src/sprites/../puun/gf/../../other/stb_image.h"
  $32 = $31&255; //@line 5573 "src/sprites/../puun/gf/../../other/stb_image.h"
  $33 = $code; //@line 5573 "src/sprites/../puun/gf/../../other/stb_image.h"
  $34 = $2; //@line 5573 "src/sprites/../puun/gf/../../other/stb_image.h"
  $35 = (($34) + 2080|0); //@line 5573 "src/sprites/../puun/gf/../../other/stb_image.h"
  $36 = (($35) + ($33<<2)|0); //@line 5573 "src/sprites/../puun/gf/../../other/stb_image.h"
  $37 = (($36) + 3|0); //@line 5573 "src/sprites/../puun/gf/../../other/stb_image.h"
  HEAP8[$37>>0] = $32; //@line 5573 "src/sprites/../puun/gf/../../other/stb_image.h"
  $38 = $code; //@line 5570 "src/sprites/../puun/gf/../../other/stb_image.h"
  $39 = (($38) + 1)|0; //@line 5570 "src/sprites/../puun/gf/../../other/stb_image.h"
  $code = $39; //@line 5570 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $40 = $clear; //@line 5577 "src/sprites/../puun/gf/../../other/stb_image.h"
 $41 = (($40) + 2)|0; //@line 5577 "src/sprites/../puun/gf/../../other/stb_image.h"
 $avail = $41; //@line 5577 "src/sprites/../puun/gf/../../other/stb_image.h"
 $oldcode = -1; //@line 5578 "src/sprites/../puun/gf/../../other/stb_image.h"
 $len = 0; //@line 5580 "src/sprites/../puun/gf/../../other/stb_image.h"
 while(1) {
  $42 = $valid_bits; //@line 5582 "src/sprites/../puun/gf/../../other/stb_image.h"
  $43 = $codesize; //@line 5582 "src/sprites/../puun/gf/../../other/stb_image.h"
  $44 = ($42|0)<($43|0); //@line 5582 "src/sprites/../puun/gf/../../other/stb_image.h"
  if ($44) {
   $45 = $len; //@line 5583 "src/sprites/../puun/gf/../../other/stb_image.h"
   $46 = ($45|0)==(0); //@line 5583 "src/sprites/../puun/gf/../../other/stb_image.h"
   if ($46) {
    $47 = $1; //@line 5584 "src/sprites/../puun/gf/../../other/stb_image.h"
    $48 = (_stbi__get8($47)|0); //@line 5584 "src/sprites/../puun/gf/../../other/stb_image.h"
    $49 = $48&255; //@line 5584 "src/sprites/../puun/gf/../../other/stb_image.h"
    $len = $49; //@line 5584 "src/sprites/../puun/gf/../../other/stb_image.h"
    $50 = $len; //@line 5585 "src/sprites/../puun/gf/../../other/stb_image.h"
    $51 = ($50|0)==(0); //@line 5585 "src/sprites/../puun/gf/../../other/stb_image.h"
    if ($51) {
     label = 11;
     break;
    }
   }
   $55 = $len; //@line 5588 "src/sprites/../puun/gf/../../other/stb_image.h"
   $56 = (($55) + -1)|0; //@line 5588 "src/sprites/../puun/gf/../../other/stb_image.h"
   $len = $56; //@line 5588 "src/sprites/../puun/gf/../../other/stb_image.h"
   $57 = $1; //@line 5589 "src/sprites/../puun/gf/../../other/stb_image.h"
   $58 = (_stbi__get8($57)|0); //@line 5589 "src/sprites/../puun/gf/../../other/stb_image.h"
   $59 = $58&255; //@line 5589 "src/sprites/../puun/gf/../../other/stb_image.h"
   $60 = $valid_bits; //@line 5589 "src/sprites/../puun/gf/../../other/stb_image.h"
   $61 = $59 << $60; //@line 5589 "src/sprites/../puun/gf/../../other/stb_image.h"
   $62 = $bits; //@line 5589 "src/sprites/../puun/gf/../../other/stb_image.h"
   $63 = $62 | $61; //@line 5589 "src/sprites/../puun/gf/../../other/stb_image.h"
   $bits = $63; //@line 5589 "src/sprites/../puun/gf/../../other/stb_image.h"
   $64 = $valid_bits; //@line 5590 "src/sprites/../puun/gf/../../other/stb_image.h"
   $65 = (($64) + 8)|0; //@line 5590 "src/sprites/../puun/gf/../../other/stb_image.h"
   $valid_bits = $65; //@line 5590 "src/sprites/../puun/gf/../../other/stb_image.h"
  } else {
   $66 = $bits; //@line 5592 "src/sprites/../puun/gf/../../other/stb_image.h"
   $67 = $codemask; //@line 5592 "src/sprites/../puun/gf/../../other/stb_image.h"
   $68 = $66 & $67; //@line 5592 "src/sprites/../puun/gf/../../other/stb_image.h"
   $code1 = $68; //@line 5592 "src/sprites/../puun/gf/../../other/stb_image.h"
   $69 = $codesize; //@line 5593 "src/sprites/../puun/gf/../../other/stb_image.h"
   $70 = $bits; //@line 5593 "src/sprites/../puun/gf/../../other/stb_image.h"
   $71 = $70 >> $69; //@line 5593 "src/sprites/../puun/gf/../../other/stb_image.h"
   $bits = $71; //@line 5593 "src/sprites/../puun/gf/../../other/stb_image.h"
   $72 = $codesize; //@line 5594 "src/sprites/../puun/gf/../../other/stb_image.h"
   $73 = $valid_bits; //@line 5594 "src/sprites/../puun/gf/../../other/stb_image.h"
   $74 = (($73) - ($72))|0; //@line 5594 "src/sprites/../puun/gf/../../other/stb_image.h"
   $valid_bits = $74; //@line 5594 "src/sprites/../puun/gf/../../other/stb_image.h"
   $75 = $code1; //@line 5596 "src/sprites/../puun/gf/../../other/stb_image.h"
   $76 = $clear; //@line 5596 "src/sprites/../puun/gf/../../other/stb_image.h"
   $77 = ($75|0)==($76|0); //@line 5596 "src/sprites/../puun/gf/../../other/stb_image.h"
   if ($77) {
    $78 = $lzw_cs; //@line 5597 "src/sprites/../puun/gf/../../other/stb_image.h"
    $79 = $78&255; //@line 5597 "src/sprites/../puun/gf/../../other/stb_image.h"
    $80 = (($79) + 1)|0; //@line 5597 "src/sprites/../puun/gf/../../other/stb_image.h"
    $codesize = $80; //@line 5597 "src/sprites/../puun/gf/../../other/stb_image.h"
    $81 = $codesize; //@line 5598 "src/sprites/../puun/gf/../../other/stb_image.h"
    $82 = 1 << $81; //@line 5598 "src/sprites/../puun/gf/../../other/stb_image.h"
    $83 = (($82) - 1)|0; //@line 5598 "src/sprites/../puun/gf/../../other/stb_image.h"
    $codemask = $83; //@line 5598 "src/sprites/../puun/gf/../../other/stb_image.h"
    $84 = $clear; //@line 5599 "src/sprites/../puun/gf/../../other/stb_image.h"
    $85 = (($84) + 2)|0; //@line 5599 "src/sprites/../puun/gf/../../other/stb_image.h"
    $avail = $85; //@line 5599 "src/sprites/../puun/gf/../../other/stb_image.h"
    $oldcode = -1; //@line 5600 "src/sprites/../puun/gf/../../other/stb_image.h"
    $first = 0; //@line 5601 "src/sprites/../puun/gf/../../other/stb_image.h"
   } else {
    $86 = $code1; //@line 5602 "src/sprites/../puun/gf/../../other/stb_image.h"
    $87 = $clear; //@line 5602 "src/sprites/../puun/gf/../../other/stb_image.h"
    $88 = (($87) + 1)|0; //@line 5602 "src/sprites/../puun/gf/../../other/stb_image.h"
    $89 = ($86|0)==($88|0); //@line 5602 "src/sprites/../puun/gf/../../other/stb_image.h"
    if ($89) {
     label = 17;
     break;
    }
    $101 = $code1; //@line 5607 "src/sprites/../puun/gf/../../other/stb_image.h"
    $102 = $avail; //@line 5607 "src/sprites/../puun/gf/../../other/stb_image.h"
    $103 = ($101|0)<=($102|0); //@line 5607 "src/sprites/../puun/gf/../../other/stb_image.h"
    if (!($103)) {
     label = 38;
     break;
    }
    $104 = $first; //@line 5608 "src/sprites/../puun/gf/../../other/stb_image.h"
    $105 = ($104|0)!=(0); //@line 5608 "src/sprites/../puun/gf/../../other/stb_image.h"
    if ($105) {
     label = 23;
     break;
    }
    $109 = $oldcode; //@line 5610 "src/sprites/../puun/gf/../../other/stb_image.h"
    $110 = ($109|0)>=(0); //@line 5610 "src/sprites/../puun/gf/../../other/stb_image.h"
    if ($110) {
     $111 = $avail; //@line 5611 "src/sprites/../puun/gf/../../other/stb_image.h"
     $112 = (($111) + 1)|0; //@line 5611 "src/sprites/../puun/gf/../../other/stb_image.h"
     $avail = $112; //@line 5611 "src/sprites/../puun/gf/../../other/stb_image.h"
     $113 = $2; //@line 5611 "src/sprites/../puun/gf/../../other/stb_image.h"
     $114 = (($113) + 2080|0); //@line 5611 "src/sprites/../puun/gf/../../other/stb_image.h"
     $115 = (($114) + ($111<<2)|0); //@line 5611 "src/sprites/../puun/gf/../../other/stb_image.h"
     $p = $115; //@line 5611 "src/sprites/../puun/gf/../../other/stb_image.h"
     $116 = $avail; //@line 5612 "src/sprites/../puun/gf/../../other/stb_image.h"
     $117 = ($116|0)>(4096); //@line 5612 "src/sprites/../puun/gf/../../other/stb_image.h"
     if ($117) {
      label = 26;
      break;
     }
     $121 = $oldcode; //@line 5613 "src/sprites/../puun/gf/../../other/stb_image.h"
     $122 = $121&65535; //@line 5613 "src/sprites/../puun/gf/../../other/stb_image.h"
     $123 = $p; //@line 5613 "src/sprites/../puun/gf/../../other/stb_image.h"
     HEAP16[$123>>1] = $122; //@line 5613 "src/sprites/../puun/gf/../../other/stb_image.h"
     $124 = $oldcode; //@line 5614 "src/sprites/../puun/gf/../../other/stb_image.h"
     $125 = $2; //@line 5614 "src/sprites/../puun/gf/../../other/stb_image.h"
     $126 = (($125) + 2080|0); //@line 5614 "src/sprites/../puun/gf/../../other/stb_image.h"
     $127 = (($126) + ($124<<2)|0); //@line 5614 "src/sprites/../puun/gf/../../other/stb_image.h"
     $128 = (($127) + 2|0); //@line 5614 "src/sprites/../puun/gf/../../other/stb_image.h"
     $129 = HEAP8[$128>>0]|0; //@line 5614 "src/sprites/../puun/gf/../../other/stb_image.h"
     $130 = $p; //@line 5614 "src/sprites/../puun/gf/../../other/stb_image.h"
     $131 = (($130) + 2|0); //@line 5614 "src/sprites/../puun/gf/../../other/stb_image.h"
     HEAP8[$131>>0] = $129; //@line 5614 "src/sprites/../puun/gf/../../other/stb_image.h"
     $132 = $code1; //@line 5615 "src/sprites/../puun/gf/../../other/stb_image.h"
     $133 = $avail; //@line 5615 "src/sprites/../puun/gf/../../other/stb_image.h"
     $134 = ($132|0)==($133|0); //@line 5615 "src/sprites/../puun/gf/../../other/stb_image.h"
     if ($134) {
      $135 = $p; //@line 5615 "src/sprites/../puun/gf/../../other/stb_image.h"
      $136 = (($135) + 2|0); //@line 5615 "src/sprites/../puun/gf/../../other/stb_image.h"
      $137 = HEAP8[$136>>0]|0; //@line 5615 "src/sprites/../puun/gf/../../other/stb_image.h"
      $138 = $137&255; //@line 5615 "src/sprites/../puun/gf/../../other/stb_image.h"
      $147 = $138;
     } else {
      $139 = $code1; //@line 5615 "src/sprites/../puun/gf/../../other/stb_image.h"
      $140 = $2; //@line 5615 "src/sprites/../puun/gf/../../other/stb_image.h"
      $141 = (($140) + 2080|0); //@line 5615 "src/sprites/../puun/gf/../../other/stb_image.h"
      $142 = (($141) + ($139<<2)|0); //@line 5615 "src/sprites/../puun/gf/../../other/stb_image.h"
      $143 = (($142) + 2|0); //@line 5615 "src/sprites/../puun/gf/../../other/stb_image.h"
      $144 = HEAP8[$143>>0]|0; //@line 5615 "src/sprites/../puun/gf/../../other/stb_image.h"
      $145 = $144&255; //@line 5615 "src/sprites/../puun/gf/../../other/stb_image.h"
      $147 = $145;
     }
     $146 = $147&255; //@line 5615 "src/sprites/../puun/gf/../../other/stb_image.h"
     $148 = $p; //@line 5615 "src/sprites/../puun/gf/../../other/stb_image.h"
     $149 = (($148) + 3|0); //@line 5615 "src/sprites/../puun/gf/../../other/stb_image.h"
     HEAP8[$149>>0] = $146; //@line 5615 "src/sprites/../puun/gf/../../other/stb_image.h"
    } else {
     $150 = $code1; //@line 5616 "src/sprites/../puun/gf/../../other/stb_image.h"
     $151 = $avail; //@line 5616 "src/sprites/../puun/gf/../../other/stb_image.h"
     $152 = ($150|0)==($151|0); //@line 5616 "src/sprites/../puun/gf/../../other/stb_image.h"
     if ($152) {
      label = 32;
      break;
     }
    }
    $156 = $2; //@line 5619 "src/sprites/../puun/gf/../../other/stb_image.h"
    $157 = $code1; //@line 5619 "src/sprites/../puun/gf/../../other/stb_image.h"
    $158 = $157&65535; //@line 5619 "src/sprites/../puun/gf/../../other/stb_image.h"
    _stbi__out_gif_code($156,$158); //@line 5619 "src/sprites/../puun/gf/../../other/stb_image.h"
    $159 = $avail; //@line 5621 "src/sprites/../puun/gf/../../other/stb_image.h"
    $160 = $codemask; //@line 5621 "src/sprites/../puun/gf/../../other/stb_image.h"
    $161 = $159 & $160; //@line 5621 "src/sprites/../puun/gf/../../other/stb_image.h"
    $162 = ($161|0)==(0); //@line 5621 "src/sprites/../puun/gf/../../other/stb_image.h"
    if ($162) {
     $163 = $avail; //@line 5621 "src/sprites/../puun/gf/../../other/stb_image.h"
     $164 = ($163|0)<=(4095); //@line 5621 "src/sprites/../puun/gf/../../other/stb_image.h"
     if ($164) {
      $165 = $codesize; //@line 5622 "src/sprites/../puun/gf/../../other/stb_image.h"
      $166 = (($165) + 1)|0; //@line 5622 "src/sprites/../puun/gf/../../other/stb_image.h"
      $codesize = $166; //@line 5622 "src/sprites/../puun/gf/../../other/stb_image.h"
      $167 = $codesize; //@line 5623 "src/sprites/../puun/gf/../../other/stb_image.h"
      $168 = 1 << $167; //@line 5623 "src/sprites/../puun/gf/../../other/stb_image.h"
      $169 = (($168) - 1)|0; //@line 5623 "src/sprites/../puun/gf/../../other/stb_image.h"
      $codemask = $169; //@line 5623 "src/sprites/../puun/gf/../../other/stb_image.h"
     }
    }
    $170 = $code1; //@line 5626 "src/sprites/../puun/gf/../../other/stb_image.h"
    $oldcode = $170; //@line 5626 "src/sprites/../puun/gf/../../other/stb_image.h"
   }
  }
 }
 if ((label|0) == 11) {
  $52 = $2; //@line 5586 "src/sprites/../puun/gf/../../other/stb_image.h"
  $53 = (($52) + 8|0); //@line 5586 "src/sprites/../puun/gf/../../other/stb_image.h"
  $54 = HEAP32[$53>>2]|0; //@line 5586 "src/sprites/../puun/gf/../../other/stb_image.h"
  $0 = $54; //@line 5586 "src/sprites/../puun/gf/../../other/stb_image.h"
  $174 = $0; //@line 5632 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($174|0); //@line 5632 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 else if ((label|0) == 17) {
  $90 = $1; //@line 5603 "src/sprites/../puun/gf/../../other/stb_image.h"
  $91 = $len; //@line 5603 "src/sprites/../puun/gf/../../other/stb_image.h"
  _stbi__skip($90,$91); //@line 5603 "src/sprites/../puun/gf/../../other/stb_image.h"
  while(1) {
   $92 = $1; //@line 5604 "src/sprites/../puun/gf/../../other/stb_image.h"
   $93 = (_stbi__get8($92)|0); //@line 5604 "src/sprites/../puun/gf/../../other/stb_image.h"
   $94 = $93&255; //@line 5604 "src/sprites/../puun/gf/../../other/stb_image.h"
   $len = $94; //@line 5604 "src/sprites/../puun/gf/../../other/stb_image.h"
   $95 = ($94|0)>(0); //@line 5604 "src/sprites/../puun/gf/../../other/stb_image.h"
   if (!($95)) {
    break;
   }
   $96 = $1; //@line 5605 "src/sprites/../puun/gf/../../other/stb_image.h"
   $97 = $len; //@line 5605 "src/sprites/../puun/gf/../../other/stb_image.h"
   _stbi__skip($96,$97); //@line 5605 "src/sprites/../puun/gf/../../other/stb_image.h"
  }
  $98 = $2; //@line 5606 "src/sprites/../puun/gf/../../other/stb_image.h"
  $99 = (($98) + 8|0); //@line 5606 "src/sprites/../puun/gf/../../other/stb_image.h"
  $100 = HEAP32[$99>>2]|0; //@line 5606 "src/sprites/../puun/gf/../../other/stb_image.h"
  $0 = $100; //@line 5606 "src/sprites/../puun/gf/../../other/stb_image.h"
  $174 = $0; //@line 5632 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($174|0); //@line 5632 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 else if ((label|0) == 23) {
  $106 = (_stbi__err(10040)|0); //@line 5608 "src/sprites/../puun/gf/../../other/stb_image.h"
  $107 = ($106|0)!=(0); //@line 5608 "src/sprites/../puun/gf/../../other/stb_image.h"
  $108 = $107 ? 0 : 0; //@line 5608 "src/sprites/../puun/gf/../../other/stb_image.h"
  $0 = $108; //@line 5608 "src/sprites/../puun/gf/../../other/stb_image.h"
  $174 = $0; //@line 5632 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($174|0); //@line 5632 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 else if ((label|0) == 26) {
  $118 = (_stbi__err(10056)|0); //@line 5612 "src/sprites/../puun/gf/../../other/stb_image.h"
  $119 = ($118|0)!=(0); //@line 5612 "src/sprites/../puun/gf/../../other/stb_image.h"
  $120 = $119 ? 0 : 0; //@line 5612 "src/sprites/../puun/gf/../../other/stb_image.h"
  $0 = $120; //@line 5612 "src/sprites/../puun/gf/../../other/stb_image.h"
  $174 = $0; //@line 5632 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($174|0); //@line 5632 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 else if ((label|0) == 32) {
  $153 = (_stbi__err(10072)|0); //@line 5617 "src/sprites/../puun/gf/../../other/stb_image.h"
  $154 = ($153|0)!=(0); //@line 5617 "src/sprites/../puun/gf/../../other/stb_image.h"
  $155 = $154 ? 0 : 0; //@line 5617 "src/sprites/../puun/gf/../../other/stb_image.h"
  $0 = $155; //@line 5617 "src/sprites/../puun/gf/../../other/stb_image.h"
  $174 = $0; //@line 5632 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($174|0); //@line 5632 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 else if ((label|0) == 38) {
  $171 = (_stbi__err(10072)|0); //@line 5628 "src/sprites/../puun/gf/../../other/stb_image.h"
  $172 = ($171|0)!=(0); //@line 5628 "src/sprites/../puun/gf/../../other/stb_image.h"
  $173 = $172 ? 0 : 0; //@line 5628 "src/sprites/../puun/gf/../../other/stb_image.h"
  $0 = $173; //@line 5628 "src/sprites/../puun/gf/../../other/stb_image.h"
  $174 = $0; //@line 5632 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($174|0); //@line 5632 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 return (0)|0;
}
function _stbi__out_gif_code($g,$code) {
 $g = $g|0;
 $code = $code|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0;
 var $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0;
 var $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0;
 var $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0;
 var $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0;
 var $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $c = 0, $p = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $g;
 $1 = $code;
 $2 = $1; //@line 5526 "src/sprites/../puun/gf/../../other/stb_image.h"
 $3 = $2&65535; //@line 5526 "src/sprites/../puun/gf/../../other/stb_image.h"
 $4 = $0; //@line 5526 "src/sprites/../puun/gf/../../other/stb_image.h"
 $5 = (($4) + 2080|0); //@line 5526 "src/sprites/../puun/gf/../../other/stb_image.h"
 $6 = (($5) + ($3<<2)|0); //@line 5526 "src/sprites/../puun/gf/../../other/stb_image.h"
 $7 = HEAP16[$6>>1]|0; //@line 5526 "src/sprites/../puun/gf/../../other/stb_image.h"
 $8 = $7 << 16 >> 16; //@line 5526 "src/sprites/../puun/gf/../../other/stb_image.h"
 $9 = ($8|0)>=(0); //@line 5526 "src/sprites/../puun/gf/../../other/stb_image.h"
 if ($9) {
  $10 = $0; //@line 5527 "src/sprites/../puun/gf/../../other/stb_image.h"
  $11 = $1; //@line 5527 "src/sprites/../puun/gf/../../other/stb_image.h"
  $12 = $11&65535; //@line 5527 "src/sprites/../puun/gf/../../other/stb_image.h"
  $13 = $0; //@line 5527 "src/sprites/../puun/gf/../../other/stb_image.h"
  $14 = (($13) + 2080|0); //@line 5527 "src/sprites/../puun/gf/../../other/stb_image.h"
  $15 = (($14) + ($12<<2)|0); //@line 5527 "src/sprites/../puun/gf/../../other/stb_image.h"
  $16 = HEAP16[$15>>1]|0; //@line 5527 "src/sprites/../puun/gf/../../other/stb_image.h"
  _stbi__out_gif_code($10,$16); //@line 5527 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $17 = $0; //@line 5529 "src/sprites/../puun/gf/../../other/stb_image.h"
 $18 = (($17) + 18500|0); //@line 5529 "src/sprites/../puun/gf/../../other/stb_image.h"
 $19 = HEAP32[$18>>2]|0; //@line 5529 "src/sprites/../puun/gf/../../other/stb_image.h"
 $20 = $0; //@line 5529 "src/sprites/../puun/gf/../../other/stb_image.h"
 $21 = (($20) + 18492|0); //@line 5529 "src/sprites/../puun/gf/../../other/stb_image.h"
 $22 = HEAP32[$21>>2]|0; //@line 5529 "src/sprites/../puun/gf/../../other/stb_image.h"
 $23 = ($19|0)>=($22|0); //@line 5529 "src/sprites/../puun/gf/../../other/stb_image.h"
 if ($23) {
  STACKTOP = sp;return; //@line 5552 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $24 = $0; //@line 5531 "src/sprites/../puun/gf/../../other/stb_image.h"
 $25 = (($24) + 18496|0); //@line 5531 "src/sprites/../puun/gf/../../other/stb_image.h"
 $26 = HEAP32[$25>>2]|0; //@line 5531 "src/sprites/../puun/gf/../../other/stb_image.h"
 $27 = $0; //@line 5531 "src/sprites/../puun/gf/../../other/stb_image.h"
 $28 = (($27) + 18500|0); //@line 5531 "src/sprites/../puun/gf/../../other/stb_image.h"
 $29 = HEAP32[$28>>2]|0; //@line 5531 "src/sprites/../puun/gf/../../other/stb_image.h"
 $30 = (($26) + ($29))|0; //@line 5531 "src/sprites/../puun/gf/../../other/stb_image.h"
 $31 = $0; //@line 5531 "src/sprites/../puun/gf/../../other/stb_image.h"
 $32 = (($31) + 8|0); //@line 5531 "src/sprites/../puun/gf/../../other/stb_image.h"
 $33 = HEAP32[$32>>2]|0; //@line 5531 "src/sprites/../puun/gf/../../other/stb_image.h"
 $34 = (($33) + ($30)|0); //@line 5531 "src/sprites/../puun/gf/../../other/stb_image.h"
 $p = $34; //@line 5531 "src/sprites/../puun/gf/../../other/stb_image.h"
 $35 = $1; //@line 5532 "src/sprites/../puun/gf/../../other/stb_image.h"
 $36 = $35&65535; //@line 5532 "src/sprites/../puun/gf/../../other/stb_image.h"
 $37 = $0; //@line 5532 "src/sprites/../puun/gf/../../other/stb_image.h"
 $38 = (($37) + 2080|0); //@line 5532 "src/sprites/../puun/gf/../../other/stb_image.h"
 $39 = (($38) + ($36<<2)|0); //@line 5532 "src/sprites/../puun/gf/../../other/stb_image.h"
 $40 = (($39) + 3|0); //@line 5532 "src/sprites/../puun/gf/../../other/stb_image.h"
 $41 = HEAP8[$40>>0]|0; //@line 5532 "src/sprites/../puun/gf/../../other/stb_image.h"
 $42 = $41&255; //@line 5532 "src/sprites/../puun/gf/../../other/stb_image.h"
 $43 = $42<<2; //@line 5532 "src/sprites/../puun/gf/../../other/stb_image.h"
 $44 = $0; //@line 5532 "src/sprites/../puun/gf/../../other/stb_image.h"
 $45 = (($44) + 18464|0); //@line 5532 "src/sprites/../puun/gf/../../other/stb_image.h"
 $46 = HEAP32[$45>>2]|0; //@line 5532 "src/sprites/../puun/gf/../../other/stb_image.h"
 $47 = (($46) + ($43)|0); //@line 5532 "src/sprites/../puun/gf/../../other/stb_image.h"
 $c = $47; //@line 5532 "src/sprites/../puun/gf/../../other/stb_image.h"
 $48 = $c; //@line 5534 "src/sprites/../puun/gf/../../other/stb_image.h"
 $49 = (($48) + 3|0); //@line 5534 "src/sprites/../puun/gf/../../other/stb_image.h"
 $50 = HEAP8[$49>>0]|0; //@line 5534 "src/sprites/../puun/gf/../../other/stb_image.h"
 $51 = $50&255; //@line 5534 "src/sprites/../puun/gf/../../other/stb_image.h"
 $52 = ($51|0)>=(128); //@line 5534 "src/sprites/../puun/gf/../../other/stb_image.h"
 if ($52) {
  $53 = $c; //@line 5535 "src/sprites/../puun/gf/../../other/stb_image.h"
  $54 = (($53) + 2|0); //@line 5535 "src/sprites/../puun/gf/../../other/stb_image.h"
  $55 = HEAP8[$54>>0]|0; //@line 5535 "src/sprites/../puun/gf/../../other/stb_image.h"
  $56 = $p; //@line 5535 "src/sprites/../puun/gf/../../other/stb_image.h"
  HEAP8[$56>>0] = $55; //@line 5535 "src/sprites/../puun/gf/../../other/stb_image.h"
  $57 = $c; //@line 5536 "src/sprites/../puun/gf/../../other/stb_image.h"
  $58 = (($57) + 1|0); //@line 5536 "src/sprites/../puun/gf/../../other/stb_image.h"
  $59 = HEAP8[$58>>0]|0; //@line 5536 "src/sprites/../puun/gf/../../other/stb_image.h"
  $60 = $p; //@line 5536 "src/sprites/../puun/gf/../../other/stb_image.h"
  $61 = (($60) + 1|0); //@line 5536 "src/sprites/../puun/gf/../../other/stb_image.h"
  HEAP8[$61>>0] = $59; //@line 5536 "src/sprites/../puun/gf/../../other/stb_image.h"
  $62 = $c; //@line 5537 "src/sprites/../puun/gf/../../other/stb_image.h"
  $63 = HEAP8[$62>>0]|0; //@line 5537 "src/sprites/../puun/gf/../../other/stb_image.h"
  $64 = $p; //@line 5537 "src/sprites/../puun/gf/../../other/stb_image.h"
  $65 = (($64) + 2|0); //@line 5537 "src/sprites/../puun/gf/../../other/stb_image.h"
  HEAP8[$65>>0] = $63; //@line 5537 "src/sprites/../puun/gf/../../other/stb_image.h"
  $66 = $c; //@line 5538 "src/sprites/../puun/gf/../../other/stb_image.h"
  $67 = (($66) + 3|0); //@line 5538 "src/sprites/../puun/gf/../../other/stb_image.h"
  $68 = HEAP8[$67>>0]|0; //@line 5538 "src/sprites/../puun/gf/../../other/stb_image.h"
  $69 = $p; //@line 5538 "src/sprites/../puun/gf/../../other/stb_image.h"
  $70 = (($69) + 3|0); //@line 5538 "src/sprites/../puun/gf/../../other/stb_image.h"
  HEAP8[$70>>0] = $68; //@line 5538 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $71 = $0; //@line 5540 "src/sprites/../puun/gf/../../other/stb_image.h"
 $72 = (($71) + 18496|0); //@line 5540 "src/sprites/../puun/gf/../../other/stb_image.h"
 $73 = HEAP32[$72>>2]|0; //@line 5540 "src/sprites/../puun/gf/../../other/stb_image.h"
 $74 = (($73) + 4)|0; //@line 5540 "src/sprites/../puun/gf/../../other/stb_image.h"
 HEAP32[$72>>2] = $74; //@line 5540 "src/sprites/../puun/gf/../../other/stb_image.h"
 $75 = $0; //@line 5542 "src/sprites/../puun/gf/../../other/stb_image.h"
 $76 = (($75) + 18496|0); //@line 5542 "src/sprites/../puun/gf/../../other/stb_image.h"
 $77 = HEAP32[$76>>2]|0; //@line 5542 "src/sprites/../puun/gf/../../other/stb_image.h"
 $78 = $0; //@line 5542 "src/sprites/../puun/gf/../../other/stb_image.h"
 $79 = (($78) + 18488|0); //@line 5542 "src/sprites/../puun/gf/../../other/stb_image.h"
 $80 = HEAP32[$79>>2]|0; //@line 5542 "src/sprites/../puun/gf/../../other/stb_image.h"
 $81 = ($77|0)>=($80|0); //@line 5542 "src/sprites/../puun/gf/../../other/stb_image.h"
 if (!($81)) {
  STACKTOP = sp;return; //@line 5552 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $82 = $0; //@line 5543 "src/sprites/../puun/gf/../../other/stb_image.h"
 $83 = (($82) + 18480|0); //@line 5543 "src/sprites/../puun/gf/../../other/stb_image.h"
 $84 = HEAP32[$83>>2]|0; //@line 5543 "src/sprites/../puun/gf/../../other/stb_image.h"
 $85 = $0; //@line 5543 "src/sprites/../puun/gf/../../other/stb_image.h"
 $86 = (($85) + 18496|0); //@line 5543 "src/sprites/../puun/gf/../../other/stb_image.h"
 HEAP32[$86>>2] = $84; //@line 5543 "src/sprites/../puun/gf/../../other/stb_image.h"
 $87 = $0; //@line 5544 "src/sprites/../puun/gf/../../other/stb_image.h"
 $88 = (($87) + 18472|0); //@line 5544 "src/sprites/../puun/gf/../../other/stb_image.h"
 $89 = HEAP32[$88>>2]|0; //@line 5544 "src/sprites/../puun/gf/../../other/stb_image.h"
 $90 = $0; //@line 5544 "src/sprites/../puun/gf/../../other/stb_image.h"
 $91 = (($90) + 18500|0); //@line 5544 "src/sprites/../puun/gf/../../other/stb_image.h"
 $92 = HEAP32[$91>>2]|0; //@line 5544 "src/sprites/../puun/gf/../../other/stb_image.h"
 $93 = (($92) + ($89))|0; //@line 5544 "src/sprites/../puun/gf/../../other/stb_image.h"
 HEAP32[$91>>2] = $93; //@line 5544 "src/sprites/../puun/gf/../../other/stb_image.h"
 while(1) {
  $94 = $0; //@line 5546 "src/sprites/../puun/gf/../../other/stb_image.h"
  $95 = (($94) + 18500|0); //@line 5546 "src/sprites/../puun/gf/../../other/stb_image.h"
  $96 = HEAP32[$95>>2]|0; //@line 5546 "src/sprites/../puun/gf/../../other/stb_image.h"
  $97 = $0; //@line 5546 "src/sprites/../puun/gf/../../other/stb_image.h"
  $98 = (($97) + 18492|0); //@line 5546 "src/sprites/../puun/gf/../../other/stb_image.h"
  $99 = HEAP32[$98>>2]|0; //@line 5546 "src/sprites/../puun/gf/../../other/stb_image.h"
  $100 = ($96|0)>=($99|0); //@line 5546 "src/sprites/../puun/gf/../../other/stb_image.h"
  if ($100) {
   $101 = $0; //@line 5546 "src/sprites/../puun/gf/../../other/stb_image.h"
   $102 = (($101) + 18468|0); //@line 5546 "src/sprites/../puun/gf/../../other/stb_image.h"
   $103 = HEAP32[$102>>2]|0; //@line 5546 "src/sprites/../puun/gf/../../other/stb_image.h"
   $104 = ($103|0)>(0); //@line 5546 "src/sprites/../puun/gf/../../other/stb_image.h"
   $129 = $104;
  } else {
   $129 = 0;
  }
  if (!($129)) {
   break;
  }
  $105 = $0; //@line 5547 "src/sprites/../puun/gf/../../other/stb_image.h"
  $106 = (($105) + 18468|0); //@line 5547 "src/sprites/../puun/gf/../../other/stb_image.h"
  $107 = HEAP32[$106>>2]|0; //@line 5547 "src/sprites/../puun/gf/../../other/stb_image.h"
  $108 = 1 << $107; //@line 5547 "src/sprites/../puun/gf/../../other/stb_image.h"
  $109 = $0; //@line 5547 "src/sprites/../puun/gf/../../other/stb_image.h"
  $110 = (($109) + 18504|0); //@line 5547 "src/sprites/../puun/gf/../../other/stb_image.h"
  $111 = HEAP32[$110>>2]|0; //@line 5547 "src/sprites/../puun/gf/../../other/stb_image.h"
  $112 = Math_imul($108, $111)|0; //@line 5547 "src/sprites/../puun/gf/../../other/stb_image.h"
  $113 = $0; //@line 5547 "src/sprites/../puun/gf/../../other/stb_image.h"
  $114 = (($113) + 18472|0); //@line 5547 "src/sprites/../puun/gf/../../other/stb_image.h"
  HEAP32[$114>>2] = $112; //@line 5547 "src/sprites/../puun/gf/../../other/stb_image.h"
  $115 = $0; //@line 5548 "src/sprites/../puun/gf/../../other/stb_image.h"
  $116 = (($115) + 18484|0); //@line 5548 "src/sprites/../puun/gf/../../other/stb_image.h"
  $117 = HEAP32[$116>>2]|0; //@line 5548 "src/sprites/../puun/gf/../../other/stb_image.h"
  $118 = $0; //@line 5548 "src/sprites/../puun/gf/../../other/stb_image.h"
  $119 = (($118) + 18472|0); //@line 5548 "src/sprites/../puun/gf/../../other/stb_image.h"
  $120 = HEAP32[$119>>2]|0; //@line 5548 "src/sprites/../puun/gf/../../other/stb_image.h"
  $121 = $120 >> 1; //@line 5548 "src/sprites/../puun/gf/../../other/stb_image.h"
  $122 = (($117) + ($121))|0; //@line 5548 "src/sprites/../puun/gf/../../other/stb_image.h"
  $123 = $0; //@line 5548 "src/sprites/../puun/gf/../../other/stb_image.h"
  $124 = (($123) + 18500|0); //@line 5548 "src/sprites/../puun/gf/../../other/stb_image.h"
  HEAP32[$124>>2] = $122; //@line 5548 "src/sprites/../puun/gf/../../other/stb_image.h"
  $125 = $0; //@line 5549 "src/sprites/../puun/gf/../../other/stb_image.h"
  $126 = (($125) + 18468|0); //@line 5549 "src/sprites/../puun/gf/../../other/stb_image.h"
  $127 = HEAP32[$126>>2]|0; //@line 5549 "src/sprites/../puun/gf/../../other/stb_image.h"
  $128 = (($127) + -1)|0; //@line 5549 "src/sprites/../puun/gf/../../other/stb_image.h"
  HEAP32[$126>>2] = $128; //@line 5549 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 STACKTOP = sp;return; //@line 5552 "src/sprites/../puun/gf/../../other/stb_image.h"
}
function _stbi__fill_gif_background($g) {
 $g = $g|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $c = 0, $i = 0, $p = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $g;
 $1 = $0; //@line 5637 "src/sprites/../puun/gf/../../other/stb_image.h"
 $2 = (($1) + 16|0); //@line 5637 "src/sprites/../puun/gf/../../other/stb_image.h"
 $3 = HEAP32[$2>>2]|0; //@line 5637 "src/sprites/../puun/gf/../../other/stb_image.h"
 $4 = $0; //@line 5637 "src/sprites/../puun/gf/../../other/stb_image.h"
 $5 = (($4) + 32|0); //@line 5637 "src/sprites/../puun/gf/../../other/stb_image.h"
 $6 = (($5) + ($3<<2)|0); //@line 5637 "src/sprites/../puun/gf/../../other/stb_image.h"
 $c = $6; //@line 5637 "src/sprites/../puun/gf/../../other/stb_image.h"
 $i = 0; //@line 5639 "src/sprites/../puun/gf/../../other/stb_image.h"
 while(1) {
  $7 = $i; //@line 5639 "src/sprites/../puun/gf/../../other/stb_image.h"
  $8 = $0; //@line 5639 "src/sprites/../puun/gf/../../other/stb_image.h"
  $9 = HEAP32[$8>>2]|0; //@line 5639 "src/sprites/../puun/gf/../../other/stb_image.h"
  $10 = $0; //@line 5639 "src/sprites/../puun/gf/../../other/stb_image.h"
  $11 = (($10) + 4|0); //@line 5639 "src/sprites/../puun/gf/../../other/stb_image.h"
  $12 = HEAP32[$11>>2]|0; //@line 5639 "src/sprites/../puun/gf/../../other/stb_image.h"
  $13 = Math_imul($9, $12)|0; //@line 5639 "src/sprites/../puun/gf/../../other/stb_image.h"
  $14 = $13<<2; //@line 5639 "src/sprites/../puun/gf/../../other/stb_image.h"
  $15 = ($7|0)<($14|0); //@line 5639 "src/sprites/../puun/gf/../../other/stb_image.h"
  if (!($15)) {
   break;
  }
  $16 = $i; //@line 5640 "src/sprites/../puun/gf/../../other/stb_image.h"
  $17 = $0; //@line 5640 "src/sprites/../puun/gf/../../other/stb_image.h"
  $18 = (($17) + 8|0); //@line 5640 "src/sprites/../puun/gf/../../other/stb_image.h"
  $19 = HEAP32[$18>>2]|0; //@line 5640 "src/sprites/../puun/gf/../../other/stb_image.h"
  $20 = (($19) + ($16)|0); //@line 5640 "src/sprites/../puun/gf/../../other/stb_image.h"
  $p = $20; //@line 5640 "src/sprites/../puun/gf/../../other/stb_image.h"
  $21 = $c; //@line 5641 "src/sprites/../puun/gf/../../other/stb_image.h"
  $22 = (($21) + 2|0); //@line 5641 "src/sprites/../puun/gf/../../other/stb_image.h"
  $23 = HEAP8[$22>>0]|0; //@line 5641 "src/sprites/../puun/gf/../../other/stb_image.h"
  $24 = $p; //@line 5641 "src/sprites/../puun/gf/../../other/stb_image.h"
  HEAP8[$24>>0] = $23; //@line 5641 "src/sprites/../puun/gf/../../other/stb_image.h"
  $25 = $c; //@line 5642 "src/sprites/../puun/gf/../../other/stb_image.h"
  $26 = (($25) + 1|0); //@line 5642 "src/sprites/../puun/gf/../../other/stb_image.h"
  $27 = HEAP8[$26>>0]|0; //@line 5642 "src/sprites/../puun/gf/../../other/stb_image.h"
  $28 = $p; //@line 5642 "src/sprites/../puun/gf/../../other/stb_image.h"
  $29 = (($28) + 1|0); //@line 5642 "src/sprites/../puun/gf/../../other/stb_image.h"
  HEAP8[$29>>0] = $27; //@line 5642 "src/sprites/../puun/gf/../../other/stb_image.h"
  $30 = $c; //@line 5643 "src/sprites/../puun/gf/../../other/stb_image.h"
  $31 = HEAP8[$30>>0]|0; //@line 5643 "src/sprites/../puun/gf/../../other/stb_image.h"
  $32 = $p; //@line 5643 "src/sprites/../puun/gf/../../other/stb_image.h"
  $33 = (($32) + 2|0); //@line 5643 "src/sprites/../puun/gf/../../other/stb_image.h"
  HEAP8[$33>>0] = $31; //@line 5643 "src/sprites/../puun/gf/../../other/stb_image.h"
  $34 = $c; //@line 5644 "src/sprites/../puun/gf/../../other/stb_image.h"
  $35 = (($34) + 3|0); //@line 5644 "src/sprites/../puun/gf/../../other/stb_image.h"
  $36 = HEAP8[$35>>0]|0; //@line 5644 "src/sprites/../puun/gf/../../other/stb_image.h"
  $37 = $p; //@line 5644 "src/sprites/../puun/gf/../../other/stb_image.h"
  $38 = (($37) + 3|0); //@line 5644 "src/sprites/../puun/gf/../../other/stb_image.h"
  HEAP8[$38>>0] = $36; //@line 5644 "src/sprites/../puun/gf/../../other/stb_image.h"
  $39 = $i; //@line 5639 "src/sprites/../puun/gf/../../other/stb_image.h"
  $40 = (($39) + 4)|0; //@line 5639 "src/sprites/../puun/gf/../../other/stb_image.h"
  $i = $40; //@line 5639 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 STACKTOP = sp;return; //@line 5646 "src/sprites/../puun/gf/../../other/stb_image.h"
}
function _stbi__gif_test($s) {
 $s = $s|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $r = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $s;
 $1 = $0; //@line 5464 "src/sprites/../puun/gf/../../other/stb_image.h"
 $2 = (_stbi__gif_test_raw($1)|0); //@line 5464 "src/sprites/../puun/gf/../../other/stb_image.h"
 $r = $2; //@line 5464 "src/sprites/../puun/gf/../../other/stb_image.h"
 $3 = $0; //@line 5465 "src/sprites/../puun/gf/../../other/stb_image.h"
 _stbi__rewind($3); //@line 5465 "src/sprites/../puun/gf/../../other/stb_image.h"
 $4 = $r; //@line 5466 "src/sprites/../puun/gf/../../other/stb_image.h"
 STACKTOP = sp;return ($4|0); //@line 5466 "src/sprites/../puun/gf/../../other/stb_image.h"
}
function _stbi__gif_test_raw($s) {
 $s = $s|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $sz = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $s;
 $2 = $1; //@line 5455 "src/sprites/../puun/gf/../../other/stb_image.h"
 $3 = (_stbi__get8($2)|0); //@line 5455 "src/sprites/../puun/gf/../../other/stb_image.h"
 $4 = $3&255; //@line 5455 "src/sprites/../puun/gf/../../other/stb_image.h"
 $5 = ($4|0)!=(71); //@line 5455 "src/sprites/../puun/gf/../../other/stb_image.h"
 if (!($5)) {
  $6 = $1; //@line 5455 "src/sprites/../puun/gf/../../other/stb_image.h"
  $7 = (_stbi__get8($6)|0); //@line 5455 "src/sprites/../puun/gf/../../other/stb_image.h"
  $8 = $7&255; //@line 5455 "src/sprites/../puun/gf/../../other/stb_image.h"
  $9 = ($8|0)!=(73); //@line 5455 "src/sprites/../puun/gf/../../other/stb_image.h"
  if (!($9)) {
   $10 = $1; //@line 5455 "src/sprites/../puun/gf/../../other/stb_image.h"
   $11 = (_stbi__get8($10)|0); //@line 5455 "src/sprites/../puun/gf/../../other/stb_image.h"
   $12 = $11&255; //@line 5455 "src/sprites/../puun/gf/../../other/stb_image.h"
   $13 = ($12|0)!=(70); //@line 5455 "src/sprites/../puun/gf/../../other/stb_image.h"
   if (!($13)) {
    $14 = $1; //@line 5455 "src/sprites/../puun/gf/../../other/stb_image.h"
    $15 = (_stbi__get8($14)|0); //@line 5455 "src/sprites/../puun/gf/../../other/stb_image.h"
    $16 = $15&255; //@line 5455 "src/sprites/../puun/gf/../../other/stb_image.h"
    $17 = ($16|0)!=(56); //@line 5455 "src/sprites/../puun/gf/../../other/stb_image.h"
    if (!($17)) {
     $18 = $1; //@line 5456 "src/sprites/../puun/gf/../../other/stb_image.h"
     $19 = (_stbi__get8($18)|0); //@line 5456 "src/sprites/../puun/gf/../../other/stb_image.h"
     $20 = $19&255; //@line 5456 "src/sprites/../puun/gf/../../other/stb_image.h"
     $sz = $20; //@line 5456 "src/sprites/../puun/gf/../../other/stb_image.h"
     $21 = $sz; //@line 5457 "src/sprites/../puun/gf/../../other/stb_image.h"
     $22 = ($21|0)!=(57); //@line 5457 "src/sprites/../puun/gf/../../other/stb_image.h"
     if ($22) {
      $23 = $sz; //@line 5457 "src/sprites/../puun/gf/../../other/stb_image.h"
      $24 = ($23|0)!=(55); //@line 5457 "src/sprites/../puun/gf/../../other/stb_image.h"
      if ($24) {
       $0 = 0; //@line 5457 "src/sprites/../puun/gf/../../other/stb_image.h"
       $29 = $0; //@line 5460 "src/sprites/../puun/gf/../../other/stb_image.h"
       STACKTOP = sp;return ($29|0); //@line 5460 "src/sprites/../puun/gf/../../other/stb_image.h"
      }
     }
     $25 = $1; //@line 5458 "src/sprites/../puun/gf/../../other/stb_image.h"
     $26 = (_stbi__get8($25)|0); //@line 5458 "src/sprites/../puun/gf/../../other/stb_image.h"
     $27 = $26&255; //@line 5458 "src/sprites/../puun/gf/../../other/stb_image.h"
     $28 = ($27|0)!=(97); //@line 5458 "src/sprites/../puun/gf/../../other/stb_image.h"
     if ($28) {
      $0 = 0; //@line 5458 "src/sprites/../puun/gf/../../other/stb_image.h"
      $29 = $0; //@line 5460 "src/sprites/../puun/gf/../../other/stb_image.h"
      STACKTOP = sp;return ($29|0); //@line 5460 "src/sprites/../puun/gf/../../other/stb_image.h"
     } else {
      $0 = 1; //@line 5459 "src/sprites/../puun/gf/../../other/stb_image.h"
      $29 = $0; //@line 5460 "src/sprites/../puun/gf/../../other/stb_image.h"
      STACKTOP = sp;return ($29|0); //@line 5460 "src/sprites/../puun/gf/../../other/stb_image.h"
     }
    }
   }
  }
 }
 $0 = 0; //@line 5455 "src/sprites/../puun/gf/../../other/stb_image.h"
 $29 = $0; //@line 5460 "src/sprites/../puun/gf/../../other/stb_image.h"
 STACKTOP = sp;return ($29|0); //@line 5460 "src/sprites/../puun/gf/../../other/stb_image.h"
}
function _stbi__bmp_load($s,$x,$y,$comp,$req_comp) {
 $s = $s|0;
 $x = $x|0;
 $y = $y|0;
 $comp = $comp|0;
 $req_comp = $req_comp|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0;
 var $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0;
 var $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0;
 var $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0;
 var $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0;
 var $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0;
 var $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0;
 var $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0;
 var $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0;
 var $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0;
 var $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0;
 var $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0;
 var $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0;
 var $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0;
 var $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0;
 var $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0;
 var $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0;
 var $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0;
 var $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0;
 var $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0;
 var $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0;
 var $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0;
 var $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0;
 var $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0;
 var $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $a = 0, $a4 = 0;
 var $acount = 0, $ashift = 0, $bcount = 0, $bpp = 0, $bshift = 0, $compress = 0, $easy = 0, $fake_a = 0, $flip_vertically = 0, $gcount = 0, $gshift = 0, $hsz = 0, $i = 0, $j = 0, $ma = 0, $mb = 0, $mg = 0, $mr = 0, $offset = 0, $out = 0;
 var $p1 = 0, $p2 = 0, $pad = 0, $pal = 0, $psize = 0, $rcount = 0, $rshift = 0, $t = 0, $target = 0, $v = 0, $v2 = 0, $v3 = 0, $width = 0, $z = 0, $z1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1200|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $pal = sp + 168|0;
 $1 = $s;
 $2 = $x;
 $3 = $y;
 $4 = $comp;
 $5 = $req_comp;
 $mr = 0; //@line 4580 "src/sprites/../puun/gf/../../other/stb_image.h"
 $mg = 0; //@line 4580 "src/sprites/../puun/gf/../../other/stb_image.h"
 $mb = 0; //@line 4580 "src/sprites/../puun/gf/../../other/stb_image.h"
 $ma = 0; //@line 4580 "src/sprites/../puun/gf/../../other/stb_image.h"
 $fake_a = 0; //@line 4580 "src/sprites/../puun/gf/../../other/stb_image.h"
 $psize = 0; //@line 4582 "src/sprites/../puun/gf/../../other/stb_image.h"
 $compress = 0; //@line 4582 "src/sprites/../puun/gf/../../other/stb_image.h"
 $6 = $1; //@line 4584 "src/sprites/../puun/gf/../../other/stb_image.h"
 $7 = (_stbi__get8($6)|0); //@line 4584 "src/sprites/../puun/gf/../../other/stb_image.h"
 $8 = $7&255; //@line 4584 "src/sprites/../puun/gf/../../other/stb_image.h"
 $9 = ($8|0)!=(66); //@line 4584 "src/sprites/../puun/gf/../../other/stb_image.h"
 if (!($9)) {
  $10 = $1; //@line 4584 "src/sprites/../puun/gf/../../other/stb_image.h"
  $11 = (_stbi__get8($10)|0); //@line 4584 "src/sprites/../puun/gf/../../other/stb_image.h"
  $12 = $11&255; //@line 4584 "src/sprites/../puun/gf/../../other/stb_image.h"
  $13 = ($12|0)!=(77); //@line 4584 "src/sprites/../puun/gf/../../other/stb_image.h"
  if (!($13)) {
   $17 = $1; //@line 4585 "src/sprites/../puun/gf/../../other/stb_image.h"
   (_stbi__get32le($17)|0); //@line 4585 "src/sprites/../puun/gf/../../other/stb_image.h"
   $18 = $1; //@line 4586 "src/sprites/../puun/gf/../../other/stb_image.h"
   (_stbi__get16le($18)|0); //@line 4586 "src/sprites/../puun/gf/../../other/stb_image.h"
   $19 = $1; //@line 4587 "src/sprites/../puun/gf/../../other/stb_image.h"
   (_stbi__get16le($19)|0); //@line 4587 "src/sprites/../puun/gf/../../other/stb_image.h"
   $20 = $1; //@line 4588 "src/sprites/../puun/gf/../../other/stb_image.h"
   $21 = (_stbi__get32le($20)|0); //@line 4588 "src/sprites/../puun/gf/../../other/stb_image.h"
   $offset = $21; //@line 4588 "src/sprites/../puun/gf/../../other/stb_image.h"
   $22 = $1; //@line 4589 "src/sprites/../puun/gf/../../other/stb_image.h"
   $23 = (_stbi__get32le($22)|0); //@line 4589 "src/sprites/../puun/gf/../../other/stb_image.h"
   $hsz = $23; //@line 4589 "src/sprites/../puun/gf/../../other/stb_image.h"
   $24 = $hsz; //@line 4590 "src/sprites/../puun/gf/../../other/stb_image.h"
   $25 = ($24|0)!=(12); //@line 4590 "src/sprites/../puun/gf/../../other/stb_image.h"
   if ($25) {
    $26 = $hsz; //@line 4590 "src/sprites/../puun/gf/../../other/stb_image.h"
    $27 = ($26|0)!=(40); //@line 4590 "src/sprites/../puun/gf/../../other/stb_image.h"
    if ($27) {
     $28 = $hsz; //@line 4590 "src/sprites/../puun/gf/../../other/stb_image.h"
     $29 = ($28|0)!=(56); //@line 4590 "src/sprites/../puun/gf/../../other/stb_image.h"
     if ($29) {
      $30 = $hsz; //@line 4590 "src/sprites/../puun/gf/../../other/stb_image.h"
      $31 = ($30|0)!=(108); //@line 4590 "src/sprites/../puun/gf/../../other/stb_image.h"
      if ($31) {
       $32 = $hsz; //@line 4590 "src/sprites/../puun/gf/../../other/stb_image.h"
       $33 = ($32|0)!=(124); //@line 4590 "src/sprites/../puun/gf/../../other/stb_image.h"
       if ($33) {
        $34 = (_stbi__err(10104)|0); //@line 4590 "src/sprites/../puun/gf/../../other/stb_image.h"
        $35 = ($34|0)!=(0); //@line 4590 "src/sprites/../puun/gf/../../other/stb_image.h"
        $36 = $35 ? 0 : 0; //@line 4590 "src/sprites/../puun/gf/../../other/stb_image.h"
        $0 = $36; //@line 4590 "src/sprites/../puun/gf/../../other/stb_image.h"
        $617 = $0; //@line 4777 "src/sprites/../puun/gf/../../other/stb_image.h"
        STACKTOP = sp;return ($617|0); //@line 4777 "src/sprites/../puun/gf/../../other/stb_image.h"
       }
      }
     }
    }
   }
   $37 = $hsz; //@line 4591 "src/sprites/../puun/gf/../../other/stb_image.h"
   $38 = ($37|0)==(12); //@line 4591 "src/sprites/../puun/gf/../../other/stb_image.h"
   if ($38) {
    $39 = $1; //@line 4592 "src/sprites/../puun/gf/../../other/stb_image.h"
    $40 = (_stbi__get16le($39)|0); //@line 4592 "src/sprites/../puun/gf/../../other/stb_image.h"
    $41 = $1; //@line 4592 "src/sprites/../puun/gf/../../other/stb_image.h"
    HEAP32[$41>>2] = $40; //@line 4592 "src/sprites/../puun/gf/../../other/stb_image.h"
    $42 = $1; //@line 4593 "src/sprites/../puun/gf/../../other/stb_image.h"
    $43 = (_stbi__get16le($42)|0); //@line 4593 "src/sprites/../puun/gf/../../other/stb_image.h"
    $44 = $1; //@line 4593 "src/sprites/../puun/gf/../../other/stb_image.h"
    $45 = (($44) + 4|0); //@line 4593 "src/sprites/../puun/gf/../../other/stb_image.h"
    HEAP32[$45>>2] = $43; //@line 4593 "src/sprites/../puun/gf/../../other/stb_image.h"
   } else {
    $46 = $1; //@line 4595 "src/sprites/../puun/gf/../../other/stb_image.h"
    $47 = (_stbi__get32le($46)|0); //@line 4595 "src/sprites/../puun/gf/../../other/stb_image.h"
    $48 = $1; //@line 4595 "src/sprites/../puun/gf/../../other/stb_image.h"
    HEAP32[$48>>2] = $47; //@line 4595 "src/sprites/../puun/gf/../../other/stb_image.h"
    $49 = $1; //@line 4596 "src/sprites/../puun/gf/../../other/stb_image.h"
    $50 = (_stbi__get32le($49)|0); //@line 4596 "src/sprites/../puun/gf/../../other/stb_image.h"
    $51 = $1; //@line 4596 "src/sprites/../puun/gf/../../other/stb_image.h"
    $52 = (($51) + 4|0); //@line 4596 "src/sprites/../puun/gf/../../other/stb_image.h"
    HEAP32[$52>>2] = $50; //@line 4596 "src/sprites/../puun/gf/../../other/stb_image.h"
   }
   $53 = $1; //@line 4598 "src/sprites/../puun/gf/../../other/stb_image.h"
   $54 = (_stbi__get16le($53)|0); //@line 4598 "src/sprites/../puun/gf/../../other/stb_image.h"
   $55 = ($54|0)!=(1); //@line 4598 "src/sprites/../puun/gf/../../other/stb_image.h"
   if ($55) {
    $56 = (_stbi__err(10120)|0); //@line 4598 "src/sprites/../puun/gf/../../other/stb_image.h"
    $57 = ($56|0)!=(0); //@line 4598 "src/sprites/../puun/gf/../../other/stb_image.h"
    $58 = $57 ? 0 : 0; //@line 4598 "src/sprites/../puun/gf/../../other/stb_image.h"
    $0 = $58; //@line 4598 "src/sprites/../puun/gf/../../other/stb_image.h"
    $617 = $0; //@line 4777 "src/sprites/../puun/gf/../../other/stb_image.h"
    STACKTOP = sp;return ($617|0); //@line 4777 "src/sprites/../puun/gf/../../other/stb_image.h"
   }
   $59 = $1; //@line 4599 "src/sprites/../puun/gf/../../other/stb_image.h"
   $60 = (_stbi__get16le($59)|0); //@line 4599 "src/sprites/../puun/gf/../../other/stb_image.h"
   $bpp = $60; //@line 4599 "src/sprites/../puun/gf/../../other/stb_image.h"
   $61 = $bpp; //@line 4600 "src/sprites/../puun/gf/../../other/stb_image.h"
   $62 = ($61|0)==(1); //@line 4600 "src/sprites/../puun/gf/../../other/stb_image.h"
   if ($62) {
    $63 = (_stbi__err(10128)|0); //@line 4600 "src/sprites/../puun/gf/../../other/stb_image.h"
    $64 = ($63|0)!=(0); //@line 4600 "src/sprites/../puun/gf/../../other/stb_image.h"
    $65 = $64 ? 0 : 0; //@line 4600 "src/sprites/../puun/gf/../../other/stb_image.h"
    $0 = $65; //@line 4600 "src/sprites/../puun/gf/../../other/stb_image.h"
    $617 = $0; //@line 4777 "src/sprites/../puun/gf/../../other/stb_image.h"
    STACKTOP = sp;return ($617|0); //@line 4777 "src/sprites/../puun/gf/../../other/stb_image.h"
   }
   $66 = $1; //@line 4601 "src/sprites/../puun/gf/../../other/stb_image.h"
   $67 = (($66) + 4|0); //@line 4601 "src/sprites/../puun/gf/../../other/stb_image.h"
   $68 = HEAP32[$67>>2]|0; //@line 4601 "src/sprites/../puun/gf/../../other/stb_image.h"
   $69 = ($68|0)>(0); //@line 4601 "src/sprites/../puun/gf/../../other/stb_image.h"
   $70 = $69&1; //@line 4601 "src/sprites/../puun/gf/../../other/stb_image.h"
   $flip_vertically = $70; //@line 4601 "src/sprites/../puun/gf/../../other/stb_image.h"
   $71 = $1; //@line 4602 "src/sprites/../puun/gf/../../other/stb_image.h"
   $72 = (($71) + 4|0); //@line 4602 "src/sprites/../puun/gf/../../other/stb_image.h"
   $73 = HEAP32[$72>>2]|0; //@line 4602 "src/sprites/../puun/gf/../../other/stb_image.h"
   $74 = (Math_abs(($73|0))|0); //@line 4602 "src/sprites/../puun/gf/../../other/stb_image.h"
   $75 = $1; //@line 4602 "src/sprites/../puun/gf/../../other/stb_image.h"
   $76 = (($75) + 4|0); //@line 4602 "src/sprites/../puun/gf/../../other/stb_image.h"
   HEAP32[$76>>2] = $74; //@line 4602 "src/sprites/../puun/gf/../../other/stb_image.h"
   $77 = $hsz; //@line 4603 "src/sprites/../puun/gf/../../other/stb_image.h"
   $78 = ($77|0)==(12); //@line 4603 "src/sprites/../puun/gf/../../other/stb_image.h"
   do {
    if ($78) {
     $79 = $bpp; //@line 4604 "src/sprites/../puun/gf/../../other/stb_image.h"
     $80 = ($79|0)<(24); //@line 4604 "src/sprites/../puun/gf/../../other/stb_image.h"
     if ($80) {
      $81 = $offset; //@line 4605 "src/sprites/../puun/gf/../../other/stb_image.h"
      $82 = (($81) - 14)|0; //@line 4605 "src/sprites/../puun/gf/../../other/stb_image.h"
      $83 = (($82) - 24)|0; //@line 4605 "src/sprites/../puun/gf/../../other/stb_image.h"
      $84 = (($83|0) / 3)&-1; //@line 4605 "src/sprites/../puun/gf/../../other/stb_image.h"
      $psize = $84; //@line 4605 "src/sprites/../puun/gf/../../other/stb_image.h"
     }
    } else {
     $85 = $1; //@line 4607 "src/sprites/../puun/gf/../../other/stb_image.h"
     $86 = (_stbi__get32le($85)|0); //@line 4607 "src/sprites/../puun/gf/../../other/stb_image.h"
     $compress = $86; //@line 4607 "src/sprites/../puun/gf/../../other/stb_image.h"
     $87 = $compress; //@line 4608 "src/sprites/../puun/gf/../../other/stb_image.h"
     $88 = ($87|0)==(1); //@line 4608 "src/sprites/../puun/gf/../../other/stb_image.h"
     if (!($88)) {
      $89 = $compress; //@line 4608 "src/sprites/../puun/gf/../../other/stb_image.h"
      $90 = ($89|0)==(2); //@line 4608 "src/sprites/../puun/gf/../../other/stb_image.h"
      if (!($90)) {
       $94 = $1; //@line 4609 "src/sprites/../puun/gf/../../other/stb_image.h"
       (_stbi__get32le($94)|0); //@line 4609 "src/sprites/../puun/gf/../../other/stb_image.h"
       $95 = $1; //@line 4610 "src/sprites/../puun/gf/../../other/stb_image.h"
       (_stbi__get32le($95)|0); //@line 4610 "src/sprites/../puun/gf/../../other/stb_image.h"
       $96 = $1; //@line 4611 "src/sprites/../puun/gf/../../other/stb_image.h"
       (_stbi__get32le($96)|0); //@line 4611 "src/sprites/../puun/gf/../../other/stb_image.h"
       $97 = $1; //@line 4612 "src/sprites/../puun/gf/../../other/stb_image.h"
       (_stbi__get32le($97)|0); //@line 4612 "src/sprites/../puun/gf/../../other/stb_image.h"
       $98 = $1; //@line 4613 "src/sprites/../puun/gf/../../other/stb_image.h"
       (_stbi__get32le($98)|0); //@line 4613 "src/sprites/../puun/gf/../../other/stb_image.h"
       $99 = $hsz; //@line 4614 "src/sprites/../puun/gf/../../other/stb_image.h"
       $100 = ($99|0)==(40); //@line 4614 "src/sprites/../puun/gf/../../other/stb_image.h"
       if ($100) {
        label = 26;
       } else {
        $101 = $hsz; //@line 4614 "src/sprites/../puun/gf/../../other/stb_image.h"
        $102 = ($101|0)==(56); //@line 4614 "src/sprites/../puun/gf/../../other/stb_image.h"
        if ($102) {
         label = 26;
        } else {
         $137 = $hsz; //@line 4649 "src/sprites/../puun/gf/../../other/stb_image.h"
         $138 = ($137|0)==(108); //@line 4649 "src/sprites/../puun/gf/../../other/stb_image.h"
         if (!($138)) {
          $139 = $hsz; //@line 4649 "src/sprites/../puun/gf/../../other/stb_image.h"
          $140 = ($139|0)==(124); //@line 4649 "src/sprites/../puun/gf/../../other/stb_image.h"
          if (!($140)) {
           ___assert_fail((10152|0),(7560|0),4649,(10184|0)); //@line 4649 "src/sprites/../puun/gf/../../other/stb_image.h"
           // unreachable; //@line 4649 "src/sprites/../puun/gf/../../other/stb_image.h"
          }
         }
         $141 = $1; //@line 4650 "src/sprites/../puun/gf/../../other/stb_image.h"
         $142 = (_stbi__get32le($141)|0); //@line 4650 "src/sprites/../puun/gf/../../other/stb_image.h"
         $mr = $142; //@line 4650 "src/sprites/../puun/gf/../../other/stb_image.h"
         $143 = $1; //@line 4651 "src/sprites/../puun/gf/../../other/stb_image.h"
         $144 = (_stbi__get32le($143)|0); //@line 4651 "src/sprites/../puun/gf/../../other/stb_image.h"
         $mg = $144; //@line 4651 "src/sprites/../puun/gf/../../other/stb_image.h"
         $145 = $1; //@line 4652 "src/sprites/../puun/gf/../../other/stb_image.h"
         $146 = (_stbi__get32le($145)|0); //@line 4652 "src/sprites/../puun/gf/../../other/stb_image.h"
         $mb = $146; //@line 4652 "src/sprites/../puun/gf/../../other/stb_image.h"
         $147 = $1; //@line 4653 "src/sprites/../puun/gf/../../other/stb_image.h"
         $148 = (_stbi__get32le($147)|0); //@line 4653 "src/sprites/../puun/gf/../../other/stb_image.h"
         $ma = $148; //@line 4653 "src/sprites/../puun/gf/../../other/stb_image.h"
         $149 = $1; //@line 4654 "src/sprites/../puun/gf/../../other/stb_image.h"
         (_stbi__get32le($149)|0); //@line 4654 "src/sprites/../puun/gf/../../other/stb_image.h"
         $i = 0; //@line 4655 "src/sprites/../puun/gf/../../other/stb_image.h"
         while(1) {
          $150 = $i; //@line 4655 "src/sprites/../puun/gf/../../other/stb_image.h"
          $151 = ($150|0)<(12); //@line 4655 "src/sprites/../puun/gf/../../other/stb_image.h"
          if (!($151)) {
           break;
          }
          $152 = $1; //@line 4656 "src/sprites/../puun/gf/../../other/stb_image.h"
          (_stbi__get32le($152)|0); //@line 4656 "src/sprites/../puun/gf/../../other/stb_image.h"
          $153 = $i; //@line 4655 "src/sprites/../puun/gf/../../other/stb_image.h"
          $154 = (($153) + 1)|0; //@line 4655 "src/sprites/../puun/gf/../../other/stb_image.h"
          $i = $154; //@line 4655 "src/sprites/../puun/gf/../../other/stb_image.h"
         }
         $155 = $hsz; //@line 4657 "src/sprites/../puun/gf/../../other/stb_image.h"
         $156 = ($155|0)==(124); //@line 4657 "src/sprites/../puun/gf/../../other/stb_image.h"
         if ($156) {
          $157 = $1; //@line 4658 "src/sprites/../puun/gf/../../other/stb_image.h"
          (_stbi__get32le($157)|0); //@line 4658 "src/sprites/../puun/gf/../../other/stb_image.h"
          $158 = $1; //@line 4659 "src/sprites/../puun/gf/../../other/stb_image.h"
          (_stbi__get32le($158)|0); //@line 4659 "src/sprites/../puun/gf/../../other/stb_image.h"
          $159 = $1; //@line 4660 "src/sprites/../puun/gf/../../other/stb_image.h"
          (_stbi__get32le($159)|0); //@line 4660 "src/sprites/../puun/gf/../../other/stb_image.h"
          $160 = $1; //@line 4661 "src/sprites/../puun/gf/../../other/stb_image.h"
          (_stbi__get32le($160)|0); //@line 4661 "src/sprites/../puun/gf/../../other/stb_image.h"
         }
        }
       }
       if ((label|0) == 26) {
        $103 = $hsz; //@line 4615 "src/sprites/../puun/gf/../../other/stb_image.h"
        $104 = ($103|0)==(56); //@line 4615 "src/sprites/../puun/gf/../../other/stb_image.h"
        if ($104) {
         $105 = $1; //@line 4616 "src/sprites/../puun/gf/../../other/stb_image.h"
         (_stbi__get32le($105)|0); //@line 4616 "src/sprites/../puun/gf/../../other/stb_image.h"
         $106 = $1; //@line 4617 "src/sprites/../puun/gf/../../other/stb_image.h"
         (_stbi__get32le($106)|0); //@line 4617 "src/sprites/../puun/gf/../../other/stb_image.h"
         $107 = $1; //@line 4618 "src/sprites/../puun/gf/../../other/stb_image.h"
         (_stbi__get32le($107)|0); //@line 4618 "src/sprites/../puun/gf/../../other/stb_image.h"
         $108 = $1; //@line 4619 "src/sprites/../puun/gf/../../other/stb_image.h"
         (_stbi__get32le($108)|0); //@line 4619 "src/sprites/../puun/gf/../../other/stb_image.h"
        }
        $109 = $bpp; //@line 4621 "src/sprites/../puun/gf/../../other/stb_image.h"
        $110 = ($109|0)==(16); //@line 4621 "src/sprites/../puun/gf/../../other/stb_image.h"
        if ($110) {
         label = 30;
        } else {
         $111 = $bpp; //@line 4621 "src/sprites/../puun/gf/../../other/stb_image.h"
         $112 = ($111|0)==(32); //@line 4621 "src/sprites/../puun/gf/../../other/stb_image.h"
         if ($112) {
          label = 30;
         }
        }
        if ((label|0) == 30) {
         $mb = 0; //@line 4622 "src/sprites/../puun/gf/../../other/stb_image.h"
         $mg = 0; //@line 4622 "src/sprites/../puun/gf/../../other/stb_image.h"
         $mr = 0; //@line 4622 "src/sprites/../puun/gf/../../other/stb_image.h"
         $113 = $compress; //@line 4623 "src/sprites/../puun/gf/../../other/stb_image.h"
         $114 = ($113|0)==(0); //@line 4623 "src/sprites/../puun/gf/../../other/stb_image.h"
         if ($114) {
          $115 = $bpp; //@line 4624 "src/sprites/../puun/gf/../../other/stb_image.h"
          $116 = ($115|0)==(32); //@line 4624 "src/sprites/../puun/gf/../../other/stb_image.h"
          if ($116) {
           $mr = 16711680; //@line 4625 "src/sprites/../puun/gf/../../other/stb_image.h"
           $mg = 65280; //@line 4626 "src/sprites/../puun/gf/../../other/stb_image.h"
           $mb = 255; //@line 4627 "src/sprites/../puun/gf/../../other/stb_image.h"
           $ma = -16777216; //@line 4628 "src/sprites/../puun/gf/../../other/stb_image.h"
           $fake_a = 1; //@line 4629 "src/sprites/../puun/gf/../../other/stb_image.h"
          } else {
           $mr = 31744; //@line 4632 "src/sprites/../puun/gf/../../other/stb_image.h"
           $mg = 992; //@line 4633 "src/sprites/../puun/gf/../../other/stb_image.h"
           $mb = 31; //@line 4634 "src/sprites/../puun/gf/../../other/stb_image.h"
          }
         } else {
          $117 = $compress; //@line 4636 "src/sprites/../puun/gf/../../other/stb_image.h"
          $118 = ($117|0)==(3); //@line 4636 "src/sprites/../puun/gf/../../other/stb_image.h"
          if (!($118)) {
           $134 = (_stbi__err(10120)|0); //@line 4646 "src/sprites/../puun/gf/../../other/stb_image.h"
           $135 = ($134|0)!=(0); //@line 4646 "src/sprites/../puun/gf/../../other/stb_image.h"
           $136 = $135 ? 0 : 0; //@line 4646 "src/sprites/../puun/gf/../../other/stb_image.h"
           $0 = $136; //@line 4646 "src/sprites/../puun/gf/../../other/stb_image.h"
           $617 = $0; //@line 4777 "src/sprites/../puun/gf/../../other/stb_image.h"
           STACKTOP = sp;return ($617|0); //@line 4777 "src/sprites/../puun/gf/../../other/stb_image.h"
          }
          $119 = $1; //@line 4637 "src/sprites/../puun/gf/../../other/stb_image.h"
          $120 = (_stbi__get32le($119)|0); //@line 4637 "src/sprites/../puun/gf/../../other/stb_image.h"
          $mr = $120; //@line 4637 "src/sprites/../puun/gf/../../other/stb_image.h"
          $121 = $1; //@line 4638 "src/sprites/../puun/gf/../../other/stb_image.h"
          $122 = (_stbi__get32le($121)|0); //@line 4638 "src/sprites/../puun/gf/../../other/stb_image.h"
          $mg = $122; //@line 4638 "src/sprites/../puun/gf/../../other/stb_image.h"
          $123 = $1; //@line 4639 "src/sprites/../puun/gf/../../other/stb_image.h"
          $124 = (_stbi__get32le($123)|0); //@line 4639 "src/sprites/../puun/gf/../../other/stb_image.h"
          $mb = $124; //@line 4639 "src/sprites/../puun/gf/../../other/stb_image.h"
          $125 = $mr; //@line 4641 "src/sprites/../puun/gf/../../other/stb_image.h"
          $126 = $mg; //@line 4641 "src/sprites/../puun/gf/../../other/stb_image.h"
          $127 = ($125|0)==($126|0); //@line 4641 "src/sprites/../puun/gf/../../other/stb_image.h"
          do {
           if ($127) {
            $128 = $mg; //@line 4641 "src/sprites/../puun/gf/../../other/stb_image.h"
            $129 = $mb; //@line 4641 "src/sprites/../puun/gf/../../other/stb_image.h"
            $130 = ($128|0)==($129|0); //@line 4641 "src/sprites/../puun/gf/../../other/stb_image.h"
            if (!($130)) {
             break;
            }
            $131 = (_stbi__err(10120)|0); //@line 4643 "src/sprites/../puun/gf/../../other/stb_image.h"
            $132 = ($131|0)!=(0); //@line 4643 "src/sprites/../puun/gf/../../other/stb_image.h"
            $133 = $132 ? 0 : 0; //@line 4643 "src/sprites/../puun/gf/../../other/stb_image.h"
            $0 = $133; //@line 4643 "src/sprites/../puun/gf/../../other/stb_image.h"
            $617 = $0; //@line 4777 "src/sprites/../puun/gf/../../other/stb_image.h"
            STACKTOP = sp;return ($617|0); //@line 4777 "src/sprites/../puun/gf/../../other/stb_image.h"
           }
          } while(0);
         }
        }
       }
       $161 = $bpp; //@line 4664 "src/sprites/../puun/gf/../../other/stb_image.h"
       $162 = ($161|0)<(16); //@line 4664 "src/sprites/../puun/gf/../../other/stb_image.h"
       if ($162) {
        $163 = $offset; //@line 4665 "src/sprites/../puun/gf/../../other/stb_image.h"
        $164 = (($163) - 14)|0; //@line 4665 "src/sprites/../puun/gf/../../other/stb_image.h"
        $165 = $hsz; //@line 4665 "src/sprites/../puun/gf/../../other/stb_image.h"
        $166 = (($164) - ($165))|0; //@line 4665 "src/sprites/../puun/gf/../../other/stb_image.h"
        $167 = $166 >> 2; //@line 4665 "src/sprites/../puun/gf/../../other/stb_image.h"
        $psize = $167; //@line 4665 "src/sprites/../puun/gf/../../other/stb_image.h"
       }
       break;
      }
     }
     $91 = (_stbi__err(10144)|0); //@line 4608 "src/sprites/../puun/gf/../../other/stb_image.h"
     $92 = ($91|0)!=(0); //@line 4608 "src/sprites/../puun/gf/../../other/stb_image.h"
     $93 = $92 ? 0 : 0; //@line 4608 "src/sprites/../puun/gf/../../other/stb_image.h"
     $0 = $93; //@line 4608 "src/sprites/../puun/gf/../../other/stb_image.h"
     $617 = $0; //@line 4777 "src/sprites/../puun/gf/../../other/stb_image.h"
     STACKTOP = sp;return ($617|0); //@line 4777 "src/sprites/../puun/gf/../../other/stb_image.h"
    }
   } while(0);
   $168 = $ma; //@line 4667 "src/sprites/../puun/gf/../../other/stb_image.h"
   $169 = ($168|0)!=(0); //@line 4667 "src/sprites/../puun/gf/../../other/stb_image.h"
   $170 = $169 ? 4 : 3; //@line 4667 "src/sprites/../puun/gf/../../other/stb_image.h"
   $171 = $1; //@line 4667 "src/sprites/../puun/gf/../../other/stb_image.h"
   $172 = (($171) + 8|0); //@line 4667 "src/sprites/../puun/gf/../../other/stb_image.h"
   HEAP32[$172>>2] = $170; //@line 4667 "src/sprites/../puun/gf/../../other/stb_image.h"
   $173 = $5; //@line 4668 "src/sprites/../puun/gf/../../other/stb_image.h"
   $174 = ($173|0)!=(0); //@line 4668 "src/sprites/../puun/gf/../../other/stb_image.h"
   if ($174) {
    $175 = $5; //@line 4668 "src/sprites/../puun/gf/../../other/stb_image.h"
    $176 = ($175|0)>=(3); //@line 4668 "src/sprites/../puun/gf/../../other/stb_image.h"
    if ($176) {
     $177 = $5; //@line 4669 "src/sprites/../puun/gf/../../other/stb_image.h"
     $target = $177; //@line 4669 "src/sprites/../puun/gf/../../other/stb_image.h"
    } else {
     label = 60;
    }
   } else {
    label = 60;
   }
   if ((label|0) == 60) {
    $178 = $1; //@line 4671 "src/sprites/../puun/gf/../../other/stb_image.h"
    $179 = (($178) + 8|0); //@line 4671 "src/sprites/../puun/gf/../../other/stb_image.h"
    $180 = HEAP32[$179>>2]|0; //@line 4671 "src/sprites/../puun/gf/../../other/stb_image.h"
    $target = $180; //@line 4671 "src/sprites/../puun/gf/../../other/stb_image.h"
   }
   $181 = $target; //@line 4672 "src/sprites/../puun/gf/../../other/stb_image.h"
   $182 = $1; //@line 4672 "src/sprites/../puun/gf/../../other/stb_image.h"
   $183 = HEAP32[$182>>2]|0; //@line 4672 "src/sprites/../puun/gf/../../other/stb_image.h"
   $184 = Math_imul($181, $183)|0; //@line 4672 "src/sprites/../puun/gf/../../other/stb_image.h"
   $185 = $1; //@line 4672 "src/sprites/../puun/gf/../../other/stb_image.h"
   $186 = (($185) + 4|0); //@line 4672 "src/sprites/../puun/gf/../../other/stb_image.h"
   $187 = HEAP32[$186>>2]|0; //@line 4672 "src/sprites/../puun/gf/../../other/stb_image.h"
   $188 = Math_imul($184, $187)|0; //@line 4672 "src/sprites/../puun/gf/../../other/stb_image.h"
   $189 = (_stbi__malloc($188)|0); //@line 4672 "src/sprites/../puun/gf/../../other/stb_image.h"
   $out = $189; //@line 4672 "src/sprites/../puun/gf/../../other/stb_image.h"
   $190 = $out; //@line 4673 "src/sprites/../puun/gf/../../other/stb_image.h"
   $191 = ($190|0)!=(0|0); //@line 4673 "src/sprites/../puun/gf/../../other/stb_image.h"
   if (!($191)) {
    $192 = (_stbi__err(7464)|0); //@line 4673 "src/sprites/../puun/gf/../../other/stb_image.h"
    $193 = ($192|0)!=(0); //@line 4673 "src/sprites/../puun/gf/../../other/stb_image.h"
    $194 = $193 ? 0 : 0; //@line 4673 "src/sprites/../puun/gf/../../other/stb_image.h"
    $0 = $194; //@line 4673 "src/sprites/../puun/gf/../../other/stb_image.h"
    $617 = $0; //@line 4777 "src/sprites/../puun/gf/../../other/stb_image.h"
    STACKTOP = sp;return ($617|0); //@line 4777 "src/sprites/../puun/gf/../../other/stb_image.h"
   }
   $195 = $bpp; //@line 4674 "src/sprites/../puun/gf/../../other/stb_image.h"
   $196 = ($195|0)<(16); //@line 4674 "src/sprites/../puun/gf/../../other/stb_image.h"
   do {
    if ($196) {
     $z = 0; //@line 4675 "src/sprites/../puun/gf/../../other/stb_image.h"
     $197 = $psize; //@line 4676 "src/sprites/../puun/gf/../../other/stb_image.h"
     $198 = ($197|0)==(0); //@line 4676 "src/sprites/../puun/gf/../../other/stb_image.h"
     if (!($198)) {
      $199 = $psize; //@line 4676 "src/sprites/../puun/gf/../../other/stb_image.h"
      $200 = ($199|0)>(256); //@line 4676 "src/sprites/../puun/gf/../../other/stb_image.h"
      if (!($200)) {
       $i = 0; //@line 4677 "src/sprites/../puun/gf/../../other/stb_image.h"
       while(1) {
        $205 = $i; //@line 4677 "src/sprites/../puun/gf/../../other/stb_image.h"
        $206 = $psize; //@line 4677 "src/sprites/../puun/gf/../../other/stb_image.h"
        $207 = ($205|0)<($206|0); //@line 4677 "src/sprites/../puun/gf/../../other/stb_image.h"
        if (!($207)) {
         break;
        }
        $208 = $1; //@line 4678 "src/sprites/../puun/gf/../../other/stb_image.h"
        $209 = (_stbi__get8($208)|0); //@line 4678 "src/sprites/../puun/gf/../../other/stb_image.h"
        $210 = $i; //@line 4678 "src/sprites/../puun/gf/../../other/stb_image.h"
        $211 = (($pal) + ($210<<2)|0); //@line 4678 "src/sprites/../puun/gf/../../other/stb_image.h"
        $212 = (($211) + 2|0); //@line 4678 "src/sprites/../puun/gf/../../other/stb_image.h"
        HEAP8[$212>>0] = $209; //@line 4678 "src/sprites/../puun/gf/../../other/stb_image.h"
        $213 = $1; //@line 4679 "src/sprites/../puun/gf/../../other/stb_image.h"
        $214 = (_stbi__get8($213)|0); //@line 4679 "src/sprites/../puun/gf/../../other/stb_image.h"
        $215 = $i; //@line 4679 "src/sprites/../puun/gf/../../other/stb_image.h"
        $216 = (($pal) + ($215<<2)|0); //@line 4679 "src/sprites/../puun/gf/../../other/stb_image.h"
        $217 = (($216) + 1|0); //@line 4679 "src/sprites/../puun/gf/../../other/stb_image.h"
        HEAP8[$217>>0] = $214; //@line 4679 "src/sprites/../puun/gf/../../other/stb_image.h"
        $218 = $1; //@line 4680 "src/sprites/../puun/gf/../../other/stb_image.h"
        $219 = (_stbi__get8($218)|0); //@line 4680 "src/sprites/../puun/gf/../../other/stb_image.h"
        $220 = $i; //@line 4680 "src/sprites/../puun/gf/../../other/stb_image.h"
        $221 = (($pal) + ($220<<2)|0); //@line 4680 "src/sprites/../puun/gf/../../other/stb_image.h"
        HEAP8[$221>>0] = $219; //@line 4680 "src/sprites/../puun/gf/../../other/stb_image.h"
        $222 = $hsz; //@line 4681 "src/sprites/../puun/gf/../../other/stb_image.h"
        $223 = ($222|0)!=(12); //@line 4681 "src/sprites/../puun/gf/../../other/stb_image.h"
        if ($223) {
         $224 = $1; //@line 4681 "src/sprites/../puun/gf/../../other/stb_image.h"
         (_stbi__get8($224)|0); //@line 4681 "src/sprites/../puun/gf/../../other/stb_image.h"
        }
        $225 = $i; //@line 4682 "src/sprites/../puun/gf/../../other/stb_image.h"
        $226 = (($pal) + ($225<<2)|0); //@line 4682 "src/sprites/../puun/gf/../../other/stb_image.h"
        $227 = (($226) + 3|0); //@line 4682 "src/sprites/../puun/gf/../../other/stb_image.h"
        HEAP8[$227>>0] = -1; //@line 4682 "src/sprites/../puun/gf/../../other/stb_image.h"
        $228 = $i; //@line 4677 "src/sprites/../puun/gf/../../other/stb_image.h"
        $229 = (($228) + 1)|0; //@line 4677 "src/sprites/../puun/gf/../../other/stb_image.h"
        $i = $229; //@line 4677 "src/sprites/../puun/gf/../../other/stb_image.h"
       }
       $230 = $1; //@line 4684 "src/sprites/../puun/gf/../../other/stb_image.h"
       $231 = $offset; //@line 4684 "src/sprites/../puun/gf/../../other/stb_image.h"
       $232 = (($231) - 14)|0; //@line 4684 "src/sprites/../puun/gf/../../other/stb_image.h"
       $233 = $hsz; //@line 4684 "src/sprites/../puun/gf/../../other/stb_image.h"
       $234 = (($232) - ($233))|0; //@line 4684 "src/sprites/../puun/gf/../../other/stb_image.h"
       $235 = $psize; //@line 4684 "src/sprites/../puun/gf/../../other/stb_image.h"
       $236 = $hsz; //@line 4684 "src/sprites/../puun/gf/../../other/stb_image.h"
       $237 = ($236|0)==(12); //@line 4684 "src/sprites/../puun/gf/../../other/stb_image.h"
       $238 = $237 ? 3 : 4; //@line 4684 "src/sprites/../puun/gf/../../other/stb_image.h"
       $239 = Math_imul($235, $238)|0; //@line 4684 "src/sprites/../puun/gf/../../other/stb_image.h"
       $240 = (($234) - ($239))|0; //@line 4684 "src/sprites/../puun/gf/../../other/stb_image.h"
       _stbi__skip($230,$240); //@line 4684 "src/sprites/../puun/gf/../../other/stb_image.h"
       $241 = $bpp; //@line 4685 "src/sprites/../puun/gf/../../other/stb_image.h"
       $242 = ($241|0)==(4); //@line 4685 "src/sprites/../puun/gf/../../other/stb_image.h"
       do {
        if ($242) {
         $243 = $1; //@line 4685 "src/sprites/../puun/gf/../../other/stb_image.h"
         $244 = HEAP32[$243>>2]|0; //@line 4685 "src/sprites/../puun/gf/../../other/stb_image.h"
         $245 = (($244) + 1)|0; //@line 4685 "src/sprites/../puun/gf/../../other/stb_image.h"
         $246 = $245 >>> 1; //@line 4685 "src/sprites/../puun/gf/../../other/stb_image.h"
         $width = $246; //@line 4685 "src/sprites/../puun/gf/../../other/stb_image.h"
        } else {
         $247 = $bpp; //@line 4686 "src/sprites/../puun/gf/../../other/stb_image.h"
         $248 = ($247|0)==(8); //@line 4686 "src/sprites/../puun/gf/../../other/stb_image.h"
         if ($248) {
          $249 = $1; //@line 4686 "src/sprites/../puun/gf/../../other/stb_image.h"
          $250 = HEAP32[$249>>2]|0; //@line 4686 "src/sprites/../puun/gf/../../other/stb_image.h"
          $width = $250; //@line 4686 "src/sprites/../puun/gf/../../other/stb_image.h"
          break;
         } else {
          $251 = $out; //@line 4687 "src/sprites/../puun/gf/../../other/stb_image.h"
          _free($251); //@line 4687 "src/sprites/../puun/gf/../../other/stb_image.h"
          $252 = (_stbi__err(10208)|0); //@line 4687 "src/sprites/../puun/gf/../../other/stb_image.h"
          $253 = ($252|0)!=(0); //@line 4687 "src/sprites/../puun/gf/../../other/stb_image.h"
          $254 = $253 ? 0 : 0; //@line 4687 "src/sprites/../puun/gf/../../other/stb_image.h"
          $0 = $254; //@line 4687 "src/sprites/../puun/gf/../../other/stb_image.h"
          $617 = $0; //@line 4777 "src/sprites/../puun/gf/../../other/stb_image.h"
          STACKTOP = sp;return ($617|0); //@line 4777 "src/sprites/../puun/gf/../../other/stb_image.h"
         }
        }
       } while(0);
       $255 = $width; //@line 4688 "src/sprites/../puun/gf/../../other/stb_image.h"
       $256 = (0 - ($255))|0; //@line 4688 "src/sprites/../puun/gf/../../other/stb_image.h"
       $257 = $256 & 3; //@line 4688 "src/sprites/../puun/gf/../../other/stb_image.h"
       $pad = $257; //@line 4688 "src/sprites/../puun/gf/../../other/stb_image.h"
       $j = 0; //@line 4689 "src/sprites/../puun/gf/../../other/stb_image.h"
       while(1) {
        $258 = $j; //@line 4689 "src/sprites/../puun/gf/../../other/stb_image.h"
        $259 = $1; //@line 4689 "src/sprites/../puun/gf/../../other/stb_image.h"
        $260 = (($259) + 4|0); //@line 4689 "src/sprites/../puun/gf/../../other/stb_image.h"
        $261 = HEAP32[$260>>2]|0; //@line 4689 "src/sprites/../puun/gf/../../other/stb_image.h"
        $262 = ($258|0)<($261|0); //@line 4689 "src/sprites/../puun/gf/../../other/stb_image.h"
        if (!($262)) {
         break;
        }
        $i = 0; //@line 4690 "src/sprites/../puun/gf/../../other/stb_image.h"
        while(1) {
         $263 = $i; //@line 4690 "src/sprites/../puun/gf/../../other/stb_image.h"
         $264 = $1; //@line 4690 "src/sprites/../puun/gf/../../other/stb_image.h"
         $265 = HEAP32[$264>>2]|0; //@line 4690 "src/sprites/../puun/gf/../../other/stb_image.h"
         $266 = ($263|0)<($265|0); //@line 4690 "src/sprites/../puun/gf/../../other/stb_image.h"
         if (!($266)) {
          break;
         }
         $267 = $1; //@line 4691 "src/sprites/../puun/gf/../../other/stb_image.h"
         $268 = (_stbi__get8($267)|0); //@line 4691 "src/sprites/../puun/gf/../../other/stb_image.h"
         $269 = $268&255; //@line 4691 "src/sprites/../puun/gf/../../other/stb_image.h"
         $v = $269; //@line 4691 "src/sprites/../puun/gf/../../other/stb_image.h"
         $v2 = 0; //@line 4691 "src/sprites/../puun/gf/../../other/stb_image.h"
         $270 = $bpp; //@line 4692 "src/sprites/../puun/gf/../../other/stb_image.h"
         $271 = ($270|0)==(4); //@line 4692 "src/sprites/../puun/gf/../../other/stb_image.h"
         if ($271) {
          $272 = $v; //@line 4693 "src/sprites/../puun/gf/../../other/stb_image.h"
          $273 = $272 & 15; //@line 4693 "src/sprites/../puun/gf/../../other/stb_image.h"
          $v2 = $273; //@line 4693 "src/sprites/../puun/gf/../../other/stb_image.h"
          $274 = $v; //@line 4694 "src/sprites/../puun/gf/../../other/stb_image.h"
          $275 = $274 >> 4; //@line 4694 "src/sprites/../puun/gf/../../other/stb_image.h"
          $v = $275; //@line 4694 "src/sprites/../puun/gf/../../other/stb_image.h"
         }
         $276 = $v; //@line 4696 "src/sprites/../puun/gf/../../other/stb_image.h"
         $277 = (($pal) + ($276<<2)|0); //@line 4696 "src/sprites/../puun/gf/../../other/stb_image.h"
         $278 = HEAP8[$277>>0]|0; //@line 4696 "src/sprites/../puun/gf/../../other/stb_image.h"
         $279 = $z; //@line 4696 "src/sprites/../puun/gf/../../other/stb_image.h"
         $280 = (($279) + 1)|0; //@line 4696 "src/sprites/../puun/gf/../../other/stb_image.h"
         $z = $280; //@line 4696 "src/sprites/../puun/gf/../../other/stb_image.h"
         $281 = $out; //@line 4696 "src/sprites/../puun/gf/../../other/stb_image.h"
         $282 = (($281) + ($279)|0); //@line 4696 "src/sprites/../puun/gf/../../other/stb_image.h"
         HEAP8[$282>>0] = $278; //@line 4696 "src/sprites/../puun/gf/../../other/stb_image.h"
         $283 = $v; //@line 4697 "src/sprites/../puun/gf/../../other/stb_image.h"
         $284 = (($pal) + ($283<<2)|0); //@line 4697 "src/sprites/../puun/gf/../../other/stb_image.h"
         $285 = (($284) + 1|0); //@line 4697 "src/sprites/../puun/gf/../../other/stb_image.h"
         $286 = HEAP8[$285>>0]|0; //@line 4697 "src/sprites/../puun/gf/../../other/stb_image.h"
         $287 = $z; //@line 4697 "src/sprites/../puun/gf/../../other/stb_image.h"
         $288 = (($287) + 1)|0; //@line 4697 "src/sprites/../puun/gf/../../other/stb_image.h"
         $z = $288; //@line 4697 "src/sprites/../puun/gf/../../other/stb_image.h"
         $289 = $out; //@line 4697 "src/sprites/../puun/gf/../../other/stb_image.h"
         $290 = (($289) + ($287)|0); //@line 4697 "src/sprites/../puun/gf/../../other/stb_image.h"
         HEAP8[$290>>0] = $286; //@line 4697 "src/sprites/../puun/gf/../../other/stb_image.h"
         $291 = $v; //@line 4698 "src/sprites/../puun/gf/../../other/stb_image.h"
         $292 = (($pal) + ($291<<2)|0); //@line 4698 "src/sprites/../puun/gf/../../other/stb_image.h"
         $293 = (($292) + 2|0); //@line 4698 "src/sprites/../puun/gf/../../other/stb_image.h"
         $294 = HEAP8[$293>>0]|0; //@line 4698 "src/sprites/../puun/gf/../../other/stb_image.h"
         $295 = $z; //@line 4698 "src/sprites/../puun/gf/../../other/stb_image.h"
         $296 = (($295) + 1)|0; //@line 4698 "src/sprites/../puun/gf/../../other/stb_image.h"
         $z = $296; //@line 4698 "src/sprites/../puun/gf/../../other/stb_image.h"
         $297 = $out; //@line 4698 "src/sprites/../puun/gf/../../other/stb_image.h"
         $298 = (($297) + ($295)|0); //@line 4698 "src/sprites/../puun/gf/../../other/stb_image.h"
         HEAP8[$298>>0] = $294; //@line 4698 "src/sprites/../puun/gf/../../other/stb_image.h"
         $299 = $target; //@line 4699 "src/sprites/../puun/gf/../../other/stb_image.h"
         $300 = ($299|0)==(4); //@line 4699 "src/sprites/../puun/gf/../../other/stb_image.h"
         if ($300) {
          $301 = $z; //@line 4699 "src/sprites/../puun/gf/../../other/stb_image.h"
          $302 = (($301) + 1)|0; //@line 4699 "src/sprites/../puun/gf/../../other/stb_image.h"
          $z = $302; //@line 4699 "src/sprites/../puun/gf/../../other/stb_image.h"
          $303 = $out; //@line 4699 "src/sprites/../puun/gf/../../other/stb_image.h"
          $304 = (($303) + ($301)|0); //@line 4699 "src/sprites/../puun/gf/../../other/stb_image.h"
          HEAP8[$304>>0] = -1; //@line 4699 "src/sprites/../puun/gf/../../other/stb_image.h"
         }
         $305 = $i; //@line 4700 "src/sprites/../puun/gf/../../other/stb_image.h"
         $306 = (($305) + 1)|0; //@line 4700 "src/sprites/../puun/gf/../../other/stb_image.h"
         $307 = $1; //@line 4700 "src/sprites/../puun/gf/../../other/stb_image.h"
         $308 = HEAP32[$307>>2]|0; //@line 4700 "src/sprites/../puun/gf/../../other/stb_image.h"
         $309 = ($306|0)==($308|0); //@line 4700 "src/sprites/../puun/gf/../../other/stb_image.h"
         if ($309) {
          label = 88;
          break;
         }
         $310 = $bpp; //@line 4701 "src/sprites/../puun/gf/../../other/stb_image.h"
         $311 = ($310|0)==(8); //@line 4701 "src/sprites/../puun/gf/../../other/stb_image.h"
         if ($311) {
          $312 = $1; //@line 4701 "src/sprites/../puun/gf/../../other/stb_image.h"
          $313 = (_stbi__get8($312)|0); //@line 4701 "src/sprites/../puun/gf/../../other/stb_image.h"
          $314 = $313&255; //@line 4701 "src/sprites/../puun/gf/../../other/stb_image.h"
          $316 = $314;
         } else {
          $315 = $v2; //@line 4701 "src/sprites/../puun/gf/../../other/stb_image.h"
          $316 = $315;
         }
         $v = $316; //@line 4701 "src/sprites/../puun/gf/../../other/stb_image.h"
         $317 = $v; //@line 4702 "src/sprites/../puun/gf/../../other/stb_image.h"
         $318 = (($pal) + ($317<<2)|0); //@line 4702 "src/sprites/../puun/gf/../../other/stb_image.h"
         $319 = HEAP8[$318>>0]|0; //@line 4702 "src/sprites/../puun/gf/../../other/stb_image.h"
         $320 = $z; //@line 4702 "src/sprites/../puun/gf/../../other/stb_image.h"
         $321 = (($320) + 1)|0; //@line 4702 "src/sprites/../puun/gf/../../other/stb_image.h"
         $z = $321; //@line 4702 "src/sprites/../puun/gf/../../other/stb_image.h"
         $322 = $out; //@line 4702 "src/sprites/../puun/gf/../../other/stb_image.h"
         $323 = (($322) + ($320)|0); //@line 4702 "src/sprites/../puun/gf/../../other/stb_image.h"
         HEAP8[$323>>0] = $319; //@line 4702 "src/sprites/../puun/gf/../../other/stb_image.h"
         $324 = $v; //@line 4703 "src/sprites/../puun/gf/../../other/stb_image.h"
         $325 = (($pal) + ($324<<2)|0); //@line 4703 "src/sprites/../puun/gf/../../other/stb_image.h"
         $326 = (($325) + 1|0); //@line 4703 "src/sprites/../puun/gf/../../other/stb_image.h"
         $327 = HEAP8[$326>>0]|0; //@line 4703 "src/sprites/../puun/gf/../../other/stb_image.h"
         $328 = $z; //@line 4703 "src/sprites/../puun/gf/../../other/stb_image.h"
         $329 = (($328) + 1)|0; //@line 4703 "src/sprites/../puun/gf/../../other/stb_image.h"
         $z = $329; //@line 4703 "src/sprites/../puun/gf/../../other/stb_image.h"
         $330 = $out; //@line 4703 "src/sprites/../puun/gf/../../other/stb_image.h"
         $331 = (($330) + ($328)|0); //@line 4703 "src/sprites/../puun/gf/../../other/stb_image.h"
         HEAP8[$331>>0] = $327; //@line 4703 "src/sprites/../puun/gf/../../other/stb_image.h"
         $332 = $v; //@line 4704 "src/sprites/../puun/gf/../../other/stb_image.h"
         $333 = (($pal) + ($332<<2)|0); //@line 4704 "src/sprites/../puun/gf/../../other/stb_image.h"
         $334 = (($333) + 2|0); //@line 4704 "src/sprites/../puun/gf/../../other/stb_image.h"
         $335 = HEAP8[$334>>0]|0; //@line 4704 "src/sprites/../puun/gf/../../other/stb_image.h"
         $336 = $z; //@line 4704 "src/sprites/../puun/gf/../../other/stb_image.h"
         $337 = (($336) + 1)|0; //@line 4704 "src/sprites/../puun/gf/../../other/stb_image.h"
         $z = $337; //@line 4704 "src/sprites/../puun/gf/../../other/stb_image.h"
         $338 = $out; //@line 4704 "src/sprites/../puun/gf/../../other/stb_image.h"
         $339 = (($338) + ($336)|0); //@line 4704 "src/sprites/../puun/gf/../../other/stb_image.h"
         HEAP8[$339>>0] = $335; //@line 4704 "src/sprites/../puun/gf/../../other/stb_image.h"
         $340 = $target; //@line 4705 "src/sprites/../puun/gf/../../other/stb_image.h"
         $341 = ($340|0)==(4); //@line 4705 "src/sprites/../puun/gf/../../other/stb_image.h"
         if ($341) {
          $342 = $z; //@line 4705 "src/sprites/../puun/gf/../../other/stb_image.h"
          $343 = (($342) + 1)|0; //@line 4705 "src/sprites/../puun/gf/../../other/stb_image.h"
          $z = $343; //@line 4705 "src/sprites/../puun/gf/../../other/stb_image.h"
          $344 = $out; //@line 4705 "src/sprites/../puun/gf/../../other/stb_image.h"
          $345 = (($344) + ($342)|0); //@line 4705 "src/sprites/../puun/gf/../../other/stb_image.h"
          HEAP8[$345>>0] = -1; //@line 4705 "src/sprites/../puun/gf/../../other/stb_image.h"
         }
         $346 = $i; //@line 4690 "src/sprites/../puun/gf/../../other/stb_image.h"
         $347 = (($346) + 2)|0; //@line 4690 "src/sprites/../puun/gf/../../other/stb_image.h"
         $i = $347; //@line 4690 "src/sprites/../puun/gf/../../other/stb_image.h"
        }
        if ((label|0) == 88) {
         label = 0;
        }
        $348 = $1; //@line 4707 "src/sprites/../puun/gf/../../other/stb_image.h"
        $349 = $pad; //@line 4707 "src/sprites/../puun/gf/../../other/stb_image.h"
        _stbi__skip($348,$349); //@line 4707 "src/sprites/../puun/gf/../../other/stb_image.h"
        $350 = $j; //@line 4689 "src/sprites/../puun/gf/../../other/stb_image.h"
        $351 = (($350) + 1)|0; //@line 4689 "src/sprites/../puun/gf/../../other/stb_image.h"
        $j = $351; //@line 4689 "src/sprites/../puun/gf/../../other/stb_image.h"
       }
       break;
      }
     }
     $201 = $out; //@line 4676 "src/sprites/../puun/gf/../../other/stb_image.h"
     _free($201); //@line 4676 "src/sprites/../puun/gf/../../other/stb_image.h"
     $202 = (_stbi__err(10200)|0); //@line 4676 "src/sprites/../puun/gf/../../other/stb_image.h"
     $203 = ($202|0)!=(0); //@line 4676 "src/sprites/../puun/gf/../../other/stb_image.h"
     $204 = $203 ? 0 : 0; //@line 4676 "src/sprites/../puun/gf/../../other/stb_image.h"
     $0 = $204; //@line 4676 "src/sprites/../puun/gf/../../other/stb_image.h"
     $617 = $0; //@line 4777 "src/sprites/../puun/gf/../../other/stb_image.h"
     STACKTOP = sp;return ($617|0); //@line 4777 "src/sprites/../puun/gf/../../other/stb_image.h"
    } else {
     $rshift = 0; //@line 4710 "src/sprites/../puun/gf/../../other/stb_image.h"
     $gshift = 0; //@line 4710 "src/sprites/../puun/gf/../../other/stb_image.h"
     $bshift = 0; //@line 4710 "src/sprites/../puun/gf/../../other/stb_image.h"
     $ashift = 0; //@line 4710 "src/sprites/../puun/gf/../../other/stb_image.h"
     $rcount = 0; //@line 4710 "src/sprites/../puun/gf/../../other/stb_image.h"
     $gcount = 0; //@line 4710 "src/sprites/../puun/gf/../../other/stb_image.h"
     $bcount = 0; //@line 4710 "src/sprites/../puun/gf/../../other/stb_image.h"
     $acount = 0; //@line 4710 "src/sprites/../puun/gf/../../other/stb_image.h"
     $z1 = 0; //@line 4711 "src/sprites/../puun/gf/../../other/stb_image.h"
     $easy = 0; //@line 4712 "src/sprites/../puun/gf/../../other/stb_image.h"
     $352 = $1; //@line 4713 "src/sprites/../puun/gf/../../other/stb_image.h"
     $353 = $offset; //@line 4713 "src/sprites/../puun/gf/../../other/stb_image.h"
     $354 = (($353) - 14)|0; //@line 4713 "src/sprites/../puun/gf/../../other/stb_image.h"
     $355 = $hsz; //@line 4713 "src/sprites/../puun/gf/../../other/stb_image.h"
     $356 = (($354) - ($355))|0; //@line 4713 "src/sprites/../puun/gf/../../other/stb_image.h"
     _stbi__skip($352,$356); //@line 4713 "src/sprites/../puun/gf/../../other/stb_image.h"
     $357 = $bpp; //@line 4714 "src/sprites/../puun/gf/../../other/stb_image.h"
     $358 = ($357|0)==(24); //@line 4714 "src/sprites/../puun/gf/../../other/stb_image.h"
     if ($358) {
      $359 = $1; //@line 4714 "src/sprites/../puun/gf/../../other/stb_image.h"
      $360 = HEAP32[$359>>2]|0; //@line 4714 "src/sprites/../puun/gf/../../other/stb_image.h"
      $361 = ($360*3)|0; //@line 4714 "src/sprites/../puun/gf/../../other/stb_image.h"
      $width = $361; //@line 4714 "src/sprites/../puun/gf/../../other/stb_image.h"
     } else {
      $362 = $bpp; //@line 4715 "src/sprites/../puun/gf/../../other/stb_image.h"
      $363 = ($362|0)==(16); //@line 4715 "src/sprites/../puun/gf/../../other/stb_image.h"
      if ($363) {
       $364 = $1; //@line 4715 "src/sprites/../puun/gf/../../other/stb_image.h"
       $365 = HEAP32[$364>>2]|0; //@line 4715 "src/sprites/../puun/gf/../../other/stb_image.h"
       $366 = $365<<1; //@line 4715 "src/sprites/../puun/gf/../../other/stb_image.h"
       $width = $366; //@line 4715 "src/sprites/../puun/gf/../../other/stb_image.h"
      } else {
       $width = 0; //@line 4716 "src/sprites/../puun/gf/../../other/stb_image.h"
      }
     }
     $367 = $width; //@line 4717 "src/sprites/../puun/gf/../../other/stb_image.h"
     $368 = (0 - ($367))|0; //@line 4717 "src/sprites/../puun/gf/../../other/stb_image.h"
     $369 = $368 & 3; //@line 4717 "src/sprites/../puun/gf/../../other/stb_image.h"
     $pad = $369; //@line 4717 "src/sprites/../puun/gf/../../other/stb_image.h"
     $370 = $bpp; //@line 4718 "src/sprites/../puun/gf/../../other/stb_image.h"
     $371 = ($370|0)==(24); //@line 4718 "src/sprites/../puun/gf/../../other/stb_image.h"
     if ($371) {
      $easy = 1; //@line 4719 "src/sprites/../puun/gf/../../other/stb_image.h"
     } else {
      $372 = $bpp; //@line 4720 "src/sprites/../puun/gf/../../other/stb_image.h"
      $373 = ($372|0)==(32); //@line 4720 "src/sprites/../puun/gf/../../other/stb_image.h"
      if ($373) {
       $374 = $mb; //@line 4721 "src/sprites/../puun/gf/../../other/stb_image.h"
       $375 = ($374|0)==(255); //@line 4721 "src/sprites/../puun/gf/../../other/stb_image.h"
       do {
        if ($375) {
         $376 = $mg; //@line 4721 "src/sprites/../puun/gf/../../other/stb_image.h"
         $377 = ($376|0)==(65280); //@line 4721 "src/sprites/../puun/gf/../../other/stb_image.h"
         if ($377) {
          $378 = $mr; //@line 4721 "src/sprites/../puun/gf/../../other/stb_image.h"
          $379 = ($378|0)==(16711680); //@line 4721 "src/sprites/../puun/gf/../../other/stb_image.h"
          if (!($379)) {
           break;
          }
          $380 = $ma; //@line 4721 "src/sprites/../puun/gf/../../other/stb_image.h"
          $381 = ($380|0)==(-16777216); //@line 4721 "src/sprites/../puun/gf/../../other/stb_image.h"
          if (!($381)) {
           break;
          }
          $easy = 2; //@line 4722 "src/sprites/../puun/gf/../../other/stb_image.h"
         }
        }
       } while(0);
      }
     }
     $382 = $easy; //@line 4724 "src/sprites/../puun/gf/../../other/stb_image.h"
     $383 = ($382|0)!=(0); //@line 4724 "src/sprites/../puun/gf/../../other/stb_image.h"
     do {
      if (!($383)) {
       $384 = $mr; //@line 4725 "src/sprites/../puun/gf/../../other/stb_image.h"
       $385 = ($384|0)!=(0); //@line 4725 "src/sprites/../puun/gf/../../other/stb_image.h"
       if ($385) {
        $386 = $mg; //@line 4725 "src/sprites/../puun/gf/../../other/stb_image.h"
        $387 = ($386|0)!=(0); //@line 4725 "src/sprites/../puun/gf/../../other/stb_image.h"
        if ($387) {
         $388 = $mb; //@line 4725 "src/sprites/../puun/gf/../../other/stb_image.h"
         $389 = ($388|0)!=(0); //@line 4725 "src/sprites/../puun/gf/../../other/stb_image.h"
         if ($389) {
          $394 = $mr; //@line 4727 "src/sprites/../puun/gf/../../other/stb_image.h"
          $395 = (_stbi__high_bit($394)|0); //@line 4727 "src/sprites/../puun/gf/../../other/stb_image.h"
          $396 = (($395) - 7)|0; //@line 4727 "src/sprites/../puun/gf/../../other/stb_image.h"
          $rshift = $396; //@line 4727 "src/sprites/../puun/gf/../../other/stb_image.h"
          $397 = $mr; //@line 4727 "src/sprites/../puun/gf/../../other/stb_image.h"
          $398 = (_stbi__bitcount($397)|0); //@line 4727 "src/sprites/../puun/gf/../../other/stb_image.h"
          $rcount = $398; //@line 4727 "src/sprites/../puun/gf/../../other/stb_image.h"
          $399 = $mg; //@line 4728 "src/sprites/../puun/gf/../../other/stb_image.h"
          $400 = (_stbi__high_bit($399)|0); //@line 4728 "src/sprites/../puun/gf/../../other/stb_image.h"
          $401 = (($400) - 7)|0; //@line 4728 "src/sprites/../puun/gf/../../other/stb_image.h"
          $gshift = $401; //@line 4728 "src/sprites/../puun/gf/../../other/stb_image.h"
          $402 = $mg; //@line 4728 "src/sprites/../puun/gf/../../other/stb_image.h"
          $403 = (_stbi__bitcount($402)|0); //@line 4728 "src/sprites/../puun/gf/../../other/stb_image.h"
          $gcount = $403; //@line 4728 "src/sprites/../puun/gf/../../other/stb_image.h"
          $404 = $mb; //@line 4729 "src/sprites/../puun/gf/../../other/stb_image.h"
          $405 = (_stbi__high_bit($404)|0); //@line 4729 "src/sprites/../puun/gf/../../other/stb_image.h"
          $406 = (($405) - 7)|0; //@line 4729 "src/sprites/../puun/gf/../../other/stb_image.h"
          $bshift = $406; //@line 4729 "src/sprites/../puun/gf/../../other/stb_image.h"
          $407 = $mb; //@line 4729 "src/sprites/../puun/gf/../../other/stb_image.h"
          $408 = (_stbi__bitcount($407)|0); //@line 4729 "src/sprites/../puun/gf/../../other/stb_image.h"
          $bcount = $408; //@line 4729 "src/sprites/../puun/gf/../../other/stb_image.h"
          $409 = $ma; //@line 4730 "src/sprites/../puun/gf/../../other/stb_image.h"
          $410 = (_stbi__high_bit($409)|0); //@line 4730 "src/sprites/../puun/gf/../../other/stb_image.h"
          $411 = (($410) - 7)|0; //@line 4730 "src/sprites/../puun/gf/../../other/stb_image.h"
          $ashift = $411; //@line 4730 "src/sprites/../puun/gf/../../other/stb_image.h"
          $412 = $ma; //@line 4730 "src/sprites/../puun/gf/../../other/stb_image.h"
          $413 = (_stbi__bitcount($412)|0); //@line 4730 "src/sprites/../puun/gf/../../other/stb_image.h"
          $acount = $413; //@line 4730 "src/sprites/../puun/gf/../../other/stb_image.h"
          break;
         }
        }
       }
       $390 = $out; //@line 4725 "src/sprites/../puun/gf/../../other/stb_image.h"
       _free($390); //@line 4725 "src/sprites/../puun/gf/../../other/stb_image.h"
       $391 = (_stbi__err(10216)|0); //@line 4725 "src/sprites/../puun/gf/../../other/stb_image.h"
       $392 = ($391|0)!=(0); //@line 4725 "src/sprites/../puun/gf/../../other/stb_image.h"
       $393 = $392 ? 0 : 0; //@line 4725 "src/sprites/../puun/gf/../../other/stb_image.h"
       $0 = $393; //@line 4725 "src/sprites/../puun/gf/../../other/stb_image.h"
       $617 = $0; //@line 4777 "src/sprites/../puun/gf/../../other/stb_image.h"
       STACKTOP = sp;return ($617|0); //@line 4777 "src/sprites/../puun/gf/../../other/stb_image.h"
      }
     } while(0);
     $j = 0; //@line 4732 "src/sprites/../puun/gf/../../other/stb_image.h"
     while(1) {
      $414 = $j; //@line 4732 "src/sprites/../puun/gf/../../other/stb_image.h"
      $415 = $1; //@line 4732 "src/sprites/../puun/gf/../../other/stb_image.h"
      $416 = (($415) + 4|0); //@line 4732 "src/sprites/../puun/gf/../../other/stb_image.h"
      $417 = HEAP32[$416>>2]|0; //@line 4732 "src/sprites/../puun/gf/../../other/stb_image.h"
      $418 = ($414|0)<($417|0); //@line 4732 "src/sprites/../puun/gf/../../other/stb_image.h"
      if (!($418)) {
       break;
      }
      $419 = $easy; //@line 4733 "src/sprites/../puun/gf/../../other/stb_image.h"
      $420 = ($419|0)!=(0); //@line 4733 "src/sprites/../puun/gf/../../other/stb_image.h"
      if ($420) {
       $i = 0; //@line 4734 "src/sprites/../puun/gf/../../other/stb_image.h"
       while(1) {
        $421 = $i; //@line 4734 "src/sprites/../puun/gf/../../other/stb_image.h"
        $422 = $1; //@line 4734 "src/sprites/../puun/gf/../../other/stb_image.h"
        $423 = HEAP32[$422>>2]|0; //@line 4734 "src/sprites/../puun/gf/../../other/stb_image.h"
        $424 = ($421|0)<($423|0); //@line 4734 "src/sprites/../puun/gf/../../other/stb_image.h"
        if (!($424)) {
         break;
        }
        $425 = $1; //@line 4736 "src/sprites/../puun/gf/../../other/stb_image.h"
        $426 = (_stbi__get8($425)|0); //@line 4736 "src/sprites/../puun/gf/../../other/stb_image.h"
        $427 = $z1; //@line 4736 "src/sprites/../puun/gf/../../other/stb_image.h"
        $428 = (($427) + 2)|0; //@line 4736 "src/sprites/../puun/gf/../../other/stb_image.h"
        $429 = $out; //@line 4736 "src/sprites/../puun/gf/../../other/stb_image.h"
        $430 = (($429) + ($428)|0); //@line 4736 "src/sprites/../puun/gf/../../other/stb_image.h"
        HEAP8[$430>>0] = $426; //@line 4736 "src/sprites/../puun/gf/../../other/stb_image.h"
        $431 = $1; //@line 4737 "src/sprites/../puun/gf/../../other/stb_image.h"
        $432 = (_stbi__get8($431)|0); //@line 4737 "src/sprites/../puun/gf/../../other/stb_image.h"
        $433 = $z1; //@line 4737 "src/sprites/../puun/gf/../../other/stb_image.h"
        $434 = (($433) + 1)|0; //@line 4737 "src/sprites/../puun/gf/../../other/stb_image.h"
        $435 = $out; //@line 4737 "src/sprites/../puun/gf/../../other/stb_image.h"
        $436 = (($435) + ($434)|0); //@line 4737 "src/sprites/../puun/gf/../../other/stb_image.h"
        HEAP8[$436>>0] = $432; //@line 4737 "src/sprites/../puun/gf/../../other/stb_image.h"
        $437 = $1; //@line 4738 "src/sprites/../puun/gf/../../other/stb_image.h"
        $438 = (_stbi__get8($437)|0); //@line 4738 "src/sprites/../puun/gf/../../other/stb_image.h"
        $439 = $z1; //@line 4738 "src/sprites/../puun/gf/../../other/stb_image.h"
        $440 = (($439) + 0)|0; //@line 4738 "src/sprites/../puun/gf/../../other/stb_image.h"
        $441 = $out; //@line 4738 "src/sprites/../puun/gf/../../other/stb_image.h"
        $442 = (($441) + ($440)|0); //@line 4738 "src/sprites/../puun/gf/../../other/stb_image.h"
        HEAP8[$442>>0] = $438; //@line 4738 "src/sprites/../puun/gf/../../other/stb_image.h"
        $443 = $z1; //@line 4739 "src/sprites/../puun/gf/../../other/stb_image.h"
        $444 = (($443) + 3)|0; //@line 4739 "src/sprites/../puun/gf/../../other/stb_image.h"
        $z1 = $444; //@line 4739 "src/sprites/../puun/gf/../../other/stb_image.h"
        $445 = $easy; //@line 4740 "src/sprites/../puun/gf/../../other/stb_image.h"
        $446 = ($445|0)==(2); //@line 4740 "src/sprites/../puun/gf/../../other/stb_image.h"
        if ($446) {
         $447 = $1; //@line 4740 "src/sprites/../puun/gf/../../other/stb_image.h"
         $448 = (_stbi__get8($447)|0); //@line 4740 "src/sprites/../puun/gf/../../other/stb_image.h"
         $449 = $448&255; //@line 4740 "src/sprites/../puun/gf/../../other/stb_image.h"
         $451 = $449;
        } else {
         $451 = 255;
        }
        $450 = $451&255; //@line 4740 "src/sprites/../puun/gf/../../other/stb_image.h"
        $a = $450; //@line 4740 "src/sprites/../puun/gf/../../other/stb_image.h"
        $452 = $target; //@line 4741 "src/sprites/../puun/gf/../../other/stb_image.h"
        $453 = ($452|0)==(4); //@line 4741 "src/sprites/../puun/gf/../../other/stb_image.h"
        if ($453) {
         $454 = $a; //@line 4741 "src/sprites/../puun/gf/../../other/stb_image.h"
         $455 = $z1; //@line 4741 "src/sprites/../puun/gf/../../other/stb_image.h"
         $456 = (($455) + 1)|0; //@line 4741 "src/sprites/../puun/gf/../../other/stb_image.h"
         $z1 = $456; //@line 4741 "src/sprites/../puun/gf/../../other/stb_image.h"
         $457 = $out; //@line 4741 "src/sprites/../puun/gf/../../other/stb_image.h"
         $458 = (($457) + ($455)|0); //@line 4741 "src/sprites/../puun/gf/../../other/stb_image.h"
         HEAP8[$458>>0] = $454; //@line 4741 "src/sprites/../puun/gf/../../other/stb_image.h"
        }
        $459 = $i; //@line 4734 "src/sprites/../puun/gf/../../other/stb_image.h"
        $460 = (($459) + 1)|0; //@line 4734 "src/sprites/../puun/gf/../../other/stb_image.h"
        $i = $460; //@line 4734 "src/sprites/../puun/gf/../../other/stb_image.h"
       }
      } else {
       $i = 0; //@line 4744 "src/sprites/../puun/gf/../../other/stb_image.h"
       while(1) {
        $461 = $i; //@line 4744 "src/sprites/../puun/gf/../../other/stb_image.h"
        $462 = $1; //@line 4744 "src/sprites/../puun/gf/../../other/stb_image.h"
        $463 = HEAP32[$462>>2]|0; //@line 4744 "src/sprites/../puun/gf/../../other/stb_image.h"
        $464 = ($461|0)<($463|0); //@line 4744 "src/sprites/../puun/gf/../../other/stb_image.h"
        if (!($464)) {
         break;
        }
        $465 = $bpp; //@line 4745 "src/sprites/../puun/gf/../../other/stb_image.h"
        $466 = ($465|0)==(16); //@line 4745 "src/sprites/../puun/gf/../../other/stb_image.h"
        if ($466) {
         $467 = $1; //@line 4745 "src/sprites/../puun/gf/../../other/stb_image.h"
         $468 = (_stbi__get16le($467)|0); //@line 4745 "src/sprites/../puun/gf/../../other/stb_image.h"
         $471 = $468;
        } else {
         $469 = $1; //@line 4745 "src/sprites/../puun/gf/../../other/stb_image.h"
         $470 = (_stbi__get32le($469)|0); //@line 4745 "src/sprites/../puun/gf/../../other/stb_image.h"
         $471 = $470;
        }
        $v3 = $471; //@line 4745 "src/sprites/../puun/gf/../../other/stb_image.h"
        $472 = $v3; //@line 4747 "src/sprites/../puun/gf/../../other/stb_image.h"
        $473 = $mr; //@line 4747 "src/sprites/../puun/gf/../../other/stb_image.h"
        $474 = $472 & $473; //@line 4747 "src/sprites/../puun/gf/../../other/stb_image.h"
        $475 = $rshift; //@line 4747 "src/sprites/../puun/gf/../../other/stb_image.h"
        $476 = $rcount; //@line 4747 "src/sprites/../puun/gf/../../other/stb_image.h"
        $477 = (_stbi__shiftsigned($474,$475,$476)|0); //@line 4747 "src/sprites/../puun/gf/../../other/stb_image.h"
        $478 = $477 & 255; //@line 4747 "src/sprites/../puun/gf/../../other/stb_image.h"
        $479 = $478&255; //@line 4747 "src/sprites/../puun/gf/../../other/stb_image.h"
        $480 = $z1; //@line 4747 "src/sprites/../puun/gf/../../other/stb_image.h"
        $481 = (($480) + 1)|0; //@line 4747 "src/sprites/../puun/gf/../../other/stb_image.h"
        $z1 = $481; //@line 4747 "src/sprites/../puun/gf/../../other/stb_image.h"
        $482 = $out; //@line 4747 "src/sprites/../puun/gf/../../other/stb_image.h"
        $483 = (($482) + ($480)|0); //@line 4747 "src/sprites/../puun/gf/../../other/stb_image.h"
        HEAP8[$483>>0] = $479; //@line 4747 "src/sprites/../puun/gf/../../other/stb_image.h"
        $484 = $v3; //@line 4748 "src/sprites/../puun/gf/../../other/stb_image.h"
        $485 = $mg; //@line 4748 "src/sprites/../puun/gf/../../other/stb_image.h"
        $486 = $484 & $485; //@line 4748 "src/sprites/../puun/gf/../../other/stb_image.h"
        $487 = $gshift; //@line 4748 "src/sprites/../puun/gf/../../other/stb_image.h"
        $488 = $gcount; //@line 4748 "src/sprites/../puun/gf/../../other/stb_image.h"
        $489 = (_stbi__shiftsigned($486,$487,$488)|0); //@line 4748 "src/sprites/../puun/gf/../../other/stb_image.h"
        $490 = $489 & 255; //@line 4748 "src/sprites/../puun/gf/../../other/stb_image.h"
        $491 = $490&255; //@line 4748 "src/sprites/../puun/gf/../../other/stb_image.h"
        $492 = $z1; //@line 4748 "src/sprites/../puun/gf/../../other/stb_image.h"
        $493 = (($492) + 1)|0; //@line 4748 "src/sprites/../puun/gf/../../other/stb_image.h"
        $z1 = $493; //@line 4748 "src/sprites/../puun/gf/../../other/stb_image.h"
        $494 = $out; //@line 4748 "src/sprites/../puun/gf/../../other/stb_image.h"
        $495 = (($494) + ($492)|0); //@line 4748 "src/sprites/../puun/gf/../../other/stb_image.h"
        HEAP8[$495>>0] = $491; //@line 4748 "src/sprites/../puun/gf/../../other/stb_image.h"
        $496 = $v3; //@line 4749 "src/sprites/../puun/gf/../../other/stb_image.h"
        $497 = $mb; //@line 4749 "src/sprites/../puun/gf/../../other/stb_image.h"
        $498 = $496 & $497; //@line 4749 "src/sprites/../puun/gf/../../other/stb_image.h"
        $499 = $bshift; //@line 4749 "src/sprites/../puun/gf/../../other/stb_image.h"
        $500 = $bcount; //@line 4749 "src/sprites/../puun/gf/../../other/stb_image.h"
        $501 = (_stbi__shiftsigned($498,$499,$500)|0); //@line 4749 "src/sprites/../puun/gf/../../other/stb_image.h"
        $502 = $501 & 255; //@line 4749 "src/sprites/../puun/gf/../../other/stb_image.h"
        $503 = $502&255; //@line 4749 "src/sprites/../puun/gf/../../other/stb_image.h"
        $504 = $z1; //@line 4749 "src/sprites/../puun/gf/../../other/stb_image.h"
        $505 = (($504) + 1)|0; //@line 4749 "src/sprites/../puun/gf/../../other/stb_image.h"
        $z1 = $505; //@line 4749 "src/sprites/../puun/gf/../../other/stb_image.h"
        $506 = $out; //@line 4749 "src/sprites/../puun/gf/../../other/stb_image.h"
        $507 = (($506) + ($504)|0); //@line 4749 "src/sprites/../puun/gf/../../other/stb_image.h"
        HEAP8[$507>>0] = $503; //@line 4749 "src/sprites/../puun/gf/../../other/stb_image.h"
        $508 = $ma; //@line 4750 "src/sprites/../puun/gf/../../other/stb_image.h"
        $509 = ($508|0)!=(0); //@line 4750 "src/sprites/../puun/gf/../../other/stb_image.h"
        if ($509) {
         $510 = $v3; //@line 4750 "src/sprites/../puun/gf/../../other/stb_image.h"
         $511 = $ma; //@line 4750 "src/sprites/../puun/gf/../../other/stb_image.h"
         $512 = $510 & $511; //@line 4750 "src/sprites/../puun/gf/../../other/stb_image.h"
         $513 = $ashift; //@line 4750 "src/sprites/../puun/gf/../../other/stb_image.h"
         $514 = $acount; //@line 4750 "src/sprites/../puun/gf/../../other/stb_image.h"
         $515 = (_stbi__shiftsigned($512,$513,$514)|0); //@line 4750 "src/sprites/../puun/gf/../../other/stb_image.h"
         $516 = $515;
        } else {
         $516 = 255;
        }
        $a4 = $516; //@line 4750 "src/sprites/../puun/gf/../../other/stb_image.h"
        $517 = $target; //@line 4751 "src/sprites/../puun/gf/../../other/stb_image.h"
        $518 = ($517|0)==(4); //@line 4751 "src/sprites/../puun/gf/../../other/stb_image.h"
        if ($518) {
         $519 = $a4; //@line 4751 "src/sprites/../puun/gf/../../other/stb_image.h"
         $520 = $519 & 255; //@line 4751 "src/sprites/../puun/gf/../../other/stb_image.h"
         $521 = $520&255; //@line 4751 "src/sprites/../puun/gf/../../other/stb_image.h"
         $522 = $z1; //@line 4751 "src/sprites/../puun/gf/../../other/stb_image.h"
         $523 = (($522) + 1)|0; //@line 4751 "src/sprites/../puun/gf/../../other/stb_image.h"
         $z1 = $523; //@line 4751 "src/sprites/../puun/gf/../../other/stb_image.h"
         $524 = $out; //@line 4751 "src/sprites/../puun/gf/../../other/stb_image.h"
         $525 = (($524) + ($522)|0); //@line 4751 "src/sprites/../puun/gf/../../other/stb_image.h"
         HEAP8[$525>>0] = $521; //@line 4751 "src/sprites/../puun/gf/../../other/stb_image.h"
        }
        $526 = $i; //@line 4744 "src/sprites/../puun/gf/../../other/stb_image.h"
        $527 = (($526) + 1)|0; //@line 4744 "src/sprites/../puun/gf/../../other/stb_image.h"
        $i = $527; //@line 4744 "src/sprites/../puun/gf/../../other/stb_image.h"
       }
      }
      $528 = $1; //@line 4754 "src/sprites/../puun/gf/../../other/stb_image.h"
      $529 = $pad; //@line 4754 "src/sprites/../puun/gf/../../other/stb_image.h"
      _stbi__skip($528,$529); //@line 4754 "src/sprites/../puun/gf/../../other/stb_image.h"
      $530 = $j; //@line 4732 "src/sprites/../puun/gf/../../other/stb_image.h"
      $531 = (($530) + 1)|0; //@line 4732 "src/sprites/../puun/gf/../../other/stb_image.h"
      $j = $531; //@line 4732 "src/sprites/../puun/gf/../../other/stb_image.h"
     }
    }
   } while(0);
   $532 = $flip_vertically; //@line 4757 "src/sprites/../puun/gf/../../other/stb_image.h"
   $533 = ($532|0)!=(0); //@line 4757 "src/sprites/../puun/gf/../../other/stb_image.h"
   if ($533) {
    $j = 0; //@line 4759 "src/sprites/../puun/gf/../../other/stb_image.h"
    while(1) {
     $534 = $j; //@line 4759 "src/sprites/../puun/gf/../../other/stb_image.h"
     $535 = $1; //@line 4759 "src/sprites/../puun/gf/../../other/stb_image.h"
     $536 = (($535) + 4|0); //@line 4759 "src/sprites/../puun/gf/../../other/stb_image.h"
     $537 = HEAP32[$536>>2]|0; //@line 4759 "src/sprites/../puun/gf/../../other/stb_image.h"
     $538 = $537 >> 1; //@line 4759 "src/sprites/../puun/gf/../../other/stb_image.h"
     $539 = ($534|0)<($538|0); //@line 4759 "src/sprites/../puun/gf/../../other/stb_image.h"
     if (!($539)) {
      break;
     }
     $540 = $out; //@line 4760 "src/sprites/../puun/gf/../../other/stb_image.h"
     $541 = $j; //@line 4760 "src/sprites/../puun/gf/../../other/stb_image.h"
     $542 = $1; //@line 4760 "src/sprites/../puun/gf/../../other/stb_image.h"
     $543 = HEAP32[$542>>2]|0; //@line 4760 "src/sprites/../puun/gf/../../other/stb_image.h"
     $544 = Math_imul($541, $543)|0; //@line 4760 "src/sprites/../puun/gf/../../other/stb_image.h"
     $545 = $target; //@line 4760 "src/sprites/../puun/gf/../../other/stb_image.h"
     $546 = Math_imul($544, $545)|0; //@line 4760 "src/sprites/../puun/gf/../../other/stb_image.h"
     $547 = (($540) + ($546)|0); //@line 4760 "src/sprites/../puun/gf/../../other/stb_image.h"
     $p1 = $547; //@line 4760 "src/sprites/../puun/gf/../../other/stb_image.h"
     $548 = $out; //@line 4761 "src/sprites/../puun/gf/../../other/stb_image.h"
     $549 = $1; //@line 4761 "src/sprites/../puun/gf/../../other/stb_image.h"
     $550 = (($549) + 4|0); //@line 4761 "src/sprites/../puun/gf/../../other/stb_image.h"
     $551 = HEAP32[$550>>2]|0; //@line 4761 "src/sprites/../puun/gf/../../other/stb_image.h"
     $552 = (($551) - 1)|0; //@line 4761 "src/sprites/../puun/gf/../../other/stb_image.h"
     $553 = $j; //@line 4761 "src/sprites/../puun/gf/../../other/stb_image.h"
     $554 = (($552) - ($553))|0; //@line 4761 "src/sprites/../puun/gf/../../other/stb_image.h"
     $555 = $1; //@line 4761 "src/sprites/../puun/gf/../../other/stb_image.h"
     $556 = HEAP32[$555>>2]|0; //@line 4761 "src/sprites/../puun/gf/../../other/stb_image.h"
     $557 = Math_imul($554, $556)|0; //@line 4761 "src/sprites/../puun/gf/../../other/stb_image.h"
     $558 = $target; //@line 4761 "src/sprites/../puun/gf/../../other/stb_image.h"
     $559 = Math_imul($557, $558)|0; //@line 4761 "src/sprites/../puun/gf/../../other/stb_image.h"
     $560 = (($548) + ($559)|0); //@line 4761 "src/sprites/../puun/gf/../../other/stb_image.h"
     $p2 = $560; //@line 4761 "src/sprites/../puun/gf/../../other/stb_image.h"
     $i = 0; //@line 4762 "src/sprites/../puun/gf/../../other/stb_image.h"
     while(1) {
      $561 = $i; //@line 4762 "src/sprites/../puun/gf/../../other/stb_image.h"
      $562 = $1; //@line 4762 "src/sprites/../puun/gf/../../other/stb_image.h"
      $563 = HEAP32[$562>>2]|0; //@line 4762 "src/sprites/../puun/gf/../../other/stb_image.h"
      $564 = $target; //@line 4762 "src/sprites/../puun/gf/../../other/stb_image.h"
      $565 = Math_imul($563, $564)|0; //@line 4762 "src/sprites/../puun/gf/../../other/stb_image.h"
      $566 = ($561|0)<($565|0); //@line 4762 "src/sprites/../puun/gf/../../other/stb_image.h"
      if (!($566)) {
       break;
      }
      $567 = $i; //@line 4763 "src/sprites/../puun/gf/../../other/stb_image.h"
      $568 = $p1; //@line 4763 "src/sprites/../puun/gf/../../other/stb_image.h"
      $569 = (($568) + ($567)|0); //@line 4763 "src/sprites/../puun/gf/../../other/stb_image.h"
      $570 = HEAP8[$569>>0]|0; //@line 4763 "src/sprites/../puun/gf/../../other/stb_image.h"
      $t = $570; //@line 4763 "src/sprites/../puun/gf/../../other/stb_image.h"
      $571 = $i; //@line 4763 "src/sprites/../puun/gf/../../other/stb_image.h"
      $572 = $p2; //@line 4763 "src/sprites/../puun/gf/../../other/stb_image.h"
      $573 = (($572) + ($571)|0); //@line 4763 "src/sprites/../puun/gf/../../other/stb_image.h"
      $574 = HEAP8[$573>>0]|0; //@line 4763 "src/sprites/../puun/gf/../../other/stb_image.h"
      $575 = $i; //@line 4763 "src/sprites/../puun/gf/../../other/stb_image.h"
      $576 = $p1; //@line 4763 "src/sprites/../puun/gf/../../other/stb_image.h"
      $577 = (($576) + ($575)|0); //@line 4763 "src/sprites/../puun/gf/../../other/stb_image.h"
      HEAP8[$577>>0] = $574; //@line 4763 "src/sprites/../puun/gf/../../other/stb_image.h"
      $578 = $t; //@line 4763 "src/sprites/../puun/gf/../../other/stb_image.h"
      $579 = $i; //@line 4763 "src/sprites/../puun/gf/../../other/stb_image.h"
      $580 = $p2; //@line 4763 "src/sprites/../puun/gf/../../other/stb_image.h"
      $581 = (($580) + ($579)|0); //@line 4763 "src/sprites/../puun/gf/../../other/stb_image.h"
      HEAP8[$581>>0] = $578; //@line 4763 "src/sprites/../puun/gf/../../other/stb_image.h"
      $582 = $i; //@line 4762 "src/sprites/../puun/gf/../../other/stb_image.h"
      $583 = (($582) + 1)|0; //@line 4762 "src/sprites/../puun/gf/../../other/stb_image.h"
      $i = $583; //@line 4762 "src/sprites/../puun/gf/../../other/stb_image.h"
     }
     $584 = $j; //@line 4759 "src/sprites/../puun/gf/../../other/stb_image.h"
     $585 = (($584) + 1)|0; //@line 4759 "src/sprites/../puun/gf/../../other/stb_image.h"
     $j = $585; //@line 4759 "src/sprites/../puun/gf/../../other/stb_image.h"
    }
   }
   $586 = $5; //@line 4768 "src/sprites/../puun/gf/../../other/stb_image.h"
   $587 = ($586|0)!=(0); //@line 4768 "src/sprites/../puun/gf/../../other/stb_image.h"
   do {
    if ($587) {
     $588 = $5; //@line 4768 "src/sprites/../puun/gf/../../other/stb_image.h"
     $589 = $target; //@line 4768 "src/sprites/../puun/gf/../../other/stb_image.h"
     $590 = ($588|0)!=($589|0); //@line 4768 "src/sprites/../puun/gf/../../other/stb_image.h"
     if ($590) {
      $591 = $out; //@line 4769 "src/sprites/../puun/gf/../../other/stb_image.h"
      $592 = $target; //@line 4769 "src/sprites/../puun/gf/../../other/stb_image.h"
      $593 = $5; //@line 4769 "src/sprites/../puun/gf/../../other/stb_image.h"
      $594 = $1; //@line 4769 "src/sprites/../puun/gf/../../other/stb_image.h"
      $595 = HEAP32[$594>>2]|0; //@line 4769 "src/sprites/../puun/gf/../../other/stb_image.h"
      $596 = $1; //@line 4769 "src/sprites/../puun/gf/../../other/stb_image.h"
      $597 = (($596) + 4|0); //@line 4769 "src/sprites/../puun/gf/../../other/stb_image.h"
      $598 = HEAP32[$597>>2]|0; //@line 4769 "src/sprites/../puun/gf/../../other/stb_image.h"
      $599 = (_stbi__convert_format($591,$592,$593,$595,$598)|0); //@line 4769 "src/sprites/../puun/gf/../../other/stb_image.h"
      $out = $599; //@line 4769 "src/sprites/../puun/gf/../../other/stb_image.h"
      $600 = $out; //@line 4770 "src/sprites/../puun/gf/../../other/stb_image.h"
      $601 = ($600|0)==(0|0); //@line 4770 "src/sprites/../puun/gf/../../other/stb_image.h"
      if (!($601)) {
       break;
      }
      $602 = $out; //@line 4770 "src/sprites/../puun/gf/../../other/stb_image.h"
      $0 = $602; //@line 4770 "src/sprites/../puun/gf/../../other/stb_image.h"
      $617 = $0; //@line 4777 "src/sprites/../puun/gf/../../other/stb_image.h"
      STACKTOP = sp;return ($617|0); //@line 4777 "src/sprites/../puun/gf/../../other/stb_image.h"
     }
    }
   } while(0);
   $603 = $1; //@line 4773 "src/sprites/../puun/gf/../../other/stb_image.h"
   $604 = HEAP32[$603>>2]|0; //@line 4773 "src/sprites/../puun/gf/../../other/stb_image.h"
   $605 = $2; //@line 4773 "src/sprites/../puun/gf/../../other/stb_image.h"
   HEAP32[$605>>2] = $604; //@line 4773 "src/sprites/../puun/gf/../../other/stb_image.h"
   $606 = $1; //@line 4774 "src/sprites/../puun/gf/../../other/stb_image.h"
   $607 = (($606) + 4|0); //@line 4774 "src/sprites/../puun/gf/../../other/stb_image.h"
   $608 = HEAP32[$607>>2]|0; //@line 4774 "src/sprites/../puun/gf/../../other/stb_image.h"
   $609 = $3; //@line 4774 "src/sprites/../puun/gf/../../other/stb_image.h"
   HEAP32[$609>>2] = $608; //@line 4774 "src/sprites/../puun/gf/../../other/stb_image.h"
   $610 = $4; //@line 4775 "src/sprites/../puun/gf/../../other/stb_image.h"
   $611 = ($610|0)!=(0|0); //@line 4775 "src/sprites/../puun/gf/../../other/stb_image.h"
   if ($611) {
    $612 = $1; //@line 4775 "src/sprites/../puun/gf/../../other/stb_image.h"
    $613 = (($612) + 8|0); //@line 4775 "src/sprites/../puun/gf/../../other/stb_image.h"
    $614 = HEAP32[$613>>2]|0; //@line 4775 "src/sprites/../puun/gf/../../other/stb_image.h"
    $615 = $4; //@line 4775 "src/sprites/../puun/gf/../../other/stb_image.h"
    HEAP32[$615>>2] = $614; //@line 4775 "src/sprites/../puun/gf/../../other/stb_image.h"
   }
   $616 = $out; //@line 4776 "src/sprites/../puun/gf/../../other/stb_image.h"
   $0 = $616; //@line 4776 "src/sprites/../puun/gf/../../other/stb_image.h"
   $617 = $0; //@line 4777 "src/sprites/../puun/gf/../../other/stb_image.h"
   STACKTOP = sp;return ($617|0); //@line 4777 "src/sprites/../puun/gf/../../other/stb_image.h"
  }
 }
 $14 = (_stbi__err(10096)|0); //@line 4584 "src/sprites/../puun/gf/../../other/stb_image.h"
 $15 = ($14|0)!=(0); //@line 4584 "src/sprites/../puun/gf/../../other/stb_image.h"
 $16 = $15 ? 0 : 0; //@line 4584 "src/sprites/../puun/gf/../../other/stb_image.h"
 $0 = $16; //@line 4584 "src/sprites/../puun/gf/../../other/stb_image.h"
 $617 = $0; //@line 4777 "src/sprites/../puun/gf/../../other/stb_image.h"
 STACKTOP = sp;return ($617|0); //@line 4777 "src/sprites/../puun/gf/../../other/stb_image.h"
}
function _stbi__shiftsigned($v,$shift,$bits) {
 $v = $v|0;
 $shift = $shift|0;
 $bits = $bits|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $result = 0, $z = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $v;
 $1 = $shift;
 $2 = $bits;
 $z = 0; //@line 4563 "src/sprites/../puun/gf/../../other/stb_image.h"
 $3 = $1; //@line 4565 "src/sprites/../puun/gf/../../other/stb_image.h"
 $4 = ($3|0)<(0); //@line 4565 "src/sprites/../puun/gf/../../other/stb_image.h"
 if ($4) {
  $5 = $1; //@line 4565 "src/sprites/../puun/gf/../../other/stb_image.h"
  $6 = (0 - ($5))|0; //@line 4565 "src/sprites/../puun/gf/../../other/stb_image.h"
  $7 = $0; //@line 4565 "src/sprites/../puun/gf/../../other/stb_image.h"
  $8 = $7 << $6; //@line 4565 "src/sprites/../puun/gf/../../other/stb_image.h"
  $0 = $8; //@line 4565 "src/sprites/../puun/gf/../../other/stb_image.h"
 } else {
  $9 = $1; //@line 4566 "src/sprites/../puun/gf/../../other/stb_image.h"
  $10 = $0; //@line 4566 "src/sprites/../puun/gf/../../other/stb_image.h"
  $11 = $10 >> $9; //@line 4566 "src/sprites/../puun/gf/../../other/stb_image.h"
  $0 = $11; //@line 4566 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $12 = $0; //@line 4567 "src/sprites/../puun/gf/../../other/stb_image.h"
 $result = $12; //@line 4567 "src/sprites/../puun/gf/../../other/stb_image.h"
 $13 = $2; //@line 4569 "src/sprites/../puun/gf/../../other/stb_image.h"
 $z = $13; //@line 4569 "src/sprites/../puun/gf/../../other/stb_image.h"
 while(1) {
  $14 = $z; //@line 4570 "src/sprites/../puun/gf/../../other/stb_image.h"
  $15 = ($14|0)<(8); //@line 4570 "src/sprites/../puun/gf/../../other/stb_image.h"
  if (!($15)) {
   break;
  }
  $16 = $0; //@line 4571 "src/sprites/../puun/gf/../../other/stb_image.h"
  $17 = $z; //@line 4571 "src/sprites/../puun/gf/../../other/stb_image.h"
  $18 = $16 >> $17; //@line 4571 "src/sprites/../puun/gf/../../other/stb_image.h"
  $19 = $result; //@line 4571 "src/sprites/../puun/gf/../../other/stb_image.h"
  $20 = (($19) + ($18))|0; //@line 4571 "src/sprites/../puun/gf/../../other/stb_image.h"
  $result = $20; //@line 4571 "src/sprites/../puun/gf/../../other/stb_image.h"
  $21 = $2; //@line 4572 "src/sprites/../puun/gf/../../other/stb_image.h"
  $22 = $z; //@line 4572 "src/sprites/../puun/gf/../../other/stb_image.h"
  $23 = (($22) + ($21))|0; //@line 4572 "src/sprites/../puun/gf/../../other/stb_image.h"
  $z = $23; //@line 4572 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $24 = $result; //@line 4574 "src/sprites/../puun/gf/../../other/stb_image.h"
 STACKTOP = sp;return ($24|0); //@line 4574 "src/sprites/../puun/gf/../../other/stb_image.h"
}
function _stbi__bitcount($a) {
 $a = $a|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $a;
 $1 = $0; //@line 4552 "src/sprites/../puun/gf/../../other/stb_image.h"
 $2 = $1 & 1431655765; //@line 4552 "src/sprites/../puun/gf/../../other/stb_image.h"
 $3 = $0; //@line 4552 "src/sprites/../puun/gf/../../other/stb_image.h"
 $4 = $3 >>> 1; //@line 4552 "src/sprites/../puun/gf/../../other/stb_image.h"
 $5 = $4 & 1431655765; //@line 4552 "src/sprites/../puun/gf/../../other/stb_image.h"
 $6 = (($2) + ($5))|0; //@line 4552 "src/sprites/../puun/gf/../../other/stb_image.h"
 $0 = $6; //@line 4552 "src/sprites/../puun/gf/../../other/stb_image.h"
 $7 = $0; //@line 4553 "src/sprites/../puun/gf/../../other/stb_image.h"
 $8 = $7 & 858993459; //@line 4553 "src/sprites/../puun/gf/../../other/stb_image.h"
 $9 = $0; //@line 4553 "src/sprites/../puun/gf/../../other/stb_image.h"
 $10 = $9 >>> 2; //@line 4553 "src/sprites/../puun/gf/../../other/stb_image.h"
 $11 = $10 & 858993459; //@line 4553 "src/sprites/../puun/gf/../../other/stb_image.h"
 $12 = (($8) + ($11))|0; //@line 4553 "src/sprites/../puun/gf/../../other/stb_image.h"
 $0 = $12; //@line 4553 "src/sprites/../puun/gf/../../other/stb_image.h"
 $13 = $0; //@line 4554 "src/sprites/../puun/gf/../../other/stb_image.h"
 $14 = $0; //@line 4554 "src/sprites/../puun/gf/../../other/stb_image.h"
 $15 = $14 >>> 4; //@line 4554 "src/sprites/../puun/gf/../../other/stb_image.h"
 $16 = (($13) + ($15))|0; //@line 4554 "src/sprites/../puun/gf/../../other/stb_image.h"
 $17 = $16 & 252645135; //@line 4554 "src/sprites/../puun/gf/../../other/stb_image.h"
 $0 = $17; //@line 4554 "src/sprites/../puun/gf/../../other/stb_image.h"
 $18 = $0; //@line 4555 "src/sprites/../puun/gf/../../other/stb_image.h"
 $19 = $0; //@line 4555 "src/sprites/../puun/gf/../../other/stb_image.h"
 $20 = $19 >>> 8; //@line 4555 "src/sprites/../puun/gf/../../other/stb_image.h"
 $21 = (($18) + ($20))|0; //@line 4555 "src/sprites/../puun/gf/../../other/stb_image.h"
 $0 = $21; //@line 4555 "src/sprites/../puun/gf/../../other/stb_image.h"
 $22 = $0; //@line 4556 "src/sprites/../puun/gf/../../other/stb_image.h"
 $23 = $0; //@line 4556 "src/sprites/../puun/gf/../../other/stb_image.h"
 $24 = $23 >>> 16; //@line 4556 "src/sprites/../puun/gf/../../other/stb_image.h"
 $25 = (($22) + ($24))|0; //@line 4556 "src/sprites/../puun/gf/../../other/stb_image.h"
 $0 = $25; //@line 4556 "src/sprites/../puun/gf/../../other/stb_image.h"
 $26 = $0; //@line 4557 "src/sprites/../puun/gf/../../other/stb_image.h"
 $27 = $26 & 255; //@line 4557 "src/sprites/../puun/gf/../../other/stb_image.h"
 STACKTOP = sp;return ($27|0); //@line 4557 "src/sprites/../puun/gf/../../other/stb_image.h"
}
function _stbi__high_bit($z) {
 $z = $z|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $n = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $z;
 $n = 0; //@line 4540 "src/sprites/../puun/gf/../../other/stb_image.h"
 $2 = $1; //@line 4541 "src/sprites/../puun/gf/../../other/stb_image.h"
 $3 = ($2|0)==(0); //@line 4541 "src/sprites/../puun/gf/../../other/stb_image.h"
 if ($3) {
  $0 = -1; //@line 4541 "src/sprites/../puun/gf/../../other/stb_image.h"
  $35 = $0; //@line 4548 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($35|0); //@line 4548 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $4 = $1; //@line 4542 "src/sprites/../puun/gf/../../other/stb_image.h"
 $5 = ($4>>>0)>=(65536); //@line 4542 "src/sprites/../puun/gf/../../other/stb_image.h"
 if ($5) {
  $6 = $n; //@line 4542 "src/sprites/../puun/gf/../../other/stb_image.h"
  $7 = (($6) + 16)|0; //@line 4542 "src/sprites/../puun/gf/../../other/stb_image.h"
  $n = $7; //@line 4542 "src/sprites/../puun/gf/../../other/stb_image.h"
  $8 = $1; //@line 4542 "src/sprites/../puun/gf/../../other/stb_image.h"
  $9 = $8 >>> 16; //@line 4542 "src/sprites/../puun/gf/../../other/stb_image.h"
  $1 = $9; //@line 4542 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $10 = $1; //@line 4543 "src/sprites/../puun/gf/../../other/stb_image.h"
 $11 = ($10>>>0)>=(256); //@line 4543 "src/sprites/../puun/gf/../../other/stb_image.h"
 if ($11) {
  $12 = $n; //@line 4543 "src/sprites/../puun/gf/../../other/stb_image.h"
  $13 = (($12) + 8)|0; //@line 4543 "src/sprites/../puun/gf/../../other/stb_image.h"
  $n = $13; //@line 4543 "src/sprites/../puun/gf/../../other/stb_image.h"
  $14 = $1; //@line 4543 "src/sprites/../puun/gf/../../other/stb_image.h"
  $15 = $14 >>> 8; //@line 4543 "src/sprites/../puun/gf/../../other/stb_image.h"
  $1 = $15; //@line 4543 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $16 = $1; //@line 4544 "src/sprites/../puun/gf/../../other/stb_image.h"
 $17 = ($16>>>0)>=(16); //@line 4544 "src/sprites/../puun/gf/../../other/stb_image.h"
 if ($17) {
  $18 = $n; //@line 4544 "src/sprites/../puun/gf/../../other/stb_image.h"
  $19 = (($18) + 4)|0; //@line 4544 "src/sprites/../puun/gf/../../other/stb_image.h"
  $n = $19; //@line 4544 "src/sprites/../puun/gf/../../other/stb_image.h"
  $20 = $1; //@line 4544 "src/sprites/../puun/gf/../../other/stb_image.h"
  $21 = $20 >>> 4; //@line 4544 "src/sprites/../puun/gf/../../other/stb_image.h"
  $1 = $21; //@line 4544 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $22 = $1; //@line 4545 "src/sprites/../puun/gf/../../other/stb_image.h"
 $23 = ($22>>>0)>=(4); //@line 4545 "src/sprites/../puun/gf/../../other/stb_image.h"
 if ($23) {
  $24 = $n; //@line 4545 "src/sprites/../puun/gf/../../other/stb_image.h"
  $25 = (($24) + 2)|0; //@line 4545 "src/sprites/../puun/gf/../../other/stb_image.h"
  $n = $25; //@line 4545 "src/sprites/../puun/gf/../../other/stb_image.h"
  $26 = $1; //@line 4545 "src/sprites/../puun/gf/../../other/stb_image.h"
  $27 = $26 >>> 2; //@line 4545 "src/sprites/../puun/gf/../../other/stb_image.h"
  $1 = $27; //@line 4545 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $28 = $1; //@line 4546 "src/sprites/../puun/gf/../../other/stb_image.h"
 $29 = ($28>>>0)>=(2); //@line 4546 "src/sprites/../puun/gf/../../other/stb_image.h"
 if ($29) {
  $30 = $n; //@line 4546 "src/sprites/../puun/gf/../../other/stb_image.h"
  $31 = (($30) + 1)|0; //@line 4546 "src/sprites/../puun/gf/../../other/stb_image.h"
  $n = $31; //@line 4546 "src/sprites/../puun/gf/../../other/stb_image.h"
  $32 = $1; //@line 4546 "src/sprites/../puun/gf/../../other/stb_image.h"
  $33 = $32 >>> 1; //@line 4546 "src/sprites/../puun/gf/../../other/stb_image.h"
  $1 = $33; //@line 4546 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $34 = $n; //@line 4547 "src/sprites/../puun/gf/../../other/stb_image.h"
 $0 = $34; //@line 4547 "src/sprites/../puun/gf/../../other/stb_image.h"
 $35 = $0; //@line 4548 "src/sprites/../puun/gf/../../other/stb_image.h"
 STACKTOP = sp;return ($35|0); //@line 4548 "src/sprites/../puun/gf/../../other/stb_image.h"
}
function _stbi__bmp_test($s) {
 $s = $s|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $r = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $s;
 $1 = $0; //@line 4531 "src/sprites/../puun/gf/../../other/stb_image.h"
 $2 = (_stbi__bmp_test_raw($1)|0); //@line 4531 "src/sprites/../puun/gf/../../other/stb_image.h"
 $r = $2; //@line 4531 "src/sprites/../puun/gf/../../other/stb_image.h"
 $3 = $0; //@line 4532 "src/sprites/../puun/gf/../../other/stb_image.h"
 _stbi__rewind($3); //@line 4532 "src/sprites/../puun/gf/../../other/stb_image.h"
 $4 = $r; //@line 4533 "src/sprites/../puun/gf/../../other/stb_image.h"
 STACKTOP = sp;return ($4|0); //@line 4533 "src/sprites/../puun/gf/../../other/stb_image.h"
}
function _stbi__bmp_test_raw($s) {
 $s = $s|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $r = 0, $sz = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $s;
 $2 = $1; //@line 4518 "src/sprites/../puun/gf/../../other/stb_image.h"
 $3 = (_stbi__get8($2)|0); //@line 4518 "src/sprites/../puun/gf/../../other/stb_image.h"
 $4 = $3&255; //@line 4518 "src/sprites/../puun/gf/../../other/stb_image.h"
 $5 = ($4|0)!=(66); //@line 4518 "src/sprites/../puun/gf/../../other/stb_image.h"
 if ($5) {
  $0 = 0; //@line 4518 "src/sprites/../puun/gf/../../other/stb_image.h"
  $29 = $0; //@line 4527 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($29|0); //@line 4527 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $6 = $1; //@line 4519 "src/sprites/../puun/gf/../../other/stb_image.h"
 $7 = (_stbi__get8($6)|0); //@line 4519 "src/sprites/../puun/gf/../../other/stb_image.h"
 $8 = $7&255; //@line 4519 "src/sprites/../puun/gf/../../other/stb_image.h"
 $9 = ($8|0)!=(77); //@line 4519 "src/sprites/../puun/gf/../../other/stb_image.h"
 if ($9) {
  $0 = 0; //@line 4519 "src/sprites/../puun/gf/../../other/stb_image.h"
  $29 = $0; //@line 4527 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($29|0); //@line 4527 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $10 = $1; //@line 4520 "src/sprites/../puun/gf/../../other/stb_image.h"
 (_stbi__get32le($10)|0); //@line 4520 "src/sprites/../puun/gf/../../other/stb_image.h"
 $11 = $1; //@line 4521 "src/sprites/../puun/gf/../../other/stb_image.h"
 (_stbi__get16le($11)|0); //@line 4521 "src/sprites/../puun/gf/../../other/stb_image.h"
 $12 = $1; //@line 4522 "src/sprites/../puun/gf/../../other/stb_image.h"
 (_stbi__get16le($12)|0); //@line 4522 "src/sprites/../puun/gf/../../other/stb_image.h"
 $13 = $1; //@line 4523 "src/sprites/../puun/gf/../../other/stb_image.h"
 (_stbi__get32le($13)|0); //@line 4523 "src/sprites/../puun/gf/../../other/stb_image.h"
 $14 = $1; //@line 4524 "src/sprites/../puun/gf/../../other/stb_image.h"
 $15 = (_stbi__get32le($14)|0); //@line 4524 "src/sprites/../puun/gf/../../other/stb_image.h"
 $sz = $15; //@line 4524 "src/sprites/../puun/gf/../../other/stb_image.h"
 $16 = $sz; //@line 4525 "src/sprites/../puun/gf/../../other/stb_image.h"
 $17 = ($16|0)==(12); //@line 4525 "src/sprites/../puun/gf/../../other/stb_image.h"
 if ($17) {
  $27 = 1;
 } else {
  $18 = $sz; //@line 4525 "src/sprites/../puun/gf/../../other/stb_image.h"
  $19 = ($18|0)==(40); //@line 4525 "src/sprites/../puun/gf/../../other/stb_image.h"
  if ($19) {
   $27 = 1;
  } else {
   $20 = $sz; //@line 4525 "src/sprites/../puun/gf/../../other/stb_image.h"
   $21 = ($20|0)==(56); //@line 4525 "src/sprites/../puun/gf/../../other/stb_image.h"
   if ($21) {
    $27 = 1;
   } else {
    $22 = $sz; //@line 4525 "src/sprites/../puun/gf/../../other/stb_image.h"
    $23 = ($22|0)==(108); //@line 4525 "src/sprites/../puun/gf/../../other/stb_image.h"
    if ($23) {
     $27 = 1;
    } else {
     $24 = $sz; //@line 4525 "src/sprites/../puun/gf/../../other/stb_image.h"
     $25 = ($24|0)==(124); //@line 4525 "src/sprites/../puun/gf/../../other/stb_image.h"
     $27 = $25;
    }
   }
  }
 }
 $26 = $27&1; //@line 4525 "src/sprites/../puun/gf/../../other/stb_image.h"
 $r = $26; //@line 4525 "src/sprites/../puun/gf/../../other/stb_image.h"
 $28 = $r; //@line 4526 "src/sprites/../puun/gf/../../other/stb_image.h"
 $0 = $28; //@line 4526 "src/sprites/../puun/gf/../../other/stb_image.h"
 $29 = $0; //@line 4527 "src/sprites/../puun/gf/../../other/stb_image.h"
 STACKTOP = sp;return ($29|0); //@line 4527 "src/sprites/../puun/gf/../../other/stb_image.h"
}
function _stbi__png_load($s,$x,$y,$comp,$req_comp) {
 $s = $s|0;
 $x = $x|0;
 $y = $y|0;
 $comp = $comp|0;
 $req_comp = $req_comp|0;
 var $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $p = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $p = sp;
 $0 = $s;
 $1 = $x;
 $2 = $y;
 $3 = $comp;
 $4 = $req_comp;
 $5 = $0; //@line 4479 "src/sprites/../puun/gf/../../other/stb_image.h"
 HEAP32[$p>>2] = $5; //@line 4479 "src/sprites/../puun/gf/../../other/stb_image.h"
 $6 = $1; //@line 4480 "src/sprites/../puun/gf/../../other/stb_image.h"
 $7 = $2; //@line 4480 "src/sprites/../puun/gf/../../other/stb_image.h"
 $8 = $3; //@line 4480 "src/sprites/../puun/gf/../../other/stb_image.h"
 $9 = $4; //@line 4480 "src/sprites/../puun/gf/../../other/stb_image.h"
 $10 = (_stbi__do_png($p,$6,$7,$8,$9)|0); //@line 4480 "src/sprites/../puun/gf/../../other/stb_image.h"
 STACKTOP = sp;return ($10|0); //@line 4480 "src/sprites/../puun/gf/../../other/stb_image.h"
}
function _stbi__do_png($p,$x,$y,$n,$req_comp) {
 $p = $p|0;
 $x = $x|0;
 $y = $y|0;
 $n = $n|0;
 $req_comp = $req_comp|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $9 = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $p;
 $2 = $x;
 $3 = $y;
 $4 = $n;
 $5 = $req_comp;
 $result = 0; //@line 4455 "src/sprites/../puun/gf/../../other/stb_image.h"
 $6 = $5; //@line 4456 "src/sprites/../puun/gf/../../other/stb_image.h"
 $7 = ($6|0)<(0); //@line 4456 "src/sprites/../puun/gf/../../other/stb_image.h"
 if (!($7)) {
  $8 = $5; //@line 4456 "src/sprites/../puun/gf/../../other/stb_image.h"
  $9 = ($8|0)>(4); //@line 4456 "src/sprites/../puun/gf/../../other/stb_image.h"
  if (!($9)) {
   $13 = $1; //@line 4457 "src/sprites/../puun/gf/../../other/stb_image.h"
   $14 = $5; //@line 4457 "src/sprites/../puun/gf/../../other/stb_image.h"
   $15 = (_stbi__parse_png_file($13,0,$14)|0); //@line 4457 "src/sprites/../puun/gf/../../other/stb_image.h"
   $16 = ($15|0)!=(0); //@line 4457 "src/sprites/../puun/gf/../../other/stb_image.h"
   if ($16) {
    $17 = $1; //@line 4458 "src/sprites/../puun/gf/../../other/stb_image.h"
    $18 = (($17) + 12|0); //@line 4458 "src/sprites/../puun/gf/../../other/stb_image.h"
    $19 = HEAP32[$18>>2]|0; //@line 4458 "src/sprites/../puun/gf/../../other/stb_image.h"
    $result = $19; //@line 4458 "src/sprites/../puun/gf/../../other/stb_image.h"
    $20 = $1; //@line 4459 "src/sprites/../puun/gf/../../other/stb_image.h"
    $21 = (($20) + 12|0); //@line 4459 "src/sprites/../puun/gf/../../other/stb_image.h"
    HEAP32[$21>>2] = 0; //@line 4459 "src/sprites/../puun/gf/../../other/stb_image.h"
    $22 = $5; //@line 4460 "src/sprites/../puun/gf/../../other/stb_image.h"
    $23 = ($22|0)!=(0); //@line 4460 "src/sprites/../puun/gf/../../other/stb_image.h"
    do {
     if ($23) {
      $24 = $5; //@line 4460 "src/sprites/../puun/gf/../../other/stb_image.h"
      $25 = $1; //@line 4460 "src/sprites/../puun/gf/../../other/stb_image.h"
      $26 = HEAP32[$25>>2]|0; //@line 4460 "src/sprites/../puun/gf/../../other/stb_image.h"
      $27 = (($26) + 12|0); //@line 4460 "src/sprites/../puun/gf/../../other/stb_image.h"
      $28 = HEAP32[$27>>2]|0; //@line 4460 "src/sprites/../puun/gf/../../other/stb_image.h"
      $29 = ($24|0)!=($28|0); //@line 4460 "src/sprites/../puun/gf/../../other/stb_image.h"
      if ($29) {
       $30 = $result; //@line 4461 "src/sprites/../puun/gf/../../other/stb_image.h"
       $31 = $1; //@line 4461 "src/sprites/../puun/gf/../../other/stb_image.h"
       $32 = HEAP32[$31>>2]|0; //@line 4461 "src/sprites/../puun/gf/../../other/stb_image.h"
       $33 = (($32) + 12|0); //@line 4461 "src/sprites/../puun/gf/../../other/stb_image.h"
       $34 = HEAP32[$33>>2]|0; //@line 4461 "src/sprites/../puun/gf/../../other/stb_image.h"
       $35 = $5; //@line 4461 "src/sprites/../puun/gf/../../other/stb_image.h"
       $36 = $1; //@line 4461 "src/sprites/../puun/gf/../../other/stb_image.h"
       $37 = HEAP32[$36>>2]|0; //@line 4461 "src/sprites/../puun/gf/../../other/stb_image.h"
       $38 = HEAP32[$37>>2]|0; //@line 4461 "src/sprites/../puun/gf/../../other/stb_image.h"
       $39 = $1; //@line 4461 "src/sprites/../puun/gf/../../other/stb_image.h"
       $40 = HEAP32[$39>>2]|0; //@line 4461 "src/sprites/../puun/gf/../../other/stb_image.h"
       $41 = (($40) + 4|0); //@line 4461 "src/sprites/../puun/gf/../../other/stb_image.h"
       $42 = HEAP32[$41>>2]|0; //@line 4461 "src/sprites/../puun/gf/../../other/stb_image.h"
       $43 = (_stbi__convert_format($30,$34,$35,$38,$42)|0); //@line 4461 "src/sprites/../puun/gf/../../other/stb_image.h"
       $result = $43; //@line 4461 "src/sprites/../puun/gf/../../other/stb_image.h"
       $44 = $5; //@line 4462 "src/sprites/../puun/gf/../../other/stb_image.h"
       $45 = $1; //@line 4462 "src/sprites/../puun/gf/../../other/stb_image.h"
       $46 = HEAP32[$45>>2]|0; //@line 4462 "src/sprites/../puun/gf/../../other/stb_image.h"
       $47 = (($46) + 12|0); //@line 4462 "src/sprites/../puun/gf/../../other/stb_image.h"
       HEAP32[$47>>2] = $44; //@line 4462 "src/sprites/../puun/gf/../../other/stb_image.h"
       $48 = $result; //@line 4463 "src/sprites/../puun/gf/../../other/stb_image.h"
       $49 = ($48|0)==(0|0); //@line 4463 "src/sprites/../puun/gf/../../other/stb_image.h"
       if (!($49)) {
        break;
       }
       $50 = $result; //@line 4463 "src/sprites/../puun/gf/../../other/stb_image.h"
       $0 = $50; //@line 4463 "src/sprites/../puun/gf/../../other/stb_image.h"
       $83 = $0; //@line 4474 "src/sprites/../puun/gf/../../other/stb_image.h"
       STACKTOP = sp;return ($83|0); //@line 4474 "src/sprites/../puun/gf/../../other/stb_image.h"
      }
     }
    } while(0);
    $51 = $1; //@line 4465 "src/sprites/../puun/gf/../../other/stb_image.h"
    $52 = HEAP32[$51>>2]|0; //@line 4465 "src/sprites/../puun/gf/../../other/stb_image.h"
    $53 = HEAP32[$52>>2]|0; //@line 4465 "src/sprites/../puun/gf/../../other/stb_image.h"
    $54 = $2; //@line 4465 "src/sprites/../puun/gf/../../other/stb_image.h"
    HEAP32[$54>>2] = $53; //@line 4465 "src/sprites/../puun/gf/../../other/stb_image.h"
    $55 = $1; //@line 4466 "src/sprites/../puun/gf/../../other/stb_image.h"
    $56 = HEAP32[$55>>2]|0; //@line 4466 "src/sprites/../puun/gf/../../other/stb_image.h"
    $57 = (($56) + 4|0); //@line 4466 "src/sprites/../puun/gf/../../other/stb_image.h"
    $58 = HEAP32[$57>>2]|0; //@line 4466 "src/sprites/../puun/gf/../../other/stb_image.h"
    $59 = $3; //@line 4466 "src/sprites/../puun/gf/../../other/stb_image.h"
    HEAP32[$59>>2] = $58; //@line 4466 "src/sprites/../puun/gf/../../other/stb_image.h"
    $60 = $4; //@line 4467 "src/sprites/../puun/gf/../../other/stb_image.h"
    $61 = ($60|0)!=(0|0); //@line 4467 "src/sprites/../puun/gf/../../other/stb_image.h"
    if ($61) {
     $62 = $1; //@line 4467 "src/sprites/../puun/gf/../../other/stb_image.h"
     $63 = HEAP32[$62>>2]|0; //@line 4467 "src/sprites/../puun/gf/../../other/stb_image.h"
     $64 = (($63) + 12|0); //@line 4467 "src/sprites/../puun/gf/../../other/stb_image.h"
     $65 = HEAP32[$64>>2]|0; //@line 4467 "src/sprites/../puun/gf/../../other/stb_image.h"
     $66 = $4; //@line 4467 "src/sprites/../puun/gf/../../other/stb_image.h"
     HEAP32[$66>>2] = $65; //@line 4467 "src/sprites/../puun/gf/../../other/stb_image.h"
    }
   }
   $67 = $1; //@line 4469 "src/sprites/../puun/gf/../../other/stb_image.h"
   $68 = (($67) + 12|0); //@line 4469 "src/sprites/../puun/gf/../../other/stb_image.h"
   $69 = HEAP32[$68>>2]|0; //@line 4469 "src/sprites/../puun/gf/../../other/stb_image.h"
   _free($69); //@line 4469 "src/sprites/../puun/gf/../../other/stb_image.h"
   $70 = $1; //@line 4469 "src/sprites/../puun/gf/../../other/stb_image.h"
   $71 = (($70) + 12|0); //@line 4469 "src/sprites/../puun/gf/../../other/stb_image.h"
   HEAP32[$71>>2] = 0; //@line 4469 "src/sprites/../puun/gf/../../other/stb_image.h"
   $72 = $1; //@line 4470 "src/sprites/../puun/gf/../../other/stb_image.h"
   $73 = (($72) + 8|0); //@line 4470 "src/sprites/../puun/gf/../../other/stb_image.h"
   $74 = HEAP32[$73>>2]|0; //@line 4470 "src/sprites/../puun/gf/../../other/stb_image.h"
   _free($74); //@line 4470 "src/sprites/../puun/gf/../../other/stb_image.h"
   $75 = $1; //@line 4470 "src/sprites/../puun/gf/../../other/stb_image.h"
   $76 = (($75) + 8|0); //@line 4470 "src/sprites/../puun/gf/../../other/stb_image.h"
   HEAP32[$76>>2] = 0; //@line 4470 "src/sprites/../puun/gf/../../other/stb_image.h"
   $77 = $1; //@line 4471 "src/sprites/../puun/gf/../../other/stb_image.h"
   $78 = (($77) + 4|0); //@line 4471 "src/sprites/../puun/gf/../../other/stb_image.h"
   $79 = HEAP32[$78>>2]|0; //@line 4471 "src/sprites/../puun/gf/../../other/stb_image.h"
   _free($79); //@line 4471 "src/sprites/../puun/gf/../../other/stb_image.h"
   $80 = $1; //@line 4471 "src/sprites/../puun/gf/../../other/stb_image.h"
   $81 = (($80) + 4|0); //@line 4471 "src/sprites/../puun/gf/../../other/stb_image.h"
   HEAP32[$81>>2] = 0; //@line 4471 "src/sprites/../puun/gf/../../other/stb_image.h"
   $82 = $result; //@line 4473 "src/sprites/../puun/gf/../../other/stb_image.h"
   $0 = $82; //@line 4473 "src/sprites/../puun/gf/../../other/stb_image.h"
   $83 = $0; //@line 4474 "src/sprites/../puun/gf/../../other/stb_image.h"
   STACKTOP = sp;return ($83|0); //@line 4474 "src/sprites/../puun/gf/../../other/stb_image.h"
  }
 }
 $10 = (_stbi__err(10232)|0); //@line 4456 "src/sprites/../puun/gf/../../other/stb_image.h"
 $11 = ($10|0)!=(0); //@line 4456 "src/sprites/../puun/gf/../../other/stb_image.h"
 $12 = $11 ? 0 : 0; //@line 4456 "src/sprites/../puun/gf/../../other/stb_image.h"
 $0 = $12; //@line 4456 "src/sprites/../puun/gf/../../other/stb_image.h"
 $83 = $0; //@line 4474 "src/sprites/../puun/gf/../../other/stb_image.h"
 STACKTOP = sp;return ($83|0); //@line 4474 "src/sprites/../puun/gf/../../other/stb_image.h"
}
function _stbi__png_test($s) {
 $s = $s|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $r = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $s;
 $1 = $0; //@line 4486 "src/sprites/../puun/gf/../../other/stb_image.h"
 $2 = (_stbi__check_png_header($1)|0); //@line 4486 "src/sprites/../puun/gf/../../other/stb_image.h"
 $r = $2; //@line 4486 "src/sprites/../puun/gf/../../other/stb_image.h"
 $3 = $0; //@line 4487 "src/sprites/../puun/gf/../../other/stb_image.h"
 _stbi__rewind($3); //@line 4487 "src/sprites/../puun/gf/../../other/stb_image.h"
 $4 = $r; //@line 4488 "src/sprites/../puun/gf/../../other/stb_image.h"
 STACKTOP = sp;return ($4|0); //@line 4488 "src/sprites/../puun/gf/../../other/stb_image.h"
}
function _stbi__jpeg_load($s,$x,$y,$comp,$req_comp) {
 $s = $s|0;
 $x = $x|0;
 $y = $y|0;
 $comp = $comp|0;
 $req_comp = $req_comp|0;
 var $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $j = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 18208|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $j = sp;
 $0 = $s;
 $1 = $x;
 $2 = $y;
 $3 = $comp;
 $4 = $req_comp;
 $5 = $0; //@line 3390 "src/sprites/../puun/gf/../../other/stb_image.h"
 HEAP32[$j>>2] = $5; //@line 3390 "src/sprites/../puun/gf/../../other/stb_image.h"
 _stbi__setup_jpeg($j); //@line 3391 "src/sprites/../puun/gf/../../other/stb_image.h"
 $6 = $1; //@line 3392 "src/sprites/../puun/gf/../../other/stb_image.h"
 $7 = $2; //@line 3392 "src/sprites/../puun/gf/../../other/stb_image.h"
 $8 = $3; //@line 3392 "src/sprites/../puun/gf/../../other/stb_image.h"
 $9 = $4; //@line 3392 "src/sprites/../puun/gf/../../other/stb_image.h"
 $10 = (_load_jpeg_image($j,$6,$7,$8,$9)|0); //@line 3392 "src/sprites/../puun/gf/../../other/stb_image.h"
 STACKTOP = sp;return ($10|0); //@line 3392 "src/sprites/../puun/gf/../../other/stb_image.h"
}
function _load_jpeg_image($z,$out_x,$out_y,$comp,$req_comp) {
 $z = $z|0;
 $out_x = $out_x|0;
 $out_y = $out_y|0;
 $comp = $comp|0;
 $req_comp = $req_comp|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0;
 var $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0;
 var $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0;
 var $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0;
 var $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0;
 var $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0;
 var $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0;
 var $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0;
 var $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0;
 var $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0;
 var $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0;
 var $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $coutput = 0, $decode_n = 0;
 var $i = 0, $j = 0, $k = 0, $n = 0, $out = 0, $output = 0, $r = 0, $r1 = 0, $res_comp = 0, $y = 0, $y2 = 0, $y_bot = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $coutput = sp + 152|0;
 $res_comp = sp + 24|0;
 $1 = $z;
 $2 = $out_x;
 $3 = $out_y;
 $4 = $comp;
 $5 = $req_comp;
 $6 = $1; //@line 3293 "src/sprites/../puun/gf/../../other/stb_image.h"
 $7 = HEAP32[$6>>2]|0; //@line 3293 "src/sprites/../puun/gf/../../other/stb_image.h"
 $8 = (($7) + 8|0); //@line 3293 "src/sprites/../puun/gf/../../other/stb_image.h"
 HEAP32[$8>>2] = 0; //@line 3293 "src/sprites/../puun/gf/../../other/stb_image.h"
 $9 = $5; //@line 3296 "src/sprites/../puun/gf/../../other/stb_image.h"
 $10 = ($9|0)<(0); //@line 3296 "src/sprites/../puun/gf/../../other/stb_image.h"
 if (!($10)) {
  $11 = $5; //@line 3296 "src/sprites/../puun/gf/../../other/stb_image.h"
  $12 = ($11|0)>(4); //@line 3296 "src/sprites/../puun/gf/../../other/stb_image.h"
  if (!($12)) {
   $16 = $1; //@line 3299 "src/sprites/../puun/gf/../../other/stb_image.h"
   $17 = (_stbi__decode_jpeg_image($16)|0); //@line 3299 "src/sprites/../puun/gf/../../other/stb_image.h"
   $18 = ($17|0)!=(0); //@line 3299 "src/sprites/../puun/gf/../../other/stb_image.h"
   if (!($18)) {
    $19 = $1; //@line 3299 "src/sprites/../puun/gf/../../other/stb_image.h"
    _stbi__cleanup_jpeg($19); //@line 3299 "src/sprites/../puun/gf/../../other/stb_image.h"
    $0 = 0; //@line 3299 "src/sprites/../puun/gf/../../other/stb_image.h"
    $377 = $0; //@line 3385 "src/sprites/../puun/gf/../../other/stb_image.h"
    STACKTOP = sp;return ($377|0); //@line 3385 "src/sprites/../puun/gf/../../other/stb_image.h"
   }
   $20 = $5; //@line 3302 "src/sprites/../puun/gf/../../other/stb_image.h"
   $21 = ($20|0)!=(0); //@line 3302 "src/sprites/../puun/gf/../../other/stb_image.h"
   if ($21) {
    $22 = $5; //@line 3302 "src/sprites/../puun/gf/../../other/stb_image.h"
    $27 = $22;
   } else {
    $23 = $1; //@line 3302 "src/sprites/../puun/gf/../../other/stb_image.h"
    $24 = HEAP32[$23>>2]|0; //@line 3302 "src/sprites/../puun/gf/../../other/stb_image.h"
    $25 = (($24) + 8|0); //@line 3302 "src/sprites/../puun/gf/../../other/stb_image.h"
    $26 = HEAP32[$25>>2]|0; //@line 3302 "src/sprites/../puun/gf/../../other/stb_image.h"
    $27 = $26;
   }
   $n = $27; //@line 3302 "src/sprites/../puun/gf/../../other/stb_image.h"
   $28 = $1; //@line 3304 "src/sprites/../puun/gf/../../other/stb_image.h"
   $29 = HEAP32[$28>>2]|0; //@line 3304 "src/sprites/../puun/gf/../../other/stb_image.h"
   $30 = (($29) + 8|0); //@line 3304 "src/sprites/../puun/gf/../../other/stb_image.h"
   $31 = HEAP32[$30>>2]|0; //@line 3304 "src/sprites/../puun/gf/../../other/stb_image.h"
   $32 = ($31|0)==(3); //@line 3304 "src/sprites/../puun/gf/../../other/stb_image.h"
   if ($32) {
    $33 = $n; //@line 3304 "src/sprites/../puun/gf/../../other/stb_image.h"
    $34 = ($33|0)<(3); //@line 3304 "src/sprites/../puun/gf/../../other/stb_image.h"
    if ($34) {
     $decode_n = 1; //@line 3305 "src/sprites/../puun/gf/../../other/stb_image.h"
    } else {
     label = 12;
    }
   } else {
    label = 12;
   }
   if ((label|0) == 12) {
    $35 = $1; //@line 3307 "src/sprites/../puun/gf/../../other/stb_image.h"
    $36 = HEAP32[$35>>2]|0; //@line 3307 "src/sprites/../puun/gf/../../other/stb_image.h"
    $37 = (($36) + 8|0); //@line 3307 "src/sprites/../puun/gf/../../other/stb_image.h"
    $38 = HEAP32[$37>>2]|0; //@line 3307 "src/sprites/../puun/gf/../../other/stb_image.h"
    $decode_n = $38; //@line 3307 "src/sprites/../puun/gf/../../other/stb_image.h"
   }
   $k = 0; //@line 3318 "src/sprites/../puun/gf/../../other/stb_image.h"
   while(1) {
    $39 = $k; //@line 3318 "src/sprites/../puun/gf/../../other/stb_image.h"
    $40 = $decode_n; //@line 3318 "src/sprites/../puun/gf/../../other/stb_image.h"
    $41 = ($39|0)<($40|0); //@line 3318 "src/sprites/../puun/gf/../../other/stb_image.h"
    if (!($41)) {
     break;
    }
    $42 = $k; //@line 3319 "src/sprites/../puun/gf/../../other/stb_image.h"
    $43 = (($res_comp) + ($42<<5)|0); //@line 3319 "src/sprites/../puun/gf/../../other/stb_image.h"
    $r = $43; //@line 3319 "src/sprites/../puun/gf/../../other/stb_image.h"
    $44 = $1; //@line 3323 "src/sprites/../puun/gf/../../other/stb_image.h"
    $45 = HEAP32[$44>>2]|0; //@line 3323 "src/sprites/../puun/gf/../../other/stb_image.h"
    $46 = HEAP32[$45>>2]|0; //@line 3323 "src/sprites/../puun/gf/../../other/stb_image.h"
    $47 = (($46) + 3)|0; //@line 3323 "src/sprites/../puun/gf/../../other/stb_image.h"
    $48 = (_stbi__malloc($47)|0); //@line 3323 "src/sprites/../puun/gf/../../other/stb_image.h"
    $49 = $k; //@line 3323 "src/sprites/../puun/gf/../../other/stb_image.h"
    $50 = $1; //@line 3323 "src/sprites/../puun/gf/../../other/stb_image.h"
    $51 = (($50) + 17820|0); //@line 3323 "src/sprites/../puun/gf/../../other/stb_image.h"
    $52 = (($51) + (($49*72)|0)|0); //@line 3323 "src/sprites/../puun/gf/../../other/stb_image.h"
    $53 = (($52) + 56|0); //@line 3323 "src/sprites/../puun/gf/../../other/stb_image.h"
    HEAP32[$53>>2] = $48; //@line 3323 "src/sprites/../puun/gf/../../other/stb_image.h"
    $54 = $k; //@line 3324 "src/sprites/../puun/gf/../../other/stb_image.h"
    $55 = $1; //@line 3324 "src/sprites/../puun/gf/../../other/stb_image.h"
    $56 = (($55) + 17820|0); //@line 3324 "src/sprites/../puun/gf/../../other/stb_image.h"
    $57 = (($56) + (($54*72)|0)|0); //@line 3324 "src/sprites/../puun/gf/../../other/stb_image.h"
    $58 = (($57) + 56|0); //@line 3324 "src/sprites/../puun/gf/../../other/stb_image.h"
    $59 = HEAP32[$58>>2]|0; //@line 3324 "src/sprites/../puun/gf/../../other/stb_image.h"
    $60 = ($59|0)!=(0|0); //@line 3324 "src/sprites/../puun/gf/../../other/stb_image.h"
    if (!($60)) {
     label = 16;
     break;
    }
    $65 = $1; //@line 3326 "src/sprites/../puun/gf/../../other/stb_image.h"
    $66 = (($65) + 17796|0); //@line 3326 "src/sprites/../puun/gf/../../other/stb_image.h"
    $67 = HEAP32[$66>>2]|0; //@line 3326 "src/sprites/../puun/gf/../../other/stb_image.h"
    $68 = $k; //@line 3326 "src/sprites/../puun/gf/../../other/stb_image.h"
    $69 = $1; //@line 3326 "src/sprites/../puun/gf/../../other/stb_image.h"
    $70 = (($69) + 17820|0); //@line 3326 "src/sprites/../puun/gf/../../other/stb_image.h"
    $71 = (($70) + (($68*72)|0)|0); //@line 3326 "src/sprites/../puun/gf/../../other/stb_image.h"
    $72 = (($71) + 4|0); //@line 3326 "src/sprites/../puun/gf/../../other/stb_image.h"
    $73 = HEAP32[$72>>2]|0; //@line 3326 "src/sprites/../puun/gf/../../other/stb_image.h"
    $74 = (($67|0) / ($73|0))&-1; //@line 3326 "src/sprites/../puun/gf/../../other/stb_image.h"
    $75 = $r; //@line 3326 "src/sprites/../puun/gf/../../other/stb_image.h"
    $76 = (($75) + 12|0); //@line 3326 "src/sprites/../puun/gf/../../other/stb_image.h"
    HEAP32[$76>>2] = $74; //@line 3326 "src/sprites/../puun/gf/../../other/stb_image.h"
    $77 = $1; //@line 3327 "src/sprites/../puun/gf/../../other/stb_image.h"
    $78 = (($77) + 17800|0); //@line 3327 "src/sprites/../puun/gf/../../other/stb_image.h"
    $79 = HEAP32[$78>>2]|0; //@line 3327 "src/sprites/../puun/gf/../../other/stb_image.h"
    $80 = $k; //@line 3327 "src/sprites/../puun/gf/../../other/stb_image.h"
    $81 = $1; //@line 3327 "src/sprites/../puun/gf/../../other/stb_image.h"
    $82 = (($81) + 17820|0); //@line 3327 "src/sprites/../puun/gf/../../other/stb_image.h"
    $83 = (($82) + (($80*72)|0)|0); //@line 3327 "src/sprites/../puun/gf/../../other/stb_image.h"
    $84 = (($83) + 8|0); //@line 3327 "src/sprites/../puun/gf/../../other/stb_image.h"
    $85 = HEAP32[$84>>2]|0; //@line 3327 "src/sprites/../puun/gf/../../other/stb_image.h"
    $86 = (($79|0) / ($85|0))&-1; //@line 3327 "src/sprites/../puun/gf/../../other/stb_image.h"
    $87 = $r; //@line 3327 "src/sprites/../puun/gf/../../other/stb_image.h"
    $88 = (($87) + 16|0); //@line 3327 "src/sprites/../puun/gf/../../other/stb_image.h"
    HEAP32[$88>>2] = $86; //@line 3327 "src/sprites/../puun/gf/../../other/stb_image.h"
    $89 = $r; //@line 3328 "src/sprites/../puun/gf/../../other/stb_image.h"
    $90 = (($89) + 16|0); //@line 3328 "src/sprites/../puun/gf/../../other/stb_image.h"
    $91 = HEAP32[$90>>2]|0; //@line 3328 "src/sprites/../puun/gf/../../other/stb_image.h"
    $92 = $91 >> 1; //@line 3328 "src/sprites/../puun/gf/../../other/stb_image.h"
    $93 = $r; //@line 3328 "src/sprites/../puun/gf/../../other/stb_image.h"
    $94 = (($93) + 24|0); //@line 3328 "src/sprites/../puun/gf/../../other/stb_image.h"
    HEAP32[$94>>2] = $92; //@line 3328 "src/sprites/../puun/gf/../../other/stb_image.h"
    $95 = $1; //@line 3329 "src/sprites/../puun/gf/../../other/stb_image.h"
    $96 = HEAP32[$95>>2]|0; //@line 3329 "src/sprites/../puun/gf/../../other/stb_image.h"
    $97 = HEAP32[$96>>2]|0; //@line 3329 "src/sprites/../puun/gf/../../other/stb_image.h"
    $98 = $r; //@line 3329 "src/sprites/../puun/gf/../../other/stb_image.h"
    $99 = (($98) + 12|0); //@line 3329 "src/sprites/../puun/gf/../../other/stb_image.h"
    $100 = HEAP32[$99>>2]|0; //@line 3329 "src/sprites/../puun/gf/../../other/stb_image.h"
    $101 = (($97) + ($100))|0; //@line 3329 "src/sprites/../puun/gf/../../other/stb_image.h"
    $102 = (($101) - 1)|0; //@line 3329 "src/sprites/../puun/gf/../../other/stb_image.h"
    $103 = $r; //@line 3329 "src/sprites/../puun/gf/../../other/stb_image.h"
    $104 = (($103) + 12|0); //@line 3329 "src/sprites/../puun/gf/../../other/stb_image.h"
    $105 = HEAP32[$104>>2]|0; //@line 3329 "src/sprites/../puun/gf/../../other/stb_image.h"
    $106 = (($102>>>0) / ($105>>>0))&-1; //@line 3329 "src/sprites/../puun/gf/../../other/stb_image.h"
    $107 = $r; //@line 3329 "src/sprites/../puun/gf/../../other/stb_image.h"
    $108 = (($107) + 20|0); //@line 3329 "src/sprites/../puun/gf/../../other/stb_image.h"
    HEAP32[$108>>2] = $106; //@line 3329 "src/sprites/../puun/gf/../../other/stb_image.h"
    $109 = $r; //@line 3330 "src/sprites/../puun/gf/../../other/stb_image.h"
    $110 = (($109) + 28|0); //@line 3330 "src/sprites/../puun/gf/../../other/stb_image.h"
    HEAP32[$110>>2] = 0; //@line 3330 "src/sprites/../puun/gf/../../other/stb_image.h"
    $111 = $k; //@line 3331 "src/sprites/../puun/gf/../../other/stb_image.h"
    $112 = $1; //@line 3331 "src/sprites/../puun/gf/../../other/stb_image.h"
    $113 = (($112) + 17820|0); //@line 3331 "src/sprites/../puun/gf/../../other/stb_image.h"
    $114 = (($113) + (($111*72)|0)|0); //@line 3331 "src/sprites/../puun/gf/../../other/stb_image.h"
    $115 = (($114) + 44|0); //@line 3331 "src/sprites/../puun/gf/../../other/stb_image.h"
    $116 = HEAP32[$115>>2]|0; //@line 3331 "src/sprites/../puun/gf/../../other/stb_image.h"
    $117 = $r; //@line 3331 "src/sprites/../puun/gf/../../other/stb_image.h"
    $118 = (($117) + 8|0); //@line 3331 "src/sprites/../puun/gf/../../other/stb_image.h"
    HEAP32[$118>>2] = $116; //@line 3331 "src/sprites/../puun/gf/../../other/stb_image.h"
    $119 = $r; //@line 3331 "src/sprites/../puun/gf/../../other/stb_image.h"
    $120 = (($119) + 4|0); //@line 3331 "src/sprites/../puun/gf/../../other/stb_image.h"
    HEAP32[$120>>2] = $116; //@line 3331 "src/sprites/../puun/gf/../../other/stb_image.h"
    $121 = $r; //@line 3333 "src/sprites/../puun/gf/../../other/stb_image.h"
    $122 = (($121) + 12|0); //@line 3333 "src/sprites/../puun/gf/../../other/stb_image.h"
    $123 = HEAP32[$122>>2]|0; //@line 3333 "src/sprites/../puun/gf/../../other/stb_image.h"
    $124 = ($123|0)==(1); //@line 3333 "src/sprites/../puun/gf/../../other/stb_image.h"
    if ($124) {
     $125 = $r; //@line 3333 "src/sprites/../puun/gf/../../other/stb_image.h"
     $126 = (($125) + 16|0); //@line 3333 "src/sprites/../puun/gf/../../other/stb_image.h"
     $127 = HEAP32[$126>>2]|0; //@line 3333 "src/sprites/../puun/gf/../../other/stb_image.h"
     $128 = ($127|0)==(1); //@line 3333 "src/sprites/../puun/gf/../../other/stb_image.h"
     if ($128) {
      $129 = $r; //@line 3333 "src/sprites/../puun/gf/../../other/stb_image.h"
      HEAP32[$129>>2] = 8; //@line 3333 "src/sprites/../puun/gf/../../other/stb_image.h"
     } else {
      label = 20;
     }
    } else {
     label = 20;
    }
    if ((label|0) == 20) {
     label = 0;
     $130 = $r; //@line 3334 "src/sprites/../puun/gf/../../other/stb_image.h"
     $131 = (($130) + 12|0); //@line 3334 "src/sprites/../puun/gf/../../other/stb_image.h"
     $132 = HEAP32[$131>>2]|0; //@line 3334 "src/sprites/../puun/gf/../../other/stb_image.h"
     $133 = ($132|0)==(1); //@line 3334 "src/sprites/../puun/gf/../../other/stb_image.h"
     if ($133) {
      $134 = $r; //@line 3334 "src/sprites/../puun/gf/../../other/stb_image.h"
      $135 = (($134) + 16|0); //@line 3334 "src/sprites/../puun/gf/../../other/stb_image.h"
      $136 = HEAP32[$135>>2]|0; //@line 3334 "src/sprites/../puun/gf/../../other/stb_image.h"
      $137 = ($136|0)==(2); //@line 3334 "src/sprites/../puun/gf/../../other/stb_image.h"
      if ($137) {
       $138 = $r; //@line 3334 "src/sprites/../puun/gf/../../other/stb_image.h"
       HEAP32[$138>>2] = 9; //@line 3334 "src/sprites/../puun/gf/../../other/stb_image.h"
      } else {
       label = 23;
      }
     } else {
      label = 23;
     }
     if ((label|0) == 23) {
      label = 0;
      $139 = $r; //@line 3335 "src/sprites/../puun/gf/../../other/stb_image.h"
      $140 = (($139) + 12|0); //@line 3335 "src/sprites/../puun/gf/../../other/stb_image.h"
      $141 = HEAP32[$140>>2]|0; //@line 3335 "src/sprites/../puun/gf/../../other/stb_image.h"
      $142 = ($141|0)==(2); //@line 3335 "src/sprites/../puun/gf/../../other/stb_image.h"
      if ($142) {
       $143 = $r; //@line 3335 "src/sprites/../puun/gf/../../other/stb_image.h"
       $144 = (($143) + 16|0); //@line 3335 "src/sprites/../puun/gf/../../other/stb_image.h"
       $145 = HEAP32[$144>>2]|0; //@line 3335 "src/sprites/../puun/gf/../../other/stb_image.h"
       $146 = ($145|0)==(1); //@line 3335 "src/sprites/../puun/gf/../../other/stb_image.h"
       if ($146) {
        $147 = $r; //@line 3335 "src/sprites/../puun/gf/../../other/stb_image.h"
        HEAP32[$147>>2] = 10; //@line 3335 "src/sprites/../puun/gf/../../other/stb_image.h"
       } else {
        label = 26;
       }
      } else {
       label = 26;
      }
      if ((label|0) == 26) {
       label = 0;
       $148 = $r; //@line 3336 "src/sprites/../puun/gf/../../other/stb_image.h"
       $149 = (($148) + 12|0); //@line 3336 "src/sprites/../puun/gf/../../other/stb_image.h"
       $150 = HEAP32[$149>>2]|0; //@line 3336 "src/sprites/../puun/gf/../../other/stb_image.h"
       $151 = ($150|0)==(2); //@line 3336 "src/sprites/../puun/gf/../../other/stb_image.h"
       if ($151) {
        $152 = $r; //@line 3336 "src/sprites/../puun/gf/../../other/stb_image.h"
        $153 = (($152) + 16|0); //@line 3336 "src/sprites/../puun/gf/../../other/stb_image.h"
        $154 = HEAP32[$153>>2]|0; //@line 3336 "src/sprites/../puun/gf/../../other/stb_image.h"
        $155 = ($154|0)==(2); //@line 3336 "src/sprites/../puun/gf/../../other/stb_image.h"
        if ($155) {
         $156 = $1; //@line 3336 "src/sprites/../puun/gf/../../other/stb_image.h"
         $157 = (($156) + 18184|0); //@line 3336 "src/sprites/../puun/gf/../../other/stb_image.h"
         $158 = HEAP32[$157>>2]|0; //@line 3336 "src/sprites/../puun/gf/../../other/stb_image.h"
         $159 = $r; //@line 3336 "src/sprites/../puun/gf/../../other/stb_image.h"
         HEAP32[$159>>2] = $158; //@line 3336 "src/sprites/../puun/gf/../../other/stb_image.h"
        } else {
         label = 29;
        }
       } else {
        label = 29;
       }
       if ((label|0) == 29) {
        label = 0;
        $160 = $r; //@line 3337 "src/sprites/../puun/gf/../../other/stb_image.h"
        HEAP32[$160>>2] = 11; //@line 3337 "src/sprites/../puun/gf/../../other/stb_image.h"
       }
      }
     }
    }
    $161 = $k; //@line 3318 "src/sprites/../puun/gf/../../other/stb_image.h"
    $162 = (($161) + 1)|0; //@line 3318 "src/sprites/../puun/gf/../../other/stb_image.h"
    $k = $162; //@line 3318 "src/sprites/../puun/gf/../../other/stb_image.h"
   }
   if ((label|0) == 16) {
    $61 = $1; //@line 3324 "src/sprites/../puun/gf/../../other/stb_image.h"
    _stbi__cleanup_jpeg($61); //@line 3324 "src/sprites/../puun/gf/../../other/stb_image.h"
    $62 = (_stbi__err(7464)|0); //@line 3324 "src/sprites/../puun/gf/../../other/stb_image.h"
    $63 = ($62|0)!=(0); //@line 3324 "src/sprites/../puun/gf/../../other/stb_image.h"
    $64 = $63 ? 0 : 0; //@line 3324 "src/sprites/../puun/gf/../../other/stb_image.h"
    $0 = $64; //@line 3324 "src/sprites/../puun/gf/../../other/stb_image.h"
    $377 = $0; //@line 3385 "src/sprites/../puun/gf/../../other/stb_image.h"
    STACKTOP = sp;return ($377|0); //@line 3385 "src/sprites/../puun/gf/../../other/stb_image.h"
   }
   $163 = $n; //@line 3341 "src/sprites/../puun/gf/../../other/stb_image.h"
   $164 = $1; //@line 3341 "src/sprites/../puun/gf/../../other/stb_image.h"
   $165 = HEAP32[$164>>2]|0; //@line 3341 "src/sprites/../puun/gf/../../other/stb_image.h"
   $166 = HEAP32[$165>>2]|0; //@line 3341 "src/sprites/../puun/gf/../../other/stb_image.h"
   $167 = Math_imul($163, $166)|0; //@line 3341 "src/sprites/../puun/gf/../../other/stb_image.h"
   $168 = $1; //@line 3341 "src/sprites/../puun/gf/../../other/stb_image.h"
   $169 = HEAP32[$168>>2]|0; //@line 3341 "src/sprites/../puun/gf/../../other/stb_image.h"
   $170 = (($169) + 4|0); //@line 3341 "src/sprites/../puun/gf/../../other/stb_image.h"
   $171 = HEAP32[$170>>2]|0; //@line 3341 "src/sprites/../puun/gf/../../other/stb_image.h"
   $172 = Math_imul($167, $171)|0; //@line 3341 "src/sprites/../puun/gf/../../other/stb_image.h"
   $173 = (($172) + 1)|0; //@line 3341 "src/sprites/../puun/gf/../../other/stb_image.h"
   $174 = (_stbi__malloc($173)|0); //@line 3341 "src/sprites/../puun/gf/../../other/stb_image.h"
   $output = $174; //@line 3341 "src/sprites/../puun/gf/../../other/stb_image.h"
   $175 = $output; //@line 3342 "src/sprites/../puun/gf/../../other/stb_image.h"
   $176 = ($175|0)!=(0|0); //@line 3342 "src/sprites/../puun/gf/../../other/stb_image.h"
   if (!($176)) {
    $177 = $1; //@line 3342 "src/sprites/../puun/gf/../../other/stb_image.h"
    _stbi__cleanup_jpeg($177); //@line 3342 "src/sprites/../puun/gf/../../other/stb_image.h"
    $178 = (_stbi__err(7464)|0); //@line 3342 "src/sprites/../puun/gf/../../other/stb_image.h"
    $179 = ($178|0)!=(0); //@line 3342 "src/sprites/../puun/gf/../../other/stb_image.h"
    $180 = $179 ? 0 : 0; //@line 3342 "src/sprites/../puun/gf/../../other/stb_image.h"
    $0 = $180; //@line 3342 "src/sprites/../puun/gf/../../other/stb_image.h"
    $377 = $0; //@line 3385 "src/sprites/../puun/gf/../../other/stb_image.h"
    STACKTOP = sp;return ($377|0); //@line 3385 "src/sprites/../puun/gf/../../other/stb_image.h"
   }
   $j = 0; //@line 3345 "src/sprites/../puun/gf/../../other/stb_image.h"
   while(1) {
    $181 = $j; //@line 3345 "src/sprites/../puun/gf/../../other/stb_image.h"
    $182 = $1; //@line 3345 "src/sprites/../puun/gf/../../other/stb_image.h"
    $183 = HEAP32[$182>>2]|0; //@line 3345 "src/sprites/../puun/gf/../../other/stb_image.h"
    $184 = (($183) + 4|0); //@line 3345 "src/sprites/../puun/gf/../../other/stb_image.h"
    $185 = HEAP32[$184>>2]|0; //@line 3345 "src/sprites/../puun/gf/../../other/stb_image.h"
    $186 = ($181>>>0)<($185>>>0); //@line 3345 "src/sprites/../puun/gf/../../other/stb_image.h"
    if (!($186)) {
     break;
    }
    $187 = $output; //@line 3346 "src/sprites/../puun/gf/../../other/stb_image.h"
    $188 = $n; //@line 3346 "src/sprites/../puun/gf/../../other/stb_image.h"
    $189 = $1; //@line 3346 "src/sprites/../puun/gf/../../other/stb_image.h"
    $190 = HEAP32[$189>>2]|0; //@line 3346 "src/sprites/../puun/gf/../../other/stb_image.h"
    $191 = HEAP32[$190>>2]|0; //@line 3346 "src/sprites/../puun/gf/../../other/stb_image.h"
    $192 = Math_imul($188, $191)|0; //@line 3346 "src/sprites/../puun/gf/../../other/stb_image.h"
    $193 = $j; //@line 3346 "src/sprites/../puun/gf/../../other/stb_image.h"
    $194 = Math_imul($192, $193)|0; //@line 3346 "src/sprites/../puun/gf/../../other/stb_image.h"
    $195 = (($187) + ($194)|0); //@line 3346 "src/sprites/../puun/gf/../../other/stb_image.h"
    $out = $195; //@line 3346 "src/sprites/../puun/gf/../../other/stb_image.h"
    $k = 0; //@line 3347 "src/sprites/../puun/gf/../../other/stb_image.h"
    while(1) {
     $196 = $k; //@line 3347 "src/sprites/../puun/gf/../../other/stb_image.h"
     $197 = $decode_n; //@line 3347 "src/sprites/../puun/gf/../../other/stb_image.h"
     $198 = ($196|0)<($197|0); //@line 3347 "src/sprites/../puun/gf/../../other/stb_image.h"
     if (!($198)) {
      break;
     }
     $199 = $k; //@line 3348 "src/sprites/../puun/gf/../../other/stb_image.h"
     $200 = (($res_comp) + ($199<<5)|0); //@line 3348 "src/sprites/../puun/gf/../../other/stb_image.h"
     $r1 = $200; //@line 3348 "src/sprites/../puun/gf/../../other/stb_image.h"
     $201 = $r1; //@line 3349 "src/sprites/../puun/gf/../../other/stb_image.h"
     $202 = (($201) + 24|0); //@line 3349 "src/sprites/../puun/gf/../../other/stb_image.h"
     $203 = HEAP32[$202>>2]|0; //@line 3349 "src/sprites/../puun/gf/../../other/stb_image.h"
     $204 = $r1; //@line 3349 "src/sprites/../puun/gf/../../other/stb_image.h"
     $205 = (($204) + 16|0); //@line 3349 "src/sprites/../puun/gf/../../other/stb_image.h"
     $206 = HEAP32[$205>>2]|0; //@line 3349 "src/sprites/../puun/gf/../../other/stb_image.h"
     $207 = $206 >> 1; //@line 3349 "src/sprites/../puun/gf/../../other/stb_image.h"
     $208 = ($203|0)>=($207|0); //@line 3349 "src/sprites/../puun/gf/../../other/stb_image.h"
     $209 = $208&1; //@line 3349 "src/sprites/../puun/gf/../../other/stb_image.h"
     $y_bot = $209; //@line 3349 "src/sprites/../puun/gf/../../other/stb_image.h"
     $210 = $r1; //@line 3350 "src/sprites/../puun/gf/../../other/stb_image.h"
     $211 = HEAP32[$210>>2]|0; //@line 3350 "src/sprites/../puun/gf/../../other/stb_image.h"
     $212 = $k; //@line 3350 "src/sprites/../puun/gf/../../other/stb_image.h"
     $213 = $1; //@line 3350 "src/sprites/../puun/gf/../../other/stb_image.h"
     $214 = (($213) + 17820|0); //@line 3350 "src/sprites/../puun/gf/../../other/stb_image.h"
     $215 = (($214) + (($212*72)|0)|0); //@line 3350 "src/sprites/../puun/gf/../../other/stb_image.h"
     $216 = (($215) + 56|0); //@line 3350 "src/sprites/../puun/gf/../../other/stb_image.h"
     $217 = HEAP32[$216>>2]|0; //@line 3350 "src/sprites/../puun/gf/../../other/stb_image.h"
     $218 = $y_bot; //@line 3350 "src/sprites/../puun/gf/../../other/stb_image.h"
     $219 = ($218|0)!=(0); //@line 3350 "src/sprites/../puun/gf/../../other/stb_image.h"
     if ($219) {
      $220 = $r1; //@line 3350 "src/sprites/../puun/gf/../../other/stb_image.h"
      $221 = (($220) + 8|0); //@line 3350 "src/sprites/../puun/gf/../../other/stb_image.h"
      $222 = HEAP32[$221>>2]|0; //@line 3350 "src/sprites/../puun/gf/../../other/stb_image.h"
      $240 = $222;
     } else {
      $223 = $r1; //@line 3350 "src/sprites/../puun/gf/../../other/stb_image.h"
      $224 = (($223) + 4|0); //@line 3350 "src/sprites/../puun/gf/../../other/stb_image.h"
      $225 = HEAP32[$224>>2]|0; //@line 3350 "src/sprites/../puun/gf/../../other/stb_image.h"
      $240 = $225;
     }
     $226 = $y_bot; //@line 3350 "src/sprites/../puun/gf/../../other/stb_image.h"
     $227 = ($226|0)!=(0); //@line 3350 "src/sprites/../puun/gf/../../other/stb_image.h"
     if ($227) {
      $228 = $r1; //@line 3350 "src/sprites/../puun/gf/../../other/stb_image.h"
      $229 = (($228) + 4|0); //@line 3350 "src/sprites/../puun/gf/../../other/stb_image.h"
      $230 = HEAP32[$229>>2]|0; //@line 3350 "src/sprites/../puun/gf/../../other/stb_image.h"
      $241 = $230;
     } else {
      $231 = $r1; //@line 3350 "src/sprites/../puun/gf/../../other/stb_image.h"
      $232 = (($231) + 8|0); //@line 3350 "src/sprites/../puun/gf/../../other/stb_image.h"
      $233 = HEAP32[$232>>2]|0; //@line 3350 "src/sprites/../puun/gf/../../other/stb_image.h"
      $241 = $233;
     }
     $234 = $r1; //@line 3350 "src/sprites/../puun/gf/../../other/stb_image.h"
     $235 = (($234) + 20|0); //@line 3350 "src/sprites/../puun/gf/../../other/stb_image.h"
     $236 = HEAP32[$235>>2]|0; //@line 3350 "src/sprites/../puun/gf/../../other/stb_image.h"
     $237 = $r1; //@line 3350 "src/sprites/../puun/gf/../../other/stb_image.h"
     $238 = (($237) + 12|0); //@line 3350 "src/sprites/../puun/gf/../../other/stb_image.h"
     $239 = HEAP32[$238>>2]|0; //@line 3350 "src/sprites/../puun/gf/../../other/stb_image.h"
     $242 = (FUNCTION_TABLE_iiiiii[$211 & 15]($217,$240,$241,$236,$239)|0); //@line 3350 "src/sprites/../puun/gf/../../other/stb_image.h"
     $243 = $k; //@line 3350 "src/sprites/../puun/gf/../../other/stb_image.h"
     $244 = (($coutput) + ($243<<2)|0); //@line 3350 "src/sprites/../puun/gf/../../other/stb_image.h"
     HEAP32[$244>>2] = $242; //@line 3350 "src/sprites/../puun/gf/../../other/stb_image.h"
     $245 = $r1; //@line 3354 "src/sprites/../puun/gf/../../other/stb_image.h"
     $246 = (($245) + 24|0); //@line 3354 "src/sprites/../puun/gf/../../other/stb_image.h"
     $247 = HEAP32[$246>>2]|0; //@line 3354 "src/sprites/../puun/gf/../../other/stb_image.h"
     $248 = (($247) + 1)|0; //@line 3354 "src/sprites/../puun/gf/../../other/stb_image.h"
     HEAP32[$246>>2] = $248; //@line 3354 "src/sprites/../puun/gf/../../other/stb_image.h"
     $249 = $r1; //@line 3354 "src/sprites/../puun/gf/../../other/stb_image.h"
     $250 = (($249) + 16|0); //@line 3354 "src/sprites/../puun/gf/../../other/stb_image.h"
     $251 = HEAP32[$250>>2]|0; //@line 3354 "src/sprites/../puun/gf/../../other/stb_image.h"
     $252 = ($248|0)>=($251|0); //@line 3354 "src/sprites/../puun/gf/../../other/stb_image.h"
     if ($252) {
      $253 = $r1; //@line 3355 "src/sprites/../puun/gf/../../other/stb_image.h"
      $254 = (($253) + 24|0); //@line 3355 "src/sprites/../puun/gf/../../other/stb_image.h"
      HEAP32[$254>>2] = 0; //@line 3355 "src/sprites/../puun/gf/../../other/stb_image.h"
      $255 = $r1; //@line 3356 "src/sprites/../puun/gf/../../other/stb_image.h"
      $256 = (($255) + 8|0); //@line 3356 "src/sprites/../puun/gf/../../other/stb_image.h"
      $257 = HEAP32[$256>>2]|0; //@line 3356 "src/sprites/../puun/gf/../../other/stb_image.h"
      $258 = $r1; //@line 3356 "src/sprites/../puun/gf/../../other/stb_image.h"
      $259 = (($258) + 4|0); //@line 3356 "src/sprites/../puun/gf/../../other/stb_image.h"
      HEAP32[$259>>2] = $257; //@line 3356 "src/sprites/../puun/gf/../../other/stb_image.h"
      $260 = $r1; //@line 3357 "src/sprites/../puun/gf/../../other/stb_image.h"
      $261 = (($260) + 28|0); //@line 3357 "src/sprites/../puun/gf/../../other/stb_image.h"
      $262 = HEAP32[$261>>2]|0; //@line 3357 "src/sprites/../puun/gf/../../other/stb_image.h"
      $263 = (($262) + 1)|0; //@line 3357 "src/sprites/../puun/gf/../../other/stb_image.h"
      HEAP32[$261>>2] = $263; //@line 3357 "src/sprites/../puun/gf/../../other/stb_image.h"
      $264 = $k; //@line 3357 "src/sprites/../puun/gf/../../other/stb_image.h"
      $265 = $1; //@line 3357 "src/sprites/../puun/gf/../../other/stb_image.h"
      $266 = (($265) + 17820|0); //@line 3357 "src/sprites/../puun/gf/../../other/stb_image.h"
      $267 = (($266) + (($264*72)|0)|0); //@line 3357 "src/sprites/../puun/gf/../../other/stb_image.h"
      $268 = (($267) + 32|0); //@line 3357 "src/sprites/../puun/gf/../../other/stb_image.h"
      $269 = HEAP32[$268>>2]|0; //@line 3357 "src/sprites/../puun/gf/../../other/stb_image.h"
      $270 = ($263|0)<($269|0); //@line 3357 "src/sprites/../puun/gf/../../other/stb_image.h"
      if ($270) {
       $271 = $k; //@line 3358 "src/sprites/../puun/gf/../../other/stb_image.h"
       $272 = $1; //@line 3358 "src/sprites/../puun/gf/../../other/stb_image.h"
       $273 = (($272) + 17820|0); //@line 3358 "src/sprites/../puun/gf/../../other/stb_image.h"
       $274 = (($273) + (($271*72)|0)|0); //@line 3358 "src/sprites/../puun/gf/../../other/stb_image.h"
       $275 = (($274) + 36|0); //@line 3358 "src/sprites/../puun/gf/../../other/stb_image.h"
       $276 = HEAP32[$275>>2]|0; //@line 3358 "src/sprites/../puun/gf/../../other/stb_image.h"
       $277 = $r1; //@line 3358 "src/sprites/../puun/gf/../../other/stb_image.h"
       $278 = (($277) + 8|0); //@line 3358 "src/sprites/../puun/gf/../../other/stb_image.h"
       $279 = HEAP32[$278>>2]|0; //@line 3358 "src/sprites/../puun/gf/../../other/stb_image.h"
       $280 = (($279) + ($276)|0); //@line 3358 "src/sprites/../puun/gf/../../other/stb_image.h"
       HEAP32[$278>>2] = $280; //@line 3358 "src/sprites/../puun/gf/../../other/stb_image.h"
      }
     }
     $281 = $k; //@line 3347 "src/sprites/../puun/gf/../../other/stb_image.h"
     $282 = (($281) + 1)|0; //@line 3347 "src/sprites/../puun/gf/../../other/stb_image.h"
     $k = $282; //@line 3347 "src/sprites/../puun/gf/../../other/stb_image.h"
    }
    $283 = $n; //@line 3361 "src/sprites/../puun/gf/../../other/stb_image.h"
    $284 = ($283|0)>=(3); //@line 3361 "src/sprites/../puun/gf/../../other/stb_image.h"
    if ($284) {
     $285 = HEAP32[$coutput>>2]|0; //@line 3362 "src/sprites/../puun/gf/../../other/stb_image.h"
     $y = $285; //@line 3362 "src/sprites/../puun/gf/../../other/stb_image.h"
     $286 = $1; //@line 3363 "src/sprites/../puun/gf/../../other/stb_image.h"
     $287 = HEAP32[$286>>2]|0; //@line 3363 "src/sprites/../puun/gf/../../other/stb_image.h"
     $288 = (($287) + 8|0); //@line 3363 "src/sprites/../puun/gf/../../other/stb_image.h"
     $289 = HEAP32[$288>>2]|0; //@line 3363 "src/sprites/../puun/gf/../../other/stb_image.h"
     $290 = ($289|0)==(3); //@line 3363 "src/sprites/../puun/gf/../../other/stb_image.h"
     if ($290) {
      $291 = $1; //@line 3364 "src/sprites/../puun/gf/../../other/stb_image.h"
      $292 = (($291) + 18180|0); //@line 3364 "src/sprites/../puun/gf/../../other/stb_image.h"
      $293 = HEAP32[$292>>2]|0; //@line 3364 "src/sprites/../puun/gf/../../other/stb_image.h"
      $294 = $out; //@line 3364 "src/sprites/../puun/gf/../../other/stb_image.h"
      $295 = $y; //@line 3364 "src/sprites/../puun/gf/../../other/stb_image.h"
      $296 = (($coutput) + 4|0); //@line 3364 "src/sprites/../puun/gf/../../other/stb_image.h"
      $297 = HEAP32[$296>>2]|0; //@line 3364 "src/sprites/../puun/gf/../../other/stb_image.h"
      $298 = (($coutput) + 8|0); //@line 3364 "src/sprites/../puun/gf/../../other/stb_image.h"
      $299 = HEAP32[$298>>2]|0; //@line 3364 "src/sprites/../puun/gf/../../other/stb_image.h"
      $300 = $1; //@line 3364 "src/sprites/../puun/gf/../../other/stb_image.h"
      $301 = HEAP32[$300>>2]|0; //@line 3364 "src/sprites/../puun/gf/../../other/stb_image.h"
      $302 = HEAP32[$301>>2]|0; //@line 3364 "src/sprites/../puun/gf/../../other/stb_image.h"
      $303 = $n; //@line 3364 "src/sprites/../puun/gf/../../other/stb_image.h"
      FUNCTION_TABLE_viiiiii[$293 & 15]($294,$295,$297,$299,$302,$303); //@line 3364 "src/sprites/../puun/gf/../../other/stb_image.h"
     } else {
      $i = 0; //@line 3366 "src/sprites/../puun/gf/../../other/stb_image.h"
      while(1) {
       $304 = $i; //@line 3366 "src/sprites/../puun/gf/../../other/stb_image.h"
       $305 = $1; //@line 3366 "src/sprites/../puun/gf/../../other/stb_image.h"
       $306 = HEAP32[$305>>2]|0; //@line 3366 "src/sprites/../puun/gf/../../other/stb_image.h"
       $307 = HEAP32[$306>>2]|0; //@line 3366 "src/sprites/../puun/gf/../../other/stb_image.h"
       $308 = ($304>>>0)<($307>>>0); //@line 3366 "src/sprites/../puun/gf/../../other/stb_image.h"
       if (!($308)) {
        break;
       }
       $309 = $i; //@line 3367 "src/sprites/../puun/gf/../../other/stb_image.h"
       $310 = $y; //@line 3367 "src/sprites/../puun/gf/../../other/stb_image.h"
       $311 = (($310) + ($309)|0); //@line 3367 "src/sprites/../puun/gf/../../other/stb_image.h"
       $312 = HEAP8[$311>>0]|0; //@line 3367 "src/sprites/../puun/gf/../../other/stb_image.h"
       $313 = $out; //@line 3367 "src/sprites/../puun/gf/../../other/stb_image.h"
       $314 = (($313) + 2|0); //@line 3367 "src/sprites/../puun/gf/../../other/stb_image.h"
       HEAP8[$314>>0] = $312; //@line 3367 "src/sprites/../puun/gf/../../other/stb_image.h"
       $315 = $out; //@line 3367 "src/sprites/../puun/gf/../../other/stb_image.h"
       $316 = (($315) + 1|0); //@line 3367 "src/sprites/../puun/gf/../../other/stb_image.h"
       HEAP8[$316>>0] = $312; //@line 3367 "src/sprites/../puun/gf/../../other/stb_image.h"
       $317 = $out; //@line 3367 "src/sprites/../puun/gf/../../other/stb_image.h"
       HEAP8[$317>>0] = $312; //@line 3367 "src/sprites/../puun/gf/../../other/stb_image.h"
       $318 = $out; //@line 3368 "src/sprites/../puun/gf/../../other/stb_image.h"
       $319 = (($318) + 3|0); //@line 3368 "src/sprites/../puun/gf/../../other/stb_image.h"
       HEAP8[$319>>0] = -1; //@line 3368 "src/sprites/../puun/gf/../../other/stb_image.h"
       $320 = $n; //@line 3369 "src/sprites/../puun/gf/../../other/stb_image.h"
       $321 = $out; //@line 3369 "src/sprites/../puun/gf/../../other/stb_image.h"
       $322 = (($321) + ($320)|0); //@line 3369 "src/sprites/../puun/gf/../../other/stb_image.h"
       $out = $322; //@line 3369 "src/sprites/../puun/gf/../../other/stb_image.h"
       $323 = $i; //@line 3366 "src/sprites/../puun/gf/../../other/stb_image.h"
       $324 = (($323) + 1)|0; //@line 3366 "src/sprites/../puun/gf/../../other/stb_image.h"
       $i = $324; //@line 3366 "src/sprites/../puun/gf/../../other/stb_image.h"
      }
     }
    } else {
     $325 = HEAP32[$coutput>>2]|0; //@line 3372 "src/sprites/../puun/gf/../../other/stb_image.h"
     $y2 = $325; //@line 3372 "src/sprites/../puun/gf/../../other/stb_image.h"
     $326 = $n; //@line 3373 "src/sprites/../puun/gf/../../other/stb_image.h"
     $327 = ($326|0)==(1); //@line 3373 "src/sprites/../puun/gf/../../other/stb_image.h"
     if ($327) {
      $i = 0; //@line 3374 "src/sprites/../puun/gf/../../other/stb_image.h"
      while(1) {
       $328 = $i; //@line 3374 "src/sprites/../puun/gf/../../other/stb_image.h"
       $329 = $1; //@line 3374 "src/sprites/../puun/gf/../../other/stb_image.h"
       $330 = HEAP32[$329>>2]|0; //@line 3374 "src/sprites/../puun/gf/../../other/stb_image.h"
       $331 = HEAP32[$330>>2]|0; //@line 3374 "src/sprites/../puun/gf/../../other/stb_image.h"
       $332 = ($328>>>0)<($331>>>0); //@line 3374 "src/sprites/../puun/gf/../../other/stb_image.h"
       if (!($332)) {
        break;
       }
       $333 = $i; //@line 3374 "src/sprites/../puun/gf/../../other/stb_image.h"
       $334 = $y2; //@line 3374 "src/sprites/../puun/gf/../../other/stb_image.h"
       $335 = (($334) + ($333)|0); //@line 3374 "src/sprites/../puun/gf/../../other/stb_image.h"
       $336 = HEAP8[$335>>0]|0; //@line 3374 "src/sprites/../puun/gf/../../other/stb_image.h"
       $337 = $i; //@line 3374 "src/sprites/../puun/gf/../../other/stb_image.h"
       $338 = $out; //@line 3374 "src/sprites/../puun/gf/../../other/stb_image.h"
       $339 = (($338) + ($337)|0); //@line 3374 "src/sprites/../puun/gf/../../other/stb_image.h"
       HEAP8[$339>>0] = $336; //@line 3374 "src/sprites/../puun/gf/../../other/stb_image.h"
       $340 = $i; //@line 3374 "src/sprites/../puun/gf/../../other/stb_image.h"
       $341 = (($340) + 1)|0; //@line 3374 "src/sprites/../puun/gf/../../other/stb_image.h"
       $i = $341; //@line 3374 "src/sprites/../puun/gf/../../other/stb_image.h"
      }
     } else {
      $i = 0; //@line 3376 "src/sprites/../puun/gf/../../other/stb_image.h"
      while(1) {
       $342 = $i; //@line 3376 "src/sprites/../puun/gf/../../other/stb_image.h"
       $343 = $1; //@line 3376 "src/sprites/../puun/gf/../../other/stb_image.h"
       $344 = HEAP32[$343>>2]|0; //@line 3376 "src/sprites/../puun/gf/../../other/stb_image.h"
       $345 = HEAP32[$344>>2]|0; //@line 3376 "src/sprites/../puun/gf/../../other/stb_image.h"
       $346 = ($342>>>0)<($345>>>0); //@line 3376 "src/sprites/../puun/gf/../../other/stb_image.h"
       if (!($346)) {
        break;
       }
       $347 = $i; //@line 3376 "src/sprites/../puun/gf/../../other/stb_image.h"
       $348 = $y2; //@line 3376 "src/sprites/../puun/gf/../../other/stb_image.h"
       $349 = (($348) + ($347)|0); //@line 3376 "src/sprites/../puun/gf/../../other/stb_image.h"
       $350 = HEAP8[$349>>0]|0; //@line 3376 "src/sprites/../puun/gf/../../other/stb_image.h"
       $351 = $out; //@line 3376 "src/sprites/../puun/gf/../../other/stb_image.h"
       $352 = (($351) + 1|0); //@line 3376 "src/sprites/../puun/gf/../../other/stb_image.h"
       $out = $352; //@line 3376 "src/sprites/../puun/gf/../../other/stb_image.h"
       HEAP8[$351>>0] = $350; //@line 3376 "src/sprites/../puun/gf/../../other/stb_image.h"
       $353 = $out; //@line 3376 "src/sprites/../puun/gf/../../other/stb_image.h"
       $354 = (($353) + 1|0); //@line 3376 "src/sprites/../puun/gf/../../other/stb_image.h"
       $out = $354; //@line 3376 "src/sprites/../puun/gf/../../other/stb_image.h"
       HEAP8[$353>>0] = -1; //@line 3376 "src/sprites/../puun/gf/../../other/stb_image.h"
       $355 = $i; //@line 3376 "src/sprites/../puun/gf/../../other/stb_image.h"
       $356 = (($355) + 1)|0; //@line 3376 "src/sprites/../puun/gf/../../other/stb_image.h"
       $i = $356; //@line 3376 "src/sprites/../puun/gf/../../other/stb_image.h"
      }
     }
    }
    $357 = $j; //@line 3345 "src/sprites/../puun/gf/../../other/stb_image.h"
    $358 = (($357) + 1)|0; //@line 3345 "src/sprites/../puun/gf/../../other/stb_image.h"
    $j = $358; //@line 3345 "src/sprites/../puun/gf/../../other/stb_image.h"
   }
   $359 = $1; //@line 3379 "src/sprites/../puun/gf/../../other/stb_image.h"
   _stbi__cleanup_jpeg($359); //@line 3379 "src/sprites/../puun/gf/../../other/stb_image.h"
   $360 = $1; //@line 3380 "src/sprites/../puun/gf/../../other/stb_image.h"
   $361 = HEAP32[$360>>2]|0; //@line 3380 "src/sprites/../puun/gf/../../other/stb_image.h"
   $362 = HEAP32[$361>>2]|0; //@line 3380 "src/sprites/../puun/gf/../../other/stb_image.h"
   $363 = $2; //@line 3380 "src/sprites/../puun/gf/../../other/stb_image.h"
   HEAP32[$363>>2] = $362; //@line 3380 "src/sprites/../puun/gf/../../other/stb_image.h"
   $364 = $1; //@line 3381 "src/sprites/../puun/gf/../../other/stb_image.h"
   $365 = HEAP32[$364>>2]|0; //@line 3381 "src/sprites/../puun/gf/../../other/stb_image.h"
   $366 = (($365) + 4|0); //@line 3381 "src/sprites/../puun/gf/../../other/stb_image.h"
   $367 = HEAP32[$366>>2]|0; //@line 3381 "src/sprites/../puun/gf/../../other/stb_image.h"
   $368 = $3; //@line 3381 "src/sprites/../puun/gf/../../other/stb_image.h"
   HEAP32[$368>>2] = $367; //@line 3381 "src/sprites/../puun/gf/../../other/stb_image.h"
   $369 = $4; //@line 3382 "src/sprites/../puun/gf/../../other/stb_image.h"
   $370 = ($369|0)!=(0|0); //@line 3382 "src/sprites/../puun/gf/../../other/stb_image.h"
   if ($370) {
    $371 = $1; //@line 3382 "src/sprites/../puun/gf/../../other/stb_image.h"
    $372 = HEAP32[$371>>2]|0; //@line 3382 "src/sprites/../puun/gf/../../other/stb_image.h"
    $373 = (($372) + 8|0); //@line 3382 "src/sprites/../puun/gf/../../other/stb_image.h"
    $374 = HEAP32[$373>>2]|0; //@line 3382 "src/sprites/../puun/gf/../../other/stb_image.h"
    $375 = $4; //@line 3382 "src/sprites/../puun/gf/../../other/stb_image.h"
    HEAP32[$375>>2] = $374; //@line 3382 "src/sprites/../puun/gf/../../other/stb_image.h"
   }
   $376 = $output; //@line 3383 "src/sprites/../puun/gf/../../other/stb_image.h"
   $0 = $376; //@line 3383 "src/sprites/../puun/gf/../../other/stb_image.h"
   $377 = $0; //@line 3385 "src/sprites/../puun/gf/../../other/stb_image.h"
   STACKTOP = sp;return ($377|0); //@line 3385 "src/sprites/../puun/gf/../../other/stb_image.h"
  }
 }
 $13 = (_stbi__err(10232)|0); //@line 3296 "src/sprites/../puun/gf/../../other/stb_image.h"
 $14 = ($13|0)!=(0); //@line 3296 "src/sprites/../puun/gf/../../other/stb_image.h"
 $15 = $14 ? 0 : 0; //@line 3296 "src/sprites/../puun/gf/../../other/stb_image.h"
 $0 = $15; //@line 3296 "src/sprites/../puun/gf/../../other/stb_image.h"
 $377 = $0; //@line 3385 "src/sprites/../puun/gf/../../other/stb_image.h"
 STACKTOP = sp;return ($377|0); //@line 3385 "src/sprites/../puun/gf/../../other/stb_image.h"
}
function _stbi__resample_row_generic($out,$in_near,$in_far,$w,$hs) {
 $out = $out|0;
 $in_near = $in_near|0;
 $in_far = $in_far|0;
 $w = $w|0;
 $hs = $hs|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $i = 0, $j = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $out;
 $1 = $in_near;
 $2 = $in_far;
 $3 = $w;
 $4 = $hs;
 $i = 0; //@line 3033 "src/sprites/../puun/gf/../../other/stb_image.h"
 while(1) {
  $5 = $i; //@line 3033 "src/sprites/../puun/gf/../../other/stb_image.h"
  $6 = $3; //@line 3033 "src/sprites/../puun/gf/../../other/stb_image.h"
  $7 = ($5|0)<($6|0); //@line 3033 "src/sprites/../puun/gf/../../other/stb_image.h"
  if (!($7)) {
   break;
  }
  $j = 0; //@line 3034 "src/sprites/../puun/gf/../../other/stb_image.h"
  while(1) {
   $8 = $j; //@line 3034 "src/sprites/../puun/gf/../../other/stb_image.h"
   $9 = $4; //@line 3034 "src/sprites/../puun/gf/../../other/stb_image.h"
   $10 = ($8|0)<($9|0); //@line 3034 "src/sprites/../puun/gf/../../other/stb_image.h"
   if (!($10)) {
    break;
   }
   $11 = $i; //@line 3035 "src/sprites/../puun/gf/../../other/stb_image.h"
   $12 = $1; //@line 3035 "src/sprites/../puun/gf/../../other/stb_image.h"
   $13 = (($12) + ($11)|0); //@line 3035 "src/sprites/../puun/gf/../../other/stb_image.h"
   $14 = HEAP8[$13>>0]|0; //@line 3035 "src/sprites/../puun/gf/../../other/stb_image.h"
   $15 = $i; //@line 3035 "src/sprites/../puun/gf/../../other/stb_image.h"
   $16 = $4; //@line 3035 "src/sprites/../puun/gf/../../other/stb_image.h"
   $17 = Math_imul($15, $16)|0; //@line 3035 "src/sprites/../puun/gf/../../other/stb_image.h"
   $18 = $j; //@line 3035 "src/sprites/../puun/gf/../../other/stb_image.h"
   $19 = (($17) + ($18))|0; //@line 3035 "src/sprites/../puun/gf/../../other/stb_image.h"
   $20 = $0; //@line 3035 "src/sprites/../puun/gf/../../other/stb_image.h"
   $21 = (($20) + ($19)|0); //@line 3035 "src/sprites/../puun/gf/../../other/stb_image.h"
   HEAP8[$21>>0] = $14; //@line 3035 "src/sprites/../puun/gf/../../other/stb_image.h"
   $22 = $j; //@line 3034 "src/sprites/../puun/gf/../../other/stb_image.h"
   $23 = (($22) + 1)|0; //@line 3034 "src/sprites/../puun/gf/../../other/stb_image.h"
   $j = $23; //@line 3034 "src/sprites/../puun/gf/../../other/stb_image.h"
  }
  $24 = $i; //@line 3033 "src/sprites/../puun/gf/../../other/stb_image.h"
  $25 = (($24) + 1)|0; //@line 3033 "src/sprites/../puun/gf/../../other/stb_image.h"
  $i = $25; //@line 3033 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $26 = $0; //@line 3036 "src/sprites/../puun/gf/../../other/stb_image.h"
 STACKTOP = sp;return ($26|0); //@line 3036 "src/sprites/../puun/gf/../../other/stb_image.h"
}
function _stbi__resample_row_h_2($out,$in_near,$in_far,$w,$hs) {
 $out = $out|0;
 $in_near = $in_near|0;
 $in_far = $in_far|0;
 $w = $w|0;
 $hs = $hs|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0;
 var $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0;
 var $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0;
 var $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0;
 var $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $i = 0, $input = 0, $n = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $out;
 $2 = $in_near;
 $3 = $in_far;
 $4 = $w;
 $5 = $hs;
 $6 = $2; //@line 2861 "src/sprites/../puun/gf/../../other/stb_image.h"
 $input = $6; //@line 2861 "src/sprites/../puun/gf/../../other/stb_image.h"
 $7 = $4; //@line 2863 "src/sprites/../puun/gf/../../other/stb_image.h"
 $8 = ($7|0)==(1); //@line 2863 "src/sprites/../puun/gf/../../other/stb_image.h"
 if ($8) {
  $9 = $input; //@line 2865 "src/sprites/../puun/gf/../../other/stb_image.h"
  $10 = HEAP8[$9>>0]|0; //@line 2865 "src/sprites/../puun/gf/../../other/stb_image.h"
  $11 = $1; //@line 2865 "src/sprites/../puun/gf/../../other/stb_image.h"
  $12 = (($11) + 1|0); //@line 2865 "src/sprites/../puun/gf/../../other/stb_image.h"
  HEAP8[$12>>0] = $10; //@line 2865 "src/sprites/../puun/gf/../../other/stb_image.h"
  $13 = $1; //@line 2865 "src/sprites/../puun/gf/../../other/stb_image.h"
  HEAP8[$13>>0] = $10; //@line 2865 "src/sprites/../puun/gf/../../other/stb_image.h"
  $14 = $1; //@line 2866 "src/sprites/../puun/gf/../../other/stb_image.h"
  $0 = $14; //@line 2866 "src/sprites/../puun/gf/../../other/stb_image.h"
  $108 = $0; //@line 2883 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($108|0); //@line 2883 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $15 = $input; //@line 2869 "src/sprites/../puun/gf/../../other/stb_image.h"
 $16 = HEAP8[$15>>0]|0; //@line 2869 "src/sprites/../puun/gf/../../other/stb_image.h"
 $17 = $1; //@line 2869 "src/sprites/../puun/gf/../../other/stb_image.h"
 HEAP8[$17>>0] = $16; //@line 2869 "src/sprites/../puun/gf/../../other/stb_image.h"
 $18 = $input; //@line 2870 "src/sprites/../puun/gf/../../other/stb_image.h"
 $19 = HEAP8[$18>>0]|0; //@line 2870 "src/sprites/../puun/gf/../../other/stb_image.h"
 $20 = $19&255; //@line 2870 "src/sprites/../puun/gf/../../other/stb_image.h"
 $21 = ($20*3)|0; //@line 2870 "src/sprites/../puun/gf/../../other/stb_image.h"
 $22 = $input; //@line 2870 "src/sprites/../puun/gf/../../other/stb_image.h"
 $23 = (($22) + 1|0); //@line 2870 "src/sprites/../puun/gf/../../other/stb_image.h"
 $24 = HEAP8[$23>>0]|0; //@line 2870 "src/sprites/../puun/gf/../../other/stb_image.h"
 $25 = $24&255; //@line 2870 "src/sprites/../puun/gf/../../other/stb_image.h"
 $26 = (($21) + ($25))|0; //@line 2870 "src/sprites/../puun/gf/../../other/stb_image.h"
 $27 = (($26) + 2)|0; //@line 2870 "src/sprites/../puun/gf/../../other/stb_image.h"
 $28 = $27 >> 2; //@line 2870 "src/sprites/../puun/gf/../../other/stb_image.h"
 $29 = $28&255; //@line 2870 "src/sprites/../puun/gf/../../other/stb_image.h"
 $30 = $1; //@line 2870 "src/sprites/../puun/gf/../../other/stb_image.h"
 $31 = (($30) + 1|0); //@line 2870 "src/sprites/../puun/gf/../../other/stb_image.h"
 HEAP8[$31>>0] = $29; //@line 2870 "src/sprites/../puun/gf/../../other/stb_image.h"
 $i = 1; //@line 2871 "src/sprites/../puun/gf/../../other/stb_image.h"
 while(1) {
  $32 = $i; //@line 2871 "src/sprites/../puun/gf/../../other/stb_image.h"
  $33 = $4; //@line 2871 "src/sprites/../puun/gf/../../other/stb_image.h"
  $34 = (($33) - 1)|0; //@line 2871 "src/sprites/../puun/gf/../../other/stb_image.h"
  $35 = ($32|0)<($34|0); //@line 2871 "src/sprites/../puun/gf/../../other/stb_image.h"
  if (!($35)) {
   break;
  }
  $36 = $i; //@line 2872 "src/sprites/../puun/gf/../../other/stb_image.h"
  $37 = $input; //@line 2872 "src/sprites/../puun/gf/../../other/stb_image.h"
  $38 = (($37) + ($36)|0); //@line 2872 "src/sprites/../puun/gf/../../other/stb_image.h"
  $39 = HEAP8[$38>>0]|0; //@line 2872 "src/sprites/../puun/gf/../../other/stb_image.h"
  $40 = $39&255; //@line 2872 "src/sprites/../puun/gf/../../other/stb_image.h"
  $41 = ($40*3)|0; //@line 2872 "src/sprites/../puun/gf/../../other/stb_image.h"
  $42 = (($41) + 2)|0; //@line 2872 "src/sprites/../puun/gf/../../other/stb_image.h"
  $n = $42; //@line 2872 "src/sprites/../puun/gf/../../other/stb_image.h"
  $43 = $n; //@line 2873 "src/sprites/../puun/gf/../../other/stb_image.h"
  $44 = $i; //@line 2873 "src/sprites/../puun/gf/../../other/stb_image.h"
  $45 = (($44) - 1)|0; //@line 2873 "src/sprites/../puun/gf/../../other/stb_image.h"
  $46 = $input; //@line 2873 "src/sprites/../puun/gf/../../other/stb_image.h"
  $47 = (($46) + ($45)|0); //@line 2873 "src/sprites/../puun/gf/../../other/stb_image.h"
  $48 = HEAP8[$47>>0]|0; //@line 2873 "src/sprites/../puun/gf/../../other/stb_image.h"
  $49 = $48&255; //@line 2873 "src/sprites/../puun/gf/../../other/stb_image.h"
  $50 = (($43) + ($49))|0; //@line 2873 "src/sprites/../puun/gf/../../other/stb_image.h"
  $51 = $50 >> 2; //@line 2873 "src/sprites/../puun/gf/../../other/stb_image.h"
  $52 = $51&255; //@line 2873 "src/sprites/../puun/gf/../../other/stb_image.h"
  $53 = $i; //@line 2873 "src/sprites/../puun/gf/../../other/stb_image.h"
  $54 = $53<<1; //@line 2873 "src/sprites/../puun/gf/../../other/stb_image.h"
  $55 = (($54) + 0)|0; //@line 2873 "src/sprites/../puun/gf/../../other/stb_image.h"
  $56 = $1; //@line 2873 "src/sprites/../puun/gf/../../other/stb_image.h"
  $57 = (($56) + ($55)|0); //@line 2873 "src/sprites/../puun/gf/../../other/stb_image.h"
  HEAP8[$57>>0] = $52; //@line 2873 "src/sprites/../puun/gf/../../other/stb_image.h"
  $58 = $n; //@line 2874 "src/sprites/../puun/gf/../../other/stb_image.h"
  $59 = $i; //@line 2874 "src/sprites/../puun/gf/../../other/stb_image.h"
  $60 = (($59) + 1)|0; //@line 2874 "src/sprites/../puun/gf/../../other/stb_image.h"
  $61 = $input; //@line 2874 "src/sprites/../puun/gf/../../other/stb_image.h"
  $62 = (($61) + ($60)|0); //@line 2874 "src/sprites/../puun/gf/../../other/stb_image.h"
  $63 = HEAP8[$62>>0]|0; //@line 2874 "src/sprites/../puun/gf/../../other/stb_image.h"
  $64 = $63&255; //@line 2874 "src/sprites/../puun/gf/../../other/stb_image.h"
  $65 = (($58) + ($64))|0; //@line 2874 "src/sprites/../puun/gf/../../other/stb_image.h"
  $66 = $65 >> 2; //@line 2874 "src/sprites/../puun/gf/../../other/stb_image.h"
  $67 = $66&255; //@line 2874 "src/sprites/../puun/gf/../../other/stb_image.h"
  $68 = $i; //@line 2874 "src/sprites/../puun/gf/../../other/stb_image.h"
  $69 = $68<<1; //@line 2874 "src/sprites/../puun/gf/../../other/stb_image.h"
  $70 = (($69) + 1)|0; //@line 2874 "src/sprites/../puun/gf/../../other/stb_image.h"
  $71 = $1; //@line 2874 "src/sprites/../puun/gf/../../other/stb_image.h"
  $72 = (($71) + ($70)|0); //@line 2874 "src/sprites/../puun/gf/../../other/stb_image.h"
  HEAP8[$72>>0] = $67; //@line 2874 "src/sprites/../puun/gf/../../other/stb_image.h"
  $73 = $i; //@line 2871 "src/sprites/../puun/gf/../../other/stb_image.h"
  $74 = (($73) + 1)|0; //@line 2871 "src/sprites/../puun/gf/../../other/stb_image.h"
  $i = $74; //@line 2871 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $75 = $4; //@line 2876 "src/sprites/../puun/gf/../../other/stb_image.h"
 $76 = (($75) - 2)|0; //@line 2876 "src/sprites/../puun/gf/../../other/stb_image.h"
 $77 = $input; //@line 2876 "src/sprites/../puun/gf/../../other/stb_image.h"
 $78 = (($77) + ($76)|0); //@line 2876 "src/sprites/../puun/gf/../../other/stb_image.h"
 $79 = HEAP8[$78>>0]|0; //@line 2876 "src/sprites/../puun/gf/../../other/stb_image.h"
 $80 = $79&255; //@line 2876 "src/sprites/../puun/gf/../../other/stb_image.h"
 $81 = ($80*3)|0; //@line 2876 "src/sprites/../puun/gf/../../other/stb_image.h"
 $82 = $4; //@line 2876 "src/sprites/../puun/gf/../../other/stb_image.h"
 $83 = (($82) - 1)|0; //@line 2876 "src/sprites/../puun/gf/../../other/stb_image.h"
 $84 = $input; //@line 2876 "src/sprites/../puun/gf/../../other/stb_image.h"
 $85 = (($84) + ($83)|0); //@line 2876 "src/sprites/../puun/gf/../../other/stb_image.h"
 $86 = HEAP8[$85>>0]|0; //@line 2876 "src/sprites/../puun/gf/../../other/stb_image.h"
 $87 = $86&255; //@line 2876 "src/sprites/../puun/gf/../../other/stb_image.h"
 $88 = (($81) + ($87))|0; //@line 2876 "src/sprites/../puun/gf/../../other/stb_image.h"
 $89 = (($88) + 2)|0; //@line 2876 "src/sprites/../puun/gf/../../other/stb_image.h"
 $90 = $89 >> 2; //@line 2876 "src/sprites/../puun/gf/../../other/stb_image.h"
 $91 = $90&255; //@line 2876 "src/sprites/../puun/gf/../../other/stb_image.h"
 $92 = $i; //@line 2876 "src/sprites/../puun/gf/../../other/stb_image.h"
 $93 = $92<<1; //@line 2876 "src/sprites/../puun/gf/../../other/stb_image.h"
 $94 = (($93) + 0)|0; //@line 2876 "src/sprites/../puun/gf/../../other/stb_image.h"
 $95 = $1; //@line 2876 "src/sprites/../puun/gf/../../other/stb_image.h"
 $96 = (($95) + ($94)|0); //@line 2876 "src/sprites/../puun/gf/../../other/stb_image.h"
 HEAP8[$96>>0] = $91; //@line 2876 "src/sprites/../puun/gf/../../other/stb_image.h"
 $97 = $4; //@line 2877 "src/sprites/../puun/gf/../../other/stb_image.h"
 $98 = (($97) - 1)|0; //@line 2877 "src/sprites/../puun/gf/../../other/stb_image.h"
 $99 = $input; //@line 2877 "src/sprites/../puun/gf/../../other/stb_image.h"
 $100 = (($99) + ($98)|0); //@line 2877 "src/sprites/../puun/gf/../../other/stb_image.h"
 $101 = HEAP8[$100>>0]|0; //@line 2877 "src/sprites/../puun/gf/../../other/stb_image.h"
 $102 = $i; //@line 2877 "src/sprites/../puun/gf/../../other/stb_image.h"
 $103 = $102<<1; //@line 2877 "src/sprites/../puun/gf/../../other/stb_image.h"
 $104 = (($103) + 1)|0; //@line 2877 "src/sprites/../puun/gf/../../other/stb_image.h"
 $105 = $1; //@line 2877 "src/sprites/../puun/gf/../../other/stb_image.h"
 $106 = (($105) + ($104)|0); //@line 2877 "src/sprites/../puun/gf/../../other/stb_image.h"
 HEAP8[$106>>0] = $101; //@line 2877 "src/sprites/../puun/gf/../../other/stb_image.h"
 $107 = $1; //@line 2882 "src/sprites/../puun/gf/../../other/stb_image.h"
 $0 = $107; //@line 2882 "src/sprites/../puun/gf/../../other/stb_image.h"
 $108 = $0; //@line 2883 "src/sprites/../puun/gf/../../other/stb_image.h"
 STACKTOP = sp;return ($108|0); //@line 2883 "src/sprites/../puun/gf/../../other/stb_image.h"
}
function _stbi__resample_row_v_2($out,$in_near,$in_far,$w,$hs) {
 $out = $out|0;
 $in_near = $in_near|0;
 $in_far = $in_far|0;
 $w = $w|0;
 $hs = $hs|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $out;
 $1 = $in_near;
 $2 = $in_far;
 $3 = $w;
 $4 = $hs;
 $i = 0; //@line 2852 "src/sprites/../puun/gf/../../other/stb_image.h"
 while(1) {
  $5 = $i; //@line 2852 "src/sprites/../puun/gf/../../other/stb_image.h"
  $6 = $3; //@line 2852 "src/sprites/../puun/gf/../../other/stb_image.h"
  $7 = ($5|0)<($6|0); //@line 2852 "src/sprites/../puun/gf/../../other/stb_image.h"
  if (!($7)) {
   break;
  }
  $8 = $i; //@line 2853 "src/sprites/../puun/gf/../../other/stb_image.h"
  $9 = $1; //@line 2853 "src/sprites/../puun/gf/../../other/stb_image.h"
  $10 = (($9) + ($8)|0); //@line 2853 "src/sprites/../puun/gf/../../other/stb_image.h"
  $11 = HEAP8[$10>>0]|0; //@line 2853 "src/sprites/../puun/gf/../../other/stb_image.h"
  $12 = $11&255; //@line 2853 "src/sprites/../puun/gf/../../other/stb_image.h"
  $13 = ($12*3)|0; //@line 2853 "src/sprites/../puun/gf/../../other/stb_image.h"
  $14 = $i; //@line 2853 "src/sprites/../puun/gf/../../other/stb_image.h"
  $15 = $2; //@line 2853 "src/sprites/../puun/gf/../../other/stb_image.h"
  $16 = (($15) + ($14)|0); //@line 2853 "src/sprites/../puun/gf/../../other/stb_image.h"
  $17 = HEAP8[$16>>0]|0; //@line 2853 "src/sprites/../puun/gf/../../other/stb_image.h"
  $18 = $17&255; //@line 2853 "src/sprites/../puun/gf/../../other/stb_image.h"
  $19 = (($13) + ($18))|0; //@line 2853 "src/sprites/../puun/gf/../../other/stb_image.h"
  $20 = (($19) + 2)|0; //@line 2853 "src/sprites/../puun/gf/../../other/stb_image.h"
  $21 = $20 >> 2; //@line 2853 "src/sprites/../puun/gf/../../other/stb_image.h"
  $22 = $21&255; //@line 2853 "src/sprites/../puun/gf/../../other/stb_image.h"
  $23 = $i; //@line 2853 "src/sprites/../puun/gf/../../other/stb_image.h"
  $24 = $0; //@line 2853 "src/sprites/../puun/gf/../../other/stb_image.h"
  $25 = (($24) + ($23)|0); //@line 2853 "src/sprites/../puun/gf/../../other/stb_image.h"
  HEAP8[$25>>0] = $22; //@line 2853 "src/sprites/../puun/gf/../../other/stb_image.h"
  $26 = $i; //@line 2852 "src/sprites/../puun/gf/../../other/stb_image.h"
  $27 = (($26) + 1)|0; //@line 2852 "src/sprites/../puun/gf/../../other/stb_image.h"
  $i = $27; //@line 2852 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $28 = $0; //@line 2854 "src/sprites/../puun/gf/../../other/stb_image.h"
 STACKTOP = sp;return ($28|0); //@line 2854 "src/sprites/../puun/gf/../../other/stb_image.h"
}
function _resample_row_1($out,$in_near,$in_far,$w,$hs) {
 $out = $out|0;
 $in_near = $in_near|0;
 $in_far = $in_far|0;
 $w = $w|0;
 $hs = $hs|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $out;
 $1 = $in_near;
 $2 = $in_far;
 $3 = $w;
 $4 = $hs;
 $5 = $1; //@line 2844 "src/sprites/../puun/gf/../../other/stb_image.h"
 STACKTOP = sp;return ($5|0); //@line 2844 "src/sprites/../puun/gf/../../other/stb_image.h"
}
function _stbi__cleanup_jpeg($j) {
 $j = $j|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $8 = 0, $9 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $j;
 $i = 0; //@line 3262 "src/sprites/../puun/gf/../../other/stb_image.h"
 while(1) {
  $1 = $i; //@line 3262 "src/sprites/../puun/gf/../../other/stb_image.h"
  $2 = $0; //@line 3262 "src/sprites/../puun/gf/../../other/stb_image.h"
  $3 = HEAP32[$2>>2]|0; //@line 3262 "src/sprites/../puun/gf/../../other/stb_image.h"
  $4 = (($3) + 8|0); //@line 3262 "src/sprites/../puun/gf/../../other/stb_image.h"
  $5 = HEAP32[$4>>2]|0; //@line 3262 "src/sprites/../puun/gf/../../other/stb_image.h"
  $6 = ($1|0)<($5|0); //@line 3262 "src/sprites/../puun/gf/../../other/stb_image.h"
  if (!($6)) {
   break;
  }
  $7 = $i; //@line 3263 "src/sprites/../puun/gf/../../other/stb_image.h"
  $8 = $0; //@line 3263 "src/sprites/../puun/gf/../../other/stb_image.h"
  $9 = (($8) + 17820|0); //@line 3263 "src/sprites/../puun/gf/../../other/stb_image.h"
  $10 = (($9) + (($7*72)|0)|0); //@line 3263 "src/sprites/../puun/gf/../../other/stb_image.h"
  $11 = (($10) + 48|0); //@line 3263 "src/sprites/../puun/gf/../../other/stb_image.h"
  $12 = HEAP32[$11>>2]|0; //@line 3263 "src/sprites/../puun/gf/../../other/stb_image.h"
  $13 = ($12|0)!=(0|0); //@line 3263 "src/sprites/../puun/gf/../../other/stb_image.h"
  if ($13) {
   $14 = $i; //@line 3264 "src/sprites/../puun/gf/../../other/stb_image.h"
   $15 = $0; //@line 3264 "src/sprites/../puun/gf/../../other/stb_image.h"
   $16 = (($15) + 17820|0); //@line 3264 "src/sprites/../puun/gf/../../other/stb_image.h"
   $17 = (($16) + (($14*72)|0)|0); //@line 3264 "src/sprites/../puun/gf/../../other/stb_image.h"
   $18 = (($17) + 48|0); //@line 3264 "src/sprites/../puun/gf/../../other/stb_image.h"
   $19 = HEAP32[$18>>2]|0; //@line 3264 "src/sprites/../puun/gf/../../other/stb_image.h"
   _free($19); //@line 3264 "src/sprites/../puun/gf/../../other/stb_image.h"
   $20 = $i; //@line 3265 "src/sprites/../puun/gf/../../other/stb_image.h"
   $21 = $0; //@line 3265 "src/sprites/../puun/gf/../../other/stb_image.h"
   $22 = (($21) + 17820|0); //@line 3265 "src/sprites/../puun/gf/../../other/stb_image.h"
   $23 = (($22) + (($20*72)|0)|0); //@line 3265 "src/sprites/../puun/gf/../../other/stb_image.h"
   $24 = (($23) + 48|0); //@line 3265 "src/sprites/../puun/gf/../../other/stb_image.h"
   HEAP32[$24>>2] = 0; //@line 3265 "src/sprites/../puun/gf/../../other/stb_image.h"
   $25 = $i; //@line 3266 "src/sprites/../puun/gf/../../other/stb_image.h"
   $26 = $0; //@line 3266 "src/sprites/../puun/gf/../../other/stb_image.h"
   $27 = (($26) + 17820|0); //@line 3266 "src/sprites/../puun/gf/../../other/stb_image.h"
   $28 = (($27) + (($25*72)|0)|0); //@line 3266 "src/sprites/../puun/gf/../../other/stb_image.h"
   $29 = (($28) + 44|0); //@line 3266 "src/sprites/../puun/gf/../../other/stb_image.h"
   HEAP32[$29>>2] = 0; //@line 3266 "src/sprites/../puun/gf/../../other/stb_image.h"
  }
  $30 = $i; //@line 3268 "src/sprites/../puun/gf/../../other/stb_image.h"
  $31 = $0; //@line 3268 "src/sprites/../puun/gf/../../other/stb_image.h"
  $32 = (($31) + 17820|0); //@line 3268 "src/sprites/../puun/gf/../../other/stb_image.h"
  $33 = (($32) + (($30*72)|0)|0); //@line 3268 "src/sprites/../puun/gf/../../other/stb_image.h"
  $34 = (($33) + 52|0); //@line 3268 "src/sprites/../puun/gf/../../other/stb_image.h"
  $35 = HEAP32[$34>>2]|0; //@line 3268 "src/sprites/../puun/gf/../../other/stb_image.h"
  $36 = ($35|0)!=(0|0); //@line 3268 "src/sprites/../puun/gf/../../other/stb_image.h"
  if ($36) {
   $37 = $i; //@line 3269 "src/sprites/../puun/gf/../../other/stb_image.h"
   $38 = $0; //@line 3269 "src/sprites/../puun/gf/../../other/stb_image.h"
   $39 = (($38) + 17820|0); //@line 3269 "src/sprites/../puun/gf/../../other/stb_image.h"
   $40 = (($39) + (($37*72)|0)|0); //@line 3269 "src/sprites/../puun/gf/../../other/stb_image.h"
   $41 = (($40) + 52|0); //@line 3269 "src/sprites/../puun/gf/../../other/stb_image.h"
   $42 = HEAP32[$41>>2]|0; //@line 3269 "src/sprites/../puun/gf/../../other/stb_image.h"
   _free($42); //@line 3269 "src/sprites/../puun/gf/../../other/stb_image.h"
   $43 = $i; //@line 3270 "src/sprites/../puun/gf/../../other/stb_image.h"
   $44 = $0; //@line 3270 "src/sprites/../puun/gf/../../other/stb_image.h"
   $45 = (($44) + 17820|0); //@line 3270 "src/sprites/../puun/gf/../../other/stb_image.h"
   $46 = (($45) + (($43*72)|0)|0); //@line 3270 "src/sprites/../puun/gf/../../other/stb_image.h"
   $47 = (($46) + 52|0); //@line 3270 "src/sprites/../puun/gf/../../other/stb_image.h"
   HEAP32[$47>>2] = 0; //@line 3270 "src/sprites/../puun/gf/../../other/stb_image.h"
   $48 = $i; //@line 3271 "src/sprites/../puun/gf/../../other/stb_image.h"
   $49 = $0; //@line 3271 "src/sprites/../puun/gf/../../other/stb_image.h"
   $50 = (($49) + 17820|0); //@line 3271 "src/sprites/../puun/gf/../../other/stb_image.h"
   $51 = (($50) + (($48*72)|0)|0); //@line 3271 "src/sprites/../puun/gf/../../other/stb_image.h"
   $52 = (($51) + 60|0); //@line 3271 "src/sprites/../puun/gf/../../other/stb_image.h"
   HEAP32[$52>>2] = 0; //@line 3271 "src/sprites/../puun/gf/../../other/stb_image.h"
  }
  $53 = $i; //@line 3273 "src/sprites/../puun/gf/../../other/stb_image.h"
  $54 = $0; //@line 3273 "src/sprites/../puun/gf/../../other/stb_image.h"
  $55 = (($54) + 17820|0); //@line 3273 "src/sprites/../puun/gf/../../other/stb_image.h"
  $56 = (($55) + (($53*72)|0)|0); //@line 3273 "src/sprites/../puun/gf/../../other/stb_image.h"
  $57 = (($56) + 56|0); //@line 3273 "src/sprites/../puun/gf/../../other/stb_image.h"
  $58 = HEAP32[$57>>2]|0; //@line 3273 "src/sprites/../puun/gf/../../other/stb_image.h"
  $59 = ($58|0)!=(0|0); //@line 3273 "src/sprites/../puun/gf/../../other/stb_image.h"
  if ($59) {
   $60 = $i; //@line 3274 "src/sprites/../puun/gf/../../other/stb_image.h"
   $61 = $0; //@line 3274 "src/sprites/../puun/gf/../../other/stb_image.h"
   $62 = (($61) + 17820|0); //@line 3274 "src/sprites/../puun/gf/../../other/stb_image.h"
   $63 = (($62) + (($60*72)|0)|0); //@line 3274 "src/sprites/../puun/gf/../../other/stb_image.h"
   $64 = (($63) + 56|0); //@line 3274 "src/sprites/../puun/gf/../../other/stb_image.h"
   $65 = HEAP32[$64>>2]|0; //@line 3274 "src/sprites/../puun/gf/../../other/stb_image.h"
   _free($65); //@line 3274 "src/sprites/../puun/gf/../../other/stb_image.h"
   $66 = $i; //@line 3275 "src/sprites/../puun/gf/../../other/stb_image.h"
   $67 = $0; //@line 3275 "src/sprites/../puun/gf/../../other/stb_image.h"
   $68 = (($67) + 17820|0); //@line 3275 "src/sprites/../puun/gf/../../other/stb_image.h"
   $69 = (($68) + (($66*72)|0)|0); //@line 3275 "src/sprites/../puun/gf/../../other/stb_image.h"
   $70 = (($69) + 56|0); //@line 3275 "src/sprites/../puun/gf/../../other/stb_image.h"
   HEAP32[$70>>2] = 0; //@line 3275 "src/sprites/../puun/gf/../../other/stb_image.h"
  }
  $71 = $i; //@line 3262 "src/sprites/../puun/gf/../../other/stb_image.h"
  $72 = (($71) + 1)|0; //@line 3262 "src/sprites/../puun/gf/../../other/stb_image.h"
  $i = $72; //@line 3262 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 STACKTOP = sp;return; //@line 3278 "src/sprites/../puun/gf/../../other/stb_image.h"
}
function _stbi__decode_jpeg_image($j) {
 $j = $j|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $8 = 0, $9 = 0, $m = 0, $x = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $j;
 $m = 0; //@line 2797 "src/sprites/../puun/gf/../../other/stb_image.h"
 while(1) {
  $2 = $m; //@line 2797 "src/sprites/../puun/gf/../../other/stb_image.h"
  $3 = ($2|0)<(4); //@line 2797 "src/sprites/../puun/gf/../../other/stb_image.h"
  if (!($3)) {
   break;
  }
  $4 = $m; //@line 2798 "src/sprites/../puun/gf/../../other/stb_image.h"
  $5 = $1; //@line 2798 "src/sprites/../puun/gf/../../other/stb_image.h"
  $6 = (($5) + 17820|0); //@line 2798 "src/sprites/../puun/gf/../../other/stb_image.h"
  $7 = (($6) + (($4*72)|0)|0); //@line 2798 "src/sprites/../puun/gf/../../other/stb_image.h"
  $8 = (($7) + 48|0); //@line 2798 "src/sprites/../puun/gf/../../other/stb_image.h"
  HEAP32[$8>>2] = 0; //@line 2798 "src/sprites/../puun/gf/../../other/stb_image.h"
  $9 = $m; //@line 2799 "src/sprites/../puun/gf/../../other/stb_image.h"
  $10 = $1; //@line 2799 "src/sprites/../puun/gf/../../other/stb_image.h"
  $11 = (($10) + 17820|0); //@line 2799 "src/sprites/../puun/gf/../../other/stb_image.h"
  $12 = (($11) + (($9*72)|0)|0); //@line 2799 "src/sprites/../puun/gf/../../other/stb_image.h"
  $13 = (($12) + 52|0); //@line 2799 "src/sprites/../puun/gf/../../other/stb_image.h"
  HEAP32[$13>>2] = 0; //@line 2799 "src/sprites/../puun/gf/../../other/stb_image.h"
  $14 = $m; //@line 2797 "src/sprites/../puun/gf/../../other/stb_image.h"
  $15 = (($14) + 1)|0; //@line 2797 "src/sprites/../puun/gf/../../other/stb_image.h"
  $m = $15; //@line 2797 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $16 = $1; //@line 2801 "src/sprites/../puun/gf/../../other/stb_image.h"
 $17 = (($16) + 18168|0); //@line 2801 "src/sprites/../puun/gf/../../other/stb_image.h"
 HEAP32[$17>>2] = 0; //@line 2801 "src/sprites/../puun/gf/../../other/stb_image.h"
 $18 = $1; //@line 2802 "src/sprites/../puun/gf/../../other/stb_image.h"
 $19 = (_stbi__decode_jpeg_header($18,0)|0); //@line 2802 "src/sprites/../puun/gf/../../other/stb_image.h"
 $20 = ($19|0)!=(0); //@line 2802 "src/sprites/../puun/gf/../../other/stb_image.h"
 if (!($20)) {
  $0 = 0; //@line 2802 "src/sprites/../puun/gf/../../other/stb_image.h"
  $71 = $0; //@line 2829 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($71|0); //@line 2829 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $21 = $1; //@line 2803 "src/sprites/../puun/gf/../../other/stb_image.h"
 $22 = (_stbi__get_marker($21)|0); //@line 2803 "src/sprites/../puun/gf/../../other/stb_image.h"
 $23 = $22&255; //@line 2803 "src/sprites/../puun/gf/../../other/stb_image.h"
 $m = $23; //@line 2803 "src/sprites/../puun/gf/../../other/stb_image.h"
 L10: while(1) {
  $24 = $m; //@line 2804 "src/sprites/../puun/gf/../../other/stb_image.h"
  $25 = ($24|0)==(217); //@line 2804 "src/sprites/../puun/gf/../../other/stb_image.h"
  $26 = $25 ^ 1; //@line 2804 "src/sprites/../puun/gf/../../other/stb_image.h"
  if (!($26)) {
   label = 29;
   break;
  }
  $27 = $m; //@line 2805 "src/sprites/../puun/gf/../../other/stb_image.h"
  $28 = ($27|0)==(218); //@line 2805 "src/sprites/../puun/gf/../../other/stb_image.h"
  if ($28) {
   $29 = $1; //@line 2806 "src/sprites/../puun/gf/../../other/stb_image.h"
   $30 = (_stbi__process_scan_header($29)|0); //@line 2806 "src/sprites/../puun/gf/../../other/stb_image.h"
   $31 = ($30|0)!=(0); //@line 2806 "src/sprites/../puun/gf/../../other/stb_image.h"
   if (!($31)) {
    label = 11;
    break;
   }
   $32 = $1; //@line 2807 "src/sprites/../puun/gf/../../other/stb_image.h"
   $33 = (_stbi__parse_entropy_coded_data($32)|0); //@line 2807 "src/sprites/../puun/gf/../../other/stb_image.h"
   $34 = ($33|0)!=(0); //@line 2807 "src/sprites/../puun/gf/../../other/stb_image.h"
   if (!($34)) {
    label = 13;
    break;
   }
   $35 = $1; //@line 2808 "src/sprites/../puun/gf/../../other/stb_image.h"
   $36 = (($35) + 18116|0); //@line 2808 "src/sprites/../puun/gf/../../other/stb_image.h"
   $37 = HEAP8[$36>>0]|0; //@line 2808 "src/sprites/../puun/gf/../../other/stb_image.h"
   $38 = $37&255; //@line 2808 "src/sprites/../puun/gf/../../other/stb_image.h"
   $39 = ($38|0)==(255); //@line 2808 "src/sprites/../puun/gf/../../other/stb_image.h"
   if ($39) {
    while(1) {
     $40 = $1; //@line 2810 "src/sprites/../puun/gf/../../other/stb_image.h"
     $41 = HEAP32[$40>>2]|0; //@line 2810 "src/sprites/../puun/gf/../../other/stb_image.h"
     $42 = (_stbi__at_eof($41)|0); //@line 2810 "src/sprites/../puun/gf/../../other/stb_image.h"
     $43 = ($42|0)!=(0); //@line 2810 "src/sprites/../puun/gf/../../other/stb_image.h"
     $44 = $43 ^ 1; //@line 2810 "src/sprites/../puun/gf/../../other/stb_image.h"
     if (!($44)) {
      break;
     }
     $45 = $1; //@line 2811 "src/sprites/../puun/gf/../../other/stb_image.h"
     $46 = HEAP32[$45>>2]|0; //@line 2811 "src/sprites/../puun/gf/../../other/stb_image.h"
     $47 = (_stbi__get8($46)|0); //@line 2811 "src/sprites/../puun/gf/../../other/stb_image.h"
     $48 = $47&255; //@line 2811 "src/sprites/../puun/gf/../../other/stb_image.h"
     $x = $48; //@line 2811 "src/sprites/../puun/gf/../../other/stb_image.h"
     $49 = $x; //@line 2812 "src/sprites/../puun/gf/../../other/stb_image.h"
     $50 = ($49|0)==(255); //@line 2812 "src/sprites/../puun/gf/../../other/stb_image.h"
     if ($50) {
      label = 18;
      break;
     }
     $56 = $x; //@line 2815 "src/sprites/../puun/gf/../../other/stb_image.h"
     $57 = ($56|0)!=(0); //@line 2815 "src/sprites/../puun/gf/../../other/stb_image.h"
     if ($57) {
      label = 20;
      break L10;
     }
    }
    if ((label|0) == 18) {
     label = 0;
     $51 = $1; //@line 2813 "src/sprites/../puun/gf/../../other/stb_image.h"
     $52 = HEAP32[$51>>2]|0; //@line 2813 "src/sprites/../puun/gf/../../other/stb_image.h"
     $53 = (_stbi__get8($52)|0); //@line 2813 "src/sprites/../puun/gf/../../other/stb_image.h"
     $54 = $1; //@line 2813 "src/sprites/../puun/gf/../../other/stb_image.h"
     $55 = (($54) + 18116|0); //@line 2813 "src/sprites/../puun/gf/../../other/stb_image.h"
     HEAP8[$55>>0] = $53; //@line 2813 "src/sprites/../puun/gf/../../other/stb_image.h"
    }
   }
  } else {
   $59 = $1; //@line 2822 "src/sprites/../puun/gf/../../other/stb_image.h"
   $60 = $m; //@line 2822 "src/sprites/../puun/gf/../../other/stb_image.h"
   $61 = (_stbi__process_marker($59,$60)|0); //@line 2822 "src/sprites/../puun/gf/../../other/stb_image.h"
   $62 = ($61|0)!=(0); //@line 2822 "src/sprites/../puun/gf/../../other/stb_image.h"
   if (!($62)) {
    label = 26;
    break;
   }
  }
  $63 = $1; //@line 2824 "src/sprites/../puun/gf/../../other/stb_image.h"
  $64 = (_stbi__get_marker($63)|0); //@line 2824 "src/sprites/../puun/gf/../../other/stb_image.h"
  $65 = $64&255; //@line 2824 "src/sprites/../puun/gf/../../other/stb_image.h"
  $m = $65; //@line 2824 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 if ((label|0) == 11) {
  $0 = 0; //@line 2806 "src/sprites/../puun/gf/../../other/stb_image.h"
  $71 = $0; //@line 2829 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($71|0); //@line 2829 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 else if ((label|0) == 13) {
  $0 = 0; //@line 2807 "src/sprites/../puun/gf/../../other/stb_image.h"
  $71 = $0; //@line 2829 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($71|0); //@line 2829 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 else if ((label|0) == 20) {
  $58 = (_stbi__err(10248)|0); //@line 2816 "src/sprites/../puun/gf/../../other/stb_image.h"
  $0 = $58; //@line 2816 "src/sprites/../puun/gf/../../other/stb_image.h"
  $71 = $0; //@line 2829 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($71|0); //@line 2829 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 else if ((label|0) == 26) {
  $0 = 0; //@line 2822 "src/sprites/../puun/gf/../../other/stb_image.h"
  $71 = $0; //@line 2829 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($71|0); //@line 2829 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 else if ((label|0) == 29) {
  $66 = $1; //@line 2826 "src/sprites/../puun/gf/../../other/stb_image.h"
  $67 = (($66) + 18124|0); //@line 2826 "src/sprites/../puun/gf/../../other/stb_image.h"
  $68 = HEAP32[$67>>2]|0; //@line 2826 "src/sprites/../puun/gf/../../other/stb_image.h"
  $69 = ($68|0)!=(0); //@line 2826 "src/sprites/../puun/gf/../../other/stb_image.h"
  if ($69) {
   $70 = $1; //@line 2827 "src/sprites/../puun/gf/../../other/stb_image.h"
   _stbi__jpeg_finish($70); //@line 2827 "src/sprites/../puun/gf/../../other/stb_image.h"
  }
  $0 = 1; //@line 2828 "src/sprites/../puun/gf/../../other/stb_image.h"
  $71 = $0; //@line 2829 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($71|0); //@line 2829 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 return (0)|0;
}
function _stbi__jpeg_finish($z) {
 $z = $z|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $data = 0, $h = 0, $i = 0, $j = 0;
 var $n = 0, $w = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $z;
 $1 = $0; //@line 2560 "src/sprites/../puun/gf/../../other/stb_image.h"
 $2 = (($1) + 18124|0); //@line 2560 "src/sprites/../puun/gf/../../other/stb_image.h"
 $3 = HEAP32[$2>>2]|0; //@line 2560 "src/sprites/../puun/gf/../../other/stb_image.h"
 $4 = ($3|0)!=(0); //@line 2560 "src/sprites/../puun/gf/../../other/stb_image.h"
 if (!($4)) {
  STACKTOP = sp;return; //@line 2575 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $n = 0; //@line 2563 "src/sprites/../puun/gf/../../other/stb_image.h"
 while(1) {
  $5 = $n; //@line 2563 "src/sprites/../puun/gf/../../other/stb_image.h"
  $6 = $0; //@line 2563 "src/sprites/../puun/gf/../../other/stb_image.h"
  $7 = HEAP32[$6>>2]|0; //@line 2563 "src/sprites/../puun/gf/../../other/stb_image.h"
  $8 = (($7) + 8|0); //@line 2563 "src/sprites/../puun/gf/../../other/stb_image.h"
  $9 = HEAP32[$8>>2]|0; //@line 2563 "src/sprites/../puun/gf/../../other/stb_image.h"
  $10 = ($5|0)<($9|0); //@line 2563 "src/sprites/../puun/gf/../../other/stb_image.h"
  if (!($10)) {
   break;
  }
  $11 = $n; //@line 2564 "src/sprites/../puun/gf/../../other/stb_image.h"
  $12 = $0; //@line 2564 "src/sprites/../puun/gf/../../other/stb_image.h"
  $13 = (($12) + 17820|0); //@line 2564 "src/sprites/../puun/gf/../../other/stb_image.h"
  $14 = (($13) + (($11*72)|0)|0); //@line 2564 "src/sprites/../puun/gf/../../other/stb_image.h"
  $15 = (($14) + 28|0); //@line 2564 "src/sprites/../puun/gf/../../other/stb_image.h"
  $16 = HEAP32[$15>>2]|0; //@line 2564 "src/sprites/../puun/gf/../../other/stb_image.h"
  $17 = (($16) + 7)|0; //@line 2564 "src/sprites/../puun/gf/../../other/stb_image.h"
  $18 = $17 >> 3; //@line 2564 "src/sprites/../puun/gf/../../other/stb_image.h"
  $w = $18; //@line 2564 "src/sprites/../puun/gf/../../other/stb_image.h"
  $19 = $n; //@line 2565 "src/sprites/../puun/gf/../../other/stb_image.h"
  $20 = $0; //@line 2565 "src/sprites/../puun/gf/../../other/stb_image.h"
  $21 = (($20) + 17820|0); //@line 2565 "src/sprites/../puun/gf/../../other/stb_image.h"
  $22 = (($21) + (($19*72)|0)|0); //@line 2565 "src/sprites/../puun/gf/../../other/stb_image.h"
  $23 = (($22) + 32|0); //@line 2565 "src/sprites/../puun/gf/../../other/stb_image.h"
  $24 = HEAP32[$23>>2]|0; //@line 2565 "src/sprites/../puun/gf/../../other/stb_image.h"
  $25 = (($24) + 7)|0; //@line 2565 "src/sprites/../puun/gf/../../other/stb_image.h"
  $26 = $25 >> 3; //@line 2565 "src/sprites/../puun/gf/../../other/stb_image.h"
  $h = $26; //@line 2565 "src/sprites/../puun/gf/../../other/stb_image.h"
  $j = 0; //@line 2566 "src/sprites/../puun/gf/../../other/stb_image.h"
  while(1) {
   $27 = $j; //@line 2566 "src/sprites/../puun/gf/../../other/stb_image.h"
   $28 = $h; //@line 2566 "src/sprites/../puun/gf/../../other/stb_image.h"
   $29 = ($27|0)<($28|0); //@line 2566 "src/sprites/../puun/gf/../../other/stb_image.h"
   if (!($29)) {
    break;
   }
   $i = 0; //@line 2567 "src/sprites/../puun/gf/../../other/stb_image.h"
   while(1) {
    $30 = $i; //@line 2567 "src/sprites/../puun/gf/../../other/stb_image.h"
    $31 = $w; //@line 2567 "src/sprites/../puun/gf/../../other/stb_image.h"
    $32 = ($30|0)<($31|0); //@line 2567 "src/sprites/../puun/gf/../../other/stb_image.h"
    if (!($32)) {
     break;
    }
    $33 = $n; //@line 2568 "src/sprites/../puun/gf/../../other/stb_image.h"
    $34 = $0; //@line 2568 "src/sprites/../puun/gf/../../other/stb_image.h"
    $35 = (($34) + 17820|0); //@line 2568 "src/sprites/../puun/gf/../../other/stb_image.h"
    $36 = (($35) + (($33*72)|0)|0); //@line 2568 "src/sprites/../puun/gf/../../other/stb_image.h"
    $37 = (($36) + 60|0); //@line 2568 "src/sprites/../puun/gf/../../other/stb_image.h"
    $38 = HEAP32[$37>>2]|0; //@line 2568 "src/sprites/../puun/gf/../../other/stb_image.h"
    $39 = $i; //@line 2568 "src/sprites/../puun/gf/../../other/stb_image.h"
    $40 = $j; //@line 2568 "src/sprites/../puun/gf/../../other/stb_image.h"
    $41 = $n; //@line 2568 "src/sprites/../puun/gf/../../other/stb_image.h"
    $42 = $0; //@line 2568 "src/sprites/../puun/gf/../../other/stb_image.h"
    $43 = (($42) + 17820|0); //@line 2568 "src/sprites/../puun/gf/../../other/stb_image.h"
    $44 = (($43) + (($41*72)|0)|0); //@line 2568 "src/sprites/../puun/gf/../../other/stb_image.h"
    $45 = (($44) + 64|0); //@line 2568 "src/sprites/../puun/gf/../../other/stb_image.h"
    $46 = HEAP32[$45>>2]|0; //@line 2568 "src/sprites/../puun/gf/../../other/stb_image.h"
    $47 = Math_imul($40, $46)|0; //@line 2568 "src/sprites/../puun/gf/../../other/stb_image.h"
    $48 = (($39) + ($47))|0; //@line 2568 "src/sprites/../puun/gf/../../other/stb_image.h"
    $49 = $48<<6; //@line 2568 "src/sprites/../puun/gf/../../other/stb_image.h"
    $50 = (($38) + ($49<<1)|0); //@line 2568 "src/sprites/../puun/gf/../../other/stb_image.h"
    $data = $50; //@line 2568 "src/sprites/../puun/gf/../../other/stb_image.h"
    $51 = $data; //@line 2569 "src/sprites/../puun/gf/../../other/stb_image.h"
    $52 = $n; //@line 2569 "src/sprites/../puun/gf/../../other/stb_image.h"
    $53 = $0; //@line 2569 "src/sprites/../puun/gf/../../other/stb_image.h"
    $54 = (($53) + 17820|0); //@line 2569 "src/sprites/../puun/gf/../../other/stb_image.h"
    $55 = (($54) + (($52*72)|0)|0); //@line 2569 "src/sprites/../puun/gf/../../other/stb_image.h"
    $56 = (($55) + 12|0); //@line 2569 "src/sprites/../puun/gf/../../other/stb_image.h"
    $57 = HEAP32[$56>>2]|0; //@line 2569 "src/sprites/../puun/gf/../../other/stb_image.h"
    $58 = $0; //@line 2569 "src/sprites/../puun/gf/../../other/stb_image.h"
    $59 = (($58) + 13444|0); //@line 2569 "src/sprites/../puun/gf/../../other/stb_image.h"
    $60 = (($59) + ($57<<6)|0); //@line 2569 "src/sprites/../puun/gf/../../other/stb_image.h"
    _stbi__jpeg_dequantize($51,$60); //@line 2569 "src/sprites/../puun/gf/../../other/stb_image.h"
    $61 = $0; //@line 2570 "src/sprites/../puun/gf/../../other/stb_image.h"
    $62 = (($61) + 18176|0); //@line 2570 "src/sprites/../puun/gf/../../other/stb_image.h"
    $63 = HEAP32[$62>>2]|0; //@line 2570 "src/sprites/../puun/gf/../../other/stb_image.h"
    $64 = $n; //@line 2570 "src/sprites/../puun/gf/../../other/stb_image.h"
    $65 = $0; //@line 2570 "src/sprites/../puun/gf/../../other/stb_image.h"
    $66 = (($65) + 17820|0); //@line 2570 "src/sprites/../puun/gf/../../other/stb_image.h"
    $67 = (($66) + (($64*72)|0)|0); //@line 2570 "src/sprites/../puun/gf/../../other/stb_image.h"
    $68 = (($67) + 44|0); //@line 2570 "src/sprites/../puun/gf/../../other/stb_image.h"
    $69 = HEAP32[$68>>2]|0; //@line 2570 "src/sprites/../puun/gf/../../other/stb_image.h"
    $70 = $n; //@line 2570 "src/sprites/../puun/gf/../../other/stb_image.h"
    $71 = $0; //@line 2570 "src/sprites/../puun/gf/../../other/stb_image.h"
    $72 = (($71) + 17820|0); //@line 2570 "src/sprites/../puun/gf/../../other/stb_image.h"
    $73 = (($72) + (($70*72)|0)|0); //@line 2570 "src/sprites/../puun/gf/../../other/stb_image.h"
    $74 = (($73) + 36|0); //@line 2570 "src/sprites/../puun/gf/../../other/stb_image.h"
    $75 = HEAP32[$74>>2]|0; //@line 2570 "src/sprites/../puun/gf/../../other/stb_image.h"
    $76 = $j; //@line 2570 "src/sprites/../puun/gf/../../other/stb_image.h"
    $77 = Math_imul($75, $76)|0; //@line 2570 "src/sprites/../puun/gf/../../other/stb_image.h"
    $78 = $77<<3; //@line 2570 "src/sprites/../puun/gf/../../other/stb_image.h"
    $79 = (($69) + ($78)|0); //@line 2570 "src/sprites/../puun/gf/../../other/stb_image.h"
    $80 = $i; //@line 2570 "src/sprites/../puun/gf/../../other/stb_image.h"
    $81 = $80<<3; //@line 2570 "src/sprites/../puun/gf/../../other/stb_image.h"
    $82 = (($79) + ($81)|0); //@line 2570 "src/sprites/../puun/gf/../../other/stb_image.h"
    $83 = $n; //@line 2570 "src/sprites/../puun/gf/../../other/stb_image.h"
    $84 = $0; //@line 2570 "src/sprites/../puun/gf/../../other/stb_image.h"
    $85 = (($84) + 17820|0); //@line 2570 "src/sprites/../puun/gf/../../other/stb_image.h"
    $86 = (($85) + (($83*72)|0)|0); //@line 2570 "src/sprites/../puun/gf/../../other/stb_image.h"
    $87 = (($86) + 36|0); //@line 2570 "src/sprites/../puun/gf/../../other/stb_image.h"
    $88 = HEAP32[$87>>2]|0; //@line 2570 "src/sprites/../puun/gf/../../other/stb_image.h"
    $89 = $data; //@line 2570 "src/sprites/../puun/gf/../../other/stb_image.h"
    FUNCTION_TABLE_viii[$63 & 15]($82,$88,$89); //@line 2570 "src/sprites/../puun/gf/../../other/stb_image.h"
    $90 = $i; //@line 2567 "src/sprites/../puun/gf/../../other/stb_image.h"
    $91 = (($90) + 1)|0; //@line 2567 "src/sprites/../puun/gf/../../other/stb_image.h"
    $i = $91; //@line 2567 "src/sprites/../puun/gf/../../other/stb_image.h"
   }
   $92 = $j; //@line 2566 "src/sprites/../puun/gf/../../other/stb_image.h"
   $93 = (($92) + 1)|0; //@line 2566 "src/sprites/../puun/gf/../../other/stb_image.h"
   $j = $93; //@line 2566 "src/sprites/../puun/gf/../../other/stb_image.h"
  }
  $94 = $n; //@line 2563 "src/sprites/../puun/gf/../../other/stb_image.h"
  $95 = (($94) + 1)|0; //@line 2563 "src/sprites/../puun/gf/../../other/stb_image.h"
  $n = $95; //@line 2563 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 STACKTOP = sp;return; //@line 2575 "src/sprites/../puun/gf/../../other/stb_image.h"
}
function _stbi__jpeg_dequantize($data,$dequant) {
 $data = $data|0;
 $dequant = $dequant|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $i = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $data;
 $1 = $dequant;
 $i = 0; //@line 2554 "src/sprites/../puun/gf/../../other/stb_image.h"
 while(1) {
  $2 = $i; //@line 2554 "src/sprites/../puun/gf/../../other/stb_image.h"
  $3 = ($2|0)<(64); //@line 2554 "src/sprites/../puun/gf/../../other/stb_image.h"
  if (!($3)) {
   break;
  }
  $4 = $i; //@line 2555 "src/sprites/../puun/gf/../../other/stb_image.h"
  $5 = $1; //@line 2555 "src/sprites/../puun/gf/../../other/stb_image.h"
  $6 = (($5) + ($4)|0); //@line 2555 "src/sprites/../puun/gf/../../other/stb_image.h"
  $7 = HEAP8[$6>>0]|0; //@line 2555 "src/sprites/../puun/gf/../../other/stb_image.h"
  $8 = $7&255; //@line 2555 "src/sprites/../puun/gf/../../other/stb_image.h"
  $9 = $i; //@line 2555 "src/sprites/../puun/gf/../../other/stb_image.h"
  $10 = $0; //@line 2555 "src/sprites/../puun/gf/../../other/stb_image.h"
  $11 = (($10) + ($9<<1)|0); //@line 2555 "src/sprites/../puun/gf/../../other/stb_image.h"
  $12 = HEAP16[$11>>1]|0; //@line 2555 "src/sprites/../puun/gf/../../other/stb_image.h"
  $13 = $12 << 16 >> 16; //@line 2555 "src/sprites/../puun/gf/../../other/stb_image.h"
  $14 = Math_imul($13, $8)|0; //@line 2555 "src/sprites/../puun/gf/../../other/stb_image.h"
  $15 = $14&65535; //@line 2555 "src/sprites/../puun/gf/../../other/stb_image.h"
  HEAP16[$11>>1] = $15; //@line 2555 "src/sprites/../puun/gf/../../other/stb_image.h"
  $16 = $i; //@line 2554 "src/sprites/../puun/gf/../../other/stb_image.h"
  $17 = (($16) + 1)|0; //@line 2554 "src/sprites/../puun/gf/../../other/stb_image.h"
  $i = $17; //@line 2554 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 STACKTOP = sp;return; //@line 2556 "src/sprites/../puun/gf/../../other/stb_image.h"
}
function _stbi__parse_entropy_coded_data($z) {
 $z = $z|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0;
 var $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0;
 var $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0;
 var $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0;
 var $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0;
 var $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0;
 var $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0;
 var $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0;
 var $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0;
 var $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0;
 var $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0;
 var $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0;
 var $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0;
 var $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0;
 var $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0;
 var $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0;
 var $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0;
 var $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0;
 var $96 = 0, $97 = 0, $98 = 0, $99 = 0, $data = 0, $data11 = 0, $data21 = 0, $data3 = 0, $h = 0, $h10 = 0, $ha = 0, $ha12 = 0, $ha5 = 0, $i = 0, $i1 = 0, $i13 = 0, $i6 = 0, $j = 0, $j14 = 0, $j2 = 0;
 var $j7 = 0, $k = 0, $k15 = 0, $n = 0, $n18 = 0, $n4 = 0, $n8 = 0, $w = 0, $w9 = 0, $x = 0, $x16 = 0, $x2 = 0, $x219 = 0, $y = 0, $y17 = 0, $y2 = 0, $y220 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 400|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $data = sp + 264|0;
 $data3 = sp + 136|0;
 $1 = $z;
 $2 = $1; //@line 2429 "src/sprites/../puun/gf/../../other/stb_image.h"
 _stbi__jpeg_reset($2); //@line 2429 "src/sprites/../puun/gf/../../other/stb_image.h"
 $3 = $1; //@line 2430 "src/sprites/../puun/gf/../../other/stb_image.h"
 $4 = (($3) + 18124|0); //@line 2430 "src/sprites/../puun/gf/../../other/stb_image.h"
 $5 = HEAP32[$4>>2]|0; //@line 2430 "src/sprites/../puun/gf/../../other/stb_image.h"
 $6 = ($5|0)!=(0); //@line 2430 "src/sprites/../puun/gf/../../other/stb_image.h"
 if (!($6)) {
  $7 = $1; //@line 2431 "src/sprites/../puun/gf/../../other/stb_image.h"
  $8 = (($7) + 18148|0); //@line 2431 "src/sprites/../puun/gf/../../other/stb_image.h"
  $9 = HEAP32[$8>>2]|0; //@line 2431 "src/sprites/../puun/gf/../../other/stb_image.h"
  $10 = ($9|0)==(1); //@line 2431 "src/sprites/../puun/gf/../../other/stb_image.h"
  if ($10) {
   $11 = $1; //@line 2434 "src/sprites/../puun/gf/../../other/stb_image.h"
   $12 = (($11) + 18152|0); //@line 2434 "src/sprites/../puun/gf/../../other/stb_image.h"
   $13 = HEAP32[$12>>2]|0; //@line 2434 "src/sprites/../puun/gf/../../other/stb_image.h"
   $n = $13; //@line 2434 "src/sprites/../puun/gf/../../other/stb_image.h"
   $14 = $n; //@line 2439 "src/sprites/../puun/gf/../../other/stb_image.h"
   $15 = $1; //@line 2439 "src/sprites/../puun/gf/../../other/stb_image.h"
   $16 = (($15) + 17820|0); //@line 2439 "src/sprites/../puun/gf/../../other/stb_image.h"
   $17 = (($16) + (($14*72)|0)|0); //@line 2439 "src/sprites/../puun/gf/../../other/stb_image.h"
   $18 = (($17) + 28|0); //@line 2439 "src/sprites/../puun/gf/../../other/stb_image.h"
   $19 = HEAP32[$18>>2]|0; //@line 2439 "src/sprites/../puun/gf/../../other/stb_image.h"
   $20 = (($19) + 7)|0; //@line 2439 "src/sprites/../puun/gf/../../other/stb_image.h"
   $21 = $20 >> 3; //@line 2439 "src/sprites/../puun/gf/../../other/stb_image.h"
   $w = $21; //@line 2439 "src/sprites/../puun/gf/../../other/stb_image.h"
   $22 = $n; //@line 2440 "src/sprites/../puun/gf/../../other/stb_image.h"
   $23 = $1; //@line 2440 "src/sprites/../puun/gf/../../other/stb_image.h"
   $24 = (($23) + 17820|0); //@line 2440 "src/sprites/../puun/gf/../../other/stb_image.h"
   $25 = (($24) + (($22*72)|0)|0); //@line 2440 "src/sprites/../puun/gf/../../other/stb_image.h"
   $26 = (($25) + 32|0); //@line 2440 "src/sprites/../puun/gf/../../other/stb_image.h"
   $27 = HEAP32[$26>>2]|0; //@line 2440 "src/sprites/../puun/gf/../../other/stb_image.h"
   $28 = (($27) + 7)|0; //@line 2440 "src/sprites/../puun/gf/../../other/stb_image.h"
   $29 = $28 >> 3; //@line 2440 "src/sprites/../puun/gf/../../other/stb_image.h"
   $h = $29; //@line 2440 "src/sprites/../puun/gf/../../other/stb_image.h"
   $j = 0; //@line 2441 "src/sprites/../puun/gf/../../other/stb_image.h"
   L5: while(1) {
    $30 = $j; //@line 2441 "src/sprites/../puun/gf/../../other/stb_image.h"
    $31 = $h; //@line 2441 "src/sprites/../puun/gf/../../other/stb_image.h"
    $32 = ($30|0)<($31|0); //@line 2441 "src/sprites/../puun/gf/../../other/stb_image.h"
    if (!($32)) {
     label = 20;
     break;
    }
    $i = 0; //@line 2442 "src/sprites/../puun/gf/../../other/stb_image.h"
    while(1) {
     $33 = $i; //@line 2442 "src/sprites/../puun/gf/../../other/stb_image.h"
     $34 = $w; //@line 2442 "src/sprites/../puun/gf/../../other/stb_image.h"
     $35 = ($33|0)<($34|0); //@line 2442 "src/sprites/../puun/gf/../../other/stb_image.h"
     if (!($35)) {
      break;
     }
     $36 = $n; //@line 2443 "src/sprites/../puun/gf/../../other/stb_image.h"
     $37 = $1; //@line 2443 "src/sprites/../puun/gf/../../other/stb_image.h"
     $38 = (($37) + 17820|0); //@line 2443 "src/sprites/../puun/gf/../../other/stb_image.h"
     $39 = (($38) + (($36*72)|0)|0); //@line 2443 "src/sprites/../puun/gf/../../other/stb_image.h"
     $40 = (($39) + 20|0); //@line 2443 "src/sprites/../puun/gf/../../other/stb_image.h"
     $41 = HEAP32[$40>>2]|0; //@line 2443 "src/sprites/../puun/gf/../../other/stb_image.h"
     $ha = $41; //@line 2443 "src/sprites/../puun/gf/../../other/stb_image.h"
     $42 = $1; //@line 2444 "src/sprites/../puun/gf/../../other/stb_image.h"
     $43 = $1; //@line 2444 "src/sprites/../puun/gf/../../other/stb_image.h"
     $44 = (($43) + 4|0); //@line 2444 "src/sprites/../puun/gf/../../other/stb_image.h"
     $45 = $n; //@line 2444 "src/sprites/../puun/gf/../../other/stb_image.h"
     $46 = $1; //@line 2444 "src/sprites/../puun/gf/../../other/stb_image.h"
     $47 = (($46) + 17820|0); //@line 2444 "src/sprites/../puun/gf/../../other/stb_image.h"
     $48 = (($47) + (($45*72)|0)|0); //@line 2444 "src/sprites/../puun/gf/../../other/stb_image.h"
     $49 = (($48) + 16|0); //@line 2444 "src/sprites/../puun/gf/../../other/stb_image.h"
     $50 = HEAP32[$49>>2]|0; //@line 2444 "src/sprites/../puun/gf/../../other/stb_image.h"
     $51 = (($44) + (($50*1680)|0)|0); //@line 2444 "src/sprites/../puun/gf/../../other/stb_image.h"
     $52 = $1; //@line 2444 "src/sprites/../puun/gf/../../other/stb_image.h"
     $53 = (($52) + 6724|0); //@line 2444 "src/sprites/../puun/gf/../../other/stb_image.h"
     $54 = $ha; //@line 2444 "src/sprites/../puun/gf/../../other/stb_image.h"
     $55 = (($53) + (($54*1680)|0)|0); //@line 2444 "src/sprites/../puun/gf/../../other/stb_image.h"
     $56 = $ha; //@line 2444 "src/sprites/../puun/gf/../../other/stb_image.h"
     $57 = $1; //@line 2444 "src/sprites/../puun/gf/../../other/stb_image.h"
     $58 = (($57) + 13700|0); //@line 2444 "src/sprites/../puun/gf/../../other/stb_image.h"
     $59 = (($58) + ($56<<10)|0); //@line 2444 "src/sprites/../puun/gf/../../other/stb_image.h"
     $60 = $n; //@line 2444 "src/sprites/../puun/gf/../../other/stb_image.h"
     $61 = $n; //@line 2444 "src/sprites/../puun/gf/../../other/stb_image.h"
     $62 = $1; //@line 2444 "src/sprites/../puun/gf/../../other/stb_image.h"
     $63 = (($62) + 17820|0); //@line 2444 "src/sprites/../puun/gf/../../other/stb_image.h"
     $64 = (($63) + (($61*72)|0)|0); //@line 2444 "src/sprites/../puun/gf/../../other/stb_image.h"
     $65 = (($64) + 12|0); //@line 2444 "src/sprites/../puun/gf/../../other/stb_image.h"
     $66 = HEAP32[$65>>2]|0; //@line 2444 "src/sprites/../puun/gf/../../other/stb_image.h"
     $67 = $1; //@line 2444 "src/sprites/../puun/gf/../../other/stb_image.h"
     $68 = (($67) + 13444|0); //@line 2444 "src/sprites/../puun/gf/../../other/stb_image.h"
     $69 = (($68) + ($66<<6)|0); //@line 2444 "src/sprites/../puun/gf/../../other/stb_image.h"
     $70 = (_stbi__jpeg_decode_block($42,$data,$51,$55,$59,$60,$69)|0); //@line 2444 "src/sprites/../puun/gf/../../other/stb_image.h"
     $71 = ($70|0)!=(0); //@line 2444 "src/sprites/../puun/gf/../../other/stb_image.h"
     if (!($71)) {
      label = 8;
      break L5;
     }
     $72 = $1; //@line 2445 "src/sprites/../puun/gf/../../other/stb_image.h"
     $73 = (($72) + 18176|0); //@line 2445 "src/sprites/../puun/gf/../../other/stb_image.h"
     $74 = HEAP32[$73>>2]|0; //@line 2445 "src/sprites/../puun/gf/../../other/stb_image.h"
     $75 = $n; //@line 2445 "src/sprites/../puun/gf/../../other/stb_image.h"
     $76 = $1; //@line 2445 "src/sprites/../puun/gf/../../other/stb_image.h"
     $77 = (($76) + 17820|0); //@line 2445 "src/sprites/../puun/gf/../../other/stb_image.h"
     $78 = (($77) + (($75*72)|0)|0); //@line 2445 "src/sprites/../puun/gf/../../other/stb_image.h"
     $79 = (($78) + 44|0); //@line 2445 "src/sprites/../puun/gf/../../other/stb_image.h"
     $80 = HEAP32[$79>>2]|0; //@line 2445 "src/sprites/../puun/gf/../../other/stb_image.h"
     $81 = $n; //@line 2445 "src/sprites/../puun/gf/../../other/stb_image.h"
     $82 = $1; //@line 2445 "src/sprites/../puun/gf/../../other/stb_image.h"
     $83 = (($82) + 17820|0); //@line 2445 "src/sprites/../puun/gf/../../other/stb_image.h"
     $84 = (($83) + (($81*72)|0)|0); //@line 2445 "src/sprites/../puun/gf/../../other/stb_image.h"
     $85 = (($84) + 36|0); //@line 2445 "src/sprites/../puun/gf/../../other/stb_image.h"
     $86 = HEAP32[$85>>2]|0; //@line 2445 "src/sprites/../puun/gf/../../other/stb_image.h"
     $87 = $j; //@line 2445 "src/sprites/../puun/gf/../../other/stb_image.h"
     $88 = Math_imul($86, $87)|0; //@line 2445 "src/sprites/../puun/gf/../../other/stb_image.h"
     $89 = $88<<3; //@line 2445 "src/sprites/../puun/gf/../../other/stb_image.h"
     $90 = (($80) + ($89)|0); //@line 2445 "src/sprites/../puun/gf/../../other/stb_image.h"
     $91 = $i; //@line 2445 "src/sprites/../puun/gf/../../other/stb_image.h"
     $92 = $91<<3; //@line 2445 "src/sprites/../puun/gf/../../other/stb_image.h"
     $93 = (($90) + ($92)|0); //@line 2445 "src/sprites/../puun/gf/../../other/stb_image.h"
     $94 = $n; //@line 2445 "src/sprites/../puun/gf/../../other/stb_image.h"
     $95 = $1; //@line 2445 "src/sprites/../puun/gf/../../other/stb_image.h"
     $96 = (($95) + 17820|0); //@line 2445 "src/sprites/../puun/gf/../../other/stb_image.h"
     $97 = (($96) + (($94*72)|0)|0); //@line 2445 "src/sprites/../puun/gf/../../other/stb_image.h"
     $98 = (($97) + 36|0); //@line 2445 "src/sprites/../puun/gf/../../other/stb_image.h"
     $99 = HEAP32[$98>>2]|0; //@line 2445 "src/sprites/../puun/gf/../../other/stb_image.h"
     FUNCTION_TABLE_viii[$74 & 15]($93,$99,$data); //@line 2445 "src/sprites/../puun/gf/../../other/stb_image.h"
     $100 = $1; //@line 2447 "src/sprites/../puun/gf/../../other/stb_image.h"
     $101 = (($100) + 18172|0); //@line 2447 "src/sprites/../puun/gf/../../other/stb_image.h"
     $102 = HEAP32[$101>>2]|0; //@line 2447 "src/sprites/../puun/gf/../../other/stb_image.h"
     $103 = (($102) + -1)|0; //@line 2447 "src/sprites/../puun/gf/../../other/stb_image.h"
     HEAP32[$101>>2] = $103; //@line 2447 "src/sprites/../puun/gf/../../other/stb_image.h"
     $104 = ($103|0)<=(0); //@line 2447 "src/sprites/../puun/gf/../../other/stb_image.h"
     if ($104) {
      $105 = $1; //@line 2448 "src/sprites/../puun/gf/../../other/stb_image.h"
      $106 = (($105) + 18112|0); //@line 2448 "src/sprites/../puun/gf/../../other/stb_image.h"
      $107 = HEAP32[$106>>2]|0; //@line 2448 "src/sprites/../puun/gf/../../other/stb_image.h"
      $108 = ($107|0)<(24); //@line 2448 "src/sprites/../puun/gf/../../other/stb_image.h"
      if ($108) {
       $109 = $1; //@line 2448 "src/sprites/../puun/gf/../../other/stb_image.h"
       _stbi__grow_buffer_unsafe($109); //@line 2448 "src/sprites/../puun/gf/../../other/stb_image.h"
      }
      $110 = $1; //@line 2451 "src/sprites/../puun/gf/../../other/stb_image.h"
      $111 = (($110) + 18116|0); //@line 2451 "src/sprites/../puun/gf/../../other/stb_image.h"
      $112 = HEAP8[$111>>0]|0; //@line 2451 "src/sprites/../puun/gf/../../other/stb_image.h"
      $113 = $112&255; //@line 2451 "src/sprites/../puun/gf/../../other/stb_image.h"
      $114 = ($113|0)>=(208); //@line 2451 "src/sprites/../puun/gf/../../other/stb_image.h"
      if (!($114)) {
       label = 14;
       break L5;
      }
      $115 = $1; //@line 2451 "src/sprites/../puun/gf/../../other/stb_image.h"
      $116 = (($115) + 18116|0); //@line 2451 "src/sprites/../puun/gf/../../other/stb_image.h"
      $117 = HEAP8[$116>>0]|0; //@line 2451 "src/sprites/../puun/gf/../../other/stb_image.h"
      $118 = $117&255; //@line 2451 "src/sprites/../puun/gf/../../other/stb_image.h"
      $119 = ($118|0)<=(215); //@line 2451 "src/sprites/../puun/gf/../../other/stb_image.h"
      if (!($119)) {
       label = 14;
       break L5;
      }
      $120 = $1; //@line 2452 "src/sprites/../puun/gf/../../other/stb_image.h"
      _stbi__jpeg_reset($120); //@line 2452 "src/sprites/../puun/gf/../../other/stb_image.h"
     }
     $121 = $i; //@line 2442 "src/sprites/../puun/gf/../../other/stb_image.h"
     $122 = (($121) + 1)|0; //@line 2442 "src/sprites/../puun/gf/../../other/stb_image.h"
     $i = $122; //@line 2442 "src/sprites/../puun/gf/../../other/stb_image.h"
    }
    $123 = $j; //@line 2441 "src/sprites/../puun/gf/../../other/stb_image.h"
    $124 = (($123) + 1)|0; //@line 2441 "src/sprites/../puun/gf/../../other/stb_image.h"
    $j = $124; //@line 2441 "src/sprites/../puun/gf/../../other/stb_image.h"
   }
   if ((label|0) == 8) {
    $0 = 0; //@line 2444 "src/sprites/../puun/gf/../../other/stb_image.h"
    $503 = $0; //@line 2549 "src/sprites/../puun/gf/../../other/stb_image.h"
    STACKTOP = sp;return ($503|0); //@line 2549 "src/sprites/../puun/gf/../../other/stb_image.h"
   }
   else if ((label|0) == 14) {
    $0 = 1; //@line 2451 "src/sprites/../puun/gf/../../other/stb_image.h"
    $503 = $0; //@line 2549 "src/sprites/../puun/gf/../../other/stb_image.h"
    STACKTOP = sp;return ($503|0); //@line 2549 "src/sprites/../puun/gf/../../other/stb_image.h"
   }
   else if ((label|0) == 20) {
    $0 = 1; //@line 2456 "src/sprites/../puun/gf/../../other/stb_image.h"
    $503 = $0; //@line 2549 "src/sprites/../puun/gf/../../other/stb_image.h"
    STACKTOP = sp;return ($503|0); //@line 2549 "src/sprites/../puun/gf/../../other/stb_image.h"
   }
  }
  $j2 = 0; //@line 2460 "src/sprites/../puun/gf/../../other/stb_image.h"
  L31: while(1) {
   $125 = $j2; //@line 2460 "src/sprites/../puun/gf/../../other/stb_image.h"
   $126 = $1; //@line 2460 "src/sprites/../puun/gf/../../other/stb_image.h"
   $127 = (($126) + 17808|0); //@line 2460 "src/sprites/../puun/gf/../../other/stb_image.h"
   $128 = HEAP32[$127>>2]|0; //@line 2460 "src/sprites/../puun/gf/../../other/stb_image.h"
   $129 = ($125|0)<($128|0); //@line 2460 "src/sprites/../puun/gf/../../other/stb_image.h"
   if (!($129)) {
    label = 50;
    break;
   }
   $i1 = 0; //@line 2461 "src/sprites/../puun/gf/../../other/stb_image.h"
   while(1) {
    $130 = $i1; //@line 2461 "src/sprites/../puun/gf/../../other/stb_image.h"
    $131 = $1; //@line 2461 "src/sprites/../puun/gf/../../other/stb_image.h"
    $132 = (($131) + 17804|0); //@line 2461 "src/sprites/../puun/gf/../../other/stb_image.h"
    $133 = HEAP32[$132>>2]|0; //@line 2461 "src/sprites/../puun/gf/../../other/stb_image.h"
    $134 = ($130|0)<($133|0); //@line 2461 "src/sprites/../puun/gf/../../other/stb_image.h"
    if (!($134)) {
     break;
    }
    $k = 0; //@line 2463 "src/sprites/../puun/gf/../../other/stb_image.h"
    while(1) {
     $135 = $k; //@line 2463 "src/sprites/../puun/gf/../../other/stb_image.h"
     $136 = $1; //@line 2463 "src/sprites/../puun/gf/../../other/stb_image.h"
     $137 = (($136) + 18148|0); //@line 2463 "src/sprites/../puun/gf/../../other/stb_image.h"
     $138 = HEAP32[$137>>2]|0; //@line 2463 "src/sprites/../puun/gf/../../other/stb_image.h"
     $139 = ($135|0)<($138|0); //@line 2463 "src/sprites/../puun/gf/../../other/stb_image.h"
     if (!($139)) {
      break;
     }
     $140 = $k; //@line 2464 "src/sprites/../puun/gf/../../other/stb_image.h"
     $141 = $1; //@line 2464 "src/sprites/../puun/gf/../../other/stb_image.h"
     $142 = (($141) + 18152|0); //@line 2464 "src/sprites/../puun/gf/../../other/stb_image.h"
     $143 = (($142) + ($140<<2)|0); //@line 2464 "src/sprites/../puun/gf/../../other/stb_image.h"
     $144 = HEAP32[$143>>2]|0; //@line 2464 "src/sprites/../puun/gf/../../other/stb_image.h"
     $n4 = $144; //@line 2464 "src/sprites/../puun/gf/../../other/stb_image.h"
     $y = 0; //@line 2467 "src/sprites/../puun/gf/../../other/stb_image.h"
     while(1) {
      $145 = $y; //@line 2467 "src/sprites/../puun/gf/../../other/stb_image.h"
      $146 = $n4; //@line 2467 "src/sprites/../puun/gf/../../other/stb_image.h"
      $147 = $1; //@line 2467 "src/sprites/../puun/gf/../../other/stb_image.h"
      $148 = (($147) + 17820|0); //@line 2467 "src/sprites/../puun/gf/../../other/stb_image.h"
      $149 = (($148) + (($146*72)|0)|0); //@line 2467 "src/sprites/../puun/gf/../../other/stb_image.h"
      $150 = (($149) + 8|0); //@line 2467 "src/sprites/../puun/gf/../../other/stb_image.h"
      $151 = HEAP32[$150>>2]|0; //@line 2467 "src/sprites/../puun/gf/../../other/stb_image.h"
      $152 = ($145|0)<($151|0); //@line 2467 "src/sprites/../puun/gf/../../other/stb_image.h"
      if (!($152)) {
       break;
      }
      $x = 0; //@line 2468 "src/sprites/../puun/gf/../../other/stb_image.h"
      while(1) {
       $153 = $x; //@line 2468 "src/sprites/../puun/gf/../../other/stb_image.h"
       $154 = $n4; //@line 2468 "src/sprites/../puun/gf/../../other/stb_image.h"
       $155 = $1; //@line 2468 "src/sprites/../puun/gf/../../other/stb_image.h"
       $156 = (($155) + 17820|0); //@line 2468 "src/sprites/../puun/gf/../../other/stb_image.h"
       $157 = (($156) + (($154*72)|0)|0); //@line 2468 "src/sprites/../puun/gf/../../other/stb_image.h"
       $158 = (($157) + 4|0); //@line 2468 "src/sprites/../puun/gf/../../other/stb_image.h"
       $159 = HEAP32[$158>>2]|0; //@line 2468 "src/sprites/../puun/gf/../../other/stb_image.h"
       $160 = ($153|0)<($159|0); //@line 2468 "src/sprites/../puun/gf/../../other/stb_image.h"
       if (!($160)) {
        break;
       }
       $161 = $i1; //@line 2469 "src/sprites/../puun/gf/../../other/stb_image.h"
       $162 = $n4; //@line 2469 "src/sprites/../puun/gf/../../other/stb_image.h"
       $163 = $1; //@line 2469 "src/sprites/../puun/gf/../../other/stb_image.h"
       $164 = (($163) + 17820|0); //@line 2469 "src/sprites/../puun/gf/../../other/stb_image.h"
       $165 = (($164) + (($162*72)|0)|0); //@line 2469 "src/sprites/../puun/gf/../../other/stb_image.h"
       $166 = (($165) + 4|0); //@line 2469 "src/sprites/../puun/gf/../../other/stb_image.h"
       $167 = HEAP32[$166>>2]|0; //@line 2469 "src/sprites/../puun/gf/../../other/stb_image.h"
       $168 = Math_imul($161, $167)|0; //@line 2469 "src/sprites/../puun/gf/../../other/stb_image.h"
       $169 = $x; //@line 2469 "src/sprites/../puun/gf/../../other/stb_image.h"
       $170 = (($168) + ($169))|0; //@line 2469 "src/sprites/../puun/gf/../../other/stb_image.h"
       $171 = $170<<3; //@line 2469 "src/sprites/../puun/gf/../../other/stb_image.h"
       $x2 = $171; //@line 2469 "src/sprites/../puun/gf/../../other/stb_image.h"
       $172 = $j2; //@line 2470 "src/sprites/../puun/gf/../../other/stb_image.h"
       $173 = $n4; //@line 2470 "src/sprites/../puun/gf/../../other/stb_image.h"
       $174 = $1; //@line 2470 "src/sprites/../puun/gf/../../other/stb_image.h"
       $175 = (($174) + 17820|0); //@line 2470 "src/sprites/../puun/gf/../../other/stb_image.h"
       $176 = (($175) + (($173*72)|0)|0); //@line 2470 "src/sprites/../puun/gf/../../other/stb_image.h"
       $177 = (($176) + 8|0); //@line 2470 "src/sprites/../puun/gf/../../other/stb_image.h"
       $178 = HEAP32[$177>>2]|0; //@line 2470 "src/sprites/../puun/gf/../../other/stb_image.h"
       $179 = Math_imul($172, $178)|0; //@line 2470 "src/sprites/../puun/gf/../../other/stb_image.h"
       $180 = $y; //@line 2470 "src/sprites/../puun/gf/../../other/stb_image.h"
       $181 = (($179) + ($180))|0; //@line 2470 "src/sprites/../puun/gf/../../other/stb_image.h"
       $182 = $181<<3; //@line 2470 "src/sprites/../puun/gf/../../other/stb_image.h"
       $y2 = $182; //@line 2470 "src/sprites/../puun/gf/../../other/stb_image.h"
       $183 = $n4; //@line 2471 "src/sprites/../puun/gf/../../other/stb_image.h"
       $184 = $1; //@line 2471 "src/sprites/../puun/gf/../../other/stb_image.h"
       $185 = (($184) + 17820|0); //@line 2471 "src/sprites/../puun/gf/../../other/stb_image.h"
       $186 = (($185) + (($183*72)|0)|0); //@line 2471 "src/sprites/../puun/gf/../../other/stb_image.h"
       $187 = (($186) + 20|0); //@line 2471 "src/sprites/../puun/gf/../../other/stb_image.h"
       $188 = HEAP32[$187>>2]|0; //@line 2471 "src/sprites/../puun/gf/../../other/stb_image.h"
       $ha5 = $188; //@line 2471 "src/sprites/../puun/gf/../../other/stb_image.h"
       $189 = $1; //@line 2472 "src/sprites/../puun/gf/../../other/stb_image.h"
       $190 = $1; //@line 2472 "src/sprites/../puun/gf/../../other/stb_image.h"
       $191 = (($190) + 4|0); //@line 2472 "src/sprites/../puun/gf/../../other/stb_image.h"
       $192 = $n4; //@line 2472 "src/sprites/../puun/gf/../../other/stb_image.h"
       $193 = $1; //@line 2472 "src/sprites/../puun/gf/../../other/stb_image.h"
       $194 = (($193) + 17820|0); //@line 2472 "src/sprites/../puun/gf/../../other/stb_image.h"
       $195 = (($194) + (($192*72)|0)|0); //@line 2472 "src/sprites/../puun/gf/../../other/stb_image.h"
       $196 = (($195) + 16|0); //@line 2472 "src/sprites/../puun/gf/../../other/stb_image.h"
       $197 = HEAP32[$196>>2]|0; //@line 2472 "src/sprites/../puun/gf/../../other/stb_image.h"
       $198 = (($191) + (($197*1680)|0)|0); //@line 2472 "src/sprites/../puun/gf/../../other/stb_image.h"
       $199 = $1; //@line 2472 "src/sprites/../puun/gf/../../other/stb_image.h"
       $200 = (($199) + 6724|0); //@line 2472 "src/sprites/../puun/gf/../../other/stb_image.h"
       $201 = $ha5; //@line 2472 "src/sprites/../puun/gf/../../other/stb_image.h"
       $202 = (($200) + (($201*1680)|0)|0); //@line 2472 "src/sprites/../puun/gf/../../other/stb_image.h"
       $203 = $ha5; //@line 2472 "src/sprites/../puun/gf/../../other/stb_image.h"
       $204 = $1; //@line 2472 "src/sprites/../puun/gf/../../other/stb_image.h"
       $205 = (($204) + 13700|0); //@line 2472 "src/sprites/../puun/gf/../../other/stb_image.h"
       $206 = (($205) + ($203<<10)|0); //@line 2472 "src/sprites/../puun/gf/../../other/stb_image.h"
       $207 = $n4; //@line 2472 "src/sprites/../puun/gf/../../other/stb_image.h"
       $208 = $n4; //@line 2472 "src/sprites/../puun/gf/../../other/stb_image.h"
       $209 = $1; //@line 2472 "src/sprites/../puun/gf/../../other/stb_image.h"
       $210 = (($209) + 17820|0); //@line 2472 "src/sprites/../puun/gf/../../other/stb_image.h"
       $211 = (($210) + (($208*72)|0)|0); //@line 2472 "src/sprites/../puun/gf/../../other/stb_image.h"
       $212 = (($211) + 12|0); //@line 2472 "src/sprites/../puun/gf/../../other/stb_image.h"
       $213 = HEAP32[$212>>2]|0; //@line 2472 "src/sprites/../puun/gf/../../other/stb_image.h"
       $214 = $1; //@line 2472 "src/sprites/../puun/gf/../../other/stb_image.h"
       $215 = (($214) + 13444|0); //@line 2472 "src/sprites/../puun/gf/../../other/stb_image.h"
       $216 = (($215) + ($213<<6)|0); //@line 2472 "src/sprites/../puun/gf/../../other/stb_image.h"
       $217 = (_stbi__jpeg_decode_block($189,$data3,$198,$202,$206,$207,$216)|0); //@line 2472 "src/sprites/../puun/gf/../../other/stb_image.h"
       $218 = ($217|0)!=(0); //@line 2472 "src/sprites/../puun/gf/../../other/stb_image.h"
       if (!($218)) {
        label = 32;
        break L31;
       }
       $219 = $1; //@line 2473 "src/sprites/../puun/gf/../../other/stb_image.h"
       $220 = (($219) + 18176|0); //@line 2473 "src/sprites/../puun/gf/../../other/stb_image.h"
       $221 = HEAP32[$220>>2]|0; //@line 2473 "src/sprites/../puun/gf/../../other/stb_image.h"
       $222 = $n4; //@line 2473 "src/sprites/../puun/gf/../../other/stb_image.h"
       $223 = $1; //@line 2473 "src/sprites/../puun/gf/../../other/stb_image.h"
       $224 = (($223) + 17820|0); //@line 2473 "src/sprites/../puun/gf/../../other/stb_image.h"
       $225 = (($224) + (($222*72)|0)|0); //@line 2473 "src/sprites/../puun/gf/../../other/stb_image.h"
       $226 = (($225) + 44|0); //@line 2473 "src/sprites/../puun/gf/../../other/stb_image.h"
       $227 = HEAP32[$226>>2]|0; //@line 2473 "src/sprites/../puun/gf/../../other/stb_image.h"
       $228 = $n4; //@line 2473 "src/sprites/../puun/gf/../../other/stb_image.h"
       $229 = $1; //@line 2473 "src/sprites/../puun/gf/../../other/stb_image.h"
       $230 = (($229) + 17820|0); //@line 2473 "src/sprites/../puun/gf/../../other/stb_image.h"
       $231 = (($230) + (($228*72)|0)|0); //@line 2473 "src/sprites/../puun/gf/../../other/stb_image.h"
       $232 = (($231) + 36|0); //@line 2473 "src/sprites/../puun/gf/../../other/stb_image.h"
       $233 = HEAP32[$232>>2]|0; //@line 2473 "src/sprites/../puun/gf/../../other/stb_image.h"
       $234 = $y2; //@line 2473 "src/sprites/../puun/gf/../../other/stb_image.h"
       $235 = Math_imul($233, $234)|0; //@line 2473 "src/sprites/../puun/gf/../../other/stb_image.h"
       $236 = (($227) + ($235)|0); //@line 2473 "src/sprites/../puun/gf/../../other/stb_image.h"
       $237 = $x2; //@line 2473 "src/sprites/../puun/gf/../../other/stb_image.h"
       $238 = (($236) + ($237)|0); //@line 2473 "src/sprites/../puun/gf/../../other/stb_image.h"
       $239 = $n4; //@line 2473 "src/sprites/../puun/gf/../../other/stb_image.h"
       $240 = $1; //@line 2473 "src/sprites/../puun/gf/../../other/stb_image.h"
       $241 = (($240) + 17820|0); //@line 2473 "src/sprites/../puun/gf/../../other/stb_image.h"
       $242 = (($241) + (($239*72)|0)|0); //@line 2473 "src/sprites/../puun/gf/../../other/stb_image.h"
       $243 = (($242) + 36|0); //@line 2473 "src/sprites/../puun/gf/../../other/stb_image.h"
       $244 = HEAP32[$243>>2]|0; //@line 2473 "src/sprites/../puun/gf/../../other/stb_image.h"
       FUNCTION_TABLE_viii[$221 & 15]($238,$244,$data3); //@line 2473 "src/sprites/../puun/gf/../../other/stb_image.h"
       $245 = $x; //@line 2468 "src/sprites/../puun/gf/../../other/stb_image.h"
       $246 = (($245) + 1)|0; //@line 2468 "src/sprites/../puun/gf/../../other/stb_image.h"
       $x = $246; //@line 2468 "src/sprites/../puun/gf/../../other/stb_image.h"
      }
      $247 = $y; //@line 2467 "src/sprites/../puun/gf/../../other/stb_image.h"
      $248 = (($247) + 1)|0; //@line 2467 "src/sprites/../puun/gf/../../other/stb_image.h"
      $y = $248; //@line 2467 "src/sprites/../puun/gf/../../other/stb_image.h"
     }
     $249 = $k; //@line 2463 "src/sprites/../puun/gf/../../other/stb_image.h"
     $250 = (($249) + 1)|0; //@line 2463 "src/sprites/../puun/gf/../../other/stb_image.h"
     $k = $250; //@line 2463 "src/sprites/../puun/gf/../../other/stb_image.h"
    }
    $251 = $1; //@line 2479 "src/sprites/../puun/gf/../../other/stb_image.h"
    $252 = (($251) + 18172|0); //@line 2479 "src/sprites/../puun/gf/../../other/stb_image.h"
    $253 = HEAP32[$252>>2]|0; //@line 2479 "src/sprites/../puun/gf/../../other/stb_image.h"
    $254 = (($253) + -1)|0; //@line 2479 "src/sprites/../puun/gf/../../other/stb_image.h"
    HEAP32[$252>>2] = $254; //@line 2479 "src/sprites/../puun/gf/../../other/stb_image.h"
    $255 = ($254|0)<=(0); //@line 2479 "src/sprites/../puun/gf/../../other/stb_image.h"
    if ($255) {
     $256 = $1; //@line 2480 "src/sprites/../puun/gf/../../other/stb_image.h"
     $257 = (($256) + 18112|0); //@line 2480 "src/sprites/../puun/gf/../../other/stb_image.h"
     $258 = HEAP32[$257>>2]|0; //@line 2480 "src/sprites/../puun/gf/../../other/stb_image.h"
     $259 = ($258|0)<(24); //@line 2480 "src/sprites/../puun/gf/../../other/stb_image.h"
     if ($259) {
      $260 = $1; //@line 2480 "src/sprites/../puun/gf/../../other/stb_image.h"
      _stbi__grow_buffer_unsafe($260); //@line 2480 "src/sprites/../puun/gf/../../other/stb_image.h"
     }
     $261 = $1; //@line 2481 "src/sprites/../puun/gf/../../other/stb_image.h"
     $262 = (($261) + 18116|0); //@line 2481 "src/sprites/../puun/gf/../../other/stb_image.h"
     $263 = HEAP8[$262>>0]|0; //@line 2481 "src/sprites/../puun/gf/../../other/stb_image.h"
     $264 = $263&255; //@line 2481 "src/sprites/../puun/gf/../../other/stb_image.h"
     $265 = ($264|0)>=(208); //@line 2481 "src/sprites/../puun/gf/../../other/stb_image.h"
     if (!($265)) {
      label = 44;
      break L31;
     }
     $266 = $1; //@line 2481 "src/sprites/../puun/gf/../../other/stb_image.h"
     $267 = (($266) + 18116|0); //@line 2481 "src/sprites/../puun/gf/../../other/stb_image.h"
     $268 = HEAP8[$267>>0]|0; //@line 2481 "src/sprites/../puun/gf/../../other/stb_image.h"
     $269 = $268&255; //@line 2481 "src/sprites/../puun/gf/../../other/stb_image.h"
     $270 = ($269|0)<=(215); //@line 2481 "src/sprites/../puun/gf/../../other/stb_image.h"
     if (!($270)) {
      label = 44;
      break L31;
     }
     $271 = $1; //@line 2482 "src/sprites/../puun/gf/../../other/stb_image.h"
     _stbi__jpeg_reset($271); //@line 2482 "src/sprites/../puun/gf/../../other/stb_image.h"
    }
    $272 = $i1; //@line 2461 "src/sprites/../puun/gf/../../other/stb_image.h"
    $273 = (($272) + 1)|0; //@line 2461 "src/sprites/../puun/gf/../../other/stb_image.h"
    $i1 = $273; //@line 2461 "src/sprites/../puun/gf/../../other/stb_image.h"
   }
   $274 = $j2; //@line 2460 "src/sprites/../puun/gf/../../other/stb_image.h"
   $275 = (($274) + 1)|0; //@line 2460 "src/sprites/../puun/gf/../../other/stb_image.h"
   $j2 = $275; //@line 2460 "src/sprites/../puun/gf/../../other/stb_image.h"
  }
  if ((label|0) == 32) {
   $0 = 0; //@line 2472 "src/sprites/../puun/gf/../../other/stb_image.h"
   $503 = $0; //@line 2549 "src/sprites/../puun/gf/../../other/stb_image.h"
   STACKTOP = sp;return ($503|0); //@line 2549 "src/sprites/../puun/gf/../../other/stb_image.h"
  }
  else if ((label|0) == 44) {
   $0 = 1; //@line 2481 "src/sprites/../puun/gf/../../other/stb_image.h"
   $503 = $0; //@line 2549 "src/sprites/../puun/gf/../../other/stb_image.h"
   STACKTOP = sp;return ($503|0); //@line 2549 "src/sprites/../puun/gf/../../other/stb_image.h"
  }
  else if ((label|0) == 50) {
   $0 = 1; //@line 2486 "src/sprites/../puun/gf/../../other/stb_image.h"
   $503 = $0; //@line 2549 "src/sprites/../puun/gf/../../other/stb_image.h"
   STACKTOP = sp;return ($503|0); //@line 2549 "src/sprites/../puun/gf/../../other/stb_image.h"
  }
 }
 $276 = $1; //@line 2489 "src/sprites/../puun/gf/../../other/stb_image.h"
 $277 = (($276) + 18148|0); //@line 2489 "src/sprites/../puun/gf/../../other/stb_image.h"
 $278 = HEAP32[$277>>2]|0; //@line 2489 "src/sprites/../puun/gf/../../other/stb_image.h"
 $279 = ($278|0)==(1); //@line 2489 "src/sprites/../puun/gf/../../other/stb_image.h"
 if ($279) {
  $280 = $1; //@line 2491 "src/sprites/../puun/gf/../../other/stb_image.h"
  $281 = (($280) + 18152|0); //@line 2491 "src/sprites/../puun/gf/../../other/stb_image.h"
  $282 = HEAP32[$281>>2]|0; //@line 2491 "src/sprites/../puun/gf/../../other/stb_image.h"
  $n8 = $282; //@line 2491 "src/sprites/../puun/gf/../../other/stb_image.h"
  $283 = $n8; //@line 2496 "src/sprites/../puun/gf/../../other/stb_image.h"
  $284 = $1; //@line 2496 "src/sprites/../puun/gf/../../other/stb_image.h"
  $285 = (($284) + 17820|0); //@line 2496 "src/sprites/../puun/gf/../../other/stb_image.h"
  $286 = (($285) + (($283*72)|0)|0); //@line 2496 "src/sprites/../puun/gf/../../other/stb_image.h"
  $287 = (($286) + 28|0); //@line 2496 "src/sprites/../puun/gf/../../other/stb_image.h"
  $288 = HEAP32[$287>>2]|0; //@line 2496 "src/sprites/../puun/gf/../../other/stb_image.h"
  $289 = (($288) + 7)|0; //@line 2496 "src/sprites/../puun/gf/../../other/stb_image.h"
  $290 = $289 >> 3; //@line 2496 "src/sprites/../puun/gf/../../other/stb_image.h"
  $w9 = $290; //@line 2496 "src/sprites/../puun/gf/../../other/stb_image.h"
  $291 = $n8; //@line 2497 "src/sprites/../puun/gf/../../other/stb_image.h"
  $292 = $1; //@line 2497 "src/sprites/../puun/gf/../../other/stb_image.h"
  $293 = (($292) + 17820|0); //@line 2497 "src/sprites/../puun/gf/../../other/stb_image.h"
  $294 = (($293) + (($291*72)|0)|0); //@line 2497 "src/sprites/../puun/gf/../../other/stb_image.h"
  $295 = (($294) + 32|0); //@line 2497 "src/sprites/../puun/gf/../../other/stb_image.h"
  $296 = HEAP32[$295>>2]|0; //@line 2497 "src/sprites/../puun/gf/../../other/stb_image.h"
  $297 = (($296) + 7)|0; //@line 2497 "src/sprites/../puun/gf/../../other/stb_image.h"
  $298 = $297 >> 3; //@line 2497 "src/sprites/../puun/gf/../../other/stb_image.h"
  $h10 = $298; //@line 2497 "src/sprites/../puun/gf/../../other/stb_image.h"
  $j7 = 0; //@line 2498 "src/sprites/../puun/gf/../../other/stb_image.h"
  L74: while(1) {
   $299 = $j7; //@line 2498 "src/sprites/../puun/gf/../../other/stb_image.h"
   $300 = $h10; //@line 2498 "src/sprites/../puun/gf/../../other/stb_image.h"
   $301 = ($299|0)<($300|0); //@line 2498 "src/sprites/../puun/gf/../../other/stb_image.h"
   if (!($301)) {
    label = 74;
    break;
   }
   $i6 = 0; //@line 2499 "src/sprites/../puun/gf/../../other/stb_image.h"
   while(1) {
    $302 = $i6; //@line 2499 "src/sprites/../puun/gf/../../other/stb_image.h"
    $303 = $w9; //@line 2499 "src/sprites/../puun/gf/../../other/stb_image.h"
    $304 = ($302|0)<($303|0); //@line 2499 "src/sprites/../puun/gf/../../other/stb_image.h"
    if (!($304)) {
     break;
    }
    $305 = $n8; //@line 2500 "src/sprites/../puun/gf/../../other/stb_image.h"
    $306 = $1; //@line 2500 "src/sprites/../puun/gf/../../other/stb_image.h"
    $307 = (($306) + 17820|0); //@line 2500 "src/sprites/../puun/gf/../../other/stb_image.h"
    $308 = (($307) + (($305*72)|0)|0); //@line 2500 "src/sprites/../puun/gf/../../other/stb_image.h"
    $309 = (($308) + 60|0); //@line 2500 "src/sprites/../puun/gf/../../other/stb_image.h"
    $310 = HEAP32[$309>>2]|0; //@line 2500 "src/sprites/../puun/gf/../../other/stb_image.h"
    $311 = $i6; //@line 2500 "src/sprites/../puun/gf/../../other/stb_image.h"
    $312 = $j7; //@line 2500 "src/sprites/../puun/gf/../../other/stb_image.h"
    $313 = $n8; //@line 2500 "src/sprites/../puun/gf/../../other/stb_image.h"
    $314 = $1; //@line 2500 "src/sprites/../puun/gf/../../other/stb_image.h"
    $315 = (($314) + 17820|0); //@line 2500 "src/sprites/../puun/gf/../../other/stb_image.h"
    $316 = (($315) + (($313*72)|0)|0); //@line 2500 "src/sprites/../puun/gf/../../other/stb_image.h"
    $317 = (($316) + 64|0); //@line 2500 "src/sprites/../puun/gf/../../other/stb_image.h"
    $318 = HEAP32[$317>>2]|0; //@line 2500 "src/sprites/../puun/gf/../../other/stb_image.h"
    $319 = Math_imul($312, $318)|0; //@line 2500 "src/sprites/../puun/gf/../../other/stb_image.h"
    $320 = (($311) + ($319))|0; //@line 2500 "src/sprites/../puun/gf/../../other/stb_image.h"
    $321 = $320<<6; //@line 2500 "src/sprites/../puun/gf/../../other/stb_image.h"
    $322 = (($310) + ($321<<1)|0); //@line 2500 "src/sprites/../puun/gf/../../other/stb_image.h"
    $data11 = $322; //@line 2500 "src/sprites/../puun/gf/../../other/stb_image.h"
    $323 = $1; //@line 2501 "src/sprites/../puun/gf/../../other/stb_image.h"
    $324 = (($323) + 18128|0); //@line 2501 "src/sprites/../puun/gf/../../other/stb_image.h"
    $325 = HEAP32[$324>>2]|0; //@line 2501 "src/sprites/../puun/gf/../../other/stb_image.h"
    $326 = ($325|0)==(0); //@line 2501 "src/sprites/../puun/gf/../../other/stb_image.h"
    if ($326) {
     $327 = $1; //@line 2502 "src/sprites/../puun/gf/../../other/stb_image.h"
     $328 = $data11; //@line 2502 "src/sprites/../puun/gf/../../other/stb_image.h"
     $329 = $n8; //@line 2502 "src/sprites/../puun/gf/../../other/stb_image.h"
     $330 = $1; //@line 2502 "src/sprites/../puun/gf/../../other/stb_image.h"
     $331 = (($330) + 17820|0); //@line 2502 "src/sprites/../puun/gf/../../other/stb_image.h"
     $332 = (($331) + (($329*72)|0)|0); //@line 2502 "src/sprites/../puun/gf/../../other/stb_image.h"
     $333 = (($332) + 16|0); //@line 2502 "src/sprites/../puun/gf/../../other/stb_image.h"
     $334 = HEAP32[$333>>2]|0; //@line 2502 "src/sprites/../puun/gf/../../other/stb_image.h"
     $335 = $1; //@line 2502 "src/sprites/../puun/gf/../../other/stb_image.h"
     $336 = (($335) + 4|0); //@line 2502 "src/sprites/../puun/gf/../../other/stb_image.h"
     $337 = (($336) + (($334*1680)|0)|0); //@line 2502 "src/sprites/../puun/gf/../../other/stb_image.h"
     $338 = $n8; //@line 2502 "src/sprites/../puun/gf/../../other/stb_image.h"
     $339 = (_stbi__jpeg_decode_block_prog_dc($327,$328,$337,$338)|0); //@line 2502 "src/sprites/../puun/gf/../../other/stb_image.h"
     $340 = ($339|0)!=(0); //@line 2502 "src/sprites/../puun/gf/../../other/stb_image.h"
     if (!($340)) {
      label = 58;
      break L74;
     }
    } else {
     $341 = $n8; //@line 2505 "src/sprites/../puun/gf/../../other/stb_image.h"
     $342 = $1; //@line 2505 "src/sprites/../puun/gf/../../other/stb_image.h"
     $343 = (($342) + 17820|0); //@line 2505 "src/sprites/../puun/gf/../../other/stb_image.h"
     $344 = (($343) + (($341*72)|0)|0); //@line 2505 "src/sprites/../puun/gf/../../other/stb_image.h"
     $345 = (($344) + 20|0); //@line 2505 "src/sprites/../puun/gf/../../other/stb_image.h"
     $346 = HEAP32[$345>>2]|0; //@line 2505 "src/sprites/../puun/gf/../../other/stb_image.h"
     $ha12 = $346; //@line 2505 "src/sprites/../puun/gf/../../other/stb_image.h"
     $347 = $1; //@line 2506 "src/sprites/../puun/gf/../../other/stb_image.h"
     $348 = $data11; //@line 2506 "src/sprites/../puun/gf/../../other/stb_image.h"
     $349 = $ha12; //@line 2506 "src/sprites/../puun/gf/../../other/stb_image.h"
     $350 = $1; //@line 2506 "src/sprites/../puun/gf/../../other/stb_image.h"
     $351 = (($350) + 6724|0); //@line 2506 "src/sprites/../puun/gf/../../other/stb_image.h"
     $352 = (($351) + (($349*1680)|0)|0); //@line 2506 "src/sprites/../puun/gf/../../other/stb_image.h"
     $353 = $ha12; //@line 2506 "src/sprites/../puun/gf/../../other/stb_image.h"
     $354 = $1; //@line 2506 "src/sprites/../puun/gf/../../other/stb_image.h"
     $355 = (($354) + 13700|0); //@line 2506 "src/sprites/../puun/gf/../../other/stb_image.h"
     $356 = (($355) + ($353<<10)|0); //@line 2506 "src/sprites/../puun/gf/../../other/stb_image.h"
     $357 = (_stbi__jpeg_decode_block_prog_ac($347,$348,$352,$356)|0); //@line 2506 "src/sprites/../puun/gf/../../other/stb_image.h"
     $358 = ($357|0)!=(0); //@line 2506 "src/sprites/../puun/gf/../../other/stb_image.h"
     if (!($358)) {
      label = 61;
      break L74;
     }
    }
    $359 = $1; //@line 2510 "src/sprites/../puun/gf/../../other/stb_image.h"
    $360 = (($359) + 18172|0); //@line 2510 "src/sprites/../puun/gf/../../other/stb_image.h"
    $361 = HEAP32[$360>>2]|0; //@line 2510 "src/sprites/../puun/gf/../../other/stb_image.h"
    $362 = (($361) + -1)|0; //@line 2510 "src/sprites/../puun/gf/../../other/stb_image.h"
    HEAP32[$360>>2] = $362; //@line 2510 "src/sprites/../puun/gf/../../other/stb_image.h"
    $363 = ($362|0)<=(0); //@line 2510 "src/sprites/../puun/gf/../../other/stb_image.h"
    if ($363) {
     $364 = $1; //@line 2511 "src/sprites/../puun/gf/../../other/stb_image.h"
     $365 = (($364) + 18112|0); //@line 2511 "src/sprites/../puun/gf/../../other/stb_image.h"
     $366 = HEAP32[$365>>2]|0; //@line 2511 "src/sprites/../puun/gf/../../other/stb_image.h"
     $367 = ($366|0)<(24); //@line 2511 "src/sprites/../puun/gf/../../other/stb_image.h"
     if ($367) {
      $368 = $1; //@line 2511 "src/sprites/../puun/gf/../../other/stb_image.h"
      _stbi__grow_buffer_unsafe($368); //@line 2511 "src/sprites/../puun/gf/../../other/stb_image.h"
     }
     $369 = $1; //@line 2512 "src/sprites/../puun/gf/../../other/stb_image.h"
     $370 = (($369) + 18116|0); //@line 2512 "src/sprites/../puun/gf/../../other/stb_image.h"
     $371 = HEAP8[$370>>0]|0; //@line 2512 "src/sprites/../puun/gf/../../other/stb_image.h"
     $372 = $371&255; //@line 2512 "src/sprites/../puun/gf/../../other/stb_image.h"
     $373 = ($372|0)>=(208); //@line 2512 "src/sprites/../puun/gf/../../other/stb_image.h"
     if (!($373)) {
      label = 68;
      break L74;
     }
     $374 = $1; //@line 2512 "src/sprites/../puun/gf/../../other/stb_image.h"
     $375 = (($374) + 18116|0); //@line 2512 "src/sprites/../puun/gf/../../other/stb_image.h"
     $376 = HEAP8[$375>>0]|0; //@line 2512 "src/sprites/../puun/gf/../../other/stb_image.h"
     $377 = $376&255; //@line 2512 "src/sprites/../puun/gf/../../other/stb_image.h"
     $378 = ($377|0)<=(215); //@line 2512 "src/sprites/../puun/gf/../../other/stb_image.h"
     if (!($378)) {
      label = 68;
      break L74;
     }
     $379 = $1; //@line 2513 "src/sprites/../puun/gf/../../other/stb_image.h"
     _stbi__jpeg_reset($379); //@line 2513 "src/sprites/../puun/gf/../../other/stb_image.h"
    }
    $380 = $i6; //@line 2499 "src/sprites/../puun/gf/../../other/stb_image.h"
    $381 = (($380) + 1)|0; //@line 2499 "src/sprites/../puun/gf/../../other/stb_image.h"
    $i6 = $381; //@line 2499 "src/sprites/../puun/gf/../../other/stb_image.h"
   }
   $382 = $j7; //@line 2498 "src/sprites/../puun/gf/../../other/stb_image.h"
   $383 = (($382) + 1)|0; //@line 2498 "src/sprites/../puun/gf/../../other/stb_image.h"
   $j7 = $383; //@line 2498 "src/sprites/../puun/gf/../../other/stb_image.h"
  }
  if ((label|0) == 58) {
   $0 = 0; //@line 2503 "src/sprites/../puun/gf/../../other/stb_image.h"
   $503 = $0; //@line 2549 "src/sprites/../puun/gf/../../other/stb_image.h"
   STACKTOP = sp;return ($503|0); //@line 2549 "src/sprites/../puun/gf/../../other/stb_image.h"
  }
  else if ((label|0) == 61) {
   $0 = 0; //@line 2507 "src/sprites/../puun/gf/../../other/stb_image.h"
   $503 = $0; //@line 2549 "src/sprites/../puun/gf/../../other/stb_image.h"
   STACKTOP = sp;return ($503|0); //@line 2549 "src/sprites/../puun/gf/../../other/stb_image.h"
  }
  else if ((label|0) == 68) {
   $0 = 1; //@line 2512 "src/sprites/../puun/gf/../../other/stb_image.h"
   $503 = $0; //@line 2549 "src/sprites/../puun/gf/../../other/stb_image.h"
   STACKTOP = sp;return ($503|0); //@line 2549 "src/sprites/../puun/gf/../../other/stb_image.h"
  }
  else if ((label|0) == 74) {
   $0 = 1; //@line 2517 "src/sprites/../puun/gf/../../other/stb_image.h"
   $503 = $0; //@line 2549 "src/sprites/../puun/gf/../../other/stb_image.h"
   STACKTOP = sp;return ($503|0); //@line 2549 "src/sprites/../puun/gf/../../other/stb_image.h"
  }
 }
 $j14 = 0; //@line 2520 "src/sprites/../puun/gf/../../other/stb_image.h"
 L107: while(1) {
  $384 = $j14; //@line 2520 "src/sprites/../puun/gf/../../other/stb_image.h"
  $385 = $1; //@line 2520 "src/sprites/../puun/gf/../../other/stb_image.h"
  $386 = (($385) + 17808|0); //@line 2520 "src/sprites/../puun/gf/../../other/stb_image.h"
  $387 = HEAP32[$386>>2]|0; //@line 2520 "src/sprites/../puun/gf/../../other/stb_image.h"
  $388 = ($384|0)<($387|0); //@line 2520 "src/sprites/../puun/gf/../../other/stb_image.h"
  if (!($388)) {
   label = 104;
   break;
  }
  $i13 = 0; //@line 2521 "src/sprites/../puun/gf/../../other/stb_image.h"
  while(1) {
   $389 = $i13; //@line 2521 "src/sprites/../puun/gf/../../other/stb_image.h"
   $390 = $1; //@line 2521 "src/sprites/../puun/gf/../../other/stb_image.h"
   $391 = (($390) + 17804|0); //@line 2521 "src/sprites/../puun/gf/../../other/stb_image.h"
   $392 = HEAP32[$391>>2]|0; //@line 2521 "src/sprites/../puun/gf/../../other/stb_image.h"
   $393 = ($389|0)<($392|0); //@line 2521 "src/sprites/../puun/gf/../../other/stb_image.h"
   if (!($393)) {
    break;
   }
   $k15 = 0; //@line 2523 "src/sprites/../puun/gf/../../other/stb_image.h"
   while(1) {
    $394 = $k15; //@line 2523 "src/sprites/../puun/gf/../../other/stb_image.h"
    $395 = $1; //@line 2523 "src/sprites/../puun/gf/../../other/stb_image.h"
    $396 = (($395) + 18148|0); //@line 2523 "src/sprites/../puun/gf/../../other/stb_image.h"
    $397 = HEAP32[$396>>2]|0; //@line 2523 "src/sprites/../puun/gf/../../other/stb_image.h"
    $398 = ($394|0)<($397|0); //@line 2523 "src/sprites/../puun/gf/../../other/stb_image.h"
    if (!($398)) {
     break;
    }
    $399 = $k15; //@line 2524 "src/sprites/../puun/gf/../../other/stb_image.h"
    $400 = $1; //@line 2524 "src/sprites/../puun/gf/../../other/stb_image.h"
    $401 = (($400) + 18152|0); //@line 2524 "src/sprites/../puun/gf/../../other/stb_image.h"
    $402 = (($401) + ($399<<2)|0); //@line 2524 "src/sprites/../puun/gf/../../other/stb_image.h"
    $403 = HEAP32[$402>>2]|0; //@line 2524 "src/sprites/../puun/gf/../../other/stb_image.h"
    $n18 = $403; //@line 2524 "src/sprites/../puun/gf/../../other/stb_image.h"
    $y17 = 0; //@line 2527 "src/sprites/../puun/gf/../../other/stb_image.h"
    while(1) {
     $404 = $y17; //@line 2527 "src/sprites/../puun/gf/../../other/stb_image.h"
     $405 = $n18; //@line 2527 "src/sprites/../puun/gf/../../other/stb_image.h"
     $406 = $1; //@line 2527 "src/sprites/../puun/gf/../../other/stb_image.h"
     $407 = (($406) + 17820|0); //@line 2527 "src/sprites/../puun/gf/../../other/stb_image.h"
     $408 = (($407) + (($405*72)|0)|0); //@line 2527 "src/sprites/../puun/gf/../../other/stb_image.h"
     $409 = (($408) + 8|0); //@line 2527 "src/sprites/../puun/gf/../../other/stb_image.h"
     $410 = HEAP32[$409>>2]|0; //@line 2527 "src/sprites/../puun/gf/../../other/stb_image.h"
     $411 = ($404|0)<($410|0); //@line 2527 "src/sprites/../puun/gf/../../other/stb_image.h"
     if (!($411)) {
      break;
     }
     $x16 = 0; //@line 2528 "src/sprites/../puun/gf/../../other/stb_image.h"
     while(1) {
      $412 = $x16; //@line 2528 "src/sprites/../puun/gf/../../other/stb_image.h"
      $413 = $n18; //@line 2528 "src/sprites/../puun/gf/../../other/stb_image.h"
      $414 = $1; //@line 2528 "src/sprites/../puun/gf/../../other/stb_image.h"
      $415 = (($414) + 17820|0); //@line 2528 "src/sprites/../puun/gf/../../other/stb_image.h"
      $416 = (($415) + (($413*72)|0)|0); //@line 2528 "src/sprites/../puun/gf/../../other/stb_image.h"
      $417 = (($416) + 4|0); //@line 2528 "src/sprites/../puun/gf/../../other/stb_image.h"
      $418 = HEAP32[$417>>2]|0; //@line 2528 "src/sprites/../puun/gf/../../other/stb_image.h"
      $419 = ($412|0)<($418|0); //@line 2528 "src/sprites/../puun/gf/../../other/stb_image.h"
      if (!($419)) {
       break;
      }
      $420 = $i13; //@line 2529 "src/sprites/../puun/gf/../../other/stb_image.h"
      $421 = $n18; //@line 2529 "src/sprites/../puun/gf/../../other/stb_image.h"
      $422 = $1; //@line 2529 "src/sprites/../puun/gf/../../other/stb_image.h"
      $423 = (($422) + 17820|0); //@line 2529 "src/sprites/../puun/gf/../../other/stb_image.h"
      $424 = (($423) + (($421*72)|0)|0); //@line 2529 "src/sprites/../puun/gf/../../other/stb_image.h"
      $425 = (($424) + 4|0); //@line 2529 "src/sprites/../puun/gf/../../other/stb_image.h"
      $426 = HEAP32[$425>>2]|0; //@line 2529 "src/sprites/../puun/gf/../../other/stb_image.h"
      $427 = Math_imul($420, $426)|0; //@line 2529 "src/sprites/../puun/gf/../../other/stb_image.h"
      $428 = $x16; //@line 2529 "src/sprites/../puun/gf/../../other/stb_image.h"
      $429 = (($427) + ($428))|0; //@line 2529 "src/sprites/../puun/gf/../../other/stb_image.h"
      $x219 = $429; //@line 2529 "src/sprites/../puun/gf/../../other/stb_image.h"
      $430 = $j14; //@line 2530 "src/sprites/../puun/gf/../../other/stb_image.h"
      $431 = $n18; //@line 2530 "src/sprites/../puun/gf/../../other/stb_image.h"
      $432 = $1; //@line 2530 "src/sprites/../puun/gf/../../other/stb_image.h"
      $433 = (($432) + 17820|0); //@line 2530 "src/sprites/../puun/gf/../../other/stb_image.h"
      $434 = (($433) + (($431*72)|0)|0); //@line 2530 "src/sprites/../puun/gf/../../other/stb_image.h"
      $435 = (($434) + 8|0); //@line 2530 "src/sprites/../puun/gf/../../other/stb_image.h"
      $436 = HEAP32[$435>>2]|0; //@line 2530 "src/sprites/../puun/gf/../../other/stb_image.h"
      $437 = Math_imul($430, $436)|0; //@line 2530 "src/sprites/../puun/gf/../../other/stb_image.h"
      $438 = $y17; //@line 2530 "src/sprites/../puun/gf/../../other/stb_image.h"
      $439 = (($437) + ($438))|0; //@line 2530 "src/sprites/../puun/gf/../../other/stb_image.h"
      $y220 = $439; //@line 2530 "src/sprites/../puun/gf/../../other/stb_image.h"
      $440 = $n18; //@line 2531 "src/sprites/../puun/gf/../../other/stb_image.h"
      $441 = $1; //@line 2531 "src/sprites/../puun/gf/../../other/stb_image.h"
      $442 = (($441) + 17820|0); //@line 2531 "src/sprites/../puun/gf/../../other/stb_image.h"
      $443 = (($442) + (($440*72)|0)|0); //@line 2531 "src/sprites/../puun/gf/../../other/stb_image.h"
      $444 = (($443) + 60|0); //@line 2531 "src/sprites/../puun/gf/../../other/stb_image.h"
      $445 = HEAP32[$444>>2]|0; //@line 2531 "src/sprites/../puun/gf/../../other/stb_image.h"
      $446 = $x219; //@line 2531 "src/sprites/../puun/gf/../../other/stb_image.h"
      $447 = $y220; //@line 2531 "src/sprites/../puun/gf/../../other/stb_image.h"
      $448 = $n18; //@line 2531 "src/sprites/../puun/gf/../../other/stb_image.h"
      $449 = $1; //@line 2531 "src/sprites/../puun/gf/../../other/stb_image.h"
      $450 = (($449) + 17820|0); //@line 2531 "src/sprites/../puun/gf/../../other/stb_image.h"
      $451 = (($450) + (($448*72)|0)|0); //@line 2531 "src/sprites/../puun/gf/../../other/stb_image.h"
      $452 = (($451) + 64|0); //@line 2531 "src/sprites/../puun/gf/../../other/stb_image.h"
      $453 = HEAP32[$452>>2]|0; //@line 2531 "src/sprites/../puun/gf/../../other/stb_image.h"
      $454 = Math_imul($447, $453)|0; //@line 2531 "src/sprites/../puun/gf/../../other/stb_image.h"
      $455 = (($446) + ($454))|0; //@line 2531 "src/sprites/../puun/gf/../../other/stb_image.h"
      $456 = $455<<6; //@line 2531 "src/sprites/../puun/gf/../../other/stb_image.h"
      $457 = (($445) + ($456<<1)|0); //@line 2531 "src/sprites/../puun/gf/../../other/stb_image.h"
      $data21 = $457; //@line 2531 "src/sprites/../puun/gf/../../other/stb_image.h"
      $458 = $1; //@line 2532 "src/sprites/../puun/gf/../../other/stb_image.h"
      $459 = $data21; //@line 2532 "src/sprites/../puun/gf/../../other/stb_image.h"
      $460 = $n18; //@line 2532 "src/sprites/../puun/gf/../../other/stb_image.h"
      $461 = $1; //@line 2532 "src/sprites/../puun/gf/../../other/stb_image.h"
      $462 = (($461) + 17820|0); //@line 2532 "src/sprites/../puun/gf/../../other/stb_image.h"
      $463 = (($462) + (($460*72)|0)|0); //@line 2532 "src/sprites/../puun/gf/../../other/stb_image.h"
      $464 = (($463) + 16|0); //@line 2532 "src/sprites/../puun/gf/../../other/stb_image.h"
      $465 = HEAP32[$464>>2]|0; //@line 2532 "src/sprites/../puun/gf/../../other/stb_image.h"
      $466 = $1; //@line 2532 "src/sprites/../puun/gf/../../other/stb_image.h"
      $467 = (($466) + 4|0); //@line 2532 "src/sprites/../puun/gf/../../other/stb_image.h"
      $468 = (($467) + (($465*1680)|0)|0); //@line 2532 "src/sprites/../puun/gf/../../other/stb_image.h"
      $469 = $n18; //@line 2532 "src/sprites/../puun/gf/../../other/stb_image.h"
      $470 = (_stbi__jpeg_decode_block_prog_dc($458,$459,$468,$469)|0); //@line 2532 "src/sprites/../puun/gf/../../other/stb_image.h"
      $471 = ($470|0)!=(0); //@line 2532 "src/sprites/../puun/gf/../../other/stb_image.h"
      if (!($471)) {
       label = 86;
       break L107;
      }
      $472 = $x16; //@line 2528 "src/sprites/../puun/gf/../../other/stb_image.h"
      $473 = (($472) + 1)|0; //@line 2528 "src/sprites/../puun/gf/../../other/stb_image.h"
      $x16 = $473; //@line 2528 "src/sprites/../puun/gf/../../other/stb_image.h"
     }
     $474 = $y17; //@line 2527 "src/sprites/../puun/gf/../../other/stb_image.h"
     $475 = (($474) + 1)|0; //@line 2527 "src/sprites/../puun/gf/../../other/stb_image.h"
     $y17 = $475; //@line 2527 "src/sprites/../puun/gf/../../other/stb_image.h"
    }
    $476 = $k15; //@line 2523 "src/sprites/../puun/gf/../../other/stb_image.h"
    $477 = (($476) + 1)|0; //@line 2523 "src/sprites/../puun/gf/../../other/stb_image.h"
    $k15 = $477; //@line 2523 "src/sprites/../puun/gf/../../other/stb_image.h"
   }
   $478 = $1; //@line 2539 "src/sprites/../puun/gf/../../other/stb_image.h"
   $479 = (($478) + 18172|0); //@line 2539 "src/sprites/../puun/gf/../../other/stb_image.h"
   $480 = HEAP32[$479>>2]|0; //@line 2539 "src/sprites/../puun/gf/../../other/stb_image.h"
   $481 = (($480) + -1)|0; //@line 2539 "src/sprites/../puun/gf/../../other/stb_image.h"
   HEAP32[$479>>2] = $481; //@line 2539 "src/sprites/../puun/gf/../../other/stb_image.h"
   $482 = ($481|0)<=(0); //@line 2539 "src/sprites/../puun/gf/../../other/stb_image.h"
   if ($482) {
    $483 = $1; //@line 2540 "src/sprites/../puun/gf/../../other/stb_image.h"
    $484 = (($483) + 18112|0); //@line 2540 "src/sprites/../puun/gf/../../other/stb_image.h"
    $485 = HEAP32[$484>>2]|0; //@line 2540 "src/sprites/../puun/gf/../../other/stb_image.h"
    $486 = ($485|0)<(24); //@line 2540 "src/sprites/../puun/gf/../../other/stb_image.h"
    if ($486) {
     $487 = $1; //@line 2540 "src/sprites/../puun/gf/../../other/stb_image.h"
     _stbi__grow_buffer_unsafe($487); //@line 2540 "src/sprites/../puun/gf/../../other/stb_image.h"
    }
    $488 = $1; //@line 2541 "src/sprites/../puun/gf/../../other/stb_image.h"
    $489 = (($488) + 18116|0); //@line 2541 "src/sprites/../puun/gf/../../other/stb_image.h"
    $490 = HEAP8[$489>>0]|0; //@line 2541 "src/sprites/../puun/gf/../../other/stb_image.h"
    $491 = $490&255; //@line 2541 "src/sprites/../puun/gf/../../other/stb_image.h"
    $492 = ($491|0)>=(208); //@line 2541 "src/sprites/../puun/gf/../../other/stb_image.h"
    if (!($492)) {
     label = 98;
     break L107;
    }
    $493 = $1; //@line 2541 "src/sprites/../puun/gf/../../other/stb_image.h"
    $494 = (($493) + 18116|0); //@line 2541 "src/sprites/../puun/gf/../../other/stb_image.h"
    $495 = HEAP8[$494>>0]|0; //@line 2541 "src/sprites/../puun/gf/../../other/stb_image.h"
    $496 = $495&255; //@line 2541 "src/sprites/../puun/gf/../../other/stb_image.h"
    $497 = ($496|0)<=(215); //@line 2541 "src/sprites/../puun/gf/../../other/stb_image.h"
    if (!($497)) {
     label = 98;
     break L107;
    }
    $498 = $1; //@line 2542 "src/sprites/../puun/gf/../../other/stb_image.h"
    _stbi__jpeg_reset($498); //@line 2542 "src/sprites/../puun/gf/../../other/stb_image.h"
   }
   $499 = $i13; //@line 2521 "src/sprites/../puun/gf/../../other/stb_image.h"
   $500 = (($499) + 1)|0; //@line 2521 "src/sprites/../puun/gf/../../other/stb_image.h"
   $i13 = $500; //@line 2521 "src/sprites/../puun/gf/../../other/stb_image.h"
  }
  $501 = $j14; //@line 2520 "src/sprites/../puun/gf/../../other/stb_image.h"
  $502 = (($501) + 1)|0; //@line 2520 "src/sprites/../puun/gf/../../other/stb_image.h"
  $j14 = $502; //@line 2520 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 if ((label|0) == 86) {
  $0 = 0; //@line 2533 "src/sprites/../puun/gf/../../other/stb_image.h"
  $503 = $0; //@line 2549 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($503|0); //@line 2549 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 else if ((label|0) == 98) {
  $0 = 1; //@line 2541 "src/sprites/../puun/gf/../../other/stb_image.h"
  $503 = $0; //@line 2549 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($503|0); //@line 2549 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 else if ((label|0) == 104) {
  $0 = 1; //@line 2546 "src/sprites/../puun/gf/../../other/stb_image.h"
  $503 = $0; //@line 2549 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($503|0); //@line 2549 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 return (0)|0;
}
function _stbi__jpeg_decode_block_prog_ac($j,$data,$hac,$fac) {
 $j = $j|0;
 $data = $data|0;
 $hac = $hac|0;
 $fac = $fac|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0;
 var $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0;
 var $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0;
 var $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0;
 var $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0;
 var $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0;
 var $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0;
 var $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0;
 var $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0;
 var $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $bit = 0, $c = 0, $k = 0, $p = 0, $p4 = 0, $r = 0, $r1 = 0, $rs = 0, $rs3 = 0, $s = 0;
 var $s2 = 0, $shift = 0, $zig = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $j;
 $2 = $data;
 $3 = $hac;
 $4 = $fac;
 $5 = $1; //@line 1777 "src/sprites/../puun/gf/../../other/stb_image.h"
 $6 = (($5) + 18128|0); //@line 1777 "src/sprites/../puun/gf/../../other/stb_image.h"
 $7 = HEAP32[$6>>2]|0; //@line 1777 "src/sprites/../puun/gf/../../other/stb_image.h"
 $8 = ($7|0)==(0); //@line 1777 "src/sprites/../puun/gf/../../other/stb_image.h"
 if ($8) {
  $9 = (_stbi__err(10272)|0); //@line 1777 "src/sprites/../puun/gf/../../other/stb_image.h"
  $0 = $9; //@line 1777 "src/sprites/../puun/gf/../../other/stb_image.h"
  $289 = $0; //@line 1891 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($289|0); //@line 1891 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $10 = $1; //@line 1779 "src/sprites/../puun/gf/../../other/stb_image.h"
 $11 = (($10) + 18136|0); //@line 1779 "src/sprites/../puun/gf/../../other/stb_image.h"
 $12 = HEAP32[$11>>2]|0; //@line 1779 "src/sprites/../puun/gf/../../other/stb_image.h"
 $13 = ($12|0)==(0); //@line 1779 "src/sprites/../puun/gf/../../other/stb_image.h"
 if ($13) {
  $14 = $1; //@line 1780 "src/sprites/../puun/gf/../../other/stb_image.h"
  $15 = (($14) + 18140|0); //@line 1780 "src/sprites/../puun/gf/../../other/stb_image.h"
  $16 = HEAP32[$15>>2]|0; //@line 1780 "src/sprites/../puun/gf/../../other/stb_image.h"
  $shift = $16; //@line 1780 "src/sprites/../puun/gf/../../other/stb_image.h"
  $17 = $1; //@line 1782 "src/sprites/../puun/gf/../../other/stb_image.h"
  $18 = (($17) + 18144|0); //@line 1782 "src/sprites/../puun/gf/../../other/stb_image.h"
  $19 = HEAP32[$18>>2]|0; //@line 1782 "src/sprites/../puun/gf/../../other/stb_image.h"
  $20 = ($19|0)!=(0); //@line 1782 "src/sprites/../puun/gf/../../other/stb_image.h"
  if ($20) {
   $21 = $1; //@line 1783 "src/sprites/../puun/gf/../../other/stb_image.h"
   $22 = (($21) + 18144|0); //@line 1783 "src/sprites/../puun/gf/../../other/stb_image.h"
   $23 = HEAP32[$22>>2]|0; //@line 1783 "src/sprites/../puun/gf/../../other/stb_image.h"
   $24 = (($23) + -1)|0; //@line 1783 "src/sprites/../puun/gf/../../other/stb_image.h"
   HEAP32[$22>>2] = $24; //@line 1783 "src/sprites/../puun/gf/../../other/stb_image.h"
   $0 = 1; //@line 1784 "src/sprites/../puun/gf/../../other/stb_image.h"
   $289 = $0; //@line 1891 "src/sprites/../puun/gf/../../other/stb_image.h"
   STACKTOP = sp;return ($289|0); //@line 1891 "src/sprites/../puun/gf/../../other/stb_image.h"
  }
  $25 = $1; //@line 1787 "src/sprites/../puun/gf/../../other/stb_image.h"
  $26 = (($25) + 18128|0); //@line 1787 "src/sprites/../puun/gf/../../other/stb_image.h"
  $27 = HEAP32[$26>>2]|0; //@line 1787 "src/sprites/../puun/gf/../../other/stb_image.h"
  $k = $27; //@line 1787 "src/sprites/../puun/gf/../../other/stb_image.h"
  while(1) {
   $28 = $1; //@line 1791 "src/sprites/../puun/gf/../../other/stb_image.h"
   $29 = (($28) + 18112|0); //@line 1791 "src/sprites/../puun/gf/../../other/stb_image.h"
   $30 = HEAP32[$29>>2]|0; //@line 1791 "src/sprites/../puun/gf/../../other/stb_image.h"
   $31 = ($30|0)<(16); //@line 1791 "src/sprites/../puun/gf/../../other/stb_image.h"
   if ($31) {
    $32 = $1; //@line 1791 "src/sprites/../puun/gf/../../other/stb_image.h"
    _stbi__grow_buffer_unsafe($32); //@line 1791 "src/sprites/../puun/gf/../../other/stb_image.h"
   }
   $33 = $1; //@line 1792 "src/sprites/../puun/gf/../../other/stb_image.h"
   $34 = (($33) + 18108|0); //@line 1792 "src/sprites/../puun/gf/../../other/stb_image.h"
   $35 = HEAP32[$34>>2]|0; //@line 1792 "src/sprites/../puun/gf/../../other/stb_image.h"
   $36 = $35 >>> 23; //@line 1792 "src/sprites/../puun/gf/../../other/stb_image.h"
   $37 = $36 & 511; //@line 1792 "src/sprites/../puun/gf/../../other/stb_image.h"
   $c = $37; //@line 1792 "src/sprites/../puun/gf/../../other/stb_image.h"
   $38 = $c; //@line 1793 "src/sprites/../puun/gf/../../other/stb_image.h"
   $39 = $4; //@line 1793 "src/sprites/../puun/gf/../../other/stb_image.h"
   $40 = (($39) + ($38<<1)|0); //@line 1793 "src/sprites/../puun/gf/../../other/stb_image.h"
   $41 = HEAP16[$40>>1]|0; //@line 1793 "src/sprites/../puun/gf/../../other/stb_image.h"
   $42 = $41 << 16 >> 16; //@line 1793 "src/sprites/../puun/gf/../../other/stb_image.h"
   $r = $42; //@line 1793 "src/sprites/../puun/gf/../../other/stb_image.h"
   $43 = $r; //@line 1794 "src/sprites/../puun/gf/../../other/stb_image.h"
   $44 = ($43|0)!=(0); //@line 1794 "src/sprites/../puun/gf/../../other/stb_image.h"
   if ($44) {
    $45 = $r; //@line 1795 "src/sprites/../puun/gf/../../other/stb_image.h"
    $46 = $45 >> 4; //@line 1795 "src/sprites/../puun/gf/../../other/stb_image.h"
    $47 = $46 & 15; //@line 1795 "src/sprites/../puun/gf/../../other/stb_image.h"
    $48 = $k; //@line 1795 "src/sprites/../puun/gf/../../other/stb_image.h"
    $49 = (($48) + ($47))|0; //@line 1795 "src/sprites/../puun/gf/../../other/stb_image.h"
    $k = $49; //@line 1795 "src/sprites/../puun/gf/../../other/stb_image.h"
    $50 = $r; //@line 1796 "src/sprites/../puun/gf/../../other/stb_image.h"
    $51 = $50 & 15; //@line 1796 "src/sprites/../puun/gf/../../other/stb_image.h"
    $s = $51; //@line 1796 "src/sprites/../puun/gf/../../other/stb_image.h"
    $52 = $s; //@line 1797 "src/sprites/../puun/gf/../../other/stb_image.h"
    $53 = $1; //@line 1797 "src/sprites/../puun/gf/../../other/stb_image.h"
    $54 = (($53) + 18108|0); //@line 1797 "src/sprites/../puun/gf/../../other/stb_image.h"
    $55 = HEAP32[$54>>2]|0; //@line 1797 "src/sprites/../puun/gf/../../other/stb_image.h"
    $56 = $55 << $52; //@line 1797 "src/sprites/../puun/gf/../../other/stb_image.h"
    HEAP32[$54>>2] = $56; //@line 1797 "src/sprites/../puun/gf/../../other/stb_image.h"
    $57 = $s; //@line 1798 "src/sprites/../puun/gf/../../other/stb_image.h"
    $58 = $1; //@line 1798 "src/sprites/../puun/gf/../../other/stb_image.h"
    $59 = (($58) + 18112|0); //@line 1798 "src/sprites/../puun/gf/../../other/stb_image.h"
    $60 = HEAP32[$59>>2]|0; //@line 1798 "src/sprites/../puun/gf/../../other/stb_image.h"
    $61 = (($60) - ($57))|0; //@line 1798 "src/sprites/../puun/gf/../../other/stb_image.h"
    HEAP32[$59>>2] = $61; //@line 1798 "src/sprites/../puun/gf/../../other/stb_image.h"
    $62 = $k; //@line 1799 "src/sprites/../puun/gf/../../other/stb_image.h"
    $63 = (($62) + 1)|0; //@line 1799 "src/sprites/../puun/gf/../../other/stb_image.h"
    $k = $63; //@line 1799 "src/sprites/../puun/gf/../../other/stb_image.h"
    $64 = (8248 + ($62)|0); //@line 1799 "src/sprites/../puun/gf/../../other/stb_image.h"
    $65 = HEAP8[$64>>0]|0; //@line 1799 "src/sprites/../puun/gf/../../other/stb_image.h"
    $66 = $65&255; //@line 1799 "src/sprites/../puun/gf/../../other/stb_image.h"
    $zig = $66; //@line 1799 "src/sprites/../puun/gf/../../other/stb_image.h"
    $67 = $r; //@line 1800 "src/sprites/../puun/gf/../../other/stb_image.h"
    $68 = $67 >> 8; //@line 1800 "src/sprites/../puun/gf/../../other/stb_image.h"
    $69 = $shift; //@line 1800 "src/sprites/../puun/gf/../../other/stb_image.h"
    $70 = $68 << $69; //@line 1800 "src/sprites/../puun/gf/../../other/stb_image.h"
    $71 = $70&65535; //@line 1800 "src/sprites/../puun/gf/../../other/stb_image.h"
    $72 = $zig; //@line 1800 "src/sprites/../puun/gf/../../other/stb_image.h"
    $73 = $2; //@line 1800 "src/sprites/../puun/gf/../../other/stb_image.h"
    $74 = (($73) + ($72<<1)|0); //@line 1800 "src/sprites/../puun/gf/../../other/stb_image.h"
    HEAP16[$74>>1] = $71; //@line 1800 "src/sprites/../puun/gf/../../other/stb_image.h"
   } else {
    $75 = $1; //@line 1802 "src/sprites/../puun/gf/../../other/stb_image.h"
    $76 = $3; //@line 1802 "src/sprites/../puun/gf/../../other/stb_image.h"
    $77 = (_stbi__jpeg_huff_decode($75,$76)|0); //@line 1802 "src/sprites/../puun/gf/../../other/stb_image.h"
    $rs = $77; //@line 1802 "src/sprites/../puun/gf/../../other/stb_image.h"
    $78 = $rs; //@line 1803 "src/sprites/../puun/gf/../../other/stb_image.h"
    $79 = ($78|0)<(0); //@line 1803 "src/sprites/../puun/gf/../../other/stb_image.h"
    if ($79) {
     label = 12;
     break;
    }
    $81 = $rs; //@line 1804 "src/sprites/../puun/gf/../../other/stb_image.h"
    $82 = $81 & 15; //@line 1804 "src/sprites/../puun/gf/../../other/stb_image.h"
    $s = $82; //@line 1804 "src/sprites/../puun/gf/../../other/stb_image.h"
    $83 = $rs; //@line 1805 "src/sprites/../puun/gf/../../other/stb_image.h"
    $84 = $83 >> 4; //@line 1805 "src/sprites/../puun/gf/../../other/stb_image.h"
    $r = $84; //@line 1805 "src/sprites/../puun/gf/../../other/stb_image.h"
    $85 = $s; //@line 1806 "src/sprites/../puun/gf/../../other/stb_image.h"
    $86 = ($85|0)==(0); //@line 1806 "src/sprites/../puun/gf/../../other/stb_image.h"
    if ($86) {
     $87 = $r; //@line 1807 "src/sprites/../puun/gf/../../other/stb_image.h"
     $88 = ($87|0)<(15); //@line 1807 "src/sprites/../puun/gf/../../other/stb_image.h"
     if ($88) {
      label = 15;
      break;
     }
     $106 = $k; //@line 1814 "src/sprites/../puun/gf/../../other/stb_image.h"
     $107 = (($106) + 16)|0; //@line 1814 "src/sprites/../puun/gf/../../other/stb_image.h"
     $k = $107; //@line 1814 "src/sprites/../puun/gf/../../other/stb_image.h"
    } else {
     $108 = $r; //@line 1816 "src/sprites/../puun/gf/../../other/stb_image.h"
     $109 = $k; //@line 1816 "src/sprites/../puun/gf/../../other/stb_image.h"
     $110 = (($109) + ($108))|0; //@line 1816 "src/sprites/../puun/gf/../../other/stb_image.h"
     $k = $110; //@line 1816 "src/sprites/../puun/gf/../../other/stb_image.h"
     $111 = $k; //@line 1817 "src/sprites/../puun/gf/../../other/stb_image.h"
     $112 = (($111) + 1)|0; //@line 1817 "src/sprites/../puun/gf/../../other/stb_image.h"
     $k = $112; //@line 1817 "src/sprites/../puun/gf/../../other/stb_image.h"
     $113 = (8248 + ($111)|0); //@line 1817 "src/sprites/../puun/gf/../../other/stb_image.h"
     $114 = HEAP8[$113>>0]|0; //@line 1817 "src/sprites/../puun/gf/../../other/stb_image.h"
     $115 = $114&255; //@line 1817 "src/sprites/../puun/gf/../../other/stb_image.h"
     $zig = $115; //@line 1817 "src/sprites/../puun/gf/../../other/stb_image.h"
     $116 = $1; //@line 1818 "src/sprites/../puun/gf/../../other/stb_image.h"
     $117 = $s; //@line 1818 "src/sprites/../puun/gf/../../other/stb_image.h"
     $118 = (_stbi__extend_receive($116,$117)|0); //@line 1818 "src/sprites/../puun/gf/../../other/stb_image.h"
     $119 = $shift; //@line 1818 "src/sprites/../puun/gf/../../other/stb_image.h"
     $120 = $118 << $119; //@line 1818 "src/sprites/../puun/gf/../../other/stb_image.h"
     $121 = $120&65535; //@line 1818 "src/sprites/../puun/gf/../../other/stb_image.h"
     $122 = $zig; //@line 1818 "src/sprites/../puun/gf/../../other/stb_image.h"
     $123 = $2; //@line 1818 "src/sprites/../puun/gf/../../other/stb_image.h"
     $124 = (($123) + ($122<<1)|0); //@line 1818 "src/sprites/../puun/gf/../../other/stb_image.h"
     HEAP16[$124>>1] = $121; //@line 1818 "src/sprites/../puun/gf/../../other/stb_image.h"
    }
   }
   $125 = $k; //@line 1821 "src/sprites/../puun/gf/../../other/stb_image.h"
   $126 = $1; //@line 1821 "src/sprites/../puun/gf/../../other/stb_image.h"
   $127 = (($126) + 18132|0); //@line 1821 "src/sprites/../puun/gf/../../other/stb_image.h"
   $128 = HEAP32[$127>>2]|0; //@line 1821 "src/sprites/../puun/gf/../../other/stb_image.h"
   $129 = ($125|0)<=($128|0); //@line 1821 "src/sprites/../puun/gf/../../other/stb_image.h"
   if (!($129)) {
    break;
   }
  }
  if ((label|0) == 12) {
   $80 = (_stbi__err(8704)|0); //@line 1803 "src/sprites/../puun/gf/../../other/stb_image.h"
   $0 = $80; //@line 1803 "src/sprites/../puun/gf/../../other/stb_image.h"
   $289 = $0; //@line 1891 "src/sprites/../puun/gf/../../other/stb_image.h"
   STACKTOP = sp;return ($289|0); //@line 1891 "src/sprites/../puun/gf/../../other/stb_image.h"
  }
  if ((label|0) == 15) {
   $89 = $r; //@line 1808 "src/sprites/../puun/gf/../../other/stb_image.h"
   $90 = 1 << $89; //@line 1808 "src/sprites/../puun/gf/../../other/stb_image.h"
   $91 = $1; //@line 1808 "src/sprites/../puun/gf/../../other/stb_image.h"
   $92 = (($91) + 18144|0); //@line 1808 "src/sprites/../puun/gf/../../other/stb_image.h"
   HEAP32[$92>>2] = $90; //@line 1808 "src/sprites/../puun/gf/../../other/stb_image.h"
   $93 = $r; //@line 1809 "src/sprites/../puun/gf/../../other/stb_image.h"
   $94 = ($93|0)!=(0); //@line 1809 "src/sprites/../puun/gf/../../other/stb_image.h"
   if ($94) {
    $95 = $1; //@line 1810 "src/sprites/../puun/gf/../../other/stb_image.h"
    $96 = $r; //@line 1810 "src/sprites/../puun/gf/../../other/stb_image.h"
    $97 = (_stbi__jpeg_get_bits($95,$96)|0); //@line 1810 "src/sprites/../puun/gf/../../other/stb_image.h"
    $98 = $1; //@line 1810 "src/sprites/../puun/gf/../../other/stb_image.h"
    $99 = (($98) + 18144|0); //@line 1810 "src/sprites/../puun/gf/../../other/stb_image.h"
    $100 = HEAP32[$99>>2]|0; //@line 1810 "src/sprites/../puun/gf/../../other/stb_image.h"
    $101 = (($100) + ($97))|0; //@line 1810 "src/sprites/../puun/gf/../../other/stb_image.h"
    HEAP32[$99>>2] = $101; //@line 1810 "src/sprites/../puun/gf/../../other/stb_image.h"
   }
   $102 = $1; //@line 1811 "src/sprites/../puun/gf/../../other/stb_image.h"
   $103 = (($102) + 18144|0); //@line 1811 "src/sprites/../puun/gf/../../other/stb_image.h"
   $104 = HEAP32[$103>>2]|0; //@line 1811 "src/sprites/../puun/gf/../../other/stb_image.h"
   $105 = (($104) + -1)|0; //@line 1811 "src/sprites/../puun/gf/../../other/stb_image.h"
   HEAP32[$103>>2] = $105; //@line 1811 "src/sprites/../puun/gf/../../other/stb_image.h"
  }
 } else {
  $130 = $1; //@line 1825 "src/sprites/../puun/gf/../../other/stb_image.h"
  $131 = (($130) + 18140|0); //@line 1825 "src/sprites/../puun/gf/../../other/stb_image.h"
  $132 = HEAP32[$131>>2]|0; //@line 1825 "src/sprites/../puun/gf/../../other/stb_image.h"
  $133 = 1 << $132; //@line 1825 "src/sprites/../puun/gf/../../other/stb_image.h"
  $134 = $133&65535; //@line 1825 "src/sprites/../puun/gf/../../other/stb_image.h"
  $bit = $134; //@line 1825 "src/sprites/../puun/gf/../../other/stb_image.h"
  $135 = $1; //@line 1827 "src/sprites/../puun/gf/../../other/stb_image.h"
  $136 = (($135) + 18144|0); //@line 1827 "src/sprites/../puun/gf/../../other/stb_image.h"
  $137 = HEAP32[$136>>2]|0; //@line 1827 "src/sprites/../puun/gf/../../other/stb_image.h"
  $138 = ($137|0)!=(0); //@line 1827 "src/sprites/../puun/gf/../../other/stb_image.h"
  do {
   if ($138) {
    $139 = $1; //@line 1828 "src/sprites/../puun/gf/../../other/stb_image.h"
    $140 = (($139) + 18144|0); //@line 1828 "src/sprites/../puun/gf/../../other/stb_image.h"
    $141 = HEAP32[$140>>2]|0; //@line 1828 "src/sprites/../puun/gf/../../other/stb_image.h"
    $142 = (($141) + -1)|0; //@line 1828 "src/sprites/../puun/gf/../../other/stb_image.h"
    HEAP32[$140>>2] = $142; //@line 1828 "src/sprites/../puun/gf/../../other/stb_image.h"
    $143 = $1; //@line 1829 "src/sprites/../puun/gf/../../other/stb_image.h"
    $144 = (($143) + 18128|0); //@line 1829 "src/sprites/../puun/gf/../../other/stb_image.h"
    $145 = HEAP32[$144>>2]|0; //@line 1829 "src/sprites/../puun/gf/../../other/stb_image.h"
    $k = $145; //@line 1829 "src/sprites/../puun/gf/../../other/stb_image.h"
    while(1) {
     $146 = $k; //@line 1829 "src/sprites/../puun/gf/../../other/stb_image.h"
     $147 = $1; //@line 1829 "src/sprites/../puun/gf/../../other/stb_image.h"
     $148 = (($147) + 18132|0); //@line 1829 "src/sprites/../puun/gf/../../other/stb_image.h"
     $149 = HEAP32[$148>>2]|0; //@line 1829 "src/sprites/../puun/gf/../../other/stb_image.h"
     $150 = ($146|0)<=($149|0); //@line 1829 "src/sprites/../puun/gf/../../other/stb_image.h"
     if (!($150)) {
      break;
     }
     $151 = $k; //@line 1830 "src/sprites/../puun/gf/../../other/stb_image.h"
     $152 = (8248 + ($151)|0); //@line 1830 "src/sprites/../puun/gf/../../other/stb_image.h"
     $153 = HEAP8[$152>>0]|0; //@line 1830 "src/sprites/../puun/gf/../../other/stb_image.h"
     $154 = $153&255; //@line 1830 "src/sprites/../puun/gf/../../other/stb_image.h"
     $155 = $2; //@line 1830 "src/sprites/../puun/gf/../../other/stb_image.h"
     $156 = (($155) + ($154<<1)|0); //@line 1830 "src/sprites/../puun/gf/../../other/stb_image.h"
     $p = $156; //@line 1830 "src/sprites/../puun/gf/../../other/stb_image.h"
     $157 = $p; //@line 1831 "src/sprites/../puun/gf/../../other/stb_image.h"
     $158 = HEAP16[$157>>1]|0; //@line 1831 "src/sprites/../puun/gf/../../other/stb_image.h"
     $159 = $158 << 16 >> 16; //@line 1831 "src/sprites/../puun/gf/../../other/stb_image.h"
     $160 = ($159|0)!=(0); //@line 1831 "src/sprites/../puun/gf/../../other/stb_image.h"
     if ($160) {
      $161 = $1; //@line 1832 "src/sprites/../puun/gf/../../other/stb_image.h"
      $162 = (_stbi__jpeg_get_bit($161)|0); //@line 1832 "src/sprites/../puun/gf/../../other/stb_image.h"
      $163 = ($162|0)!=(0); //@line 1832 "src/sprites/../puun/gf/../../other/stb_image.h"
      if ($163) {
       $164 = $p; //@line 1833 "src/sprites/../puun/gf/../../other/stb_image.h"
       $165 = HEAP16[$164>>1]|0; //@line 1833 "src/sprites/../puun/gf/../../other/stb_image.h"
       $166 = $165 << 16 >> 16; //@line 1833 "src/sprites/../puun/gf/../../other/stb_image.h"
       $167 = $bit; //@line 1833 "src/sprites/../puun/gf/../../other/stb_image.h"
       $168 = $167 << 16 >> 16; //@line 1833 "src/sprites/../puun/gf/../../other/stb_image.h"
       $169 = $166 & $168; //@line 1833 "src/sprites/../puun/gf/../../other/stb_image.h"
       $170 = ($169|0)==(0); //@line 1833 "src/sprites/../puun/gf/../../other/stb_image.h"
       if ($170) {
        $171 = $p; //@line 1834 "src/sprites/../puun/gf/../../other/stb_image.h"
        $172 = HEAP16[$171>>1]|0; //@line 1834 "src/sprites/../puun/gf/../../other/stb_image.h"
        $173 = $172 << 16 >> 16; //@line 1834 "src/sprites/../puun/gf/../../other/stb_image.h"
        $174 = ($173|0)>(0); //@line 1834 "src/sprites/../puun/gf/../../other/stb_image.h"
        if ($174) {
         $175 = $bit; //@line 1835 "src/sprites/../puun/gf/../../other/stb_image.h"
         $176 = $175 << 16 >> 16; //@line 1835 "src/sprites/../puun/gf/../../other/stb_image.h"
         $177 = $p; //@line 1835 "src/sprites/../puun/gf/../../other/stb_image.h"
         $178 = HEAP16[$177>>1]|0; //@line 1835 "src/sprites/../puun/gf/../../other/stb_image.h"
         $179 = $178 << 16 >> 16; //@line 1835 "src/sprites/../puun/gf/../../other/stb_image.h"
         $180 = (($179) + ($176))|0; //@line 1835 "src/sprites/../puun/gf/../../other/stb_image.h"
         $181 = $180&65535; //@line 1835 "src/sprites/../puun/gf/../../other/stb_image.h"
         HEAP16[$177>>1] = $181; //@line 1835 "src/sprites/../puun/gf/../../other/stb_image.h"
        } else {
         $182 = $bit; //@line 1837 "src/sprites/../puun/gf/../../other/stb_image.h"
         $183 = $182 << 16 >> 16; //@line 1837 "src/sprites/../puun/gf/../../other/stb_image.h"
         $184 = $p; //@line 1837 "src/sprites/../puun/gf/../../other/stb_image.h"
         $185 = HEAP16[$184>>1]|0; //@line 1837 "src/sprites/../puun/gf/../../other/stb_image.h"
         $186 = $185 << 16 >> 16; //@line 1837 "src/sprites/../puun/gf/../../other/stb_image.h"
         $187 = (($186) - ($183))|0; //@line 1837 "src/sprites/../puun/gf/../../other/stb_image.h"
         $188 = $187&65535; //@line 1837 "src/sprites/../puun/gf/../../other/stb_image.h"
         HEAP16[$184>>1] = $188; //@line 1837 "src/sprites/../puun/gf/../../other/stb_image.h"
        }
       }
      }
     }
     $189 = $k; //@line 1829 "src/sprites/../puun/gf/../../other/stb_image.h"
     $190 = (($189) + 1)|0; //@line 1829 "src/sprites/../puun/gf/../../other/stb_image.h"
     $k = $190; //@line 1829 "src/sprites/../puun/gf/../../other/stb_image.h"
    }
   } else {
    $191 = $1; //@line 1841 "src/sprites/../puun/gf/../../other/stb_image.h"
    $192 = (($191) + 18128|0); //@line 1841 "src/sprites/../puun/gf/../../other/stb_image.h"
    $193 = HEAP32[$192>>2]|0; //@line 1841 "src/sprites/../puun/gf/../../other/stb_image.h"
    $k = $193; //@line 1841 "src/sprites/../puun/gf/../../other/stb_image.h"
    while(1) {
     $194 = $1; //@line 1844 "src/sprites/../puun/gf/../../other/stb_image.h"
     $195 = $3; //@line 1844 "src/sprites/../puun/gf/../../other/stb_image.h"
     $196 = (_stbi__jpeg_huff_decode($194,$195)|0); //@line 1844 "src/sprites/../puun/gf/../../other/stb_image.h"
     $rs3 = $196; //@line 1844 "src/sprites/../puun/gf/../../other/stb_image.h"
     $197 = $rs3; //@line 1845 "src/sprites/../puun/gf/../../other/stb_image.h"
     $198 = ($197|0)<(0); //@line 1845 "src/sprites/../puun/gf/../../other/stb_image.h"
     if ($198) {
      label = 41;
      break;
     }
     $200 = $rs3; //@line 1846 "src/sprites/../puun/gf/../../other/stb_image.h"
     $201 = $200 & 15; //@line 1846 "src/sprites/../puun/gf/../../other/stb_image.h"
     $s2 = $201; //@line 1846 "src/sprites/../puun/gf/../../other/stb_image.h"
     $202 = $rs3; //@line 1847 "src/sprites/../puun/gf/../../other/stb_image.h"
     $203 = $202 >> 4; //@line 1847 "src/sprites/../puun/gf/../../other/stb_image.h"
     $r1 = $203; //@line 1847 "src/sprites/../puun/gf/../../other/stb_image.h"
     $204 = $s2; //@line 1848 "src/sprites/../puun/gf/../../other/stb_image.h"
     $205 = ($204|0)==(0); //@line 1848 "src/sprites/../puun/gf/../../other/stb_image.h"
     if ($205) {
      $206 = $r1; //@line 1849 "src/sprites/../puun/gf/../../other/stb_image.h"
      $207 = ($206|0)<(15); //@line 1849 "src/sprites/../puun/gf/../../other/stb_image.h"
      if ($207) {
       $208 = $r1; //@line 1850 "src/sprites/../puun/gf/../../other/stb_image.h"
       $209 = 1 << $208; //@line 1850 "src/sprites/../puun/gf/../../other/stb_image.h"
       $210 = (($209) - 1)|0; //@line 1850 "src/sprites/../puun/gf/../../other/stb_image.h"
       $211 = $1; //@line 1850 "src/sprites/../puun/gf/../../other/stb_image.h"
       $212 = (($211) + 18144|0); //@line 1850 "src/sprites/../puun/gf/../../other/stb_image.h"
       HEAP32[$212>>2] = $210; //@line 1850 "src/sprites/../puun/gf/../../other/stb_image.h"
       $213 = $r1; //@line 1851 "src/sprites/../puun/gf/../../other/stb_image.h"
       $214 = ($213|0)!=(0); //@line 1851 "src/sprites/../puun/gf/../../other/stb_image.h"
       if ($214) {
        $215 = $1; //@line 1852 "src/sprites/../puun/gf/../../other/stb_image.h"
        $216 = $r1; //@line 1852 "src/sprites/../puun/gf/../../other/stb_image.h"
        $217 = (_stbi__jpeg_get_bits($215,$216)|0); //@line 1852 "src/sprites/../puun/gf/../../other/stb_image.h"
        $218 = $1; //@line 1852 "src/sprites/../puun/gf/../../other/stb_image.h"
        $219 = (($218) + 18144|0); //@line 1852 "src/sprites/../puun/gf/../../other/stb_image.h"
        $220 = HEAP32[$219>>2]|0; //@line 1852 "src/sprites/../puun/gf/../../other/stb_image.h"
        $221 = (($220) + ($217))|0; //@line 1852 "src/sprites/../puun/gf/../../other/stb_image.h"
        HEAP32[$219>>2] = $221; //@line 1852 "src/sprites/../puun/gf/../../other/stb_image.h"
       }
       $r1 = 64; //@line 1853 "src/sprites/../puun/gf/../../other/stb_image.h"
      } else {
      }
     } else {
      $222 = $s2; //@line 1860 "src/sprites/../puun/gf/../../other/stb_image.h"
      $223 = ($222|0)!=(1); //@line 1860 "src/sprites/../puun/gf/../../other/stb_image.h"
      if ($223) {
       label = 50;
       break;
      }
      $225 = $1; //@line 1862 "src/sprites/../puun/gf/../../other/stb_image.h"
      $226 = (_stbi__jpeg_get_bit($225)|0); //@line 1862 "src/sprites/../puun/gf/../../other/stb_image.h"
      $227 = ($226|0)!=(0); //@line 1862 "src/sprites/../puun/gf/../../other/stb_image.h"
      if ($227) {
       $228 = $bit; //@line 1863 "src/sprites/../puun/gf/../../other/stb_image.h"
       $229 = $228 << 16 >> 16; //@line 1863 "src/sprites/../puun/gf/../../other/stb_image.h"
       $s2 = $229; //@line 1863 "src/sprites/../puun/gf/../../other/stb_image.h"
      } else {
       $230 = $bit; //@line 1865 "src/sprites/../puun/gf/../../other/stb_image.h"
       $231 = $230 << 16 >> 16; //@line 1865 "src/sprites/../puun/gf/../../other/stb_image.h"
       $232 = (0 - ($231))|0; //@line 1865 "src/sprites/../puun/gf/../../other/stb_image.h"
       $s2 = $232; //@line 1865 "src/sprites/../puun/gf/../../other/stb_image.h"
      }
     }
     while(1) {
      $233 = $k; //@line 1869 "src/sprites/../puun/gf/../../other/stb_image.h"
      $234 = $1; //@line 1869 "src/sprites/../puun/gf/../../other/stb_image.h"
      $235 = (($234) + 18132|0); //@line 1869 "src/sprites/../puun/gf/../../other/stb_image.h"
      $236 = HEAP32[$235>>2]|0; //@line 1869 "src/sprites/../puun/gf/../../other/stb_image.h"
      $237 = ($233|0)<=($236|0); //@line 1869 "src/sprites/../puun/gf/../../other/stb_image.h"
      if (!($237)) {
       break;
      }
      $238 = $k; //@line 1870 "src/sprites/../puun/gf/../../other/stb_image.h"
      $239 = (($238) + 1)|0; //@line 1870 "src/sprites/../puun/gf/../../other/stb_image.h"
      $k = $239; //@line 1870 "src/sprites/../puun/gf/../../other/stb_image.h"
      $240 = (8248 + ($238)|0); //@line 1870 "src/sprites/../puun/gf/../../other/stb_image.h"
      $241 = HEAP8[$240>>0]|0; //@line 1870 "src/sprites/../puun/gf/../../other/stb_image.h"
      $242 = $241&255; //@line 1870 "src/sprites/../puun/gf/../../other/stb_image.h"
      $243 = $2; //@line 1870 "src/sprites/../puun/gf/../../other/stb_image.h"
      $244 = (($243) + ($242<<1)|0); //@line 1870 "src/sprites/../puun/gf/../../other/stb_image.h"
      $p4 = $244; //@line 1870 "src/sprites/../puun/gf/../../other/stb_image.h"
      $245 = $p4; //@line 1871 "src/sprites/../puun/gf/../../other/stb_image.h"
      $246 = HEAP16[$245>>1]|0; //@line 1871 "src/sprites/../puun/gf/../../other/stb_image.h"
      $247 = $246 << 16 >> 16; //@line 1871 "src/sprites/../puun/gf/../../other/stb_image.h"
      $248 = ($247|0)!=(0); //@line 1871 "src/sprites/../puun/gf/../../other/stb_image.h"
      if ($248) {
       $249 = $1; //@line 1872 "src/sprites/../puun/gf/../../other/stb_image.h"
       $250 = (_stbi__jpeg_get_bit($249)|0); //@line 1872 "src/sprites/../puun/gf/../../other/stb_image.h"
       $251 = ($250|0)!=(0); //@line 1872 "src/sprites/../puun/gf/../../other/stb_image.h"
       if ($251) {
        $252 = $p4; //@line 1873 "src/sprites/../puun/gf/../../other/stb_image.h"
        $253 = HEAP16[$252>>1]|0; //@line 1873 "src/sprites/../puun/gf/../../other/stb_image.h"
        $254 = $253 << 16 >> 16; //@line 1873 "src/sprites/../puun/gf/../../other/stb_image.h"
        $255 = $bit; //@line 1873 "src/sprites/../puun/gf/../../other/stb_image.h"
        $256 = $255 << 16 >> 16; //@line 1873 "src/sprites/../puun/gf/../../other/stb_image.h"
        $257 = $254 & $256; //@line 1873 "src/sprites/../puun/gf/../../other/stb_image.h"
        $258 = ($257|0)==(0); //@line 1873 "src/sprites/../puun/gf/../../other/stb_image.h"
        if ($258) {
         $259 = $p4; //@line 1874 "src/sprites/../puun/gf/../../other/stb_image.h"
         $260 = HEAP16[$259>>1]|0; //@line 1874 "src/sprites/../puun/gf/../../other/stb_image.h"
         $261 = $260 << 16 >> 16; //@line 1874 "src/sprites/../puun/gf/../../other/stb_image.h"
         $262 = ($261|0)>(0); //@line 1874 "src/sprites/../puun/gf/../../other/stb_image.h"
         if ($262) {
          $263 = $bit; //@line 1875 "src/sprites/../puun/gf/../../other/stb_image.h"
          $264 = $263 << 16 >> 16; //@line 1875 "src/sprites/../puun/gf/../../other/stb_image.h"
          $265 = $p4; //@line 1875 "src/sprites/../puun/gf/../../other/stb_image.h"
          $266 = HEAP16[$265>>1]|0; //@line 1875 "src/sprites/../puun/gf/../../other/stb_image.h"
          $267 = $266 << 16 >> 16; //@line 1875 "src/sprites/../puun/gf/../../other/stb_image.h"
          $268 = (($267) + ($264))|0; //@line 1875 "src/sprites/../puun/gf/../../other/stb_image.h"
          $269 = $268&65535; //@line 1875 "src/sprites/../puun/gf/../../other/stb_image.h"
          HEAP16[$265>>1] = $269; //@line 1875 "src/sprites/../puun/gf/../../other/stb_image.h"
         } else {
          $270 = $bit; //@line 1877 "src/sprites/../puun/gf/../../other/stb_image.h"
          $271 = $270 << 16 >> 16; //@line 1877 "src/sprites/../puun/gf/../../other/stb_image.h"
          $272 = $p4; //@line 1877 "src/sprites/../puun/gf/../../other/stb_image.h"
          $273 = HEAP16[$272>>1]|0; //@line 1877 "src/sprites/../puun/gf/../../other/stb_image.h"
          $274 = $273 << 16 >> 16; //@line 1877 "src/sprites/../puun/gf/../../other/stb_image.h"
          $275 = (($274) - ($271))|0; //@line 1877 "src/sprites/../puun/gf/../../other/stb_image.h"
          $276 = $275&65535; //@line 1877 "src/sprites/../puun/gf/../../other/stb_image.h"
          HEAP16[$272>>1] = $276; //@line 1877 "src/sprites/../puun/gf/../../other/stb_image.h"
         }
        }
       }
      } else {
       $277 = $r1; //@line 1880 "src/sprites/../puun/gf/../../other/stb_image.h"
       $278 = ($277|0)==(0); //@line 1880 "src/sprites/../puun/gf/../../other/stb_image.h"
       if ($278) {
        label = 67;
        break;
       }
       $282 = $r1; //@line 1884 "src/sprites/../puun/gf/../../other/stb_image.h"
       $283 = (($282) + -1)|0; //@line 1884 "src/sprites/../puun/gf/../../other/stb_image.h"
       $r1 = $283; //@line 1884 "src/sprites/../puun/gf/../../other/stb_image.h"
      }
     }
     if ((label|0) == 67) {
      label = 0;
      $279 = $s2; //@line 1881 "src/sprites/../puun/gf/../../other/stb_image.h"
      $280 = $279&65535; //@line 1881 "src/sprites/../puun/gf/../../other/stb_image.h"
      $281 = $p4; //@line 1881 "src/sprites/../puun/gf/../../other/stb_image.h"
      HEAP16[$281>>1] = $280; //@line 1881 "src/sprites/../puun/gf/../../other/stb_image.h"
     }
     $284 = $k; //@line 1887 "src/sprites/../puun/gf/../../other/stb_image.h"
     $285 = $1; //@line 1887 "src/sprites/../puun/gf/../../other/stb_image.h"
     $286 = (($285) + 18132|0); //@line 1887 "src/sprites/../puun/gf/../../other/stb_image.h"
     $287 = HEAP32[$286>>2]|0; //@line 1887 "src/sprites/../puun/gf/../../other/stb_image.h"
     $288 = ($284|0)<=($287|0); //@line 1887 "src/sprites/../puun/gf/../../other/stb_image.h"
     if (!($288)) {
      label = 72;
      break;
     }
    }
    if ((label|0) == 41) {
     $199 = (_stbi__err(8704)|0); //@line 1845 "src/sprites/../puun/gf/../../other/stb_image.h"
     $0 = $199; //@line 1845 "src/sprites/../puun/gf/../../other/stb_image.h"
     $289 = $0; //@line 1891 "src/sprites/../puun/gf/../../other/stb_image.h"
     STACKTOP = sp;return ($289|0); //@line 1891 "src/sprites/../puun/gf/../../other/stb_image.h"
    }
    else if ((label|0) == 50) {
     $224 = (_stbi__err(8704)|0); //@line 1860 "src/sprites/../puun/gf/../../other/stb_image.h"
     $0 = $224; //@line 1860 "src/sprites/../puun/gf/../../other/stb_image.h"
     $289 = $0; //@line 1891 "src/sprites/../puun/gf/../../other/stb_image.h"
     STACKTOP = sp;return ($289|0); //@line 1891 "src/sprites/../puun/gf/../../other/stb_image.h"
    }
    else if ((label|0) == 72) {
     break;
    }
   }
  } while(0);
 }
 $0 = 1; //@line 1890 "src/sprites/../puun/gf/../../other/stb_image.h"
 $289 = $0; //@line 1891 "src/sprites/../puun/gf/../../other/stb_image.h"
 STACKTOP = sp;return ($289|0); //@line 1891 "src/sprites/../puun/gf/../../other/stb_image.h"
}
function _stbi__jpeg_get_bit($j) {
 $j = $j|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $k = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $j;
 $1 = $0; //@line 1670 "src/sprites/../puun/gf/../../other/stb_image.h"
 $2 = (($1) + 18112|0); //@line 1670 "src/sprites/../puun/gf/../../other/stb_image.h"
 $3 = HEAP32[$2>>2]|0; //@line 1670 "src/sprites/../puun/gf/../../other/stb_image.h"
 $4 = ($3|0)<(1); //@line 1670 "src/sprites/../puun/gf/../../other/stb_image.h"
 if ($4) {
  $5 = $0; //@line 1670 "src/sprites/../puun/gf/../../other/stb_image.h"
  _stbi__grow_buffer_unsafe($5); //@line 1670 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $6 = $0; //@line 1671 "src/sprites/../puun/gf/../../other/stb_image.h"
 $7 = (($6) + 18108|0); //@line 1671 "src/sprites/../puun/gf/../../other/stb_image.h"
 $8 = HEAP32[$7>>2]|0; //@line 1671 "src/sprites/../puun/gf/../../other/stb_image.h"
 $k = $8; //@line 1671 "src/sprites/../puun/gf/../../other/stb_image.h"
 $9 = $0; //@line 1672 "src/sprites/../puun/gf/../../other/stb_image.h"
 $10 = (($9) + 18108|0); //@line 1672 "src/sprites/../puun/gf/../../other/stb_image.h"
 $11 = HEAP32[$10>>2]|0; //@line 1672 "src/sprites/../puun/gf/../../other/stb_image.h"
 $12 = $11 << 1; //@line 1672 "src/sprites/../puun/gf/../../other/stb_image.h"
 HEAP32[$10>>2] = $12; //@line 1672 "src/sprites/../puun/gf/../../other/stb_image.h"
 $13 = $0; //@line 1673 "src/sprites/../puun/gf/../../other/stb_image.h"
 $14 = (($13) + 18112|0); //@line 1673 "src/sprites/../puun/gf/../../other/stb_image.h"
 $15 = HEAP32[$14>>2]|0; //@line 1673 "src/sprites/../puun/gf/../../other/stb_image.h"
 $16 = (($15) + -1)|0; //@line 1673 "src/sprites/../puun/gf/../../other/stb_image.h"
 HEAP32[$14>>2] = $16; //@line 1673 "src/sprites/../puun/gf/../../other/stb_image.h"
 $17 = $k; //@line 1674 "src/sprites/../puun/gf/../../other/stb_image.h"
 $18 = $17 & -2147483648; //@line 1674 "src/sprites/../puun/gf/../../other/stb_image.h"
 STACKTOP = sp;return ($18|0); //@line 1674 "src/sprites/../puun/gf/../../other/stb_image.h"
}
function _stbi__extend_receive($j,$n) {
 $j = $j|0;
 $n = $n|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $k = 0, $sgn = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $j;
 $1 = $n;
 $2 = $0; //@line 1644 "src/sprites/../puun/gf/../../other/stb_image.h"
 $3 = (($2) + 18112|0); //@line 1644 "src/sprites/../puun/gf/../../other/stb_image.h"
 $4 = HEAP32[$3>>2]|0; //@line 1644 "src/sprites/../puun/gf/../../other/stb_image.h"
 $5 = $1; //@line 1644 "src/sprites/../puun/gf/../../other/stb_image.h"
 $6 = ($4|0)<($5|0); //@line 1644 "src/sprites/../puun/gf/../../other/stb_image.h"
 if ($6) {
  $7 = $0; //@line 1644 "src/sprites/../puun/gf/../../other/stb_image.h"
  _stbi__grow_buffer_unsafe($7); //@line 1644 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $8 = $0; //@line 1646 "src/sprites/../puun/gf/../../other/stb_image.h"
 $9 = (($8) + 18108|0); //@line 1646 "src/sprites/../puun/gf/../../other/stb_image.h"
 $10 = HEAP32[$9>>2]|0; //@line 1646 "src/sprites/../puun/gf/../../other/stb_image.h"
 $11 = $10 >> 31; //@line 1646 "src/sprites/../puun/gf/../../other/stb_image.h"
 $sgn = $11; //@line 1646 "src/sprites/../puun/gf/../../other/stb_image.h"
 $12 = $0; //@line 1647 "src/sprites/../puun/gf/../../other/stb_image.h"
 $13 = (($12) + 18108|0); //@line 1647 "src/sprites/../puun/gf/../../other/stb_image.h"
 $14 = HEAP32[$13>>2]|0; //@line 1647 "src/sprites/../puun/gf/../../other/stb_image.h"
 $15 = $1; //@line 1647 "src/sprites/../puun/gf/../../other/stb_image.h"
 $16 = $14 << $15; //@line 1647 "src/sprites/../puun/gf/../../other/stb_image.h"
 $17 = $0; //@line 1647 "src/sprites/../puun/gf/../../other/stb_image.h"
 $18 = (($17) + 18108|0); //@line 1647 "src/sprites/../puun/gf/../../other/stb_image.h"
 $19 = HEAP32[$18>>2]|0; //@line 1647 "src/sprites/../puun/gf/../../other/stb_image.h"
 $20 = $1; //@line 1647 "src/sprites/../puun/gf/../../other/stb_image.h"
 $21 = (32 - ($20))|0; //@line 1647 "src/sprites/../puun/gf/../../other/stb_image.h"
 $22 = $19 >>> $21; //@line 1647 "src/sprites/../puun/gf/../../other/stb_image.h"
 $23 = $16 | $22; //@line 1647 "src/sprites/../puun/gf/../../other/stb_image.h"
 $k = $23; //@line 1647 "src/sprites/../puun/gf/../../other/stb_image.h"
 $24 = $1; //@line 1648 "src/sprites/../puun/gf/../../other/stb_image.h"
 $25 = ($24|0)>=(0); //@line 1648 "src/sprites/../puun/gf/../../other/stb_image.h"
 if (!($25)) {
  ___assert_fail((10296|0),(7560|0),1648,(10360|0)); //@line 1648 "src/sprites/../puun/gf/../../other/stb_image.h"
  // unreachable; //@line 1648 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $26 = $1; //@line 1648 "src/sprites/../puun/gf/../../other/stb_image.h"
 $27 = ($26|0)<(17); //@line 1648 "src/sprites/../puun/gf/../../other/stb_image.h"
 if ($27) {
  $28 = $k; //@line 1649 "src/sprites/../puun/gf/../../other/stb_image.h"
  $29 = $1; //@line 1649 "src/sprites/../puun/gf/../../other/stb_image.h"
  $30 = (10384 + ($29<<2)|0); //@line 1649 "src/sprites/../puun/gf/../../other/stb_image.h"
  $31 = HEAP32[$30>>2]|0; //@line 1649 "src/sprites/../puun/gf/../../other/stb_image.h"
  $32 = $31 ^ -1; //@line 1649 "src/sprites/../puun/gf/../../other/stb_image.h"
  $33 = $28 & $32; //@line 1649 "src/sprites/../puun/gf/../../other/stb_image.h"
  $34 = $0; //@line 1649 "src/sprites/../puun/gf/../../other/stb_image.h"
  $35 = (($34) + 18108|0); //@line 1649 "src/sprites/../puun/gf/../../other/stb_image.h"
  HEAP32[$35>>2] = $33; //@line 1649 "src/sprites/../puun/gf/../../other/stb_image.h"
  $36 = $1; //@line 1650 "src/sprites/../puun/gf/../../other/stb_image.h"
  $37 = (10384 + ($36<<2)|0); //@line 1650 "src/sprites/../puun/gf/../../other/stb_image.h"
  $38 = HEAP32[$37>>2]|0; //@line 1650 "src/sprites/../puun/gf/../../other/stb_image.h"
  $39 = $k; //@line 1650 "src/sprites/../puun/gf/../../other/stb_image.h"
  $40 = $39 & $38; //@line 1650 "src/sprites/../puun/gf/../../other/stb_image.h"
  $k = $40; //@line 1650 "src/sprites/../puun/gf/../../other/stb_image.h"
  $41 = $1; //@line 1651 "src/sprites/../puun/gf/../../other/stb_image.h"
  $42 = $0; //@line 1651 "src/sprites/../puun/gf/../../other/stb_image.h"
  $43 = (($42) + 18112|0); //@line 1651 "src/sprites/../puun/gf/../../other/stb_image.h"
  $44 = HEAP32[$43>>2]|0; //@line 1651 "src/sprites/../puun/gf/../../other/stb_image.h"
  $45 = (($44) - ($41))|0; //@line 1651 "src/sprites/../puun/gf/../../other/stb_image.h"
  HEAP32[$43>>2] = $45; //@line 1651 "src/sprites/../puun/gf/../../other/stb_image.h"
  $46 = $k; //@line 1652 "src/sprites/../puun/gf/../../other/stb_image.h"
  $47 = $1; //@line 1652 "src/sprites/../puun/gf/../../other/stb_image.h"
  $48 = (10456 + ($47<<2)|0); //@line 1652 "src/sprites/../puun/gf/../../other/stb_image.h"
  $49 = HEAP32[$48>>2]|0; //@line 1652 "src/sprites/../puun/gf/../../other/stb_image.h"
  $50 = $sgn; //@line 1652 "src/sprites/../puun/gf/../../other/stb_image.h"
  $51 = $50 ^ -1; //@line 1652 "src/sprites/../puun/gf/../../other/stb_image.h"
  $52 = $49 & $51; //@line 1652 "src/sprites/../puun/gf/../../other/stb_image.h"
  $53 = (($46) + ($52))|0; //@line 1652 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($53|0); //@line 1652 "src/sprites/../puun/gf/../../other/stb_image.h"
 } else {
  ___assert_fail((10296|0),(7560|0),1648,(10360|0)); //@line 1648 "src/sprites/../puun/gf/../../other/stb_image.h"
  // unreachable; //@line 1648 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 return (0)|0;
}
function _stbi__jpeg_get_bits($j,$n) {
 $j = $j|0;
 $n = $n|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $k = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $j;
 $1 = $n;
 $2 = $0; //@line 1659 "src/sprites/../puun/gf/../../other/stb_image.h"
 $3 = (($2) + 18112|0); //@line 1659 "src/sprites/../puun/gf/../../other/stb_image.h"
 $4 = HEAP32[$3>>2]|0; //@line 1659 "src/sprites/../puun/gf/../../other/stb_image.h"
 $5 = $1; //@line 1659 "src/sprites/../puun/gf/../../other/stb_image.h"
 $6 = ($4|0)<($5|0); //@line 1659 "src/sprites/../puun/gf/../../other/stb_image.h"
 if ($6) {
  $7 = $0; //@line 1659 "src/sprites/../puun/gf/../../other/stb_image.h"
  _stbi__grow_buffer_unsafe($7); //@line 1659 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $8 = $0; //@line 1660 "src/sprites/../puun/gf/../../other/stb_image.h"
 $9 = (($8) + 18108|0); //@line 1660 "src/sprites/../puun/gf/../../other/stb_image.h"
 $10 = HEAP32[$9>>2]|0; //@line 1660 "src/sprites/../puun/gf/../../other/stb_image.h"
 $11 = $1; //@line 1660 "src/sprites/../puun/gf/../../other/stb_image.h"
 $12 = $10 << $11; //@line 1660 "src/sprites/../puun/gf/../../other/stb_image.h"
 $13 = $0; //@line 1660 "src/sprites/../puun/gf/../../other/stb_image.h"
 $14 = (($13) + 18108|0); //@line 1660 "src/sprites/../puun/gf/../../other/stb_image.h"
 $15 = HEAP32[$14>>2]|0; //@line 1660 "src/sprites/../puun/gf/../../other/stb_image.h"
 $16 = $1; //@line 1660 "src/sprites/../puun/gf/../../other/stb_image.h"
 $17 = (32 - ($16))|0; //@line 1660 "src/sprites/../puun/gf/../../other/stb_image.h"
 $18 = $15 >>> $17; //@line 1660 "src/sprites/../puun/gf/../../other/stb_image.h"
 $19 = $12 | $18; //@line 1660 "src/sprites/../puun/gf/../../other/stb_image.h"
 $k = $19; //@line 1660 "src/sprites/../puun/gf/../../other/stb_image.h"
 $20 = $k; //@line 1661 "src/sprites/../puun/gf/../../other/stb_image.h"
 $21 = $1; //@line 1661 "src/sprites/../puun/gf/../../other/stb_image.h"
 $22 = (10384 + ($21<<2)|0); //@line 1661 "src/sprites/../puun/gf/../../other/stb_image.h"
 $23 = HEAP32[$22>>2]|0; //@line 1661 "src/sprites/../puun/gf/../../other/stb_image.h"
 $24 = $23 ^ -1; //@line 1661 "src/sprites/../puun/gf/../../other/stb_image.h"
 $25 = $20 & $24; //@line 1661 "src/sprites/../puun/gf/../../other/stb_image.h"
 $26 = $0; //@line 1661 "src/sprites/../puun/gf/../../other/stb_image.h"
 $27 = (($26) + 18108|0); //@line 1661 "src/sprites/../puun/gf/../../other/stb_image.h"
 HEAP32[$27>>2] = $25; //@line 1661 "src/sprites/../puun/gf/../../other/stb_image.h"
 $28 = $1; //@line 1662 "src/sprites/../puun/gf/../../other/stb_image.h"
 $29 = (10384 + ($28<<2)|0); //@line 1662 "src/sprites/../puun/gf/../../other/stb_image.h"
 $30 = HEAP32[$29>>2]|0; //@line 1662 "src/sprites/../puun/gf/../../other/stb_image.h"
 $31 = $k; //@line 1662 "src/sprites/../puun/gf/../../other/stb_image.h"
 $32 = $31 & $30; //@line 1662 "src/sprites/../puun/gf/../../other/stb_image.h"
 $k = $32; //@line 1662 "src/sprites/../puun/gf/../../other/stb_image.h"
 $33 = $1; //@line 1663 "src/sprites/../puun/gf/../../other/stb_image.h"
 $34 = $0; //@line 1663 "src/sprites/../puun/gf/../../other/stb_image.h"
 $35 = (($34) + 18112|0); //@line 1663 "src/sprites/../puun/gf/../../other/stb_image.h"
 $36 = HEAP32[$35>>2]|0; //@line 1663 "src/sprites/../puun/gf/../../other/stb_image.h"
 $37 = (($36) - ($33))|0; //@line 1663 "src/sprites/../puun/gf/../../other/stb_image.h"
 HEAP32[$35>>2] = $37; //@line 1663 "src/sprites/../puun/gf/../../other/stb_image.h"
 $38 = $k; //@line 1664 "src/sprites/../puun/gf/../../other/stb_image.h"
 STACKTOP = sp;return ($38|0); //@line 1664 "src/sprites/../puun/gf/../../other/stb_image.h"
}
function _stbi__jpeg_huff_decode($j,$h) {
 $j = $j|0;
 $h = $h|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $14 = 0, $15 = 0, $16 = 0;
 var $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0;
 var $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0;
 var $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0;
 var $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0;
 var $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $c = 0, $k = 0, $s = 0, $temp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $j;
 $2 = $h;
 $3 = $1; //@line 1591 "src/sprites/../puun/gf/../../other/stb_image.h"
 $4 = (($3) + 18112|0); //@line 1591 "src/sprites/../puun/gf/../../other/stb_image.h"
 $5 = HEAP32[$4>>2]|0; //@line 1591 "src/sprites/../puun/gf/../../other/stb_image.h"
 $6 = ($5|0)<(16); //@line 1591 "src/sprites/../puun/gf/../../other/stb_image.h"
 if ($6) {
  $7 = $1; //@line 1591 "src/sprites/../puun/gf/../../other/stb_image.h"
  _stbi__grow_buffer_unsafe($7); //@line 1591 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $8 = $1; //@line 1595 "src/sprites/../puun/gf/../../other/stb_image.h"
 $9 = (($8) + 18108|0); //@line 1595 "src/sprites/../puun/gf/../../other/stb_image.h"
 $10 = HEAP32[$9>>2]|0; //@line 1595 "src/sprites/../puun/gf/../../other/stb_image.h"
 $11 = $10 >>> 23; //@line 1595 "src/sprites/../puun/gf/../../other/stb_image.h"
 $12 = $11 & 511; //@line 1595 "src/sprites/../puun/gf/../../other/stb_image.h"
 $c = $12; //@line 1595 "src/sprites/../puun/gf/../../other/stb_image.h"
 $13 = $c; //@line 1596 "src/sprites/../puun/gf/../../other/stb_image.h"
 $14 = $2; //@line 1596 "src/sprites/../puun/gf/../../other/stb_image.h"
 $15 = (($14) + ($13)|0); //@line 1596 "src/sprites/../puun/gf/../../other/stb_image.h"
 $16 = HEAP8[$15>>0]|0; //@line 1596 "src/sprites/../puun/gf/../../other/stb_image.h"
 $17 = $16&255; //@line 1596 "src/sprites/../puun/gf/../../other/stb_image.h"
 $k = $17; //@line 1596 "src/sprites/../puun/gf/../../other/stb_image.h"
 $18 = $k; //@line 1597 "src/sprites/../puun/gf/../../other/stb_image.h"
 $19 = ($18|0)<(255); //@line 1597 "src/sprites/../puun/gf/../../other/stb_image.h"
 if ($19) {
  $20 = $k; //@line 1598 "src/sprites/../puun/gf/../../other/stb_image.h"
  $21 = $2; //@line 1598 "src/sprites/../puun/gf/../../other/stb_image.h"
  $22 = (($21) + 1280|0); //@line 1598 "src/sprites/../puun/gf/../../other/stb_image.h"
  $23 = (($22) + ($20)|0); //@line 1598 "src/sprites/../puun/gf/../../other/stb_image.h"
  $24 = HEAP8[$23>>0]|0; //@line 1598 "src/sprites/../puun/gf/../../other/stb_image.h"
  $25 = $24&255; //@line 1598 "src/sprites/../puun/gf/../../other/stb_image.h"
  $s = $25; //@line 1598 "src/sprites/../puun/gf/../../other/stb_image.h"
  $26 = $s; //@line 1599 "src/sprites/../puun/gf/../../other/stb_image.h"
  $27 = $1; //@line 1599 "src/sprites/../puun/gf/../../other/stb_image.h"
  $28 = (($27) + 18112|0); //@line 1599 "src/sprites/../puun/gf/../../other/stb_image.h"
  $29 = HEAP32[$28>>2]|0; //@line 1599 "src/sprites/../puun/gf/../../other/stb_image.h"
  $30 = ($26|0)>($29|0); //@line 1599 "src/sprites/../puun/gf/../../other/stb_image.h"
  if ($30) {
   $0 = -1; //@line 1600 "src/sprites/../puun/gf/../../other/stb_image.h"
   $130 = $0; //@line 1633 "src/sprites/../puun/gf/../../other/stb_image.h"
   STACKTOP = sp;return ($130|0); //@line 1633 "src/sprites/../puun/gf/../../other/stb_image.h"
  } else {
   $31 = $s; //@line 1601 "src/sprites/../puun/gf/../../other/stb_image.h"
   $32 = $1; //@line 1601 "src/sprites/../puun/gf/../../other/stb_image.h"
   $33 = (($32) + 18108|0); //@line 1601 "src/sprites/../puun/gf/../../other/stb_image.h"
   $34 = HEAP32[$33>>2]|0; //@line 1601 "src/sprites/../puun/gf/../../other/stb_image.h"
   $35 = $34 << $31; //@line 1601 "src/sprites/../puun/gf/../../other/stb_image.h"
   HEAP32[$33>>2] = $35; //@line 1601 "src/sprites/../puun/gf/../../other/stb_image.h"
   $36 = $s; //@line 1602 "src/sprites/../puun/gf/../../other/stb_image.h"
   $37 = $1; //@line 1602 "src/sprites/../puun/gf/../../other/stb_image.h"
   $38 = (($37) + 18112|0); //@line 1602 "src/sprites/../puun/gf/../../other/stb_image.h"
   $39 = HEAP32[$38>>2]|0; //@line 1602 "src/sprites/../puun/gf/../../other/stb_image.h"
   $40 = (($39) - ($36))|0; //@line 1602 "src/sprites/../puun/gf/../../other/stb_image.h"
   HEAP32[$38>>2] = $40; //@line 1602 "src/sprites/../puun/gf/../../other/stb_image.h"
   $41 = $k; //@line 1603 "src/sprites/../puun/gf/../../other/stb_image.h"
   $42 = $2; //@line 1603 "src/sprites/../puun/gf/../../other/stb_image.h"
   $43 = (($42) + 1024|0); //@line 1603 "src/sprites/../puun/gf/../../other/stb_image.h"
   $44 = (($43) + ($41)|0); //@line 1603 "src/sprites/../puun/gf/../../other/stb_image.h"
   $45 = HEAP8[$44>>0]|0; //@line 1603 "src/sprites/../puun/gf/../../other/stb_image.h"
   $46 = $45&255; //@line 1603 "src/sprites/../puun/gf/../../other/stb_image.h"
   $0 = $46; //@line 1603 "src/sprites/../puun/gf/../../other/stb_image.h"
   $130 = $0; //@line 1633 "src/sprites/../puun/gf/../../other/stb_image.h"
   STACKTOP = sp;return ($130|0); //@line 1633 "src/sprites/../puun/gf/../../other/stb_image.h"
  }
 }
 $47 = $1; //@line 1612 "src/sprites/../puun/gf/../../other/stb_image.h"
 $48 = (($47) + 18108|0); //@line 1612 "src/sprites/../puun/gf/../../other/stb_image.h"
 $49 = HEAP32[$48>>2]|0; //@line 1612 "src/sprites/../puun/gf/../../other/stb_image.h"
 $50 = $49 >>> 16; //@line 1612 "src/sprites/../puun/gf/../../other/stb_image.h"
 $temp = $50; //@line 1612 "src/sprites/../puun/gf/../../other/stb_image.h"
 $k = 10; //@line 1613 "src/sprites/../puun/gf/../../other/stb_image.h"
 while(1) {
  $51 = $temp; //@line 1614 "src/sprites/../puun/gf/../../other/stb_image.h"
  $52 = $k; //@line 1614 "src/sprites/../puun/gf/../../other/stb_image.h"
  $53 = $2; //@line 1614 "src/sprites/../puun/gf/../../other/stb_image.h"
  $54 = (($53) + 1540|0); //@line 1614 "src/sprites/../puun/gf/../../other/stb_image.h"
  $55 = (($54) + ($52<<2)|0); //@line 1614 "src/sprites/../puun/gf/../../other/stb_image.h"
  $56 = HEAP32[$55>>2]|0; //@line 1614 "src/sprites/../puun/gf/../../other/stb_image.h"
  $57 = ($51>>>0)<($56>>>0); //@line 1614 "src/sprites/../puun/gf/../../other/stb_image.h"
  if ($57) {
   break;
  }
  $58 = $k; //@line 1613 "src/sprites/../puun/gf/../../other/stb_image.h"
  $59 = (($58) + 1)|0; //@line 1613 "src/sprites/../puun/gf/../../other/stb_image.h"
  $k = $59; //@line 1613 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $60 = $k; //@line 1616 "src/sprites/../puun/gf/../../other/stb_image.h"
 $61 = ($60|0)==(17); //@line 1616 "src/sprites/../puun/gf/../../other/stb_image.h"
 if ($61) {
  $62 = $1; //@line 1618 "src/sprites/../puun/gf/../../other/stb_image.h"
  $63 = (($62) + 18112|0); //@line 1618 "src/sprites/../puun/gf/../../other/stb_image.h"
  $64 = HEAP32[$63>>2]|0; //@line 1618 "src/sprites/../puun/gf/../../other/stb_image.h"
  $65 = (($64) - 16)|0; //@line 1618 "src/sprites/../puun/gf/../../other/stb_image.h"
  HEAP32[$63>>2] = $65; //@line 1618 "src/sprites/../puun/gf/../../other/stb_image.h"
  $0 = -1; //@line 1619 "src/sprites/../puun/gf/../../other/stb_image.h"
  $130 = $0; //@line 1633 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($130|0); //@line 1633 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $66 = $k; //@line 1622 "src/sprites/../puun/gf/../../other/stb_image.h"
 $67 = $1; //@line 1622 "src/sprites/../puun/gf/../../other/stb_image.h"
 $68 = (($67) + 18112|0); //@line 1622 "src/sprites/../puun/gf/../../other/stb_image.h"
 $69 = HEAP32[$68>>2]|0; //@line 1622 "src/sprites/../puun/gf/../../other/stb_image.h"
 $70 = ($66|0)>($69|0); //@line 1622 "src/sprites/../puun/gf/../../other/stb_image.h"
 if ($70) {
  $0 = -1; //@line 1623 "src/sprites/../puun/gf/../../other/stb_image.h"
  $130 = $0; //@line 1633 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($130|0); //@line 1633 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $71 = $1; //@line 1626 "src/sprites/../puun/gf/../../other/stb_image.h"
 $72 = (($71) + 18108|0); //@line 1626 "src/sprites/../puun/gf/../../other/stb_image.h"
 $73 = HEAP32[$72>>2]|0; //@line 1626 "src/sprites/../puun/gf/../../other/stb_image.h"
 $74 = $k; //@line 1626 "src/sprites/../puun/gf/../../other/stb_image.h"
 $75 = (32 - ($74))|0; //@line 1626 "src/sprites/../puun/gf/../../other/stb_image.h"
 $76 = $73 >>> $75; //@line 1626 "src/sprites/../puun/gf/../../other/stb_image.h"
 $77 = $k; //@line 1626 "src/sprites/../puun/gf/../../other/stb_image.h"
 $78 = (10384 + ($77<<2)|0); //@line 1626 "src/sprites/../puun/gf/../../other/stb_image.h"
 $79 = HEAP32[$78>>2]|0; //@line 1626 "src/sprites/../puun/gf/../../other/stb_image.h"
 $80 = $76 & $79; //@line 1626 "src/sprites/../puun/gf/../../other/stb_image.h"
 $81 = $k; //@line 1626 "src/sprites/../puun/gf/../../other/stb_image.h"
 $82 = $2; //@line 1626 "src/sprites/../puun/gf/../../other/stb_image.h"
 $83 = (($82) + 1612|0); //@line 1626 "src/sprites/../puun/gf/../../other/stb_image.h"
 $84 = (($83) + ($81<<2)|0); //@line 1626 "src/sprites/../puun/gf/../../other/stb_image.h"
 $85 = HEAP32[$84>>2]|0; //@line 1626 "src/sprites/../puun/gf/../../other/stb_image.h"
 $86 = (($80) + ($85))|0; //@line 1626 "src/sprites/../puun/gf/../../other/stb_image.h"
 $c = $86; //@line 1626 "src/sprites/../puun/gf/../../other/stb_image.h"
 $87 = $1; //@line 1627 "src/sprites/../puun/gf/../../other/stb_image.h"
 $88 = (($87) + 18108|0); //@line 1627 "src/sprites/../puun/gf/../../other/stb_image.h"
 $89 = HEAP32[$88>>2]|0; //@line 1627 "src/sprites/../puun/gf/../../other/stb_image.h"
 $90 = $c; //@line 1627 "src/sprites/../puun/gf/../../other/stb_image.h"
 $91 = $2; //@line 1627 "src/sprites/../puun/gf/../../other/stb_image.h"
 $92 = (($91) + 1280|0); //@line 1627 "src/sprites/../puun/gf/../../other/stb_image.h"
 $93 = (($92) + ($90)|0); //@line 1627 "src/sprites/../puun/gf/../../other/stb_image.h"
 $94 = HEAP8[$93>>0]|0; //@line 1627 "src/sprites/../puun/gf/../../other/stb_image.h"
 $95 = $94&255; //@line 1627 "src/sprites/../puun/gf/../../other/stb_image.h"
 $96 = (32 - ($95))|0; //@line 1627 "src/sprites/../puun/gf/../../other/stb_image.h"
 $97 = $89 >>> $96; //@line 1627 "src/sprites/../puun/gf/../../other/stb_image.h"
 $98 = $c; //@line 1627 "src/sprites/../puun/gf/../../other/stb_image.h"
 $99 = $2; //@line 1627 "src/sprites/../puun/gf/../../other/stb_image.h"
 $100 = (($99) + 1280|0); //@line 1627 "src/sprites/../puun/gf/../../other/stb_image.h"
 $101 = (($100) + ($98)|0); //@line 1627 "src/sprites/../puun/gf/../../other/stb_image.h"
 $102 = HEAP8[$101>>0]|0; //@line 1627 "src/sprites/../puun/gf/../../other/stb_image.h"
 $103 = $102&255; //@line 1627 "src/sprites/../puun/gf/../../other/stb_image.h"
 $104 = (10384 + ($103<<2)|0); //@line 1627 "src/sprites/../puun/gf/../../other/stb_image.h"
 $105 = HEAP32[$104>>2]|0; //@line 1627 "src/sprites/../puun/gf/../../other/stb_image.h"
 $106 = $97 & $105; //@line 1627 "src/sprites/../puun/gf/../../other/stb_image.h"
 $107 = $c; //@line 1627 "src/sprites/../puun/gf/../../other/stb_image.h"
 $108 = $2; //@line 1627 "src/sprites/../puun/gf/../../other/stb_image.h"
 $109 = (($108) + 512|0); //@line 1627 "src/sprites/../puun/gf/../../other/stb_image.h"
 $110 = (($109) + ($107<<1)|0); //@line 1627 "src/sprites/../puun/gf/../../other/stb_image.h"
 $111 = HEAP16[$110>>1]|0; //@line 1627 "src/sprites/../puun/gf/../../other/stb_image.h"
 $112 = $111&65535; //@line 1627 "src/sprites/../puun/gf/../../other/stb_image.h"
 $113 = ($106|0)==($112|0); //@line 1627 "src/sprites/../puun/gf/../../other/stb_image.h"
 if (!($113)) {
  ___assert_fail((10520|0),(7560|0),1627,(10608|0)); //@line 1627 "src/sprites/../puun/gf/../../other/stb_image.h"
  // unreachable; //@line 1627 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $114 = $k; //@line 1630 "src/sprites/../puun/gf/../../other/stb_image.h"
 $115 = $1; //@line 1630 "src/sprites/../puun/gf/../../other/stb_image.h"
 $116 = (($115) + 18112|0); //@line 1630 "src/sprites/../puun/gf/../../other/stb_image.h"
 $117 = HEAP32[$116>>2]|0; //@line 1630 "src/sprites/../puun/gf/../../other/stb_image.h"
 $118 = (($117) - ($114))|0; //@line 1630 "src/sprites/../puun/gf/../../other/stb_image.h"
 HEAP32[$116>>2] = $118; //@line 1630 "src/sprites/../puun/gf/../../other/stb_image.h"
 $119 = $k; //@line 1631 "src/sprites/../puun/gf/../../other/stb_image.h"
 $120 = $1; //@line 1631 "src/sprites/../puun/gf/../../other/stb_image.h"
 $121 = (($120) + 18108|0); //@line 1631 "src/sprites/../puun/gf/../../other/stb_image.h"
 $122 = HEAP32[$121>>2]|0; //@line 1631 "src/sprites/../puun/gf/../../other/stb_image.h"
 $123 = $122 << $119; //@line 1631 "src/sprites/../puun/gf/../../other/stb_image.h"
 HEAP32[$121>>2] = $123; //@line 1631 "src/sprites/../puun/gf/../../other/stb_image.h"
 $124 = $c; //@line 1632 "src/sprites/../puun/gf/../../other/stb_image.h"
 $125 = $2; //@line 1632 "src/sprites/../puun/gf/../../other/stb_image.h"
 $126 = (($125) + 1024|0); //@line 1632 "src/sprites/../puun/gf/../../other/stb_image.h"
 $127 = (($126) + ($124)|0); //@line 1632 "src/sprites/../puun/gf/../../other/stb_image.h"
 $128 = HEAP8[$127>>0]|0; //@line 1632 "src/sprites/../puun/gf/../../other/stb_image.h"
 $129 = $128&255; //@line 1632 "src/sprites/../puun/gf/../../other/stb_image.h"
 $0 = $129; //@line 1632 "src/sprites/../puun/gf/../../other/stb_image.h"
 $130 = $0; //@line 1633 "src/sprites/../puun/gf/../../other/stb_image.h"
 STACKTOP = sp;return ($130|0); //@line 1633 "src/sprites/../puun/gf/../../other/stb_image.h"
}
function _stbi__jpeg_decode_block_prog_dc($j,$data,$hdc,$b) {
 $j = $j|0;
 $data = $data|0;
 $hdc = $hdc|0;
 $b = $b|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $7 = 0, $8 = 0, $9 = 0, $dc = 0, $diff = 0, $t = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $j;
 $2 = $data;
 $3 = $hdc;
 $4 = $b;
 $5 = $1; //@line 1751 "src/sprites/../puun/gf/../../other/stb_image.h"
 $6 = (($5) + 18132|0); //@line 1751 "src/sprites/../puun/gf/../../other/stb_image.h"
 $7 = HEAP32[$6>>2]|0; //@line 1751 "src/sprites/../puun/gf/../../other/stb_image.h"
 $8 = ($7|0)!=(0); //@line 1751 "src/sprites/../puun/gf/../../other/stb_image.h"
 if ($8) {
  $9 = (_stbi__err(10272)|0); //@line 1751 "src/sprites/../puun/gf/../../other/stb_image.h"
  $0 = $9; //@line 1751 "src/sprites/../puun/gf/../../other/stb_image.h"
  $64 = $0; //@line 1770 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($64|0); //@line 1770 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $10 = $1; //@line 1753 "src/sprites/../puun/gf/../../other/stb_image.h"
 $11 = (($10) + 18112|0); //@line 1753 "src/sprites/../puun/gf/../../other/stb_image.h"
 $12 = HEAP32[$11>>2]|0; //@line 1753 "src/sprites/../puun/gf/../../other/stb_image.h"
 $13 = ($12|0)<(16); //@line 1753 "src/sprites/../puun/gf/../../other/stb_image.h"
 if ($13) {
  $14 = $1; //@line 1753 "src/sprites/../puun/gf/../../other/stb_image.h"
  _stbi__grow_buffer_unsafe($14); //@line 1753 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $15 = $1; //@line 1755 "src/sprites/../puun/gf/../../other/stb_image.h"
 $16 = (($15) + 18136|0); //@line 1755 "src/sprites/../puun/gf/../../other/stb_image.h"
 $17 = HEAP32[$16>>2]|0; //@line 1755 "src/sprites/../puun/gf/../../other/stb_image.h"
 $18 = ($17|0)==(0); //@line 1755 "src/sprites/../puun/gf/../../other/stb_image.h"
 if ($18) {
  $19 = $2; //@line 1757 "src/sprites/../puun/gf/../../other/stb_image.h"
  dest=$19+0|0; stop=dest+128|0; do { HEAP16[dest>>1]=0|0; dest=dest+2|0; } while ((dest|0) < (stop|0)); //@line 1757 "src/sprites/../puun/gf/../../other/stb_image.h"
  $20 = $1; //@line 1758 "src/sprites/../puun/gf/../../other/stb_image.h"
  $21 = $3; //@line 1758 "src/sprites/../puun/gf/../../other/stb_image.h"
  $22 = (_stbi__jpeg_huff_decode($20,$21)|0); //@line 1758 "src/sprites/../puun/gf/../../other/stb_image.h"
  $t = $22; //@line 1758 "src/sprites/../puun/gf/../../other/stb_image.h"
  $23 = $t; //@line 1759 "src/sprites/../puun/gf/../../other/stb_image.h"
  $24 = ($23|0)!=(0); //@line 1759 "src/sprites/../puun/gf/../../other/stb_image.h"
  if ($24) {
   $25 = $1; //@line 1759 "src/sprites/../puun/gf/../../other/stb_image.h"
   $26 = $t; //@line 1759 "src/sprites/../puun/gf/../../other/stb_image.h"
   $27 = (_stbi__extend_receive($25,$26)|0); //@line 1759 "src/sprites/../puun/gf/../../other/stb_image.h"
   $28 = $27;
  } else {
   $28 = 0;
  }
  $diff = $28; //@line 1759 "src/sprites/../puun/gf/../../other/stb_image.h"
  $29 = $4; //@line 1761 "src/sprites/../puun/gf/../../other/stb_image.h"
  $30 = $1; //@line 1761 "src/sprites/../puun/gf/../../other/stb_image.h"
  $31 = (($30) + 17820|0); //@line 1761 "src/sprites/../puun/gf/../../other/stb_image.h"
  $32 = (($31) + (($29*72)|0)|0); //@line 1761 "src/sprites/../puun/gf/../../other/stb_image.h"
  $33 = (($32) + 24|0); //@line 1761 "src/sprites/../puun/gf/../../other/stb_image.h"
  $34 = HEAP32[$33>>2]|0; //@line 1761 "src/sprites/../puun/gf/../../other/stb_image.h"
  $35 = $diff; //@line 1761 "src/sprites/../puun/gf/../../other/stb_image.h"
  $36 = (($34) + ($35))|0; //@line 1761 "src/sprites/../puun/gf/../../other/stb_image.h"
  $dc = $36; //@line 1761 "src/sprites/../puun/gf/../../other/stb_image.h"
  $37 = $dc; //@line 1762 "src/sprites/../puun/gf/../../other/stb_image.h"
  $38 = $4; //@line 1762 "src/sprites/../puun/gf/../../other/stb_image.h"
  $39 = $1; //@line 1762 "src/sprites/../puun/gf/../../other/stb_image.h"
  $40 = (($39) + 17820|0); //@line 1762 "src/sprites/../puun/gf/../../other/stb_image.h"
  $41 = (($40) + (($38*72)|0)|0); //@line 1762 "src/sprites/../puun/gf/../../other/stb_image.h"
  $42 = (($41) + 24|0); //@line 1762 "src/sprites/../puun/gf/../../other/stb_image.h"
  HEAP32[$42>>2] = $37; //@line 1762 "src/sprites/../puun/gf/../../other/stb_image.h"
  $43 = $dc; //@line 1763 "src/sprites/../puun/gf/../../other/stb_image.h"
  $44 = $1; //@line 1763 "src/sprites/../puun/gf/../../other/stb_image.h"
  $45 = (($44) + 18140|0); //@line 1763 "src/sprites/../puun/gf/../../other/stb_image.h"
  $46 = HEAP32[$45>>2]|0; //@line 1763 "src/sprites/../puun/gf/../../other/stb_image.h"
  $47 = $43 << $46; //@line 1763 "src/sprites/../puun/gf/../../other/stb_image.h"
  $48 = $47&65535; //@line 1763 "src/sprites/../puun/gf/../../other/stb_image.h"
  $49 = $2; //@line 1763 "src/sprites/../puun/gf/../../other/stb_image.h"
  HEAP16[$49>>1] = $48; //@line 1763 "src/sprites/../puun/gf/../../other/stb_image.h"
 } else {
  $50 = $1; //@line 1766 "src/sprites/../puun/gf/../../other/stb_image.h"
  $51 = (_stbi__jpeg_get_bit($50)|0); //@line 1766 "src/sprites/../puun/gf/../../other/stb_image.h"
  $52 = ($51|0)!=(0); //@line 1766 "src/sprites/../puun/gf/../../other/stb_image.h"
  if ($52) {
   $53 = $1; //@line 1767 "src/sprites/../puun/gf/../../other/stb_image.h"
   $54 = (($53) + 18140|0); //@line 1767 "src/sprites/../puun/gf/../../other/stb_image.h"
   $55 = HEAP32[$54>>2]|0; //@line 1767 "src/sprites/../puun/gf/../../other/stb_image.h"
   $56 = 1 << $55; //@line 1767 "src/sprites/../puun/gf/../../other/stb_image.h"
   $57 = $56&65535; //@line 1767 "src/sprites/../puun/gf/../../other/stb_image.h"
   $58 = $57 << 16 >> 16; //@line 1767 "src/sprites/../puun/gf/../../other/stb_image.h"
   $59 = $2; //@line 1767 "src/sprites/../puun/gf/../../other/stb_image.h"
   $60 = HEAP16[$59>>1]|0; //@line 1767 "src/sprites/../puun/gf/../../other/stb_image.h"
   $61 = $60 << 16 >> 16; //@line 1767 "src/sprites/../puun/gf/../../other/stb_image.h"
   $62 = (($61) + ($58))|0; //@line 1767 "src/sprites/../puun/gf/../../other/stb_image.h"
   $63 = $62&65535; //@line 1767 "src/sprites/../puun/gf/../../other/stb_image.h"
   HEAP16[$59>>1] = $63; //@line 1767 "src/sprites/../puun/gf/../../other/stb_image.h"
  }
 }
 $0 = 1; //@line 1769 "src/sprites/../puun/gf/../../other/stb_image.h"
 $64 = $0; //@line 1770 "src/sprites/../puun/gf/../../other/stb_image.h"
 STACKTOP = sp;return ($64|0); //@line 1770 "src/sprites/../puun/gf/../../other/stb_image.h"
}
function _stbi__grow_buffer_unsafe($j) {
 $j = $j|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, $b = 0, $c = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $j;
 while(1) {
  $1 = $0; //@line 1568 "src/sprites/../puun/gf/../../other/stb_image.h"
  $2 = (($1) + 18120|0); //@line 1568 "src/sprites/../puun/gf/../../other/stb_image.h"
  $3 = HEAP32[$2>>2]|0; //@line 1568 "src/sprites/../puun/gf/../../other/stb_image.h"
  $4 = ($3|0)!=(0); //@line 1568 "src/sprites/../puun/gf/../../other/stb_image.h"
  if ($4) {
   $9 = 0;
  } else {
   $5 = $0; //@line 1568 "src/sprites/../puun/gf/../../other/stb_image.h"
   $6 = HEAP32[$5>>2]|0; //@line 1568 "src/sprites/../puun/gf/../../other/stb_image.h"
   $7 = (_stbi__get8($6)|0); //@line 1568 "src/sprites/../puun/gf/../../other/stb_image.h"
   $8 = $7&255; //@line 1568 "src/sprites/../puun/gf/../../other/stb_image.h"
   $9 = $8;
  }
  $b = $9; //@line 1568 "src/sprites/../puun/gf/../../other/stb_image.h"
  $10 = $b; //@line 1569 "src/sprites/../puun/gf/../../other/stb_image.h"
  $11 = ($10|0)==(255); //@line 1569 "src/sprites/../puun/gf/../../other/stb_image.h"
  if ($11) {
   $12 = $0; //@line 1570 "src/sprites/../puun/gf/../../other/stb_image.h"
   $13 = HEAP32[$12>>2]|0; //@line 1570 "src/sprites/../puun/gf/../../other/stb_image.h"
   $14 = (_stbi__get8($13)|0); //@line 1570 "src/sprites/../puun/gf/../../other/stb_image.h"
   $15 = $14&255; //@line 1570 "src/sprites/../puun/gf/../../other/stb_image.h"
   $c = $15; //@line 1570 "src/sprites/../puun/gf/../../other/stb_image.h"
   $16 = $c; //@line 1571 "src/sprites/../puun/gf/../../other/stb_image.h"
   $17 = ($16|0)!=(0); //@line 1571 "src/sprites/../puun/gf/../../other/stb_image.h"
   if ($17) {
    break;
   }
  }
  $24 = $b; //@line 1577 "src/sprites/../puun/gf/../../other/stb_image.h"
  $25 = $0; //@line 1577 "src/sprites/../puun/gf/../../other/stb_image.h"
  $26 = (($25) + 18112|0); //@line 1577 "src/sprites/../puun/gf/../../other/stb_image.h"
  $27 = HEAP32[$26>>2]|0; //@line 1577 "src/sprites/../puun/gf/../../other/stb_image.h"
  $28 = (24 - ($27))|0; //@line 1577 "src/sprites/../puun/gf/../../other/stb_image.h"
  $29 = $24 << $28; //@line 1577 "src/sprites/../puun/gf/../../other/stb_image.h"
  $30 = $0; //@line 1577 "src/sprites/../puun/gf/../../other/stb_image.h"
  $31 = (($30) + 18108|0); //@line 1577 "src/sprites/../puun/gf/../../other/stb_image.h"
  $32 = HEAP32[$31>>2]|0; //@line 1577 "src/sprites/../puun/gf/../../other/stb_image.h"
  $33 = $32 | $29; //@line 1577 "src/sprites/../puun/gf/../../other/stb_image.h"
  HEAP32[$31>>2] = $33; //@line 1577 "src/sprites/../puun/gf/../../other/stb_image.h"
  $34 = $0; //@line 1578 "src/sprites/../puun/gf/../../other/stb_image.h"
  $35 = (($34) + 18112|0); //@line 1578 "src/sprites/../puun/gf/../../other/stb_image.h"
  $36 = HEAP32[$35>>2]|0; //@line 1578 "src/sprites/../puun/gf/../../other/stb_image.h"
  $37 = (($36) + 8)|0; //@line 1578 "src/sprites/../puun/gf/../../other/stb_image.h"
  HEAP32[$35>>2] = $37; //@line 1578 "src/sprites/../puun/gf/../../other/stb_image.h"
  $38 = $0; //@line 1579 "src/sprites/../puun/gf/../../other/stb_image.h"
  $39 = (($38) + 18112|0); //@line 1579 "src/sprites/../puun/gf/../../other/stb_image.h"
  $40 = HEAP32[$39>>2]|0; //@line 1579 "src/sprites/../puun/gf/../../other/stb_image.h"
  $41 = ($40|0)<=(24); //@line 1579 "src/sprites/../puun/gf/../../other/stb_image.h"
  if (!($41)) {
   label = 11;
   break;
  }
 }
 if ((label|0) == 11) {
  STACKTOP = sp;return; //@line 1580 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $18 = $c; //@line 1572 "src/sprites/../puun/gf/../../other/stb_image.h"
 $19 = $18&255; //@line 1572 "src/sprites/../puun/gf/../../other/stb_image.h"
 $20 = $0; //@line 1572 "src/sprites/../puun/gf/../../other/stb_image.h"
 $21 = (($20) + 18116|0); //@line 1572 "src/sprites/../puun/gf/../../other/stb_image.h"
 HEAP8[$21>>0] = $19; //@line 1572 "src/sprites/../puun/gf/../../other/stb_image.h"
 $22 = $0; //@line 1573 "src/sprites/../puun/gf/../../other/stb_image.h"
 $23 = (($22) + 18120|0); //@line 1573 "src/sprites/../puun/gf/../../other/stb_image.h"
 HEAP32[$23>>2] = 1; //@line 1573 "src/sprites/../puun/gf/../../other/stb_image.h"
 STACKTOP = sp;return; //@line 1580 "src/sprites/../puun/gf/../../other/stb_image.h"
}
function _stbi__jpeg_decode_block($j,$data,$hdc,$hac,$fac,$b,$dequant) {
 $j = $j|0;
 $data = $data|0;
 $hdc = $hdc|0;
 $hac = $hac|0;
 $fac = $fac|0;
 $b = $b|0;
 $dequant = $dequant|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0;
 var $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $c = 0, $dc = 0;
 var $diff = 0, $k = 0, $r = 0, $rs = 0, $s = 0, $t = 0, $zig = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $j;
 $2 = $data;
 $3 = $hdc;
 $4 = $hac;
 $5 = $fac;
 $6 = $b;
 $7 = $dequant;
 $8 = $1; //@line 1700 "src/sprites/../puun/gf/../../other/stb_image.h"
 $9 = (($8) + 18112|0); //@line 1700 "src/sprites/../puun/gf/../../other/stb_image.h"
 $10 = HEAP32[$9>>2]|0; //@line 1700 "src/sprites/../puun/gf/../../other/stb_image.h"
 $11 = ($10|0)<(16); //@line 1700 "src/sprites/../puun/gf/../../other/stb_image.h"
 if ($11) {
  $12 = $1; //@line 1700 "src/sprites/../puun/gf/../../other/stb_image.h"
  _stbi__grow_buffer_unsafe($12); //@line 1700 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $13 = $1; //@line 1701 "src/sprites/../puun/gf/../../other/stb_image.h"
 $14 = $3; //@line 1701 "src/sprites/../puun/gf/../../other/stb_image.h"
 $15 = (_stbi__jpeg_huff_decode($13,$14)|0); //@line 1701 "src/sprites/../puun/gf/../../other/stb_image.h"
 $t = $15; //@line 1701 "src/sprites/../puun/gf/../../other/stb_image.h"
 $16 = $t; //@line 1702 "src/sprites/../puun/gf/../../other/stb_image.h"
 $17 = ($16|0)<(0); //@line 1702 "src/sprites/../puun/gf/../../other/stb_image.h"
 if ($17) {
  $18 = (_stbi__err(8704)|0); //@line 1702 "src/sprites/../puun/gf/../../other/stb_image.h"
  $0 = $18; //@line 1702 "src/sprites/../puun/gf/../../other/stb_image.h"
  $137 = $0; //@line 1745 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($137|0); //@line 1745 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $19 = $2; //@line 1705 "src/sprites/../puun/gf/../../other/stb_image.h"
 dest=$19+0|0; stop=dest+128|0; do { HEAP16[dest>>1]=0|0; dest=dest+2|0; } while ((dest|0) < (stop|0)); //@line 1705 "src/sprites/../puun/gf/../../other/stb_image.h"
 $20 = $t; //@line 1707 "src/sprites/../puun/gf/../../other/stb_image.h"
 $21 = ($20|0)!=(0); //@line 1707 "src/sprites/../puun/gf/../../other/stb_image.h"
 if ($21) {
  $22 = $1; //@line 1707 "src/sprites/../puun/gf/../../other/stb_image.h"
  $23 = $t; //@line 1707 "src/sprites/../puun/gf/../../other/stb_image.h"
  $24 = (_stbi__extend_receive($22,$23)|0); //@line 1707 "src/sprites/../puun/gf/../../other/stb_image.h"
  $25 = $24;
 } else {
  $25 = 0;
 }
 $diff = $25; //@line 1707 "src/sprites/../puun/gf/../../other/stb_image.h"
 $26 = $6; //@line 1708 "src/sprites/../puun/gf/../../other/stb_image.h"
 $27 = $1; //@line 1708 "src/sprites/../puun/gf/../../other/stb_image.h"
 $28 = (($27) + 17820|0); //@line 1708 "src/sprites/../puun/gf/../../other/stb_image.h"
 $29 = (($28) + (($26*72)|0)|0); //@line 1708 "src/sprites/../puun/gf/../../other/stb_image.h"
 $30 = (($29) + 24|0); //@line 1708 "src/sprites/../puun/gf/../../other/stb_image.h"
 $31 = HEAP32[$30>>2]|0; //@line 1708 "src/sprites/../puun/gf/../../other/stb_image.h"
 $32 = $diff; //@line 1708 "src/sprites/../puun/gf/../../other/stb_image.h"
 $33 = (($31) + ($32))|0; //@line 1708 "src/sprites/../puun/gf/../../other/stb_image.h"
 $dc = $33; //@line 1708 "src/sprites/../puun/gf/../../other/stb_image.h"
 $34 = $dc; //@line 1709 "src/sprites/../puun/gf/../../other/stb_image.h"
 $35 = $6; //@line 1709 "src/sprites/../puun/gf/../../other/stb_image.h"
 $36 = $1; //@line 1709 "src/sprites/../puun/gf/../../other/stb_image.h"
 $37 = (($36) + 17820|0); //@line 1709 "src/sprites/../puun/gf/../../other/stb_image.h"
 $38 = (($37) + (($35*72)|0)|0); //@line 1709 "src/sprites/../puun/gf/../../other/stb_image.h"
 $39 = (($38) + 24|0); //@line 1709 "src/sprites/../puun/gf/../../other/stb_image.h"
 HEAP32[$39>>2] = $34; //@line 1709 "src/sprites/../puun/gf/../../other/stb_image.h"
 $40 = $dc; //@line 1710 "src/sprites/../puun/gf/../../other/stb_image.h"
 $41 = $7; //@line 1710 "src/sprites/../puun/gf/../../other/stb_image.h"
 $42 = HEAP8[$41>>0]|0; //@line 1710 "src/sprites/../puun/gf/../../other/stb_image.h"
 $43 = $42&255; //@line 1710 "src/sprites/../puun/gf/../../other/stb_image.h"
 $44 = Math_imul($40, $43)|0; //@line 1710 "src/sprites/../puun/gf/../../other/stb_image.h"
 $45 = $44&65535; //@line 1710 "src/sprites/../puun/gf/../../other/stb_image.h"
 $46 = $2; //@line 1710 "src/sprites/../puun/gf/../../other/stb_image.h"
 HEAP16[$46>>1] = $45; //@line 1710 "src/sprites/../puun/gf/../../other/stb_image.h"
 $k = 1; //@line 1713 "src/sprites/../puun/gf/../../other/stb_image.h"
 while(1) {
  $47 = $1; //@line 1717 "src/sprites/../puun/gf/../../other/stb_image.h"
  $48 = (($47) + 18112|0); //@line 1717 "src/sprites/../puun/gf/../../other/stb_image.h"
  $49 = HEAP32[$48>>2]|0; //@line 1717 "src/sprites/../puun/gf/../../other/stb_image.h"
  $50 = ($49|0)<(16); //@line 1717 "src/sprites/../puun/gf/../../other/stb_image.h"
  if ($50) {
   $51 = $1; //@line 1717 "src/sprites/../puun/gf/../../other/stb_image.h"
   _stbi__grow_buffer_unsafe($51); //@line 1717 "src/sprites/../puun/gf/../../other/stb_image.h"
  }
  $52 = $1; //@line 1718 "src/sprites/../puun/gf/../../other/stb_image.h"
  $53 = (($52) + 18108|0); //@line 1718 "src/sprites/../puun/gf/../../other/stb_image.h"
  $54 = HEAP32[$53>>2]|0; //@line 1718 "src/sprites/../puun/gf/../../other/stb_image.h"
  $55 = $54 >>> 23; //@line 1718 "src/sprites/../puun/gf/../../other/stb_image.h"
  $56 = $55 & 511; //@line 1718 "src/sprites/../puun/gf/../../other/stb_image.h"
  $c = $56; //@line 1718 "src/sprites/../puun/gf/../../other/stb_image.h"
  $57 = $c; //@line 1719 "src/sprites/../puun/gf/../../other/stb_image.h"
  $58 = $5; //@line 1719 "src/sprites/../puun/gf/../../other/stb_image.h"
  $59 = (($58) + ($57<<1)|0); //@line 1719 "src/sprites/../puun/gf/../../other/stb_image.h"
  $60 = HEAP16[$59>>1]|0; //@line 1719 "src/sprites/../puun/gf/../../other/stb_image.h"
  $61 = $60 << 16 >> 16; //@line 1719 "src/sprites/../puun/gf/../../other/stb_image.h"
  $r = $61; //@line 1719 "src/sprites/../puun/gf/../../other/stb_image.h"
  $62 = $r; //@line 1720 "src/sprites/../puun/gf/../../other/stb_image.h"
  $63 = ($62|0)!=(0); //@line 1720 "src/sprites/../puun/gf/../../other/stb_image.h"
  if ($63) {
   $64 = $r; //@line 1721 "src/sprites/../puun/gf/../../other/stb_image.h"
   $65 = $64 >> 4; //@line 1721 "src/sprites/../puun/gf/../../other/stb_image.h"
   $66 = $65 & 15; //@line 1721 "src/sprites/../puun/gf/../../other/stb_image.h"
   $67 = $k; //@line 1721 "src/sprites/../puun/gf/../../other/stb_image.h"
   $68 = (($67) + ($66))|0; //@line 1721 "src/sprites/../puun/gf/../../other/stb_image.h"
   $k = $68; //@line 1721 "src/sprites/../puun/gf/../../other/stb_image.h"
   $69 = $r; //@line 1722 "src/sprites/../puun/gf/../../other/stb_image.h"
   $70 = $69 & 15; //@line 1722 "src/sprites/../puun/gf/../../other/stb_image.h"
   $s = $70; //@line 1722 "src/sprites/../puun/gf/../../other/stb_image.h"
   $71 = $s; //@line 1723 "src/sprites/../puun/gf/../../other/stb_image.h"
   $72 = $1; //@line 1723 "src/sprites/../puun/gf/../../other/stb_image.h"
   $73 = (($72) + 18108|0); //@line 1723 "src/sprites/../puun/gf/../../other/stb_image.h"
   $74 = HEAP32[$73>>2]|0; //@line 1723 "src/sprites/../puun/gf/../../other/stb_image.h"
   $75 = $74 << $71; //@line 1723 "src/sprites/../puun/gf/../../other/stb_image.h"
   HEAP32[$73>>2] = $75; //@line 1723 "src/sprites/../puun/gf/../../other/stb_image.h"
   $76 = $s; //@line 1724 "src/sprites/../puun/gf/../../other/stb_image.h"
   $77 = $1; //@line 1724 "src/sprites/../puun/gf/../../other/stb_image.h"
   $78 = (($77) + 18112|0); //@line 1724 "src/sprites/../puun/gf/../../other/stb_image.h"
   $79 = HEAP32[$78>>2]|0; //@line 1724 "src/sprites/../puun/gf/../../other/stb_image.h"
   $80 = (($79) - ($76))|0; //@line 1724 "src/sprites/../puun/gf/../../other/stb_image.h"
   HEAP32[$78>>2] = $80; //@line 1724 "src/sprites/../puun/gf/../../other/stb_image.h"
   $81 = $k; //@line 1726 "src/sprites/../puun/gf/../../other/stb_image.h"
   $82 = (($81) + 1)|0; //@line 1726 "src/sprites/../puun/gf/../../other/stb_image.h"
   $k = $82; //@line 1726 "src/sprites/../puun/gf/../../other/stb_image.h"
   $83 = (8248 + ($81)|0); //@line 1726 "src/sprites/../puun/gf/../../other/stb_image.h"
   $84 = HEAP8[$83>>0]|0; //@line 1726 "src/sprites/../puun/gf/../../other/stb_image.h"
   $85 = $84&255; //@line 1726 "src/sprites/../puun/gf/../../other/stb_image.h"
   $zig = $85; //@line 1726 "src/sprites/../puun/gf/../../other/stb_image.h"
   $86 = $r; //@line 1727 "src/sprites/../puun/gf/../../other/stb_image.h"
   $87 = $86 >> 8; //@line 1727 "src/sprites/../puun/gf/../../other/stb_image.h"
   $88 = $zig; //@line 1727 "src/sprites/../puun/gf/../../other/stb_image.h"
   $89 = $7; //@line 1727 "src/sprites/../puun/gf/../../other/stb_image.h"
   $90 = (($89) + ($88)|0); //@line 1727 "src/sprites/../puun/gf/../../other/stb_image.h"
   $91 = HEAP8[$90>>0]|0; //@line 1727 "src/sprites/../puun/gf/../../other/stb_image.h"
   $92 = $91&255; //@line 1727 "src/sprites/../puun/gf/../../other/stb_image.h"
   $93 = Math_imul($87, $92)|0; //@line 1727 "src/sprites/../puun/gf/../../other/stb_image.h"
   $94 = $93&65535; //@line 1727 "src/sprites/../puun/gf/../../other/stb_image.h"
   $95 = $zig; //@line 1727 "src/sprites/../puun/gf/../../other/stb_image.h"
   $96 = $2; //@line 1727 "src/sprites/../puun/gf/../../other/stb_image.h"
   $97 = (($96) + ($95<<1)|0); //@line 1727 "src/sprites/../puun/gf/../../other/stb_image.h"
   HEAP16[$97>>1] = $94; //@line 1727 "src/sprites/../puun/gf/../../other/stb_image.h"
  } else {
   $98 = $1; //@line 1729 "src/sprites/../puun/gf/../../other/stb_image.h"
   $99 = $4; //@line 1729 "src/sprites/../puun/gf/../../other/stb_image.h"
   $100 = (_stbi__jpeg_huff_decode($98,$99)|0); //@line 1729 "src/sprites/../puun/gf/../../other/stb_image.h"
   $rs = $100; //@line 1729 "src/sprites/../puun/gf/../../other/stb_image.h"
   $101 = $rs; //@line 1730 "src/sprites/../puun/gf/../../other/stb_image.h"
   $102 = ($101|0)<(0); //@line 1730 "src/sprites/../puun/gf/../../other/stb_image.h"
   if ($102) {
    label = 14;
    break;
   }
   $104 = $rs; //@line 1731 "src/sprites/../puun/gf/../../other/stb_image.h"
   $105 = $104 & 15; //@line 1731 "src/sprites/../puun/gf/../../other/stb_image.h"
   $s = $105; //@line 1731 "src/sprites/../puun/gf/../../other/stb_image.h"
   $106 = $rs; //@line 1732 "src/sprites/../puun/gf/../../other/stb_image.h"
   $107 = $106 >> 4; //@line 1732 "src/sprites/../puun/gf/../../other/stb_image.h"
   $r = $107; //@line 1732 "src/sprites/../puun/gf/../../other/stb_image.h"
   $108 = $s; //@line 1733 "src/sprites/../puun/gf/../../other/stb_image.h"
   $109 = ($108|0)==(0); //@line 1733 "src/sprites/../puun/gf/../../other/stb_image.h"
   if ($109) {
    $110 = $rs; //@line 1734 "src/sprites/../puun/gf/../../other/stb_image.h"
    $111 = ($110|0)!=(240); //@line 1734 "src/sprites/../puun/gf/../../other/stb_image.h"
    if ($111) {
     label = 17;
     break;
    }
    $112 = $k; //@line 1735 "src/sprites/../puun/gf/../../other/stb_image.h"
    $113 = (($112) + 16)|0; //@line 1735 "src/sprites/../puun/gf/../../other/stb_image.h"
    $k = $113; //@line 1735 "src/sprites/../puun/gf/../../other/stb_image.h"
   } else {
    $114 = $r; //@line 1737 "src/sprites/../puun/gf/../../other/stb_image.h"
    $115 = $k; //@line 1737 "src/sprites/../puun/gf/../../other/stb_image.h"
    $116 = (($115) + ($114))|0; //@line 1737 "src/sprites/../puun/gf/../../other/stb_image.h"
    $k = $116; //@line 1737 "src/sprites/../puun/gf/../../other/stb_image.h"
    $117 = $k; //@line 1739 "src/sprites/../puun/gf/../../other/stb_image.h"
    $118 = (($117) + 1)|0; //@line 1739 "src/sprites/../puun/gf/../../other/stb_image.h"
    $k = $118; //@line 1739 "src/sprites/../puun/gf/../../other/stb_image.h"
    $119 = (8248 + ($117)|0); //@line 1739 "src/sprites/../puun/gf/../../other/stb_image.h"
    $120 = HEAP8[$119>>0]|0; //@line 1739 "src/sprites/../puun/gf/../../other/stb_image.h"
    $121 = $120&255; //@line 1739 "src/sprites/../puun/gf/../../other/stb_image.h"
    $zig = $121; //@line 1739 "src/sprites/../puun/gf/../../other/stb_image.h"
    $122 = $1; //@line 1740 "src/sprites/../puun/gf/../../other/stb_image.h"
    $123 = $s; //@line 1740 "src/sprites/../puun/gf/../../other/stb_image.h"
    $124 = (_stbi__extend_receive($122,$123)|0); //@line 1740 "src/sprites/../puun/gf/../../other/stb_image.h"
    $125 = $zig; //@line 1740 "src/sprites/../puun/gf/../../other/stb_image.h"
    $126 = $7; //@line 1740 "src/sprites/../puun/gf/../../other/stb_image.h"
    $127 = (($126) + ($125)|0); //@line 1740 "src/sprites/../puun/gf/../../other/stb_image.h"
    $128 = HEAP8[$127>>0]|0; //@line 1740 "src/sprites/../puun/gf/../../other/stb_image.h"
    $129 = $128&255; //@line 1740 "src/sprites/../puun/gf/../../other/stb_image.h"
    $130 = Math_imul($124, $129)|0; //@line 1740 "src/sprites/../puun/gf/../../other/stb_image.h"
    $131 = $130&65535; //@line 1740 "src/sprites/../puun/gf/../../other/stb_image.h"
    $132 = $zig; //@line 1740 "src/sprites/../puun/gf/../../other/stb_image.h"
    $133 = $2; //@line 1740 "src/sprites/../puun/gf/../../other/stb_image.h"
    $134 = (($133) + ($132<<1)|0); //@line 1740 "src/sprites/../puun/gf/../../other/stb_image.h"
    HEAP16[$134>>1] = $131; //@line 1740 "src/sprites/../puun/gf/../../other/stb_image.h"
   }
  }
  $135 = $k; //@line 1743 "src/sprites/../puun/gf/../../other/stb_image.h"
  $136 = ($135|0)<(64); //@line 1743 "src/sprites/../puun/gf/../../other/stb_image.h"
  if (!($136)) {
   break;
  }
 }
 if ((label|0) == 14) {
  $103 = (_stbi__err(8704)|0); //@line 1730 "src/sprites/../puun/gf/../../other/stb_image.h"
  $0 = $103; //@line 1730 "src/sprites/../puun/gf/../../other/stb_image.h"
  $137 = $0; //@line 1745 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($137|0); //@line 1745 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 else if ((label|0) == 17) {
 }
 $0 = 1; //@line 1744 "src/sprites/../puun/gf/../../other/stb_image.h"
 $137 = $0; //@line 1745 "src/sprites/../puun/gf/../../other/stb_image.h"
 STACKTOP = sp;return ($137|0); //@line 1745 "src/sprites/../puun/gf/../../other/stb_image.h"
}
function _stbi__jpeg_reset($j) {
 $j = $j|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $j;
 $1 = $0; //@line 2416 "src/sprites/../puun/gf/../../other/stb_image.h"
 $2 = (($1) + 18112|0); //@line 2416 "src/sprites/../puun/gf/../../other/stb_image.h"
 HEAP32[$2>>2] = 0; //@line 2416 "src/sprites/../puun/gf/../../other/stb_image.h"
 $3 = $0; //@line 2417 "src/sprites/../puun/gf/../../other/stb_image.h"
 $4 = (($3) + 18108|0); //@line 2417 "src/sprites/../puun/gf/../../other/stb_image.h"
 HEAP32[$4>>2] = 0; //@line 2417 "src/sprites/../puun/gf/../../other/stb_image.h"
 $5 = $0; //@line 2418 "src/sprites/../puun/gf/../../other/stb_image.h"
 $6 = (($5) + 18120|0); //@line 2418 "src/sprites/../puun/gf/../../other/stb_image.h"
 HEAP32[$6>>2] = 0; //@line 2418 "src/sprites/../puun/gf/../../other/stb_image.h"
 $7 = $0; //@line 2419 "src/sprites/../puun/gf/../../other/stb_image.h"
 $8 = (($7) + 17820|0); //@line 2419 "src/sprites/../puun/gf/../../other/stb_image.h"
 $9 = (($8) + 144|0); //@line 2419 "src/sprites/../puun/gf/../../other/stb_image.h"
 $10 = (($9) + 24|0); //@line 2419 "src/sprites/../puun/gf/../../other/stb_image.h"
 HEAP32[$10>>2] = 0; //@line 2419 "src/sprites/../puun/gf/../../other/stb_image.h"
 $11 = $0; //@line 2419 "src/sprites/../puun/gf/../../other/stb_image.h"
 $12 = (($11) + 17820|0); //@line 2419 "src/sprites/../puun/gf/../../other/stb_image.h"
 $13 = (($12) + 72|0); //@line 2419 "src/sprites/../puun/gf/../../other/stb_image.h"
 $14 = (($13) + 24|0); //@line 2419 "src/sprites/../puun/gf/../../other/stb_image.h"
 HEAP32[$14>>2] = 0; //@line 2419 "src/sprites/../puun/gf/../../other/stb_image.h"
 $15 = $0; //@line 2419 "src/sprites/../puun/gf/../../other/stb_image.h"
 $16 = (($15) + 17820|0); //@line 2419 "src/sprites/../puun/gf/../../other/stb_image.h"
 $17 = (($16) + 24|0); //@line 2419 "src/sprites/../puun/gf/../../other/stb_image.h"
 HEAP32[$17>>2] = 0; //@line 2419 "src/sprites/../puun/gf/../../other/stb_image.h"
 $18 = $0; //@line 2420 "src/sprites/../puun/gf/../../other/stb_image.h"
 $19 = (($18) + 18116|0); //@line 2420 "src/sprites/../puun/gf/../../other/stb_image.h"
 HEAP8[$19>>0] = -1; //@line 2420 "src/sprites/../puun/gf/../../other/stb_image.h"
 $20 = $0; //@line 2421 "src/sprites/../puun/gf/../../other/stb_image.h"
 $21 = (($20) + 18168|0); //@line 2421 "src/sprites/../puun/gf/../../other/stb_image.h"
 $22 = HEAP32[$21>>2]|0; //@line 2421 "src/sprites/../puun/gf/../../other/stb_image.h"
 $23 = ($22|0)!=(0); //@line 2421 "src/sprites/../puun/gf/../../other/stb_image.h"
 if ($23) {
  $24 = $0; //@line 2421 "src/sprites/../puun/gf/../../other/stb_image.h"
  $25 = (($24) + 18168|0); //@line 2421 "src/sprites/../puun/gf/../../other/stb_image.h"
  $26 = HEAP32[$25>>2]|0; //@line 2421 "src/sprites/../puun/gf/../../other/stb_image.h"
  $29 = $26;
  $27 = $0; //@line 2421 "src/sprites/../puun/gf/../../other/stb_image.h"
  $28 = (($27) + 18172|0); //@line 2421 "src/sprites/../puun/gf/../../other/stb_image.h"
  HEAP32[$28>>2] = $29; //@line 2421 "src/sprites/../puun/gf/../../other/stb_image.h"
  $30 = $0; //@line 2422 "src/sprites/../puun/gf/../../other/stb_image.h"
  $31 = (($30) + 18144|0); //@line 2422 "src/sprites/../puun/gf/../../other/stb_image.h"
  HEAP32[$31>>2] = 0; //@line 2422 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return; //@line 2425 "src/sprites/../puun/gf/../../other/stb_image.h"
 } else {
  $29 = 2147483647;
  $27 = $0; //@line 2421 "src/sprites/../puun/gf/../../other/stb_image.h"
  $28 = (($27) + 18172|0); //@line 2421 "src/sprites/../puun/gf/../../other/stb_image.h"
  HEAP32[$28>>2] = $29; //@line 2421 "src/sprites/../puun/gf/../../other/stb_image.h"
  $30 = $0; //@line 2422 "src/sprites/../puun/gf/../../other/stb_image.h"
  $31 = (($30) + 18144|0); //@line 2422 "src/sprites/../puun/gf/../../other/stb_image.h"
  HEAP32[$31>>2] = 0; //@line 2422 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return; //@line 2425 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
}
function _stbi__process_scan_header($z) {
 $z = $z|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0;
 var $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0;
 var $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $Ls = 0, $aa = 0, $i = 0, $id = 0;
 var $q = 0, $which = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $z;
 $2 = $1; //@line 2644 "src/sprites/../puun/gf/../../other/stb_image.h"
 $3 = HEAP32[$2>>2]|0; //@line 2644 "src/sprites/../puun/gf/../../other/stb_image.h"
 $4 = (_stbi__get16be($3)|0); //@line 2644 "src/sprites/../puun/gf/../../other/stb_image.h"
 $Ls = $4; //@line 2644 "src/sprites/../puun/gf/../../other/stb_image.h"
 $5 = $1; //@line 2645 "src/sprites/../puun/gf/../../other/stb_image.h"
 $6 = HEAP32[$5>>2]|0; //@line 2645 "src/sprites/../puun/gf/../../other/stb_image.h"
 $7 = (_stbi__get8($6)|0); //@line 2645 "src/sprites/../puun/gf/../../other/stb_image.h"
 $8 = $7&255; //@line 2645 "src/sprites/../puun/gf/../../other/stb_image.h"
 $9 = $1; //@line 2645 "src/sprites/../puun/gf/../../other/stb_image.h"
 $10 = (($9) + 18148|0); //@line 2645 "src/sprites/../puun/gf/../../other/stb_image.h"
 HEAP32[$10>>2] = $8; //@line 2645 "src/sprites/../puun/gf/../../other/stb_image.h"
 $11 = $1; //@line 2646 "src/sprites/../puun/gf/../../other/stb_image.h"
 $12 = (($11) + 18148|0); //@line 2646 "src/sprites/../puun/gf/../../other/stb_image.h"
 $13 = HEAP32[$12>>2]|0; //@line 2646 "src/sprites/../puun/gf/../../other/stb_image.h"
 $14 = ($13|0)<(1); //@line 2646 "src/sprites/../puun/gf/../../other/stb_image.h"
 if (!($14)) {
  $15 = $1; //@line 2646 "src/sprites/../puun/gf/../../other/stb_image.h"
  $16 = (($15) + 18148|0); //@line 2646 "src/sprites/../puun/gf/../../other/stb_image.h"
  $17 = HEAP32[$16>>2]|0; //@line 2646 "src/sprites/../puun/gf/../../other/stb_image.h"
  $18 = ($17|0)>(4); //@line 2646 "src/sprites/../puun/gf/../../other/stb_image.h"
  if (!($18)) {
   $19 = $1; //@line 2646 "src/sprites/../puun/gf/../../other/stb_image.h"
   $20 = (($19) + 18148|0); //@line 2646 "src/sprites/../puun/gf/../../other/stb_image.h"
   $21 = HEAP32[$20>>2]|0; //@line 2646 "src/sprites/../puun/gf/../../other/stb_image.h"
   $22 = $1; //@line 2646 "src/sprites/../puun/gf/../../other/stb_image.h"
   $23 = HEAP32[$22>>2]|0; //@line 2646 "src/sprites/../puun/gf/../../other/stb_image.h"
   $24 = (($23) + 8|0); //@line 2646 "src/sprites/../puun/gf/../../other/stb_image.h"
   $25 = HEAP32[$24>>2]|0; //@line 2646 "src/sprites/../puun/gf/../../other/stb_image.h"
   $26 = ($21|0)>($25|0); //@line 2646 "src/sprites/../puun/gf/../../other/stb_image.h"
   if (!($26)) {
    $28 = $Ls; //@line 2647 "src/sprites/../puun/gf/../../other/stb_image.h"
    $29 = $1; //@line 2647 "src/sprites/../puun/gf/../../other/stb_image.h"
    $30 = (($29) + 18148|0); //@line 2647 "src/sprites/../puun/gf/../../other/stb_image.h"
    $31 = HEAP32[$30>>2]|0; //@line 2647 "src/sprites/../puun/gf/../../other/stb_image.h"
    $32 = $31<<1; //@line 2647 "src/sprites/../puun/gf/../../other/stb_image.h"
    $33 = (6 + ($32))|0; //@line 2647 "src/sprites/../puun/gf/../../other/stb_image.h"
    $34 = ($28|0)!=($33|0); //@line 2647 "src/sprites/../puun/gf/../../other/stb_image.h"
    if ($34) {
     $35 = (_stbi__err(10656)|0); //@line 2647 "src/sprites/../puun/gf/../../other/stb_image.h"
     $0 = $35; //@line 2647 "src/sprites/../puun/gf/../../other/stb_image.h"
     $175 = $0; //@line 2678 "src/sprites/../puun/gf/../../other/stb_image.h"
     STACKTOP = sp;return ($175|0); //@line 2678 "src/sprites/../puun/gf/../../other/stb_image.h"
    }
    $i = 0; //@line 2648 "src/sprites/../puun/gf/../../other/stb_image.h"
    while(1) {
     $36 = $i; //@line 2648 "src/sprites/../puun/gf/../../other/stb_image.h"
     $37 = $1; //@line 2648 "src/sprites/../puun/gf/../../other/stb_image.h"
     $38 = (($37) + 18148|0); //@line 2648 "src/sprites/../puun/gf/../../other/stb_image.h"
     $39 = HEAP32[$38>>2]|0; //@line 2648 "src/sprites/../puun/gf/../../other/stb_image.h"
     $40 = ($36|0)<($39|0); //@line 2648 "src/sprites/../puun/gf/../../other/stb_image.h"
     if (!($40)) {
      label = 23;
      break;
     }
     $41 = $1; //@line 2649 "src/sprites/../puun/gf/../../other/stb_image.h"
     $42 = HEAP32[$41>>2]|0; //@line 2649 "src/sprites/../puun/gf/../../other/stb_image.h"
     $43 = (_stbi__get8($42)|0); //@line 2649 "src/sprites/../puun/gf/../../other/stb_image.h"
     $44 = $43&255; //@line 2649 "src/sprites/../puun/gf/../../other/stb_image.h"
     $id = $44; //@line 2649 "src/sprites/../puun/gf/../../other/stb_image.h"
     $45 = $1; //@line 2650 "src/sprites/../puun/gf/../../other/stb_image.h"
     $46 = HEAP32[$45>>2]|0; //@line 2650 "src/sprites/../puun/gf/../../other/stb_image.h"
     $47 = (_stbi__get8($46)|0); //@line 2650 "src/sprites/../puun/gf/../../other/stb_image.h"
     $48 = $47&255; //@line 2650 "src/sprites/../puun/gf/../../other/stb_image.h"
     $q = $48; //@line 2650 "src/sprites/../puun/gf/../../other/stb_image.h"
     $which = 0; //@line 2651 "src/sprites/../puun/gf/../../other/stb_image.h"
     while(1) {
      $49 = $which; //@line 2651 "src/sprites/../puun/gf/../../other/stb_image.h"
      $50 = $1; //@line 2651 "src/sprites/../puun/gf/../../other/stb_image.h"
      $51 = HEAP32[$50>>2]|0; //@line 2651 "src/sprites/../puun/gf/../../other/stb_image.h"
      $52 = (($51) + 8|0); //@line 2651 "src/sprites/../puun/gf/../../other/stb_image.h"
      $53 = HEAP32[$52>>2]|0; //@line 2651 "src/sprites/../puun/gf/../../other/stb_image.h"
      $54 = ($49|0)<($53|0); //@line 2651 "src/sprites/../puun/gf/../../other/stb_image.h"
      if (!($54)) {
       break;
      }
      $55 = $which; //@line 2652 "src/sprites/../puun/gf/../../other/stb_image.h"
      $56 = $1; //@line 2652 "src/sprites/../puun/gf/../../other/stb_image.h"
      $57 = (($56) + 17820|0); //@line 2652 "src/sprites/../puun/gf/../../other/stb_image.h"
      $58 = (($57) + (($55*72)|0)|0); //@line 2652 "src/sprites/../puun/gf/../../other/stb_image.h"
      $59 = HEAP32[$58>>2]|0; //@line 2652 "src/sprites/../puun/gf/../../other/stb_image.h"
      $60 = $id; //@line 2652 "src/sprites/../puun/gf/../../other/stb_image.h"
      $61 = ($59|0)==($60|0); //@line 2652 "src/sprites/../puun/gf/../../other/stb_image.h"
      if ($61) {
       label = 12;
       break;
      }
      $62 = $which; //@line 2651 "src/sprites/../puun/gf/../../other/stb_image.h"
      $63 = (($62) + 1)|0; //@line 2651 "src/sprites/../puun/gf/../../other/stb_image.h"
      $which = $63; //@line 2651 "src/sprites/../puun/gf/../../other/stb_image.h"
     }
     if ((label|0) == 12) {
      label = 0;
     }
     $64 = $which; //@line 2654 "src/sprites/../puun/gf/../../other/stb_image.h"
     $65 = $1; //@line 2654 "src/sprites/../puun/gf/../../other/stb_image.h"
     $66 = HEAP32[$65>>2]|0; //@line 2654 "src/sprites/../puun/gf/../../other/stb_image.h"
     $67 = (($66) + 8|0); //@line 2654 "src/sprites/../puun/gf/../../other/stb_image.h"
     $68 = HEAP32[$67>>2]|0; //@line 2654 "src/sprites/../puun/gf/../../other/stb_image.h"
     $69 = ($64|0)==($68|0); //@line 2654 "src/sprites/../puun/gf/../../other/stb_image.h"
     if ($69) {
      label = 16;
      break;
     }
     $70 = $q; //@line 2655 "src/sprites/../puun/gf/../../other/stb_image.h"
     $71 = $70 >> 4; //@line 2655 "src/sprites/../puun/gf/../../other/stb_image.h"
     $72 = $which; //@line 2655 "src/sprites/../puun/gf/../../other/stb_image.h"
     $73 = $1; //@line 2655 "src/sprites/../puun/gf/../../other/stb_image.h"
     $74 = (($73) + 17820|0); //@line 2655 "src/sprites/../puun/gf/../../other/stb_image.h"
     $75 = (($74) + (($72*72)|0)|0); //@line 2655 "src/sprites/../puun/gf/../../other/stb_image.h"
     $76 = (($75) + 16|0); //@line 2655 "src/sprites/../puun/gf/../../other/stb_image.h"
     HEAP32[$76>>2] = $71; //@line 2655 "src/sprites/../puun/gf/../../other/stb_image.h"
     $77 = $which; //@line 2655 "src/sprites/../puun/gf/../../other/stb_image.h"
     $78 = $1; //@line 2655 "src/sprites/../puun/gf/../../other/stb_image.h"
     $79 = (($78) + 17820|0); //@line 2655 "src/sprites/../puun/gf/../../other/stb_image.h"
     $80 = (($79) + (($77*72)|0)|0); //@line 2655 "src/sprites/../puun/gf/../../other/stb_image.h"
     $81 = (($80) + 16|0); //@line 2655 "src/sprites/../puun/gf/../../other/stb_image.h"
     $82 = HEAP32[$81>>2]|0; //@line 2655 "src/sprites/../puun/gf/../../other/stb_image.h"
     $83 = ($82|0)>(3); //@line 2655 "src/sprites/../puun/gf/../../other/stb_image.h"
     if ($83) {
      label = 18;
      break;
     }
     $85 = $q; //@line 2656 "src/sprites/../puun/gf/../../other/stb_image.h"
     $86 = $85 & 15; //@line 2656 "src/sprites/../puun/gf/../../other/stb_image.h"
     $87 = $which; //@line 2656 "src/sprites/../puun/gf/../../other/stb_image.h"
     $88 = $1; //@line 2656 "src/sprites/../puun/gf/../../other/stb_image.h"
     $89 = (($88) + 17820|0); //@line 2656 "src/sprites/../puun/gf/../../other/stb_image.h"
     $90 = (($89) + (($87*72)|0)|0); //@line 2656 "src/sprites/../puun/gf/../../other/stb_image.h"
     $91 = (($90) + 20|0); //@line 2656 "src/sprites/../puun/gf/../../other/stb_image.h"
     HEAP32[$91>>2] = $86; //@line 2656 "src/sprites/../puun/gf/../../other/stb_image.h"
     $92 = $which; //@line 2656 "src/sprites/../puun/gf/../../other/stb_image.h"
     $93 = $1; //@line 2656 "src/sprites/../puun/gf/../../other/stb_image.h"
     $94 = (($93) + 17820|0); //@line 2656 "src/sprites/../puun/gf/../../other/stb_image.h"
     $95 = (($94) + (($92*72)|0)|0); //@line 2656 "src/sprites/../puun/gf/../../other/stb_image.h"
     $96 = (($95) + 20|0); //@line 2656 "src/sprites/../puun/gf/../../other/stb_image.h"
     $97 = HEAP32[$96>>2]|0; //@line 2656 "src/sprites/../puun/gf/../../other/stb_image.h"
     $98 = ($97|0)>(3); //@line 2656 "src/sprites/../puun/gf/../../other/stb_image.h"
     if ($98) {
      label = 20;
      break;
     }
     $100 = $which; //@line 2657 "src/sprites/../puun/gf/../../other/stb_image.h"
     $101 = $i; //@line 2657 "src/sprites/../puun/gf/../../other/stb_image.h"
     $102 = $1; //@line 2657 "src/sprites/../puun/gf/../../other/stb_image.h"
     $103 = (($102) + 18152|0); //@line 2657 "src/sprites/../puun/gf/../../other/stb_image.h"
     $104 = (($103) + ($101<<2)|0); //@line 2657 "src/sprites/../puun/gf/../../other/stb_image.h"
     HEAP32[$104>>2] = $100; //@line 2657 "src/sprites/../puun/gf/../../other/stb_image.h"
     $105 = $i; //@line 2648 "src/sprites/../puun/gf/../../other/stb_image.h"
     $106 = (($105) + 1)|0; //@line 2648 "src/sprites/../puun/gf/../../other/stb_image.h"
     $i = $106; //@line 2648 "src/sprites/../puun/gf/../../other/stb_image.h"
    }
    if ((label|0) == 16) {
     $0 = 0; //@line 2654 "src/sprites/../puun/gf/../../other/stb_image.h"
     $175 = $0; //@line 2678 "src/sprites/../puun/gf/../../other/stb_image.h"
     STACKTOP = sp;return ($175|0); //@line 2678 "src/sprites/../puun/gf/../../other/stb_image.h"
    }
    else if ((label|0) == 18) {
     $84 = (_stbi__err(10672)|0); //@line 2655 "src/sprites/../puun/gf/../../other/stb_image.h"
     $0 = $84; //@line 2655 "src/sprites/../puun/gf/../../other/stb_image.h"
     $175 = $0; //@line 2678 "src/sprites/../puun/gf/../../other/stb_image.h"
     STACKTOP = sp;return ($175|0); //@line 2678 "src/sprites/../puun/gf/../../other/stb_image.h"
    }
    else if ((label|0) == 20) {
     $99 = (_stbi__err(10688)|0); //@line 2656 "src/sprites/../puun/gf/../../other/stb_image.h"
     $0 = $99; //@line 2656 "src/sprites/../puun/gf/../../other/stb_image.h"
     $175 = $0; //@line 2678 "src/sprites/../puun/gf/../../other/stb_image.h"
     STACKTOP = sp;return ($175|0); //@line 2678 "src/sprites/../puun/gf/../../other/stb_image.h"
    }
    else if ((label|0) == 23) {
     $107 = $1; //@line 2662 "src/sprites/../puun/gf/../../other/stb_image.h"
     $108 = HEAP32[$107>>2]|0; //@line 2662 "src/sprites/../puun/gf/../../other/stb_image.h"
     $109 = (_stbi__get8($108)|0); //@line 2662 "src/sprites/../puun/gf/../../other/stb_image.h"
     $110 = $109&255; //@line 2662 "src/sprites/../puun/gf/../../other/stb_image.h"
     $111 = $1; //@line 2662 "src/sprites/../puun/gf/../../other/stb_image.h"
     $112 = (($111) + 18128|0); //@line 2662 "src/sprites/../puun/gf/../../other/stb_image.h"
     HEAP32[$112>>2] = $110; //@line 2662 "src/sprites/../puun/gf/../../other/stb_image.h"
     $113 = $1; //@line 2663 "src/sprites/../puun/gf/../../other/stb_image.h"
     $114 = HEAP32[$113>>2]|0; //@line 2663 "src/sprites/../puun/gf/../../other/stb_image.h"
     $115 = (_stbi__get8($114)|0); //@line 2663 "src/sprites/../puun/gf/../../other/stb_image.h"
     $116 = $115&255; //@line 2663 "src/sprites/../puun/gf/../../other/stb_image.h"
     $117 = $1; //@line 2663 "src/sprites/../puun/gf/../../other/stb_image.h"
     $118 = (($117) + 18132|0); //@line 2663 "src/sprites/../puun/gf/../../other/stb_image.h"
     HEAP32[$118>>2] = $116; //@line 2663 "src/sprites/../puun/gf/../../other/stb_image.h"
     $119 = $1; //@line 2664 "src/sprites/../puun/gf/../../other/stb_image.h"
     $120 = HEAP32[$119>>2]|0; //@line 2664 "src/sprites/../puun/gf/../../other/stb_image.h"
     $121 = (_stbi__get8($120)|0); //@line 2664 "src/sprites/../puun/gf/../../other/stb_image.h"
     $122 = $121&255; //@line 2664 "src/sprites/../puun/gf/../../other/stb_image.h"
     $aa = $122; //@line 2664 "src/sprites/../puun/gf/../../other/stb_image.h"
     $123 = $aa; //@line 2665 "src/sprites/../puun/gf/../../other/stb_image.h"
     $124 = $123 >> 4; //@line 2665 "src/sprites/../puun/gf/../../other/stb_image.h"
     $125 = $1; //@line 2665 "src/sprites/../puun/gf/../../other/stb_image.h"
     $126 = (($125) + 18136|0); //@line 2665 "src/sprites/../puun/gf/../../other/stb_image.h"
     HEAP32[$126>>2] = $124; //@line 2665 "src/sprites/../puun/gf/../../other/stb_image.h"
     $127 = $aa; //@line 2666 "src/sprites/../puun/gf/../../other/stb_image.h"
     $128 = $127 & 15; //@line 2666 "src/sprites/../puun/gf/../../other/stb_image.h"
     $129 = $1; //@line 2666 "src/sprites/../puun/gf/../../other/stb_image.h"
     $130 = (($129) + 18140|0); //@line 2666 "src/sprites/../puun/gf/../../other/stb_image.h"
     HEAP32[$130>>2] = $128; //@line 2666 "src/sprites/../puun/gf/../../other/stb_image.h"
     $131 = $1; //@line 2667 "src/sprites/../puun/gf/../../other/stb_image.h"
     $132 = (($131) + 18124|0); //@line 2667 "src/sprites/../puun/gf/../../other/stb_image.h"
     $133 = HEAP32[$132>>2]|0; //@line 2667 "src/sprites/../puun/gf/../../other/stb_image.h"
     $134 = ($133|0)!=(0); //@line 2667 "src/sprites/../puun/gf/../../other/stb_image.h"
     do {
      if ($134) {
       $135 = $1; //@line 2668 "src/sprites/../puun/gf/../../other/stb_image.h"
       $136 = (($135) + 18128|0); //@line 2668 "src/sprites/../puun/gf/../../other/stb_image.h"
       $137 = HEAP32[$136>>2]|0; //@line 2668 "src/sprites/../puun/gf/../../other/stb_image.h"
       $138 = ($137|0)>(63); //@line 2668 "src/sprites/../puun/gf/../../other/stb_image.h"
       if (!($138)) {
        $139 = $1; //@line 2668 "src/sprites/../puun/gf/../../other/stb_image.h"
        $140 = (($139) + 18132|0); //@line 2668 "src/sprites/../puun/gf/../../other/stb_image.h"
        $141 = HEAP32[$140>>2]|0; //@line 2668 "src/sprites/../puun/gf/../../other/stb_image.h"
        $142 = ($141|0)>(63); //@line 2668 "src/sprites/../puun/gf/../../other/stb_image.h"
        if (!($142)) {
         $143 = $1; //@line 2668 "src/sprites/../puun/gf/../../other/stb_image.h"
         $144 = (($143) + 18128|0); //@line 2668 "src/sprites/../puun/gf/../../other/stb_image.h"
         $145 = HEAP32[$144>>2]|0; //@line 2668 "src/sprites/../puun/gf/../../other/stb_image.h"
         $146 = $1; //@line 2668 "src/sprites/../puun/gf/../../other/stb_image.h"
         $147 = (($146) + 18132|0); //@line 2668 "src/sprites/../puun/gf/../../other/stb_image.h"
         $148 = HEAP32[$147>>2]|0; //@line 2668 "src/sprites/../puun/gf/../../other/stb_image.h"
         $149 = ($145|0)>($148|0); //@line 2668 "src/sprites/../puun/gf/../../other/stb_image.h"
         if (!($149)) {
          $150 = $1; //@line 2668 "src/sprites/../puun/gf/../../other/stb_image.h"
          $151 = (($150) + 18136|0); //@line 2668 "src/sprites/../puun/gf/../../other/stb_image.h"
          $152 = HEAP32[$151>>2]|0; //@line 2668 "src/sprites/../puun/gf/../../other/stb_image.h"
          $153 = ($152|0)>(13); //@line 2668 "src/sprites/../puun/gf/../../other/stb_image.h"
          if (!($153)) {
           $154 = $1; //@line 2668 "src/sprites/../puun/gf/../../other/stb_image.h"
           $155 = (($154) + 18140|0); //@line 2668 "src/sprites/../puun/gf/../../other/stb_image.h"
           $156 = HEAP32[$155>>2]|0; //@line 2668 "src/sprites/../puun/gf/../../other/stb_image.h"
           $157 = ($156|0)>(13); //@line 2668 "src/sprites/../puun/gf/../../other/stb_image.h"
           if (!($157)) {
            break;
           }
          }
         }
        }
       }
       $158 = (_stbi__err(10704)|0); //@line 2669 "src/sprites/../puun/gf/../../other/stb_image.h"
       $0 = $158; //@line 2669 "src/sprites/../puun/gf/../../other/stb_image.h"
       $175 = $0; //@line 2678 "src/sprites/../puun/gf/../../other/stb_image.h"
       STACKTOP = sp;return ($175|0); //@line 2678 "src/sprites/../puun/gf/../../other/stb_image.h"
      } else {
       $159 = $1; //@line 2671 "src/sprites/../puun/gf/../../other/stb_image.h"
       $160 = (($159) + 18128|0); //@line 2671 "src/sprites/../puun/gf/../../other/stb_image.h"
       $161 = HEAP32[$160>>2]|0; //@line 2671 "src/sprites/../puun/gf/../../other/stb_image.h"
       $162 = ($161|0)!=(0); //@line 2671 "src/sprites/../puun/gf/../../other/stb_image.h"
       if ($162) {
        $163 = (_stbi__err(10704)|0); //@line 2671 "src/sprites/../puun/gf/../../other/stb_image.h"
        $0 = $163; //@line 2671 "src/sprites/../puun/gf/../../other/stb_image.h"
        $175 = $0; //@line 2678 "src/sprites/../puun/gf/../../other/stb_image.h"
        STACKTOP = sp;return ($175|0); //@line 2678 "src/sprites/../puun/gf/../../other/stb_image.h"
       }
       $164 = $1; //@line 2672 "src/sprites/../puun/gf/../../other/stb_image.h"
       $165 = (($164) + 18136|0); //@line 2672 "src/sprites/../puun/gf/../../other/stb_image.h"
       $166 = HEAP32[$165>>2]|0; //@line 2672 "src/sprites/../puun/gf/../../other/stb_image.h"
       $167 = ($166|0)!=(0); //@line 2672 "src/sprites/../puun/gf/../../other/stb_image.h"
       if (!($167)) {
        $168 = $1; //@line 2672 "src/sprites/../puun/gf/../../other/stb_image.h"
        $169 = (($168) + 18140|0); //@line 2672 "src/sprites/../puun/gf/../../other/stb_image.h"
        $170 = HEAP32[$169>>2]|0; //@line 2672 "src/sprites/../puun/gf/../../other/stb_image.h"
        $171 = ($170|0)!=(0); //@line 2672 "src/sprites/../puun/gf/../../other/stb_image.h"
        if (!($171)) {
         $173 = $1; //@line 2673 "src/sprites/../puun/gf/../../other/stb_image.h"
         $174 = (($173) + 18132|0); //@line 2673 "src/sprites/../puun/gf/../../other/stb_image.h"
         HEAP32[$174>>2] = 63; //@line 2673 "src/sprites/../puun/gf/../../other/stb_image.h"
         break;
        }
       }
       $172 = (_stbi__err(10704)|0); //@line 2672 "src/sprites/../puun/gf/../../other/stb_image.h"
       $0 = $172; //@line 2672 "src/sprites/../puun/gf/../../other/stb_image.h"
       $175 = $0; //@line 2678 "src/sprites/../puun/gf/../../other/stb_image.h"
       STACKTOP = sp;return ($175|0); //@line 2678 "src/sprites/../puun/gf/../../other/stb_image.h"
      }
     } while(0);
     $0 = 1; //@line 2677 "src/sprites/../puun/gf/../../other/stb_image.h"
     $175 = $0; //@line 2678 "src/sprites/../puun/gf/../../other/stb_image.h"
     STACKTOP = sp;return ($175|0); //@line 2678 "src/sprites/../puun/gf/../../other/stb_image.h"
    }
   }
  }
 }
 $27 = (_stbi__err(10632)|0); //@line 2646 "src/sprites/../puun/gf/../../other/stb_image.h"
 $0 = $27; //@line 2646 "src/sprites/../puun/gf/../../other/stb_image.h"
 $175 = $0; //@line 2678 "src/sprites/../puun/gf/../../other/stb_image.h"
 STACKTOP = sp;return ($175|0); //@line 2678 "src/sprites/../puun/gf/../../other/stb_image.h"
}
function _stbi__setup_jpeg($j) {
 $j = $j|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $j;
 $1 = $0; //@line 3235 "src/sprites/../puun/gf/../../other/stb_image.h"
 $2 = (($1) + 18176|0); //@line 3235 "src/sprites/../puun/gf/../../other/stb_image.h"
 HEAP32[$2>>2] = 12; //@line 3235 "src/sprites/../puun/gf/../../other/stb_image.h"
 $3 = $0; //@line 3236 "src/sprites/../puun/gf/../../other/stb_image.h"
 $4 = (($3) + 18180|0); //@line 3236 "src/sprites/../puun/gf/../../other/stb_image.h"
 HEAP32[$4>>2] = 13; //@line 3236 "src/sprites/../puun/gf/../../other/stb_image.h"
 $5 = $0; //@line 3237 "src/sprites/../puun/gf/../../other/stb_image.h"
 $6 = (($5) + 18184|0); //@line 3237 "src/sprites/../puun/gf/../../other/stb_image.h"
 HEAP32[$6>>2] = 14; //@line 3237 "src/sprites/../puun/gf/../../other/stb_image.h"
 STACKTOP = sp;return; //@line 3256 "src/sprites/../puun/gf/../../other/stb_image.h"
}
function _stbi__resample_row_hv_2($out,$in_near,$in_far,$w,$hs) {
 $out = $out|0;
 $in_near = $in_near|0;
 $in_far = $in_far|0;
 $w = $w|0;
 $hs = $hs|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $9 = 0, $i = 0, $t0 = 0, $t1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $out;
 $2 = $in_near;
 $3 = $in_far;
 $4 = $w;
 $5 = $hs;
 $6 = $4; //@line 2891 "src/sprites/../puun/gf/../../other/stb_image.h"
 $7 = ($6|0)==(1); //@line 2891 "src/sprites/../puun/gf/../../other/stb_image.h"
 if ($7) {
  $8 = $2; //@line 2892 "src/sprites/../puun/gf/../../other/stb_image.h"
  $9 = HEAP8[$8>>0]|0; //@line 2892 "src/sprites/../puun/gf/../../other/stb_image.h"
  $10 = $9&255; //@line 2892 "src/sprites/../puun/gf/../../other/stb_image.h"
  $11 = ($10*3)|0; //@line 2892 "src/sprites/../puun/gf/../../other/stb_image.h"
  $12 = $3; //@line 2892 "src/sprites/../puun/gf/../../other/stb_image.h"
  $13 = HEAP8[$12>>0]|0; //@line 2892 "src/sprites/../puun/gf/../../other/stb_image.h"
  $14 = $13&255; //@line 2892 "src/sprites/../puun/gf/../../other/stb_image.h"
  $15 = (($11) + ($14))|0; //@line 2892 "src/sprites/../puun/gf/../../other/stb_image.h"
  $16 = (($15) + 2)|0; //@line 2892 "src/sprites/../puun/gf/../../other/stb_image.h"
  $17 = $16 >> 2; //@line 2892 "src/sprites/../puun/gf/../../other/stb_image.h"
  $18 = $17&255; //@line 2892 "src/sprites/../puun/gf/../../other/stb_image.h"
  $19 = $1; //@line 2892 "src/sprites/../puun/gf/../../other/stb_image.h"
  $20 = (($19) + 1|0); //@line 2892 "src/sprites/../puun/gf/../../other/stb_image.h"
  HEAP8[$20>>0] = $18; //@line 2892 "src/sprites/../puun/gf/../../other/stb_image.h"
  $21 = $1; //@line 2892 "src/sprites/../puun/gf/../../other/stb_image.h"
  HEAP8[$21>>0] = $18; //@line 2892 "src/sprites/../puun/gf/../../other/stb_image.h"
  $22 = $1; //@line 2893 "src/sprites/../puun/gf/../../other/stb_image.h"
  $0 = $22; //@line 2893 "src/sprites/../puun/gf/../../other/stb_image.h"
  $87 = $0; //@line 2909 "src/sprites/../puun/gf/../../other/stb_image.h"
  STACKTOP = sp;return ($87|0); //@line 2909 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $23 = $2; //@line 2896 "src/sprites/../puun/gf/../../other/stb_image.h"
 $24 = HEAP8[$23>>0]|0; //@line 2896 "src/sprites/../puun/gf/../../other/stb_image.h"
 $25 = $24&255; //@line 2896 "src/sprites/../puun/gf/../../other/stb_image.h"
 $26 = ($25*3)|0; //@line 2896 "src/sprites/../puun/gf/../../other/stb_image.h"
 $27 = $3; //@line 2896 "src/sprites/../puun/gf/../../other/stb_image.h"
 $28 = HEAP8[$27>>0]|0; //@line 2896 "src/sprites/../puun/gf/../../other/stb_image.h"
 $29 = $28&255; //@line 2896 "src/sprites/../puun/gf/../../other/stb_image.h"
 $30 = (($26) + ($29))|0; //@line 2896 "src/sprites/../puun/gf/../../other/stb_image.h"
 $t1 = $30; //@line 2896 "src/sprites/../puun/gf/../../other/stb_image.h"
 $31 = $t1; //@line 2897 "src/sprites/../puun/gf/../../other/stb_image.h"
 $32 = (($31) + 2)|0; //@line 2897 "src/sprites/../puun/gf/../../other/stb_image.h"
 $33 = $32 >> 2; //@line 2897 "src/sprites/../puun/gf/../../other/stb_image.h"
 $34 = $33&255; //@line 2897 "src/sprites/../puun/gf/../../other/stb_image.h"
 $35 = $1; //@line 2897 "src/sprites/../puun/gf/../../other/stb_image.h"
 HEAP8[$35>>0] = $34; //@line 2897 "src/sprites/../puun/gf/../../other/stb_image.h"
 $i = 1; //@line 2898 "src/sprites/../puun/gf/../../other/stb_image.h"
 while(1) {
  $36 = $i; //@line 2898 "src/sprites/../puun/gf/../../other/stb_image.h"
  $37 = $4; //@line 2898 "src/sprites/../puun/gf/../../other/stb_image.h"
  $38 = ($36|0)<($37|0); //@line 2898 "src/sprites/../puun/gf/../../other/stb_image.h"
  if (!($38)) {
   break;
  }
  $39 = $t1; //@line 2899 "src/sprites/../puun/gf/../../other/stb_image.h"
  $t0 = $39; //@line 2899 "src/sprites/../puun/gf/../../other/stb_image.h"
  $40 = $i; //@line 2900 "src/sprites/../puun/gf/../../other/stb_image.h"
  $41 = $2; //@line 2900 "src/sprites/../puun/gf/../../other/stb_image.h"
  $42 = (($41) + ($40)|0); //@line 2900 "src/sprites/../puun/gf/../../other/stb_image.h"
  $43 = HEAP8[$42>>0]|0; //@line 2900 "src/sprites/../puun/gf/../../other/stb_image.h"
  $44 = $43&255; //@line 2900 "src/sprites/../puun/gf/../../other/stb_image.h"
  $45 = ($44*3)|0; //@line 2900 "src/sprites/../puun/gf/../../other/stb_image.h"
  $46 = $i; //@line 2900 "src/sprites/../puun/gf/../../other/stb_image.h"
  $47 = $3; //@line 2900 "src/sprites/../puun/gf/../../other/stb_image.h"
  $48 = (($47) + ($46)|0); //@line 2900 "src/sprites/../puun/gf/../../other/stb_image.h"
  $49 = HEAP8[$48>>0]|0; //@line 2900 "src/sprites/../puun/gf/../../other/stb_image.h"
  $50 = $49&255; //@line 2900 "src/sprites/../puun/gf/../../other/stb_image.h"
  $51 = (($45) + ($50))|0; //@line 2900 "src/sprites/../puun/gf/../../other/stb_image.h"
  $t1 = $51; //@line 2900 "src/sprites/../puun/gf/../../other/stb_image.h"
  $52 = $t0; //@line 2901 "src/sprites/../puun/gf/../../other/stb_image.h"
  $53 = ($52*3)|0; //@line 2901 "src/sprites/../puun/gf/../../other/stb_image.h"
  $54 = $t1; //@line 2901 "src/sprites/../puun/gf/../../other/stb_image.h"
  $55 = (($53) + ($54))|0; //@line 2901 "src/sprites/../puun/gf/../../other/stb_image.h"
  $56 = (($55) + 8)|0; //@line 2901 "src/sprites/../puun/gf/../../other/stb_image.h"
  $57 = $56 >> 4; //@line 2901 "src/sprites/../puun/gf/../../other/stb_image.h"
  $58 = $57&255; //@line 2901 "src/sprites/../puun/gf/../../other/stb_image.h"
  $59 = $i; //@line 2901 "src/sprites/../puun/gf/../../other/stb_image.h"
  $60 = $59<<1; //@line 2901 "src/sprites/../puun/gf/../../other/stb_image.h"
  $61 = (($60) - 1)|0; //@line 2901 "src/sprites/../puun/gf/../../other/stb_image.h"
  $62 = $1; //@line 2901 "src/sprites/../puun/gf/../../other/stb_image.h"
  $63 = (($62) + ($61)|0); //@line 2901 "src/sprites/../puun/gf/../../other/stb_image.h"
  HEAP8[$63>>0] = $58; //@line 2901 "src/sprites/../puun/gf/../../other/stb_image.h"
  $64 = $t1; //@line 2902 "src/sprites/../puun/gf/../../other/stb_image.h"
  $65 = ($64*3)|0; //@line 2902 "src/sprites/../puun/gf/../../other/stb_image.h"
  $66 = $t0; //@line 2902 "src/sprites/../puun/gf/../../other/stb_image.h"
  $67 = (($65) + ($66))|0; //@line 2902 "src/sprites/../puun/gf/../../other/stb_image.h"
  $68 = (($67) + 8)|0; //@line 2902 "src/sprites/../puun/gf/../../other/stb_image.h"
  $69 = $68 >> 4; //@line 2902 "src/sprites/../puun/gf/../../other/stb_image.h"
  $70 = $69&255; //@line 2902 "src/sprites/../puun/gf/../../other/stb_image.h"
  $71 = $i; //@line 2902 "src/sprites/../puun/gf/../../other/stb_image.h"
  $72 = $71<<1; //@line 2902 "src/sprites/../puun/gf/../../other/stb_image.h"
  $73 = $1; //@line 2902 "src/sprites/../puun/gf/../../other/stb_image.h"
  $74 = (($73) + ($72)|0); //@line 2902 "src/sprites/../puun/gf/../../other/stb_image.h"
  HEAP8[$74>>0] = $70; //@line 2902 "src/sprites/../puun/gf/../../other/stb_image.h"
  $75 = $i; //@line 2898 "src/sprites/../puun/gf/../../other/stb_image.h"
  $76 = (($75) + 1)|0; //@line 2898 "src/sprites/../puun/gf/../../other/stb_image.h"
  $i = $76; //@line 2898 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $77 = $t1; //@line 2904 "src/sprites/../puun/gf/../../other/stb_image.h"
 $78 = (($77) + 2)|0; //@line 2904 "src/sprites/../puun/gf/../../other/stb_image.h"
 $79 = $78 >> 2; //@line 2904 "src/sprites/../puun/gf/../../other/stb_image.h"
 $80 = $79&255; //@line 2904 "src/sprites/../puun/gf/../../other/stb_image.h"
 $81 = $4; //@line 2904 "src/sprites/../puun/gf/../../other/stb_image.h"
 $82 = $81<<1; //@line 2904 "src/sprites/../puun/gf/../../other/stb_image.h"
 $83 = (($82) - 1)|0; //@line 2904 "src/sprites/../puun/gf/../../other/stb_image.h"
 $84 = $1; //@line 2904 "src/sprites/../puun/gf/../../other/stb_image.h"
 $85 = (($84) + ($83)|0); //@line 2904 "src/sprites/../puun/gf/../../other/stb_image.h"
 HEAP8[$85>>0] = $80; //@line 2904 "src/sprites/../puun/gf/../../other/stb_image.h"
 $86 = $1; //@line 2908 "src/sprites/../puun/gf/../../other/stb_image.h"
 $0 = $86; //@line 2908 "src/sprites/../puun/gf/../../other/stb_image.h"
 $87 = $0; //@line 2909 "src/sprites/../puun/gf/../../other/stb_image.h"
 STACKTOP = sp;return ($87|0); //@line 2909 "src/sprites/../puun/gf/../../other/stb_image.h"
}
function _stbi__YCbCr_to_RGB_row($out,$y,$pcb,$pcr,$count,$step) {
 $out = $out|0;
 $y = $y|0;
 $pcb = $pcb|0;
 $pcr = $pcr|0;
 $count = $count|0;
 $step = $step|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $9 = 0;
 var $b = 0, $cb = 0, $cr = 0, $g = 0, $i = 0, $r = 0, $y_fixed = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $out;
 $1 = $y;
 $2 = $pcb;
 $3 = $pcr;
 $4 = $count;
 $5 = $step;
 $i = 0; //@line 3074 "src/sprites/../puun/gf/../../other/stb_image.h"
 while(1) {
  $6 = $i; //@line 3074 "src/sprites/../puun/gf/../../other/stb_image.h"
  $7 = $4; //@line 3074 "src/sprites/../puun/gf/../../other/stb_image.h"
  $8 = ($6|0)<($7|0); //@line 3074 "src/sprites/../puun/gf/../../other/stb_image.h"
  if (!($8)) {
   break;
  }
  $9 = $i; //@line 3075 "src/sprites/../puun/gf/../../other/stb_image.h"
  $10 = $1; //@line 3075 "src/sprites/../puun/gf/../../other/stb_image.h"
  $11 = (($10) + ($9)|0); //@line 3075 "src/sprites/../puun/gf/../../other/stb_image.h"
  $12 = HEAP8[$11>>0]|0; //@line 3075 "src/sprites/../puun/gf/../../other/stb_image.h"
  $13 = $12&255; //@line 3075 "src/sprites/../puun/gf/../../other/stb_image.h"
  $14 = $13 << 20; //@line 3075 "src/sprites/../puun/gf/../../other/stb_image.h"
  $15 = (($14) + 524288)|0; //@line 3075 "src/sprites/../puun/gf/../../other/stb_image.h"
  $y_fixed = $15; //@line 3075 "src/sprites/../puun/gf/../../other/stb_image.h"
  $16 = $i; //@line 3077 "src/sprites/../puun/gf/../../other/stb_image.h"
  $17 = $3; //@line 3077 "src/sprites/../puun/gf/../../other/stb_image.h"
  $18 = (($17) + ($16)|0); //@line 3077 "src/sprites/../puun/gf/../../other/stb_image.h"
  $19 = HEAP8[$18>>0]|0; //@line 3077 "src/sprites/../puun/gf/../../other/stb_image.h"
  $20 = $19&255; //@line 3077 "src/sprites/../puun/gf/../../other/stb_image.h"
  $21 = (($20) - 128)|0; //@line 3077 "src/sprites/../puun/gf/../../other/stb_image.h"
  $cr = $21; //@line 3077 "src/sprites/../puun/gf/../../other/stb_image.h"
  $22 = $i; //@line 3078 "src/sprites/../puun/gf/../../other/stb_image.h"
  $23 = $2; //@line 3078 "src/sprites/../puun/gf/../../other/stb_image.h"
  $24 = (($23) + ($22)|0); //@line 3078 "src/sprites/../puun/gf/../../other/stb_image.h"
  $25 = HEAP8[$24>>0]|0; //@line 3078 "src/sprites/../puun/gf/../../other/stb_image.h"
  $26 = $25&255; //@line 3078 "src/sprites/../puun/gf/../../other/stb_image.h"
  $27 = (($26) - 128)|0; //@line 3078 "src/sprites/../puun/gf/../../other/stb_image.h"
  $cb = $27; //@line 3078 "src/sprites/../puun/gf/../../other/stb_image.h"
  $28 = $y_fixed; //@line 3079 "src/sprites/../puun/gf/../../other/stb_image.h"
  $29 = $cr; //@line 3079 "src/sprites/../puun/gf/../../other/stb_image.h"
  $30 = Math_imul($29, 1470208)|0; //@line 3079 "src/sprites/../puun/gf/../../other/stb_image.h"
  $31 = (($28) + ($30))|0; //@line 3079 "src/sprites/../puun/gf/../../other/stb_image.h"
  $r = $31; //@line 3079 "src/sprites/../puun/gf/../../other/stb_image.h"
  $32 = $y_fixed; //@line 3080 "src/sprites/../puun/gf/../../other/stb_image.h"
  $33 = $cr; //@line 3080 "src/sprites/../puun/gf/../../other/stb_image.h"
  $34 = Math_imul($33, -748800)|0; //@line 3080 "src/sprites/../puun/gf/../../other/stb_image.h"
  $35 = (($32) + ($34))|0; //@line 3080 "src/sprites/../puun/gf/../../other/stb_image.h"
  $36 = $cb; //@line 3080 "src/sprites/../puun/gf/../../other/stb_image.h"
  $37 = Math_imul($36, -360960)|0; //@line 3080 "src/sprites/../puun/gf/../../other/stb_image.h"
  $38 = $37 & -65536; //@line 3080 "src/sprites/../puun/gf/../../other/stb_image.h"
  $39 = (($35) + ($38))|0; //@line 3080 "src/sprites/../puun/gf/../../other/stb_image.h"
  $g = $39; //@line 3080 "src/sprites/../puun/gf/../../other/stb_image.h"
  $40 = $y_fixed; //@line 3081 "src/sprites/../puun/gf/../../other/stb_image.h"
  $41 = $cb; //@line 3081 "src/sprites/../puun/gf/../../other/stb_image.h"
  $42 = Math_imul($41, 1858048)|0; //@line 3081 "src/sprites/../puun/gf/../../other/stb_image.h"
  $43 = (($40) + ($42))|0; //@line 3081 "src/sprites/../puun/gf/../../other/stb_image.h"
  $b = $43; //@line 3081 "src/sprites/../puun/gf/../../other/stb_image.h"
  $44 = $r; //@line 3082 "src/sprites/../puun/gf/../../other/stb_image.h"
  $45 = $44 >> 20; //@line 3082 "src/sprites/../puun/gf/../../other/stb_image.h"
  $r = $45; //@line 3082 "src/sprites/../puun/gf/../../other/stb_image.h"
  $46 = $g; //@line 3083 "src/sprites/../puun/gf/../../other/stb_image.h"
  $47 = $46 >> 20; //@line 3083 "src/sprites/../puun/gf/../../other/stb_image.h"
  $g = $47; //@line 3083 "src/sprites/../puun/gf/../../other/stb_image.h"
  $48 = $b; //@line 3084 "src/sprites/../puun/gf/../../other/stb_image.h"
  $49 = $48 >> 20; //@line 3084 "src/sprites/../puun/gf/../../other/stb_image.h"
  $b = $49; //@line 3084 "src/sprites/../puun/gf/../../other/stb_image.h"
  $50 = $r; //@line 3085 "src/sprites/../puun/gf/../../other/stb_image.h"
  $51 = ($50>>>0)>(255); //@line 3085 "src/sprites/../puun/gf/../../other/stb_image.h"
  if ($51) {
   $52 = $r; //@line 3085 "src/sprites/../puun/gf/../../other/stb_image.h"
   $53 = ($52|0)<(0); //@line 3085 "src/sprites/../puun/gf/../../other/stb_image.h"
   if ($53) {
    $r = 0; //@line 3085 "src/sprites/../puun/gf/../../other/stb_image.h"
   } else {
    $r = 255; //@line 3085 "src/sprites/../puun/gf/../../other/stb_image.h"
   }
  }
  $54 = $g; //@line 3086 "src/sprites/../puun/gf/../../other/stb_image.h"
  $55 = ($54>>>0)>(255); //@line 3086 "src/sprites/../puun/gf/../../other/stb_image.h"
  if ($55) {
   $56 = $g; //@line 3086 "src/sprites/../puun/gf/../../other/stb_image.h"
   $57 = ($56|0)<(0); //@line 3086 "src/sprites/../puun/gf/../../other/stb_image.h"
   if ($57) {
    $g = 0; //@line 3086 "src/sprites/../puun/gf/../../other/stb_image.h"
   } else {
    $g = 255; //@line 3086 "src/sprites/../puun/gf/../../other/stb_image.h"
   }
  }
  $58 = $b; //@line 3087 "src/sprites/../puun/gf/../../other/stb_image.h"
  $59 = ($58>>>0)>(255); //@line 3087 "src/sprites/../puun/gf/../../other/stb_image.h"
  if ($59) {
   $60 = $b; //@line 3087 "src/sprites/../puun/gf/../../other/stb_image.h"
   $61 = ($60|0)<(0); //@line 3087 "src/sprites/../puun/gf/../../other/stb_image.h"
   if ($61) {
    $b = 0; //@line 3087 "src/sprites/../puun/gf/../../other/stb_image.h"
   } else {
    $b = 255; //@line 3087 "src/sprites/../puun/gf/../../other/stb_image.h"
   }
  }
  $62 = $r; //@line 3088 "src/sprites/../puun/gf/../../other/stb_image.h"
  $63 = $62&255; //@line 3088 "src/sprites/../puun/gf/../../other/stb_image.h"
  $64 = $0; //@line 3088 "src/sprites/../puun/gf/../../other/stb_image.h"
  HEAP8[$64>>0] = $63; //@line 3088 "src/sprites/../puun/gf/../../other/stb_image.h"
  $65 = $g; //@line 3089 "src/sprites/../puun/gf/../../other/stb_image.h"
  $66 = $65&255; //@line 3089 "src/sprites/../puun/gf/../../other/stb_image.h"
  $67 = $0; //@line 3089 "src/sprites/../puun/gf/../../other/stb_image.h"
  $68 = (($67) + 1|0); //@line 3089 "src/sprites/../puun/gf/../../other/stb_image.h"
  HEAP8[$68>>0] = $66; //@line 3089 "src/sprites/../puun/gf/../../other/stb_image.h"
  $69 = $b; //@line 3090 "src/sprites/../puun/gf/../../other/stb_image.h"
  $70 = $69&255; //@line 3090 "src/sprites/../puun/gf/../../other/stb_image.h"
  $71 = $0; //@line 3090 "src/sprites/../puun/gf/../../other/stb_image.h"
  $72 = (($71) + 2|0); //@line 3090 "src/sprites/../puun/gf/../../other/stb_image.h"
  HEAP8[$72>>0] = $70; //@line 3090 "src/sprites/../puun/gf/../../other/stb_image.h"
  $73 = $0; //@line 3091 "src/sprites/../puun/gf/../../other/stb_image.h"
  $74 = (($73) + 3|0); //@line 3091 "src/sprites/../puun/gf/../../other/stb_image.h"
  HEAP8[$74>>0] = -1; //@line 3091 "src/sprites/../puun/gf/../../other/stb_image.h"
  $75 = $5; //@line 3092 "src/sprites/../puun/gf/../../other/stb_image.h"
  $76 = $0; //@line 3092 "src/sprites/../puun/gf/../../other/stb_image.h"
  $77 = (($76) + ($75)|0); //@line 3092 "src/sprites/../puun/gf/../../other/stb_image.h"
  $0 = $77; //@line 3092 "src/sprites/../puun/gf/../../other/stb_image.h"
  $78 = $i; //@line 3074 "src/sprites/../puun/gf/../../other/stb_image.h"
  $79 = (($78) + 1)|0; //@line 3074 "src/sprites/../puun/gf/../../other/stb_image.h"
  $i = $79; //@line 3074 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 STACKTOP = sp;return; //@line 3094 "src/sprites/../puun/gf/../../other/stb_image.h"
}
function _stbi__idct_block($out,$out_stride,$data) {
 $out = $out|0;
 $out_stride = $out_stride|0;
 $data = $data|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0;
 var $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0;
 var $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0;
 var $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0;
 var $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0;
 var $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0;
 var $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0;
 var $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0;
 var $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0;
 var $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0;
 var $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0;
 var $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0;
 var $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0;
 var $422 = 0, $423 = 0, $424 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0;
 var $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0;
 var $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0;
 var $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $d = 0, $dcterm = 0, $i = 0, $o = 0, $p1 = 0, $p15 = 0, $p2 = 0, $p26 = 0, $p3 = 0, $p37 = 0, $p4 = 0, $p48 = 0, $p5 = 0, $p59 = 0, $t0 = 0;
 var $t01 = 0, $t1 = 0, $t12 = 0, $t2 = 0, $t23 = 0, $t3 = 0, $t34 = 0, $v = 0, $val = 0, $x0 = 0, $x010 = 0, $x1 = 0, $x111 = 0, $x2 = 0, $x212 = 0, $x3 = 0, $x313 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 400|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $val = sp + 120|0;
 $0 = $out;
 $1 = $out_stride;
 $2 = $data;
 $v = $val; //@line 1947 "src/sprites/../puun/gf/../../other/stb_image.h"
 $3 = $2; //@line 1949 "src/sprites/../puun/gf/../../other/stb_image.h"
 $d = $3; //@line 1949 "src/sprites/../puun/gf/../../other/stb_image.h"
 $i = 0; //@line 1952 "src/sprites/../puun/gf/../../other/stb_image.h"
 while(1) {
  $4 = $i; //@line 1952 "src/sprites/../puun/gf/../../other/stb_image.h"
  $5 = ($4|0)<(8); //@line 1952 "src/sprites/../puun/gf/../../other/stb_image.h"
  if (!($5)) {
   break;
  }
  $6 = $d; //@line 1954 "src/sprites/../puun/gf/../../other/stb_image.h"
  $7 = (($6) + 16|0); //@line 1954 "src/sprites/../puun/gf/../../other/stb_image.h"
  $8 = HEAP16[$7>>1]|0; //@line 1954 "src/sprites/../puun/gf/../../other/stb_image.h"
  $9 = $8 << 16 >> 16; //@line 1954 "src/sprites/../puun/gf/../../other/stb_image.h"
  $10 = ($9|0)==(0); //@line 1954 "src/sprites/../puun/gf/../../other/stb_image.h"
  if ($10) {
   $11 = $d; //@line 1954 "src/sprites/../puun/gf/../../other/stb_image.h"
   $12 = (($11) + 32|0); //@line 1954 "src/sprites/../puun/gf/../../other/stb_image.h"
   $13 = HEAP16[$12>>1]|0; //@line 1954 "src/sprites/../puun/gf/../../other/stb_image.h"
   $14 = $13 << 16 >> 16; //@line 1954 "src/sprites/../puun/gf/../../other/stb_image.h"
   $15 = ($14|0)==(0); //@line 1954 "src/sprites/../puun/gf/../../other/stb_image.h"
   if ($15) {
    $16 = $d; //@line 1954 "src/sprites/../puun/gf/../../other/stb_image.h"
    $17 = (($16) + 48|0); //@line 1954 "src/sprites/../puun/gf/../../other/stb_image.h"
    $18 = HEAP16[$17>>1]|0; //@line 1954 "src/sprites/../puun/gf/../../other/stb_image.h"
    $19 = $18 << 16 >> 16; //@line 1954 "src/sprites/../puun/gf/../../other/stb_image.h"
    $20 = ($19|0)==(0); //@line 1954 "src/sprites/../puun/gf/../../other/stb_image.h"
    if ($20) {
     $21 = $d; //@line 1954 "src/sprites/../puun/gf/../../other/stb_image.h"
     $22 = (($21) + 64|0); //@line 1954 "src/sprites/../puun/gf/../../other/stb_image.h"
     $23 = HEAP16[$22>>1]|0; //@line 1954 "src/sprites/../puun/gf/../../other/stb_image.h"
     $24 = $23 << 16 >> 16; //@line 1954 "src/sprites/../puun/gf/../../other/stb_image.h"
     $25 = ($24|0)==(0); //@line 1954 "src/sprites/../puun/gf/../../other/stb_image.h"
     if ($25) {
      $26 = $d; //@line 1954 "src/sprites/../puun/gf/../../other/stb_image.h"
      $27 = (($26) + 80|0); //@line 1954 "src/sprites/../puun/gf/../../other/stb_image.h"
      $28 = HEAP16[$27>>1]|0; //@line 1954 "src/sprites/../puun/gf/../../other/stb_image.h"
      $29 = $28 << 16 >> 16; //@line 1954 "src/sprites/../puun/gf/../../other/stb_image.h"
      $30 = ($29|0)==(0); //@line 1954 "src/sprites/../puun/gf/../../other/stb_image.h"
      if ($30) {
       $31 = $d; //@line 1954 "src/sprites/../puun/gf/../../other/stb_image.h"
       $32 = (($31) + 96|0); //@line 1954 "src/sprites/../puun/gf/../../other/stb_image.h"
       $33 = HEAP16[$32>>1]|0; //@line 1954 "src/sprites/../puun/gf/../../other/stb_image.h"
       $34 = $33 << 16 >> 16; //@line 1954 "src/sprites/../puun/gf/../../other/stb_image.h"
       $35 = ($34|0)==(0); //@line 1954 "src/sprites/../puun/gf/../../other/stb_image.h"
       if ($35) {
        $36 = $d; //@line 1954 "src/sprites/../puun/gf/../../other/stb_image.h"
        $37 = (($36) + 112|0); //@line 1954 "src/sprites/../puun/gf/../../other/stb_image.h"
        $38 = HEAP16[$37>>1]|0; //@line 1954 "src/sprites/../puun/gf/../../other/stb_image.h"
        $39 = $38 << 16 >> 16; //@line 1954 "src/sprites/../puun/gf/../../other/stb_image.h"
        $40 = ($39|0)==(0); //@line 1954 "src/sprites/../puun/gf/../../other/stb_image.h"
        if ($40) {
         $41 = $d; //@line 1960 "src/sprites/../puun/gf/../../other/stb_image.h"
         $42 = HEAP16[$41>>1]|0; //@line 1960 "src/sprites/../puun/gf/../../other/stb_image.h"
         $43 = $42 << 16 >> 16; //@line 1960 "src/sprites/../puun/gf/../../other/stb_image.h"
         $44 = $43 << 2; //@line 1960 "src/sprites/../puun/gf/../../other/stb_image.h"
         $dcterm = $44; //@line 1960 "src/sprites/../puun/gf/../../other/stb_image.h"
         $45 = $dcterm; //@line 1961 "src/sprites/../puun/gf/../../other/stb_image.h"
         $46 = $v; //@line 1961 "src/sprites/../puun/gf/../../other/stb_image.h"
         $47 = (($46) + 224|0); //@line 1961 "src/sprites/../puun/gf/../../other/stb_image.h"
         HEAP32[$47>>2] = $45; //@line 1961 "src/sprites/../puun/gf/../../other/stb_image.h"
         $48 = $v; //@line 1961 "src/sprites/../puun/gf/../../other/stb_image.h"
         $49 = (($48) + 192|0); //@line 1961 "src/sprites/../puun/gf/../../other/stb_image.h"
         HEAP32[$49>>2] = $45; //@line 1961 "src/sprites/../puun/gf/../../other/stb_image.h"
         $50 = $v; //@line 1961 "src/sprites/../puun/gf/../../other/stb_image.h"
         $51 = (($50) + 160|0); //@line 1961 "src/sprites/../puun/gf/../../other/stb_image.h"
         HEAP32[$51>>2] = $45; //@line 1961 "src/sprites/../puun/gf/../../other/stb_image.h"
         $52 = $v; //@line 1961 "src/sprites/../puun/gf/../../other/stb_image.h"
         $53 = (($52) + 128|0); //@line 1961 "src/sprites/../puun/gf/../../other/stb_image.h"
         HEAP32[$53>>2] = $45; //@line 1961 "src/sprites/../puun/gf/../../other/stb_image.h"
         $54 = $v; //@line 1961 "src/sprites/../puun/gf/../../other/stb_image.h"
         $55 = (($54) + 96|0); //@line 1961 "src/sprites/../puun/gf/../../other/stb_image.h"
         HEAP32[$55>>2] = $45; //@line 1961 "src/sprites/../puun/gf/../../other/stb_image.h"
         $56 = $v; //@line 1961 "src/sprites/../puun/gf/../../other/stb_image.h"
         $57 = (($56) + 64|0); //@line 1961 "src/sprites/../puun/gf/../../other/stb_image.h"
         HEAP32[$57>>2] = $45; //@line 1961 "src/sprites/../puun/gf/../../other/stb_image.h"
         $58 = $v; //@line 1961 "src/sprites/../puun/gf/../../other/stb_image.h"
         $59 = (($58) + 32|0); //@line 1961 "src/sprites/../puun/gf/../../other/stb_image.h"
         HEAP32[$59>>2] = $45; //@line 1961 "src/sprites/../puun/gf/../../other/stb_image.h"
         $60 = $v; //@line 1961 "src/sprites/../puun/gf/../../other/stb_image.h"
         HEAP32[$60>>2] = $45; //@line 1961 "src/sprites/../puun/gf/../../other/stb_image.h"
        } else {
         label = 11;
        }
       } else {
        label = 11;
       }
      } else {
       label = 11;
      }
     } else {
      label = 11;
     }
    } else {
     label = 11;
    }
   } else {
    label = 11;
   }
  } else {
   label = 11;
  }
  if ((label|0) == 11) {
   label = 0;
   $61 = $d; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $62 = (($61) + 32|0); //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $63 = HEAP16[$62>>1]|0; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $64 = $63 << 16 >> 16; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $p2 = $64; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $65 = $d; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $66 = (($65) + 96|0); //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $67 = HEAP16[$66>>1]|0; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $68 = $67 << 16 >> 16; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $p3 = $68; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $69 = $p2; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $70 = $p3; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $71 = (($69) + ($70))|0; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $72 = ($71*2217)|0; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $p1 = $72; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $73 = $p1; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $74 = $p3; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $75 = Math_imul($74, -7567)|0; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $76 = (($73) + ($75))|0; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $t2 = $76; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $77 = $p1; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $78 = $p2; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $79 = ($78*3135)|0; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $80 = (($77) + ($79))|0; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $t3 = $80; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $81 = $d; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $82 = HEAP16[$81>>1]|0; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $83 = $82 << 16 >> 16; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $p2 = $83; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $84 = $d; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $85 = (($84) + 64|0); //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $86 = HEAP16[$85>>1]|0; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $87 = $86 << 16 >> 16; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $p3 = $87; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $88 = $p2; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $89 = $p3; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $90 = (($88) + ($89))|0; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $91 = $90 << 12; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $t0 = $91; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $92 = $p2; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $93 = $p3; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $94 = (($92) - ($93))|0; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $95 = $94 << 12; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $t1 = $95; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $96 = $t0; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $97 = $t3; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $98 = (($96) + ($97))|0; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $x0 = $98; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $99 = $t0; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $100 = $t3; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $101 = (($99) - ($100))|0; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $x3 = $101; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $102 = $t1; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $103 = $t2; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $104 = (($102) + ($103))|0; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $x1 = $104; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $105 = $t1; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $106 = $t2; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $107 = (($105) - ($106))|0; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $x2 = $107; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $108 = $d; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $109 = (($108) + 112|0); //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $110 = HEAP16[$109>>1]|0; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $111 = $110 << 16 >> 16; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $t0 = $111; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $112 = $d; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $113 = (($112) + 80|0); //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $114 = HEAP16[$113>>1]|0; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $115 = $114 << 16 >> 16; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $t1 = $115; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $116 = $d; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $117 = (($116) + 48|0); //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $118 = HEAP16[$117>>1]|0; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $119 = $118 << 16 >> 16; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $t2 = $119; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $120 = $d; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $121 = (($120) + 16|0); //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $122 = HEAP16[$121>>1]|0; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $123 = $122 << 16 >> 16; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $t3 = $123; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $124 = $t0; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $125 = $t2; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $126 = (($124) + ($125))|0; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $p3 = $126; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $127 = $t1; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $128 = $t3; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $129 = (($127) + ($128))|0; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $p4 = $129; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $130 = $t0; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $131 = $t3; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $132 = (($130) + ($131))|0; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $p1 = $132; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $133 = $t1; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $134 = $t2; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $135 = (($133) + ($134))|0; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $p2 = $135; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $136 = $p3; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $137 = $p4; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $138 = (($136) + ($137))|0; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $139 = ($138*4816)|0; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $p5 = $139; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $140 = $t0; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $141 = ($140*1223)|0; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $t0 = $141; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $142 = $t1; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $143 = ($142*8410)|0; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $t1 = $143; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $144 = $t2; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $145 = ($144*12586)|0; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $t2 = $145; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $146 = $t3; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $147 = ($146*6149)|0; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $t3 = $147; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $148 = $p5; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $149 = $p1; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $150 = Math_imul($149, -3685)|0; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $151 = (($148) + ($150))|0; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $p1 = $151; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $152 = $p5; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $153 = $p2; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $154 = Math_imul($153, -10497)|0; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $155 = (($152) + ($154))|0; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $p2 = $155; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $156 = $p3; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $157 = Math_imul($156, -8034)|0; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $p3 = $157; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $158 = $p4; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $159 = Math_imul($158, -1597)|0; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $p4 = $159; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $160 = $p1; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $161 = $p4; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $162 = (($160) + ($161))|0; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $163 = $t3; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $164 = (($163) + ($162))|0; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $t3 = $164; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $165 = $p2; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $166 = $p3; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $167 = (($165) + ($166))|0; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $168 = $t2; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $169 = (($168) + ($167))|0; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $t2 = $169; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $170 = $p2; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $171 = $p4; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $172 = (($170) + ($171))|0; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $173 = $t1; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $174 = (($173) + ($172))|0; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $t1 = $174; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $175 = $p1; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $176 = $p3; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $177 = (($175) + ($176))|0; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $178 = $t0; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $179 = (($178) + ($177))|0; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $t0 = $179; //@line 1963 "src/sprites/../puun/gf/../../other/stb_image.h"
   $180 = $x0; //@line 1966 "src/sprites/../puun/gf/../../other/stb_image.h"
   $181 = (($180) + 512)|0; //@line 1966 "src/sprites/../puun/gf/../../other/stb_image.h"
   $x0 = $181; //@line 1966 "src/sprites/../puun/gf/../../other/stb_image.h"
   $182 = $x1; //@line 1966 "src/sprites/../puun/gf/../../other/stb_image.h"
   $183 = (($182) + 512)|0; //@line 1966 "src/sprites/../puun/gf/../../other/stb_image.h"
   $x1 = $183; //@line 1966 "src/sprites/../puun/gf/../../other/stb_image.h"
   $184 = $x2; //@line 1966 "src/sprites/../puun/gf/../../other/stb_image.h"
   $185 = (($184) + 512)|0; //@line 1966 "src/sprites/../puun/gf/../../other/stb_image.h"
   $x2 = $185; //@line 1966 "src/sprites/../puun/gf/../../other/stb_image.h"
   $186 = $x3; //@line 1966 "src/sprites/../puun/gf/../../other/stb_image.h"
   $187 = (($186) + 512)|0; //@line 1966 "src/sprites/../puun/gf/../../other/stb_image.h"
   $x3 = $187; //@line 1966 "src/sprites/../puun/gf/../../other/stb_image.h"
   $188 = $x0; //@line 1967 "src/sprites/../puun/gf/../../other/stb_image.h"
   $189 = $t3; //@line 1967 "src/sprites/../puun/gf/../../other/stb_image.h"
   $190 = (($188) + ($189))|0; //@line 1967 "src/sprites/../puun/gf/../../other/stb_image.h"
   $191 = $190 >> 10; //@line 1967 "src/sprites/../puun/gf/../../other/stb_image.h"
   $192 = $v; //@line 1967 "src/sprites/../puun/gf/../../other/stb_image.h"
   HEAP32[$192>>2] = $191; //@line 1967 "src/sprites/../puun/gf/../../other/stb_image.h"
   $193 = $x0; //@line 1968 "src/sprites/../puun/gf/../../other/stb_image.h"
   $194 = $t3; //@line 1968 "src/sprites/../puun/gf/../../other/stb_image.h"
   $195 = (($193) - ($194))|0; //@line 1968 "src/sprites/../puun/gf/../../other/stb_image.h"
   $196 = $195 >> 10; //@line 1968 "src/sprites/../puun/gf/../../other/stb_image.h"
   $197 = $v; //@line 1968 "src/sprites/../puun/gf/../../other/stb_image.h"
   $198 = (($197) + 224|0); //@line 1968 "src/sprites/../puun/gf/../../other/stb_image.h"
   HEAP32[$198>>2] = $196; //@line 1968 "src/sprites/../puun/gf/../../other/stb_image.h"
   $199 = $x1; //@line 1969 "src/sprites/../puun/gf/../../other/stb_image.h"
   $200 = $t2; //@line 1969 "src/sprites/../puun/gf/../../other/stb_image.h"
   $201 = (($199) + ($200))|0; //@line 1969 "src/sprites/../puun/gf/../../other/stb_image.h"
   $202 = $201 >> 10; //@line 1969 "src/sprites/../puun/gf/../../other/stb_image.h"
   $203 = $v; //@line 1969 "src/sprites/../puun/gf/../../other/stb_image.h"
   $204 = (($203) + 32|0); //@line 1969 "src/sprites/../puun/gf/../../other/stb_image.h"
   HEAP32[$204>>2] = $202; //@line 1969 "src/sprites/../puun/gf/../../other/stb_image.h"
   $205 = $x1; //@line 1970 "src/sprites/../puun/gf/../../other/stb_image.h"
   $206 = $t2; //@line 1970 "src/sprites/../puun/gf/../../other/stb_image.h"
   $207 = (($205) - ($206))|0; //@line 1970 "src/sprites/../puun/gf/../../other/stb_image.h"
   $208 = $207 >> 10; //@line 1970 "src/sprites/../puun/gf/../../other/stb_image.h"
   $209 = $v; //@line 1970 "src/sprites/../puun/gf/../../other/stb_image.h"
   $210 = (($209) + 192|0); //@line 1970 "src/sprites/../puun/gf/../../other/stb_image.h"
   HEAP32[$210>>2] = $208; //@line 1970 "src/sprites/../puun/gf/../../other/stb_image.h"
   $211 = $x2; //@line 1971 "src/sprites/../puun/gf/../../other/stb_image.h"
   $212 = $t1; //@line 1971 "src/sprites/../puun/gf/../../other/stb_image.h"
   $213 = (($211) + ($212))|0; //@line 1971 "src/sprites/../puun/gf/../../other/stb_image.h"
   $214 = $213 >> 10; //@line 1971 "src/sprites/../puun/gf/../../other/stb_image.h"
   $215 = $v; //@line 1971 "src/sprites/../puun/gf/../../other/stb_image.h"
   $216 = (($215) + 64|0); //@line 1971 "src/sprites/../puun/gf/../../other/stb_image.h"
   HEAP32[$216>>2] = $214; //@line 1971 "src/sprites/../puun/gf/../../other/stb_image.h"
   $217 = $x2; //@line 1972 "src/sprites/../puun/gf/../../other/stb_image.h"
   $218 = $t1; //@line 1972 "src/sprites/../puun/gf/../../other/stb_image.h"
   $219 = (($217) - ($218))|0; //@line 1972 "src/sprites/../puun/gf/../../other/stb_image.h"
   $220 = $219 >> 10; //@line 1972 "src/sprites/../puun/gf/../../other/stb_image.h"
   $221 = $v; //@line 1972 "src/sprites/../puun/gf/../../other/stb_image.h"
   $222 = (($221) + 160|0); //@line 1972 "src/sprites/../puun/gf/../../other/stb_image.h"
   HEAP32[$222>>2] = $220; //@line 1972 "src/sprites/../puun/gf/../../other/stb_image.h"
   $223 = $x3; //@line 1973 "src/sprites/../puun/gf/../../other/stb_image.h"
   $224 = $t0; //@line 1973 "src/sprites/../puun/gf/../../other/stb_image.h"
   $225 = (($223) + ($224))|0; //@line 1973 "src/sprites/../puun/gf/../../other/stb_image.h"
   $226 = $225 >> 10; //@line 1973 "src/sprites/../puun/gf/../../other/stb_image.h"
   $227 = $v; //@line 1973 "src/sprites/../puun/gf/../../other/stb_image.h"
   $228 = (($227) + 96|0); //@line 1973 "src/sprites/../puun/gf/../../other/stb_image.h"
   HEAP32[$228>>2] = $226; //@line 1973 "src/sprites/../puun/gf/../../other/stb_image.h"
   $229 = $x3; //@line 1974 "src/sprites/../puun/gf/../../other/stb_image.h"
   $230 = $t0; //@line 1974 "src/sprites/../puun/gf/../../other/stb_image.h"
   $231 = (($229) - ($230))|0; //@line 1974 "src/sprites/../puun/gf/../../other/stb_image.h"
   $232 = $231 >> 10; //@line 1974 "src/sprites/../puun/gf/../../other/stb_image.h"
   $233 = $v; //@line 1974 "src/sprites/../puun/gf/../../other/stb_image.h"
   $234 = (($233) + 128|0); //@line 1974 "src/sprites/../puun/gf/../../other/stb_image.h"
   HEAP32[$234>>2] = $232; //@line 1974 "src/sprites/../puun/gf/../../other/stb_image.h"
  }
  $235 = $i; //@line 1952 "src/sprites/../puun/gf/../../other/stb_image.h"
  $236 = (($235) + 1)|0; //@line 1952 "src/sprites/../puun/gf/../../other/stb_image.h"
  $i = $236; //@line 1952 "src/sprites/../puun/gf/../../other/stb_image.h"
  $237 = $d; //@line 1952 "src/sprites/../puun/gf/../../other/stb_image.h"
  $238 = (($237) + 2|0); //@line 1952 "src/sprites/../puun/gf/../../other/stb_image.h"
  $d = $238; //@line 1952 "src/sprites/../puun/gf/../../other/stb_image.h"
  $239 = $v; //@line 1952 "src/sprites/../puun/gf/../../other/stb_image.h"
  $240 = (($239) + 4|0); //@line 1952 "src/sprites/../puun/gf/../../other/stb_image.h"
  $v = $240; //@line 1952 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $i = 0; //@line 1978 "src/sprites/../puun/gf/../../other/stb_image.h"
 $v = $val; //@line 1978 "src/sprites/../puun/gf/../../other/stb_image.h"
 $241 = $0; //@line 1978 "src/sprites/../puun/gf/../../other/stb_image.h"
 $o = $241; //@line 1978 "src/sprites/../puun/gf/../../other/stb_image.h"
 while(1) {
  $242 = $i; //@line 1978 "src/sprites/../puun/gf/../../other/stb_image.h"
  $243 = ($242|0)<(8); //@line 1978 "src/sprites/../puun/gf/../../other/stb_image.h"
  if (!($243)) {
   break;
  }
  $244 = $v; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $245 = (($244) + 8|0); //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $246 = HEAP32[$245>>2]|0; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $p26 = $246; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $247 = $v; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $248 = (($247) + 24|0); //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $249 = HEAP32[$248>>2]|0; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $p37 = $249; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $250 = $p26; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $251 = $p37; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $252 = (($250) + ($251))|0; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $253 = ($252*2217)|0; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $p15 = $253; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $254 = $p15; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $255 = $p37; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $256 = Math_imul($255, -7567)|0; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $257 = (($254) + ($256))|0; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $t23 = $257; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $258 = $p15; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $259 = $p26; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $260 = ($259*3135)|0; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $261 = (($258) + ($260))|0; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $t34 = $261; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $262 = $v; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $263 = HEAP32[$262>>2]|0; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $p26 = $263; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $264 = $v; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $265 = (($264) + 16|0); //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $266 = HEAP32[$265>>2]|0; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $p37 = $266; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $267 = $p26; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $268 = $p37; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $269 = (($267) + ($268))|0; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $270 = $269 << 12; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $t01 = $270; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $271 = $p26; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $272 = $p37; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $273 = (($271) - ($272))|0; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $274 = $273 << 12; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $t12 = $274; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $275 = $t01; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $276 = $t34; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $277 = (($275) + ($276))|0; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $x010 = $277; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $278 = $t01; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $279 = $t34; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $280 = (($278) - ($279))|0; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $x313 = $280; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $281 = $t12; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $282 = $t23; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $283 = (($281) + ($282))|0; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $x111 = $283; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $284 = $t12; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $285 = $t23; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $286 = (($284) - ($285))|0; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $x212 = $286; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $287 = $v; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $288 = (($287) + 28|0); //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $289 = HEAP32[$288>>2]|0; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $t01 = $289; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $290 = $v; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $291 = (($290) + 20|0); //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $292 = HEAP32[$291>>2]|0; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $t12 = $292; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $293 = $v; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $294 = (($293) + 12|0); //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $295 = HEAP32[$294>>2]|0; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $t23 = $295; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $296 = $v; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $297 = (($296) + 4|0); //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $298 = HEAP32[$297>>2]|0; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $t34 = $298; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $299 = $t01; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $300 = $t23; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $301 = (($299) + ($300))|0; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $p37 = $301; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $302 = $t12; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $303 = $t34; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $304 = (($302) + ($303))|0; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $p48 = $304; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $305 = $t01; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $306 = $t34; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $307 = (($305) + ($306))|0; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $p15 = $307; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $308 = $t12; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $309 = $t23; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $310 = (($308) + ($309))|0; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $p26 = $310; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $311 = $p37; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $312 = $p48; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $313 = (($311) + ($312))|0; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $314 = ($313*4816)|0; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $p59 = $314; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $315 = $t01; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $316 = ($315*1223)|0; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $t01 = $316; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $317 = $t12; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $318 = ($317*8410)|0; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $t12 = $318; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $319 = $t23; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $320 = ($319*12586)|0; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $t23 = $320; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $321 = $t34; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $322 = ($321*6149)|0; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $t34 = $322; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $323 = $p59; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $324 = $p15; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $325 = Math_imul($324, -3685)|0; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $326 = (($323) + ($325))|0; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $p15 = $326; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $327 = $p59; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $328 = $p26; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $329 = Math_imul($328, -10497)|0; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $330 = (($327) + ($329))|0; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $p26 = $330; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $331 = $p37; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $332 = Math_imul($331, -8034)|0; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $p37 = $332; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $333 = $p48; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $334 = Math_imul($333, -1597)|0; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $p48 = $334; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $335 = $p15; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $336 = $p48; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $337 = (($335) + ($336))|0; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $338 = $t34; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $339 = (($338) + ($337))|0; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $t34 = $339; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $340 = $p26; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $341 = $p37; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $342 = (($340) + ($341))|0; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $343 = $t23; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $344 = (($343) + ($342))|0; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $t23 = $344; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $345 = $p26; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $346 = $p48; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $347 = (($345) + ($346))|0; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $348 = $t12; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $349 = (($348) + ($347))|0; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $t12 = $349; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $350 = $p15; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $351 = $p37; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $352 = (($350) + ($351))|0; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $353 = $t01; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $354 = (($353) + ($352))|0; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $t01 = $354; //@line 1980 "src/sprites/../puun/gf/../../other/stb_image.h"
  $355 = $x010; //@line 1987 "src/sprites/../puun/gf/../../other/stb_image.h"
  $356 = (($355) + 16842752)|0; //@line 1987 "src/sprites/../puun/gf/../../other/stb_image.h"
  $x010 = $356; //@line 1987 "src/sprites/../puun/gf/../../other/stb_image.h"
  $357 = $x111; //@line 1988 "src/sprites/../puun/gf/../../other/stb_image.h"
  $358 = (($357) + 16842752)|0; //@line 1988 "src/sprites/../puun/gf/../../other/stb_image.h"
  $x111 = $358; //@line 1988 "src/sprites/../puun/gf/../../other/stb_image.h"
  $359 = $x212; //@line 1989 "src/sprites/../puun/gf/../../other/stb_image.h"
  $360 = (($359) + 16842752)|0; //@line 1989 "src/sprites/../puun/gf/../../other/stb_image.h"
  $x212 = $360; //@line 1989 "src/sprites/../puun/gf/../../other/stb_image.h"
  $361 = $x313; //@line 1990 "src/sprites/../puun/gf/../../other/stb_image.h"
  $362 = (($361) + 16842752)|0; //@line 1990 "src/sprites/../puun/gf/../../other/stb_image.h"
  $x313 = $362; //@line 1990 "src/sprites/../puun/gf/../../other/stb_image.h"
  $363 = $x010; //@line 1993 "src/sprites/../puun/gf/../../other/stb_image.h"
  $364 = $t34; //@line 1993 "src/sprites/../puun/gf/../../other/stb_image.h"
  $365 = (($363) + ($364))|0; //@line 1993 "src/sprites/../puun/gf/../../other/stb_image.h"
  $366 = $365 >> 17; //@line 1993 "src/sprites/../puun/gf/../../other/stb_image.h"
  $367 = (_stbi__clamp($366)|0); //@line 1993 "src/sprites/../puun/gf/../../other/stb_image.h"
  $368 = $o; //@line 1993 "src/sprites/../puun/gf/../../other/stb_image.h"
  HEAP8[$368>>0] = $367; //@line 1993 "src/sprites/../puun/gf/../../other/stb_image.h"
  $369 = $x010; //@line 1994 "src/sprites/../puun/gf/../../other/stb_image.h"
  $370 = $t34; //@line 1994 "src/sprites/../puun/gf/../../other/stb_image.h"
  $371 = (($369) - ($370))|0; //@line 1994 "src/sprites/../puun/gf/../../other/stb_image.h"
  $372 = $371 >> 17; //@line 1994 "src/sprites/../puun/gf/../../other/stb_image.h"
  $373 = (_stbi__clamp($372)|0); //@line 1994 "src/sprites/../puun/gf/../../other/stb_image.h"
  $374 = $o; //@line 1994 "src/sprites/../puun/gf/../../other/stb_image.h"
  $375 = (($374) + 7|0); //@line 1994 "src/sprites/../puun/gf/../../other/stb_image.h"
  HEAP8[$375>>0] = $373; //@line 1994 "src/sprites/../puun/gf/../../other/stb_image.h"
  $376 = $x111; //@line 1995 "src/sprites/../puun/gf/../../other/stb_image.h"
  $377 = $t23; //@line 1995 "src/sprites/../puun/gf/../../other/stb_image.h"
  $378 = (($376) + ($377))|0; //@line 1995 "src/sprites/../puun/gf/../../other/stb_image.h"
  $379 = $378 >> 17; //@line 1995 "src/sprites/../puun/gf/../../other/stb_image.h"
  $380 = (_stbi__clamp($379)|0); //@line 1995 "src/sprites/../puun/gf/../../other/stb_image.h"
  $381 = $o; //@line 1995 "src/sprites/../puun/gf/../../other/stb_image.h"
  $382 = (($381) + 1|0); //@line 1995 "src/sprites/../puun/gf/../../other/stb_image.h"
  HEAP8[$382>>0] = $380; //@line 1995 "src/sprites/../puun/gf/../../other/stb_image.h"
  $383 = $x111; //@line 1996 "src/sprites/../puun/gf/../../other/stb_image.h"
  $384 = $t23; //@line 1996 "src/sprites/../puun/gf/../../other/stb_image.h"
  $385 = (($383) - ($384))|0; //@line 1996 "src/sprites/../puun/gf/../../other/stb_image.h"
  $386 = $385 >> 17; //@line 1996 "src/sprites/../puun/gf/../../other/stb_image.h"
  $387 = (_stbi__clamp($386)|0); //@line 1996 "src/sprites/../puun/gf/../../other/stb_image.h"
  $388 = $o; //@line 1996 "src/sprites/../puun/gf/../../other/stb_image.h"
  $389 = (($388) + 6|0); //@line 1996 "src/sprites/../puun/gf/../../other/stb_image.h"
  HEAP8[$389>>0] = $387; //@line 1996 "src/sprites/../puun/gf/../../other/stb_image.h"
  $390 = $x212; //@line 1997 "src/sprites/../puun/gf/../../other/stb_image.h"
  $391 = $t12; //@line 1997 "src/sprites/../puun/gf/../../other/stb_image.h"
  $392 = (($390) + ($391))|0; //@line 1997 "src/sprites/../puun/gf/../../other/stb_image.h"
  $393 = $392 >> 17; //@line 1997 "src/sprites/../puun/gf/../../other/stb_image.h"
  $394 = (_stbi__clamp($393)|0); //@line 1997 "src/sprites/../puun/gf/../../other/stb_image.h"
  $395 = $o; //@line 1997 "src/sprites/../puun/gf/../../other/stb_image.h"
  $396 = (($395) + 2|0); //@line 1997 "src/sprites/../puun/gf/../../other/stb_image.h"
  HEAP8[$396>>0] = $394; //@line 1997 "src/sprites/../puun/gf/../../other/stb_image.h"
  $397 = $x212; //@line 1998 "src/sprites/../puun/gf/../../other/stb_image.h"
  $398 = $t12; //@line 1998 "src/sprites/../puun/gf/../../other/stb_image.h"
  $399 = (($397) - ($398))|0; //@line 1998 "src/sprites/../puun/gf/../../other/stb_image.h"
  $400 = $399 >> 17; //@line 1998 "src/sprites/../puun/gf/../../other/stb_image.h"
  $401 = (_stbi__clamp($400)|0); //@line 1998 "src/sprites/../puun/gf/../../other/stb_image.h"
  $402 = $o; //@line 1998 "src/sprites/../puun/gf/../../other/stb_image.h"
  $403 = (($402) + 5|0); //@line 1998 "src/sprites/../puun/gf/../../other/stb_image.h"
  HEAP8[$403>>0] = $401; //@line 1998 "src/sprites/../puun/gf/../../other/stb_image.h"
  $404 = $x313; //@line 1999 "src/sprites/../puun/gf/../../other/stb_image.h"
  $405 = $t01; //@line 1999 "src/sprites/../puun/gf/../../other/stb_image.h"
  $406 = (($404) + ($405))|0; //@line 1999 "src/sprites/../puun/gf/../../other/stb_image.h"
  $407 = $406 >> 17; //@line 1999 "src/sprites/../puun/gf/../../other/stb_image.h"
  $408 = (_stbi__clamp($407)|0); //@line 1999 "src/sprites/../puun/gf/../../other/stb_image.h"
  $409 = $o; //@line 1999 "src/sprites/../puun/gf/../../other/stb_image.h"
  $410 = (($409) + 3|0); //@line 1999 "src/sprites/../puun/gf/../../other/stb_image.h"
  HEAP8[$410>>0] = $408; //@line 1999 "src/sprites/../puun/gf/../../other/stb_image.h"
  $411 = $x313; //@line 2000 "src/sprites/../puun/gf/../../other/stb_image.h"
  $412 = $t01; //@line 2000 "src/sprites/../puun/gf/../../other/stb_image.h"
  $413 = (($411) - ($412))|0; //@line 2000 "src/sprites/../puun/gf/../../other/stb_image.h"
  $414 = $413 >> 17; //@line 2000 "src/sprites/../puun/gf/../../other/stb_image.h"
  $415 = (_stbi__clamp($414)|0); //@line 2000 "src/sprites/../puun/gf/../../other/stb_image.h"
  $416 = $o; //@line 2000 "src/sprites/../puun/gf/../../other/stb_image.h"
  $417 = (($416) + 4|0); //@line 2000 "src/sprites/../puun/gf/../../other/stb_image.h"
  HEAP8[$417>>0] = $415; //@line 2000 "src/sprites/../puun/gf/../../other/stb_image.h"
  $418 = $i; //@line 1978 "src/sprites/../puun/gf/../../other/stb_image.h"
  $419 = (($418) + 1)|0; //@line 1978 "src/sprites/../puun/gf/../../other/stb_image.h"
  $i = $419; //@line 1978 "src/sprites/../puun/gf/../../other/stb_image.h"
  $420 = $v; //@line 1978 "src/sprites/../puun/gf/../../other/stb_image.h"
  $421 = (($420) + 32|0); //@line 1978 "src/sprites/../puun/gf/../../other/stb_image.h"
  $v = $421; //@line 1978 "src/sprites/../puun/gf/../../other/stb_image.h"
  $422 = $1; //@line 1978 "src/sprites/../puun/gf/../../other/stb_image.h"
  $423 = $o; //@line 1978 "src/sprites/../puun/gf/../../other/stb_image.h"
  $424 = (($423) + ($422)|0); //@line 1978 "src/sprites/../puun/gf/../../other/stb_image.h"
  $o = $424; //@line 1978 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 STACKTOP = sp;return; //@line 2002 "src/sprites/../puun/gf/../../other/stb_image.h"
}
function _stbi__clamp($x) {
 $x = $x|0;
 var $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $x;
 $2 = $1; //@line 1897 "src/sprites/../puun/gf/../../other/stb_image.h"
 $3 = ($2>>>0)>(255); //@line 1897 "src/sprites/../puun/gf/../../other/stb_image.h"
 do {
  if ($3) {
   $4 = $1; //@line 1898 "src/sprites/../puun/gf/../../other/stb_image.h"
   $5 = ($4|0)<(0); //@line 1898 "src/sprites/../puun/gf/../../other/stb_image.h"
   if ($5) {
    $0 = 0; //@line 1898 "src/sprites/../puun/gf/../../other/stb_image.h"
    break;
   }
   $6 = $1; //@line 1899 "src/sprites/../puun/gf/../../other/stb_image.h"
   $7 = ($6|0)>(255); //@line 1899 "src/sprites/../puun/gf/../../other/stb_image.h"
   if ($7) {
    $0 = -1; //@line 1899 "src/sprites/../puun/gf/../../other/stb_image.h"
    break;
   } else {
    label = 7;
    break;
   }
  } else {
   label = 7;
  }
 } while(0);
 if ((label|0) == 7) {
  $8 = $1; //@line 1901 "src/sprites/../puun/gf/../../other/stb_image.h"
  $9 = $8&255; //@line 1901 "src/sprites/../puun/gf/../../other/stb_image.h"
  $0 = $9; //@line 1901 "src/sprites/../puun/gf/../../other/stb_image.h"
 }
 $10 = $0; //@line 1902 "src/sprites/../puun/gf/../../other/stb_image.h"
 STACKTOP = sp;return ($10|0); //@line 1902 "src/sprites/../puun/gf/../../other/stb_image.h"
}
function _stbi__jpeg_test($s) {
 $s = $s|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $j = 0, $r = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 18208|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $j = sp;
 $0 = $s;
 $1 = $0; //@line 3399 "src/sprites/../puun/gf/../../other/stb_image.h"
 HEAP32[$j>>2] = $1; //@line 3399 "src/sprites/../puun/gf/../../other/stb_image.h"
 _stbi__setup_jpeg($j); //@line 3400 "src/sprites/../puun/gf/../../other/stb_image.h"
 $2 = (_stbi__decode_jpeg_header($j,1)|0); //@line 3401 "src/sprites/../puun/gf/../../other/stb_image.h"
 $r = $2; //@line 3401 "src/sprites/../puun/gf/../../other/stb_image.h"
 $3 = $0; //@line 3402 "src/sprites/../puun/gf/../../other/stb_image.h"
 _stbi__rewind($3); //@line 3402 "src/sprites/../puun/gf/../../other/stb_image.h"
 $4 = $r; //@line 3403 "src/sprites/../puun/gf/../../other/stb_image.h"
 STACKTOP = sp;return ($4|0); //@line 3403 "src/sprites/../puun/gf/../../other/stb_image.h"
}
function _stbi__stdio_eof($user) {
 $user = $user|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $user;
 $1 = $0; //@line 791 "src/sprites/../puun/gf/../../other/stb_image.h"
 $2 = (_feof(($1|0))|0); //@line 791 "src/sprites/../puun/gf/../../other/stb_image.h"
 STACKTOP = sp;return ($2|0); //@line 791 "src/sprites/../puun/gf/../../other/stb_image.h"
}
function _stbi__stdio_skip($user,$n) {
 $user = $user|0;
 $n = $n|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $user;
 $1 = $n;
 $2 = $0; //@line 786 "src/sprites/../puun/gf/../../other/stb_image.h"
 $3 = $1; //@line 786 "src/sprites/../puun/gf/../../other/stb_image.h"
 (_fseek(($2|0),($3|0),1)|0); //@line 786 "src/sprites/../puun/gf/../../other/stb_image.h"
 STACKTOP = sp;return; //@line 787 "src/sprites/../puun/gf/../../other/stb_image.h"
}
function _stbi__stdio_read($user,$data,$size) {
 $user = $user|0;
 $data = $data|0;
 $size = $size|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $user;
 $1 = $data;
 $2 = $size;
 $3 = $1; //@line 781 "src/sprites/../puun/gf/../../other/stb_image.h"
 $4 = $2; //@line 781 "src/sprites/../puun/gf/../../other/stb_image.h"
 $5 = $0; //@line 781 "src/sprites/../puun/gf/../../other/stb_image.h"
 $6 = (_fread(($3|0),1,($4|0),($5|0))|0); //@line 781 "src/sprites/../puun/gf/../../other/stb_image.h"
 STACKTOP = sp;return ($6|0); //@line 781 "src/sprites/../puun/gf/../../other/stb_image.h"
}
function _ldexp($x,$n) {
 $x = +$x;
 $n = $n|0;
 var $0 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (+_scalbn($x,$n));
 return (+$0);
}
function _malloc($bytes) {
 $bytes = $bytes|0;
 var $$lcssa = 0, $$lcssa146 = 0, $$lcssa148 = 0, $$lcssa151 = 0, $$lcssa152 = 0, $$lcssa153 = 0, $$lcssa154 = 0, $$lcssa156 = 0, $$lcssa159 = 0, $$lcssa161 = 0, $$lcssa163 = 0, $$lcssa165 = 0, $$lcssa167 = 0, $$lcssa169 = 0, $$lcssa172 = 0, $$lcssa174 = 0, $$pre = 0, $$pre$i = 0, $$pre$i$i = 0, $$pre$i22$i = 0;
 var $$pre$i25 = 0, $$pre$phi$i$iZ2D = 0, $$pre$phi$i23$iZ2D = 0, $$pre$phi$i26Z2D = 0, $$pre$phi$iZ2D = 0, $$pre$phi59$i$iZ2D = 0, $$pre$phiZ2D = 0, $$pre108 = 0, $$pre58$i$i = 0, $$rsize$0$i = 0, $$rsize$3$i = 0, $$rsize$3$i$lcssa = 0, $$sum = 0, $$sum$i$i = 0, $$sum$i$i$i = 0, $$sum$i12$i = 0, $$sum$i13$i = 0, $$sum$i16$i = 0, $$sum$i19$i = 0, $$sum$i2337 = 0;
 var $$sum$i32 = 0, $$sum$i38 = 0, $$sum1 = 0, $$sum1$i = 0, $$sum1$i$i = 0, $$sum1$i14$i = 0, $$sum1$i20$i = 0, $$sum1$i24 = 0, $$sum10 = 0, $$sum10$i = 0, $$sum10$i$i = 0, $$sum11$i = 0, $$sum11$i$i = 0, $$sum110$i = 0, $$sum111$i = 0, $$sum1112 = 0, $$sum112$i = 0, $$sum113$i = 0, $$sum114$i = 0, $$sum115$i = 0;
 var $$sum116$i = 0, $$sum117$i = 0, $$sum118$i = 0, $$sum119$i = 0, $$sum12$i = 0, $$sum12$i$i = 0, $$sum120$i = 0, $$sum121$i = 0, $$sum122$i = 0, $$sum123$i = 0, $$sum13$i = 0, $$sum13$i$i = 0, $$sum14$i$i = 0, $$sum14$pre$i = 0, $$sum15$i = 0, $$sum15$i$i = 0, $$sum16$i = 0, $$sum16$i$i = 0, $$sum17$i = 0, $$sum17$i$i = 0;
 var $$sum18$i = 0, $$sum1819$i$i = 0, $$sum2 = 0, $$sum2$i = 0, $$sum2$i$i = 0, $$sum2$i$i$i = 0, $$sum2$i15$i = 0, $$sum2$i17$i = 0, $$sum2$i21$i = 0, $$sum2$pre$i = 0, $$sum20$i$i = 0, $$sum21$i$i = 0, $$sum22$i$i = 0, $$sum23$i$i = 0, $$sum24$i$i = 0, $$sum25$i$i = 0, $$sum26$pre$i$i = 0, $$sum27$i$i = 0, $$sum28$i$i = 0, $$sum29$i$i = 0;
 var $$sum3$i = 0, $$sum3$i27 = 0, $$sum3$pre$i$i = 0, $$sum30$i$i = 0, $$sum3132$i$i = 0, $$sum34$i$i = 0, $$sum3536$i$i = 0, $$sum3738$i$i = 0, $$sum39$i$i = 0, $$sum4 = 0, $$sum4$i = 0, $$sum4$i$i = 0, $$sum4$i28 = 0, $$sum40$i$i = 0, $$sum41$i$i = 0, $$sum42$i$i = 0, $$sum5$i = 0, $$sum5$i$i = 0, $$sum56 = 0, $$sum6$i = 0;
 var $$sum67$i$i = 0, $$sum7$i = 0, $$sum8$i = 0, $$sum8$pre = 0, $$sum9 = 0, $$sum9$i = 0, $$sum9$i$i = 0, $$tsize$1$i = 0, $$v$0$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $1000 = 0, $1001 = 0, $1002 = 0, $1003 = 0, $1004 = 0, $1005 = 0, $1006 = 0;
 var $1007 = 0, $1008 = 0, $1009 = 0, $101 = 0, $1010 = 0, $1011 = 0, $1012 = 0, $1013 = 0, $1014 = 0, $1015 = 0, $1016 = 0, $1017 = 0, $1018 = 0, $1019 = 0, $102 = 0, $1020 = 0, $1021 = 0, $1022 = 0, $1023 = 0, $1024 = 0;
 var $1025 = 0, $1026 = 0, $1027 = 0, $1028 = 0, $1029 = 0, $103 = 0, $1030 = 0, $1031 = 0, $1032 = 0, $1033 = 0, $1034 = 0, $1035 = 0, $1036 = 0, $1037 = 0, $1038 = 0, $1039 = 0, $104 = 0, $1040 = 0, $1041 = 0, $1042 = 0;
 var $1043 = 0, $1044 = 0, $1045 = 0, $1046 = 0, $1047 = 0, $1048 = 0, $1049 = 0, $105 = 0, $1050 = 0, $1051 = 0, $1052 = 0, $1053 = 0, $1054 = 0, $1055 = 0, $1056 = 0, $1057 = 0, $1058 = 0, $1059 = 0, $106 = 0, $1060 = 0;
 var $1061 = 0, $1062 = 0, $1063 = 0, $1064 = 0, $1065 = 0, $1066 = 0, $1067 = 0, $1068 = 0, $1069 = 0, $107 = 0, $1070 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0;
 var $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0;
 var $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0;
 var $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0;
 var $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0;
 var $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0;
 var $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0;
 var $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0;
 var $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0;
 var $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0;
 var $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0;
 var $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0;
 var $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0;
 var $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0;
 var $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0;
 var $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0;
 var $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0;
 var $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0;
 var $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0;
 var $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0;
 var $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0;
 var $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0;
 var $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0;
 var $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0;
 var $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0;
 var $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0, $644 = 0, $645 = 0, $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0;
 var $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0, $661 = 0, $662 = 0, $663 = 0, $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0, $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0;
 var $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0, $68 = 0, $680 = 0, $681 = 0, $682 = 0, $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0, $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0;
 var $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0, $699 = 0, $7 = 0, $70 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0;
 var $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0, $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0, $724 = 0, $725 = 0, $726 = 0, $727 = 0, $728 = 0;
 var $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0, $734 = 0, $735 = 0, $736 = 0, $737 = 0, $738 = 0, $739 = 0, $74 = 0, $740 = 0, $741 = 0, $742 = 0, $743 = 0, $744 = 0, $745 = 0, $746 = 0;
 var $747 = 0, $748 = 0, $749 = 0, $75 = 0, $750 = 0, $751 = 0, $752 = 0, $753 = 0, $754 = 0, $755 = 0, $756 = 0, $757 = 0, $758 = 0, $759 = 0, $76 = 0, $760 = 0, $761 = 0, $762 = 0, $763 = 0, $764 = 0;
 var $765 = 0, $766 = 0, $767 = 0, $768 = 0, $769 = 0, $77 = 0, $770 = 0, $771 = 0, $772 = 0, $773 = 0, $774 = 0, $775 = 0, $776 = 0, $777 = 0, $778 = 0, $779 = 0, $78 = 0, $780 = 0, $781 = 0, $782 = 0;
 var $783 = 0, $784 = 0, $785 = 0, $786 = 0, $787 = 0, $788 = 0, $789 = 0, $79 = 0, $790 = 0, $791 = 0, $792 = 0, $793 = 0, $794 = 0, $795 = 0, $796 = 0, $797 = 0, $798 = 0, $799 = 0, $8 = 0, $80 = 0;
 var $800 = 0, $801 = 0, $802 = 0, $803 = 0, $804 = 0, $805 = 0, $806 = 0, $807 = 0, $808 = 0, $809 = 0, $81 = 0, $810 = 0, $811 = 0, $812 = 0, $813 = 0, $814 = 0, $815 = 0, $816 = 0, $817 = 0, $818 = 0;
 var $819 = 0, $82 = 0, $820 = 0, $821 = 0, $822 = 0, $823 = 0, $824 = 0, $825 = 0, $826 = 0, $827 = 0, $828 = 0, $829 = 0, $83 = 0, $830 = 0, $831 = 0, $832 = 0, $833 = 0, $834 = 0, $835 = 0, $836 = 0;
 var $837 = 0, $838 = 0, $839 = 0, $84 = 0, $840 = 0, $841 = 0, $842 = 0, $843 = 0, $844 = 0, $845 = 0, $846 = 0, $847 = 0, $848 = 0, $849 = 0, $85 = 0, $850 = 0, $851 = 0, $852 = 0, $853 = 0, $854 = 0;
 var $855 = 0, $856 = 0, $857 = 0, $858 = 0, $859 = 0, $86 = 0, $860 = 0, $861 = 0, $862 = 0, $863 = 0, $864 = 0, $865 = 0, $866 = 0, $867 = 0, $868 = 0, $869 = 0, $87 = 0, $870 = 0, $871 = 0, $872 = 0;
 var $873 = 0, $874 = 0, $875 = 0, $876 = 0, $877 = 0, $878 = 0, $879 = 0, $88 = 0, $880 = 0, $881 = 0, $882 = 0, $883 = 0, $884 = 0, $885 = 0, $886 = 0, $887 = 0, $888 = 0, $889 = 0, $89 = 0, $890 = 0;
 var $891 = 0, $892 = 0, $893 = 0, $894 = 0, $895 = 0, $896 = 0, $897 = 0, $898 = 0, $899 = 0, $9 = 0, $90 = 0, $900 = 0, $901 = 0, $902 = 0, $903 = 0, $904 = 0, $905 = 0, $906 = 0, $907 = 0, $908 = 0;
 var $909 = 0, $91 = 0, $910 = 0, $911 = 0, $912 = 0, $913 = 0, $914 = 0, $915 = 0, $916 = 0, $917 = 0, $918 = 0, $919 = 0, $92 = 0, $920 = 0, $921 = 0, $922 = 0, $923 = 0, $924 = 0, $925 = 0, $926 = 0;
 var $927 = 0, $928 = 0, $929 = 0, $93 = 0, $930 = 0, $931 = 0, $932 = 0, $933 = 0, $934 = 0, $935 = 0, $936 = 0, $937 = 0, $938 = 0, $939 = 0, $94 = 0, $940 = 0, $941 = 0, $942 = 0, $943 = 0, $944 = 0;
 var $945 = 0, $946 = 0, $947 = 0, $948 = 0, $949 = 0, $95 = 0, $950 = 0, $951 = 0, $952 = 0, $953 = 0, $954 = 0, $955 = 0, $956 = 0, $957 = 0, $958 = 0, $959 = 0, $96 = 0, $960 = 0, $961 = 0, $962 = 0;
 var $963 = 0, $964 = 0, $965 = 0, $966 = 0, $967 = 0, $968 = 0, $969 = 0, $97 = 0, $970 = 0, $971 = 0, $972 = 0, $973 = 0, $974 = 0, $975 = 0, $976 = 0, $977 = 0, $978 = 0, $979 = 0, $98 = 0, $980 = 0;
 var $981 = 0, $982 = 0, $983 = 0, $984 = 0, $985 = 0, $986 = 0, $987 = 0, $988 = 0, $989 = 0, $99 = 0, $990 = 0, $991 = 0, $992 = 0, $993 = 0, $994 = 0, $995 = 0, $996 = 0, $997 = 0, $998 = 0, $999 = 0;
 var $F$0$i$i = 0, $F1$0$i = 0, $F4$0 = 0, $F4$0$i$i = 0, $F5$0$i = 0, $I1$0$i$i = 0, $I7$0$i = 0, $I7$0$i$i = 0, $K12$029$i = 0, $K2$08$i$i = 0, $K8$053$i$i = 0, $R$0$i = 0, $R$0$i$be = 0, $R$0$i$i = 0, $R$0$i$i$be = 0, $R$0$i$i$lcssa = 0, $R$0$i$i$ph = 0, $R$0$i$lcssa = 0, $R$0$i$ph = 0, $R$0$i18 = 0;
 var $R$0$i18$be = 0, $R$0$i18$lcssa = 0, $R$0$i18$ph = 0, $R$1$i = 0, $R$1$i$i = 0, $R$1$i20 = 0, $RP$0$i = 0, $RP$0$i$be = 0, $RP$0$i$i = 0, $RP$0$i$i$be = 0, $RP$0$i$i$lcssa = 0, $RP$0$i$i$ph = 0, $RP$0$i$lcssa = 0, $RP$0$i$ph = 0, $RP$0$i17 = 0, $RP$0$i17$be = 0, $RP$0$i17$lcssa = 0, $RP$0$i17$ph = 0, $T$0$lcssa$i = 0, $T$0$lcssa$i$i = 0;
 var $T$0$lcssa$i25$i = 0, $T$028$i = 0, $T$028$i$lcssa = 0, $T$052$i$i = 0, $T$052$i$i$lcssa = 0, $T$07$i$i = 0, $T$07$i$i$lcssa = 0, $br$0$ph$i = 0, $cond$i = 0, $cond$i$i = 0, $cond$i21 = 0, $exitcond$i$i = 0, $i$02$i$i = 0, $idx$0$i = 0, $mem$0 = 0, $nb$0 = 0, $oldfirst$0$i$i = 0, $or$cond$i = 0, $or$cond$i$i = 0, $or$cond$i26$i = 0;
 var $or$cond$i30 = 0, $or$cond1$i = 0, $or$cond19$i = 0, $or$cond2$i = 0, $or$cond24$i = 0, $or$cond3$i = 0, $or$cond4$i = 0, $or$cond5$i = 0, $or$cond55$i = 0, $or$cond6$i = 0, $or$cond8$i = 0, $qsize$0$i$i = 0, $rsize$0$i = 0, $rsize$0$i$lcssa = 0, $rsize$0$i15 = 0, $rsize$1$i = 0, $rsize$1$i$lcssa = 0, $rsize$2$i = 0, $rsize$3$lcssa$i = 0, $rsize$331$i = 0;
 var $rsize$331$i$ph = 0, $rst$0$i = 0, $rst$1$i = 0, $rst$1$i$lcssa = 0, $sizebits$0$i = 0, $sp$0$i$i = 0, $sp$0$i$i$i = 0, $sp$082$i = 0, $sp$082$i$lcssa = 0, $sp$181$i = 0, $sp$181$i$lcssa = 0, $ssize$0$i = 0, $ssize$1$ph$i = 0, $ssize$2$i = 0, $t$0$i = 0, $t$0$i14 = 0, $t$0$i14$lcssa = 0, $t$1$i = 0, $t$2$ph$i = 0, $t$2$v$3$i = 0;
 var $t$2$v$3$i$lcssa = 0, $t$230$i = 0, $t$230$i$be = 0, $t$230$i$ph = 0, $tbase$253$i = 0, $tsize$0313843$i = 0, $tsize$1$i = 0, $tsize$252$i = 0, $v$0$i = 0, $v$0$i$lcssa = 0, $v$0$i16 = 0, $v$1$i = 0, $v$1$i$lcssa = 0, $v$2$i = 0, $v$3$lcssa$i = 0, $v$332$i = 0, $v$332$i$ph = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($bytes>>>0)<(245);
 do {
  if ($0) {
   $1 = ($bytes>>>0)<(11);
   if ($1) {
    $5 = 16;
   } else {
    $2 = (($bytes) + 11)|0;
    $3 = $2 & -8;
    $5 = $3;
   }
   $4 = $5 >>> 3;
   $6 = HEAP32[10744>>2]|0;
   $7 = $6 >>> $4;
   $8 = $7 & 3;
   $9 = ($8|0)==(0);
   if (!($9)) {
    $10 = $7 & 1;
    $11 = $10 ^ 1;
    $12 = (($11) + ($4))|0;
    $13 = $12 << 1;
    $14 = ((10744 + ($13<<2)|0) + 40|0);
    $$sum10 = (($13) + 2)|0;
    $15 = ((10744 + ($$sum10<<2)|0) + 40|0);
    $16 = HEAP32[$15>>2]|0;
    $17 = (($16) + 8|0);
    $18 = HEAP32[$17>>2]|0;
    $19 = ($14|0)==($18|0);
    do {
     if ($19) {
      $20 = 1 << $12;
      $21 = $20 ^ -1;
      $22 = $6 & $21;
      HEAP32[10744>>2] = $22;
     } else {
      $23 = HEAP32[((10744 + 16|0))>>2]|0;
      $24 = ($18>>>0)<($23>>>0);
      if ($24) {
       _abort();
       // unreachable;
      }
      $25 = (($18) + 12|0);
      $26 = HEAP32[$25>>2]|0;
      $27 = ($26|0)==($16|0);
      if ($27) {
       HEAP32[$25>>2] = $14;
       HEAP32[$15>>2] = $18;
       break;
      } else {
       _abort();
       // unreachable;
      }
     }
    } while(0);
    $28 = $12 << 3;
    $29 = $28 | 3;
    $30 = (($16) + 4|0);
    HEAP32[$30>>2] = $29;
    $$sum1112 = $28 | 4;
    $31 = (($16) + ($$sum1112)|0);
    $32 = HEAP32[$31>>2]|0;
    $33 = $32 | 1;
    HEAP32[$31>>2] = $33;
    $mem$0 = $17;
    return ($mem$0|0);
   }
   $34 = HEAP32[((10744 + 8|0))>>2]|0;
   $35 = ($5>>>0)>($34>>>0);
   if ($35) {
    $36 = ($7|0)==(0);
    if (!($36)) {
     $37 = $7 << $4;
     $38 = 2 << $4;
     $39 = (0 - ($38))|0;
     $40 = $38 | $39;
     $41 = $37 & $40;
     $42 = (0 - ($41))|0;
     $43 = $41 & $42;
     $44 = (($43) + -1)|0;
     $45 = $44 >>> 12;
     $46 = $45 & 16;
     $47 = $44 >>> $46;
     $48 = $47 >>> 5;
     $49 = $48 & 8;
     $50 = $49 | $46;
     $51 = $47 >>> $49;
     $52 = $51 >>> 2;
     $53 = $52 & 4;
     $54 = $50 | $53;
     $55 = $51 >>> $53;
     $56 = $55 >>> 1;
     $57 = $56 & 2;
     $58 = $54 | $57;
     $59 = $55 >>> $57;
     $60 = $59 >>> 1;
     $61 = $60 & 1;
     $62 = $58 | $61;
     $63 = $59 >>> $61;
     $64 = (($62) + ($63))|0;
     $65 = $64 << 1;
     $66 = ((10744 + ($65<<2)|0) + 40|0);
     $$sum4 = (($65) + 2)|0;
     $67 = ((10744 + ($$sum4<<2)|0) + 40|0);
     $68 = HEAP32[$67>>2]|0;
     $69 = (($68) + 8|0);
     $70 = HEAP32[$69>>2]|0;
     $71 = ($66|0)==($70|0);
     do {
      if ($71) {
       $72 = 1 << $64;
       $73 = $72 ^ -1;
       $74 = $6 & $73;
       HEAP32[10744>>2] = $74;
       $88 = $34;
      } else {
       $75 = HEAP32[((10744 + 16|0))>>2]|0;
       $76 = ($70>>>0)<($75>>>0);
       if ($76) {
        _abort();
        // unreachable;
       }
       $77 = (($70) + 12|0);
       $78 = HEAP32[$77>>2]|0;
       $79 = ($78|0)==($68|0);
       if ($79) {
        HEAP32[$77>>2] = $66;
        HEAP32[$67>>2] = $70;
        $$pre = HEAP32[((10744 + 8|0))>>2]|0;
        $88 = $$pre;
        break;
       } else {
        _abort();
        // unreachable;
       }
      }
     } while(0);
     $80 = $64 << 3;
     $81 = (($80) - ($5))|0;
     $82 = $5 | 3;
     $83 = (($68) + 4|0);
     HEAP32[$83>>2] = $82;
     $84 = (($68) + ($5)|0);
     $85 = $81 | 1;
     $$sum56 = $5 | 4;
     $86 = (($68) + ($$sum56)|0);
     HEAP32[$86>>2] = $85;
     $87 = (($68) + ($80)|0);
     HEAP32[$87>>2] = $81;
     $89 = ($88|0)==(0);
     if (!($89)) {
      $90 = HEAP32[((10744 + 20|0))>>2]|0;
      $91 = $88 >>> 3;
      $92 = $91 << 1;
      $93 = ((10744 + ($92<<2)|0) + 40|0);
      $94 = HEAP32[10744>>2]|0;
      $95 = 1 << $91;
      $96 = $94 & $95;
      $97 = ($96|0)==(0);
      if ($97) {
       $98 = $94 | $95;
       HEAP32[10744>>2] = $98;
       $$sum8$pre = (($92) + 2)|0;
       $$pre108 = ((10744 + ($$sum8$pre<<2)|0) + 40|0);
       $$pre$phiZ2D = $$pre108;$F4$0 = $93;
      } else {
       $$sum9 = (($92) + 2)|0;
       $99 = ((10744 + ($$sum9<<2)|0) + 40|0);
       $100 = HEAP32[$99>>2]|0;
       $101 = HEAP32[((10744 + 16|0))>>2]|0;
       $102 = ($100>>>0)<($101>>>0);
       if ($102) {
        _abort();
        // unreachable;
       } else {
        $$pre$phiZ2D = $99;$F4$0 = $100;
       }
      }
      HEAP32[$$pre$phiZ2D>>2] = $90;
      $103 = (($F4$0) + 12|0);
      HEAP32[$103>>2] = $90;
      $104 = (($90) + 8|0);
      HEAP32[$104>>2] = $F4$0;
      $105 = (($90) + 12|0);
      HEAP32[$105>>2] = $93;
     }
     HEAP32[((10744 + 8|0))>>2] = $81;
     HEAP32[((10744 + 20|0))>>2] = $84;
     $mem$0 = $69;
     return ($mem$0|0);
    }
    $106 = HEAP32[((10744 + 4|0))>>2]|0;
    $107 = ($106|0)==(0);
    if ($107) {
     $nb$0 = $5;
    } else {
     $108 = (0 - ($106))|0;
     $109 = $106 & $108;
     $110 = (($109) + -1)|0;
     $111 = $110 >>> 12;
     $112 = $111 & 16;
     $113 = $110 >>> $112;
     $114 = $113 >>> 5;
     $115 = $114 & 8;
     $116 = $115 | $112;
     $117 = $113 >>> $115;
     $118 = $117 >>> 2;
     $119 = $118 & 4;
     $120 = $116 | $119;
     $121 = $117 >>> $119;
     $122 = $121 >>> 1;
     $123 = $122 & 2;
     $124 = $120 | $123;
     $125 = $121 >>> $123;
     $126 = $125 >>> 1;
     $127 = $126 & 1;
     $128 = $124 | $127;
     $129 = $125 >>> $127;
     $130 = (($128) + ($129))|0;
     $131 = ((10744 + ($130<<2)|0) + 304|0);
     $132 = HEAP32[$131>>2]|0;
     $133 = (($132) + 4|0);
     $134 = HEAP32[$133>>2]|0;
     $135 = $134 & -8;
     $136 = (($135) - ($5))|0;
     $rsize$0$i = $136;$t$0$i = $132;$v$0$i = $132;
     while(1) {
      $137 = (($t$0$i) + 16|0);
      $138 = HEAP32[$137>>2]|0;
      $139 = ($138|0)==(0|0);
      if ($139) {
       $140 = (($t$0$i) + 20|0);
       $141 = HEAP32[$140>>2]|0;
       $142 = ($141|0)==(0|0);
       if ($142) {
        $rsize$0$i$lcssa = $rsize$0$i;$v$0$i$lcssa = $v$0$i;
        break;
       } else {
        $144 = $141;
       }
      } else {
       $144 = $138;
      }
      $143 = (($144) + 4|0);
      $145 = HEAP32[$143>>2]|0;
      $146 = $145 & -8;
      $147 = (($146) - ($5))|0;
      $148 = ($147>>>0)<($rsize$0$i>>>0);
      $$rsize$0$i = $148 ? $147 : $rsize$0$i;
      $$v$0$i = $148 ? $144 : $v$0$i;
      $rsize$0$i = $$rsize$0$i;$t$0$i = $144;$v$0$i = $$v$0$i;
     }
     $149 = HEAP32[((10744 + 16|0))>>2]|0;
     $150 = ($v$0$i$lcssa>>>0)<($149>>>0);
     if ($150) {
      _abort();
      // unreachable;
     }
     $151 = (($v$0$i$lcssa) + ($5)|0);
     $152 = ($v$0$i$lcssa>>>0)<($151>>>0);
     if (!($152)) {
      _abort();
      // unreachable;
     }
     $153 = (($v$0$i$lcssa) + 24|0);
     $154 = HEAP32[$153>>2]|0;
     $155 = (($v$0$i$lcssa) + 12|0);
     $156 = HEAP32[$155>>2]|0;
     $157 = ($156|0)==($v$0$i$lcssa|0);
     do {
      if ($157) {
       $167 = (($v$0$i$lcssa) + 20|0);
       $168 = HEAP32[$167>>2]|0;
       $169 = ($168|0)==(0|0);
       if ($169) {
        $170 = (($v$0$i$lcssa) + 16|0);
        $171 = HEAP32[$170>>2]|0;
        $172 = ($171|0)==(0|0);
        if ($172) {
         $R$1$i = 0;
         break;
        } else {
         $R$0$i$ph = $171;$RP$0$i$ph = $170;
        }
       } else {
        $R$0$i$ph = $168;$RP$0$i$ph = $167;
       }
       $R$0$i = $R$0$i$ph;$RP$0$i = $RP$0$i$ph;
       while(1) {
        $173 = (($R$0$i) + 20|0);
        $174 = HEAP32[$173>>2]|0;
        $175 = ($174|0)==(0|0);
        if ($175) {
         $176 = (($R$0$i) + 16|0);
         $177 = HEAP32[$176>>2]|0;
         $178 = ($177|0)==(0|0);
         if ($178) {
          $R$0$i$lcssa = $R$0$i;$RP$0$i$lcssa = $RP$0$i;
          break;
         } else {
          $R$0$i$be = $177;$RP$0$i$be = $176;
         }
        } else {
         $R$0$i$be = $174;$RP$0$i$be = $173;
        }
        $R$0$i = $R$0$i$be;$RP$0$i = $RP$0$i$be;
       }
       $179 = ($RP$0$i$lcssa>>>0)<($149>>>0);
       if ($179) {
        _abort();
        // unreachable;
       } else {
        HEAP32[$RP$0$i$lcssa>>2] = 0;
        $R$1$i = $R$0$i$lcssa;
        break;
       }
      } else {
       $158 = (($v$0$i$lcssa) + 8|0);
       $159 = HEAP32[$158>>2]|0;
       $160 = ($159>>>0)<($149>>>0);
       if ($160) {
        _abort();
        // unreachable;
       }
       $161 = (($159) + 12|0);
       $162 = HEAP32[$161>>2]|0;
       $163 = ($162|0)==($v$0$i$lcssa|0);
       if (!($163)) {
        _abort();
        // unreachable;
       }
       $164 = (($156) + 8|0);
       $165 = HEAP32[$164>>2]|0;
       $166 = ($165|0)==($v$0$i$lcssa|0);
       if ($166) {
        HEAP32[$161>>2] = $156;
        HEAP32[$164>>2] = $159;
        $R$1$i = $156;
        break;
       } else {
        _abort();
        // unreachable;
       }
      }
     } while(0);
     $180 = ($154|0)==(0|0);
     do {
      if (!($180)) {
       $181 = (($v$0$i$lcssa) + 28|0);
       $182 = HEAP32[$181>>2]|0;
       $183 = ((10744 + ($182<<2)|0) + 304|0);
       $184 = HEAP32[$183>>2]|0;
       $185 = ($v$0$i$lcssa|0)==($184|0);
       if ($185) {
        HEAP32[$183>>2] = $R$1$i;
        $cond$i = ($R$1$i|0)==(0|0);
        if ($cond$i) {
         $186 = 1 << $182;
         $187 = $186 ^ -1;
         $188 = HEAP32[((10744 + 4|0))>>2]|0;
         $189 = $188 & $187;
         HEAP32[((10744 + 4|0))>>2] = $189;
         break;
        }
       } else {
        $190 = HEAP32[((10744 + 16|0))>>2]|0;
        $191 = ($154>>>0)<($190>>>0);
        if ($191) {
         _abort();
         // unreachable;
        }
        $192 = (($154) + 16|0);
        $193 = HEAP32[$192>>2]|0;
        $194 = ($193|0)==($v$0$i$lcssa|0);
        if ($194) {
         HEAP32[$192>>2] = $R$1$i;
        } else {
         $195 = (($154) + 20|0);
         HEAP32[$195>>2] = $R$1$i;
        }
        $196 = ($R$1$i|0)==(0|0);
        if ($196) {
         break;
        }
       }
       $197 = HEAP32[((10744 + 16|0))>>2]|0;
       $198 = ($R$1$i>>>0)<($197>>>0);
       if ($198) {
        _abort();
        // unreachable;
       }
       $199 = (($R$1$i) + 24|0);
       HEAP32[$199>>2] = $154;
       $200 = (($v$0$i$lcssa) + 16|0);
       $201 = HEAP32[$200>>2]|0;
       $202 = ($201|0)==(0|0);
       do {
        if (!($202)) {
         $203 = ($201>>>0)<($197>>>0);
         if ($203) {
          _abort();
          // unreachable;
         } else {
          $204 = (($R$1$i) + 16|0);
          HEAP32[$204>>2] = $201;
          $205 = (($201) + 24|0);
          HEAP32[$205>>2] = $R$1$i;
          break;
         }
        }
       } while(0);
       $206 = (($v$0$i$lcssa) + 20|0);
       $207 = HEAP32[$206>>2]|0;
       $208 = ($207|0)==(0|0);
       if (!($208)) {
        $209 = HEAP32[((10744 + 16|0))>>2]|0;
        $210 = ($207>>>0)<($209>>>0);
        if ($210) {
         _abort();
         // unreachable;
        } else {
         $211 = (($R$1$i) + 20|0);
         HEAP32[$211>>2] = $207;
         $212 = (($207) + 24|0);
         HEAP32[$212>>2] = $R$1$i;
         break;
        }
       }
      }
     } while(0);
     $213 = ($rsize$0$i$lcssa>>>0)<(16);
     if ($213) {
      $214 = (($rsize$0$i$lcssa) + ($5))|0;
      $215 = $214 | 3;
      $216 = (($v$0$i$lcssa) + 4|0);
      HEAP32[$216>>2] = $215;
      $$sum4$i = (($214) + 4)|0;
      $217 = (($v$0$i$lcssa) + ($$sum4$i)|0);
      $218 = HEAP32[$217>>2]|0;
      $219 = $218 | 1;
      HEAP32[$217>>2] = $219;
     } else {
      $220 = $5 | 3;
      $221 = (($v$0$i$lcssa) + 4|0);
      HEAP32[$221>>2] = $220;
      $222 = $rsize$0$i$lcssa | 1;
      $$sum$i38 = $5 | 4;
      $223 = (($v$0$i$lcssa) + ($$sum$i38)|0);
      HEAP32[$223>>2] = $222;
      $$sum1$i = (($rsize$0$i$lcssa) + ($5))|0;
      $224 = (($v$0$i$lcssa) + ($$sum1$i)|0);
      HEAP32[$224>>2] = $rsize$0$i$lcssa;
      $225 = HEAP32[((10744 + 8|0))>>2]|0;
      $226 = ($225|0)==(0);
      if (!($226)) {
       $227 = HEAP32[((10744 + 20|0))>>2]|0;
       $228 = $225 >>> 3;
       $229 = $228 << 1;
       $230 = ((10744 + ($229<<2)|0) + 40|0);
       $231 = HEAP32[10744>>2]|0;
       $232 = 1 << $228;
       $233 = $231 & $232;
       $234 = ($233|0)==(0);
       if ($234) {
        $235 = $231 | $232;
        HEAP32[10744>>2] = $235;
        $$sum2$pre$i = (($229) + 2)|0;
        $$pre$i = ((10744 + ($$sum2$pre$i<<2)|0) + 40|0);
        $$pre$phi$iZ2D = $$pre$i;$F1$0$i = $230;
       } else {
        $$sum3$i = (($229) + 2)|0;
        $236 = ((10744 + ($$sum3$i<<2)|0) + 40|0);
        $237 = HEAP32[$236>>2]|0;
        $238 = HEAP32[((10744 + 16|0))>>2]|0;
        $239 = ($237>>>0)<($238>>>0);
        if ($239) {
         _abort();
         // unreachable;
        } else {
         $$pre$phi$iZ2D = $236;$F1$0$i = $237;
        }
       }
       HEAP32[$$pre$phi$iZ2D>>2] = $227;
       $240 = (($F1$0$i) + 12|0);
       HEAP32[$240>>2] = $227;
       $241 = (($227) + 8|0);
       HEAP32[$241>>2] = $F1$0$i;
       $242 = (($227) + 12|0);
       HEAP32[$242>>2] = $230;
      }
      HEAP32[((10744 + 8|0))>>2] = $rsize$0$i$lcssa;
      HEAP32[((10744 + 20|0))>>2] = $151;
     }
     $243 = (($v$0$i$lcssa) + 8|0);
     $mem$0 = $243;
     return ($mem$0|0);
    }
   } else {
    $nb$0 = $5;
   }
  } else {
   $244 = ($bytes>>>0)>(4294967231);
   if ($244) {
    $nb$0 = -1;
   } else {
    $245 = (($bytes) + 11)|0;
    $246 = $245 & -8;
    $247 = HEAP32[((10744 + 4|0))>>2]|0;
    $248 = ($247|0)==(0);
    if ($248) {
     $nb$0 = $246;
    } else {
     $249 = (0 - ($246))|0;
     $250 = $245 >>> 8;
     $251 = ($250|0)==(0);
     if ($251) {
      $idx$0$i = 0;
     } else {
      $252 = ($246>>>0)>(16777215);
      if ($252) {
       $idx$0$i = 31;
      } else {
       $253 = (($250) + 1048320)|0;
       $254 = $253 >>> 16;
       $255 = $254 & 8;
       $256 = $250 << $255;
       $257 = (($256) + 520192)|0;
       $258 = $257 >>> 16;
       $259 = $258 & 4;
       $260 = $259 | $255;
       $261 = $256 << $259;
       $262 = (($261) + 245760)|0;
       $263 = $262 >>> 16;
       $264 = $263 & 2;
       $265 = $260 | $264;
       $266 = (14 - ($265))|0;
       $267 = $261 << $264;
       $268 = $267 >>> 15;
       $269 = (($266) + ($268))|0;
       $270 = $269 << 1;
       $271 = (($269) + 7)|0;
       $272 = $246 >>> $271;
       $273 = $272 & 1;
       $274 = $273 | $270;
       $idx$0$i = $274;
      }
     }
     $275 = ((10744 + ($idx$0$i<<2)|0) + 304|0);
     $276 = HEAP32[$275>>2]|0;
     $277 = ($276|0)==(0|0);
     do {
      if ($277) {
       $rsize$2$i = $249;$t$1$i = 0;$v$2$i = 0;
       label = 93;
      } else {
       $278 = ($idx$0$i|0)==(31);
       if ($278) {
        $282 = 0;
       } else {
        $279 = $idx$0$i >>> 1;
        $280 = (25 - ($279))|0;
        $282 = $280;
       }
       $281 = $246 << $282;
       $rsize$0$i15 = $249;$rst$0$i = 0;$sizebits$0$i = $281;$t$0$i14 = $276;$v$0$i16 = 0;
       while(1) {
        $283 = (($t$0$i14) + 4|0);
        $284 = HEAP32[$283>>2]|0;
        $285 = $284 & -8;
        $286 = (($285) - ($246))|0;
        $287 = ($286>>>0)<($rsize$0$i15>>>0);
        if ($287) {
         $288 = ($285|0)==($246|0);
         if ($288) {
          $$lcssa174 = $286;$t$0$i14$lcssa = $t$0$i14;
          label = 97;
          break;
         } else {
          $rsize$1$i = $286;$v$1$i = $t$0$i14;
         }
        } else {
         $rsize$1$i = $rsize$0$i15;$v$1$i = $v$0$i16;
        }
        $289 = (($t$0$i14) + 20|0);
        $290 = HEAP32[$289>>2]|0;
        $291 = $sizebits$0$i >>> 31;
        $292 = ((($t$0$i14) + ($291<<2)|0) + 16|0);
        $293 = HEAP32[$292>>2]|0;
        $294 = ($290|0)==(0|0);
        $295 = ($290|0)==($293|0);
        $or$cond19$i = $294 | $295;
        $rst$1$i = $or$cond19$i ? $rst$0$i : $290;
        $296 = ($293|0)==(0|0);
        $297 = $sizebits$0$i << 1;
        if ($296) {
         $rsize$1$i$lcssa = $rsize$1$i;$rst$1$i$lcssa = $rst$1$i;$v$1$i$lcssa = $v$1$i;
         label = 92;
         break;
        } else {
         $rsize$0$i15 = $rsize$1$i;$rst$0$i = $rst$1$i;$sizebits$0$i = $297;$t$0$i14 = $293;$v$0$i16 = $v$1$i;
        }
       }
       if ((label|0) == 92) {
        $rsize$2$i = $rsize$1$i$lcssa;$t$1$i = $rst$1$i$lcssa;$v$2$i = $v$1$i$lcssa;
        label = 93;
        break;
       }
       else if ((label|0) == 97) {
        $rsize$331$i$ph = $$lcssa174;$t$230$i$ph = $t$0$i14$lcssa;$v$332$i$ph = $t$0$i14$lcssa;
        label = 98;
        break;
       }
      }
     } while(0);
     if ((label|0) == 93) {
      $298 = ($t$1$i|0)==(0|0);
      $299 = ($v$2$i|0)==(0|0);
      $or$cond$i = $298 & $299;
      if ($or$cond$i) {
       $300 = 2 << $idx$0$i;
       $301 = (0 - ($300))|0;
       $302 = $300 | $301;
       $303 = $247 & $302;
       $304 = ($303|0)==(0);
       if ($304) {
        $nb$0 = $246;
        break;
       }
       $305 = (0 - ($303))|0;
       $306 = $303 & $305;
       $307 = (($306) + -1)|0;
       $308 = $307 >>> 12;
       $309 = $308 & 16;
       $310 = $307 >>> $309;
       $311 = $310 >>> 5;
       $312 = $311 & 8;
       $313 = $312 | $309;
       $314 = $310 >>> $312;
       $315 = $314 >>> 2;
       $316 = $315 & 4;
       $317 = $313 | $316;
       $318 = $314 >>> $316;
       $319 = $318 >>> 1;
       $320 = $319 & 2;
       $321 = $317 | $320;
       $322 = $318 >>> $320;
       $323 = $322 >>> 1;
       $324 = $323 & 1;
       $325 = $321 | $324;
       $326 = $322 >>> $324;
       $327 = (($325) + ($326))|0;
       $328 = ((10744 + ($327<<2)|0) + 304|0);
       $329 = HEAP32[$328>>2]|0;
       $t$2$ph$i = $329;
      } else {
       $t$2$ph$i = $t$1$i;
      }
      $330 = ($t$2$ph$i|0)==(0|0);
      if ($330) {
       $rsize$3$lcssa$i = $rsize$2$i;$v$3$lcssa$i = $v$2$i;
      } else {
       $rsize$331$i$ph = $rsize$2$i;$t$230$i$ph = $t$2$ph$i;$v$332$i$ph = $v$2$i;
       label = 98;
      }
     }
     if ((label|0) == 98) {
      $rsize$331$i = $rsize$331$i$ph;$t$230$i = $t$230$i$ph;$v$332$i = $v$332$i$ph;
      while(1) {
       $331 = (($t$230$i) + 4|0);
       $332 = HEAP32[$331>>2]|0;
       $333 = $332 & -8;
       $334 = (($333) - ($246))|0;
       $335 = ($334>>>0)<($rsize$331$i>>>0);
       $$rsize$3$i = $335 ? $334 : $rsize$331$i;
       $t$2$v$3$i = $335 ? $t$230$i : $v$332$i;
       $336 = (($t$230$i) + 16|0);
       $337 = HEAP32[$336>>2]|0;
       $338 = ($337|0)==(0|0);
       if ($338) {
        $339 = (($t$230$i) + 20|0);
        $340 = HEAP32[$339>>2]|0;
        $341 = ($340|0)==(0|0);
        if ($341) {
         $$rsize$3$i$lcssa = $$rsize$3$i;$t$2$v$3$i$lcssa = $t$2$v$3$i;
         break;
        } else {
         $t$230$i$be = $340;
        }
       } else {
        $t$230$i$be = $337;
       }
       $rsize$331$i = $$rsize$3$i;$t$230$i = $t$230$i$be;$v$332$i = $t$2$v$3$i;
      }
      $rsize$3$lcssa$i = $$rsize$3$i$lcssa;$v$3$lcssa$i = $t$2$v$3$i$lcssa;
     }
     $342 = ($v$3$lcssa$i|0)==(0|0);
     if ($342) {
      $nb$0 = $246;
     } else {
      $343 = HEAP32[((10744 + 8|0))>>2]|0;
      $344 = (($343) - ($246))|0;
      $345 = ($rsize$3$lcssa$i>>>0)<($344>>>0);
      if ($345) {
       $346 = HEAP32[((10744 + 16|0))>>2]|0;
       $347 = ($v$3$lcssa$i>>>0)<($346>>>0);
       if ($347) {
        _abort();
        // unreachable;
       }
       $348 = (($v$3$lcssa$i) + ($246)|0);
       $349 = ($v$3$lcssa$i>>>0)<($348>>>0);
       if (!($349)) {
        _abort();
        // unreachable;
       }
       $350 = (($v$3$lcssa$i) + 24|0);
       $351 = HEAP32[$350>>2]|0;
       $352 = (($v$3$lcssa$i) + 12|0);
       $353 = HEAP32[$352>>2]|0;
       $354 = ($353|0)==($v$3$lcssa$i|0);
       do {
        if ($354) {
         $364 = (($v$3$lcssa$i) + 20|0);
         $365 = HEAP32[$364>>2]|0;
         $366 = ($365|0)==(0|0);
         if ($366) {
          $367 = (($v$3$lcssa$i) + 16|0);
          $368 = HEAP32[$367>>2]|0;
          $369 = ($368|0)==(0|0);
          if ($369) {
           $R$1$i20 = 0;
           break;
          } else {
           $R$0$i18$ph = $368;$RP$0$i17$ph = $367;
          }
         } else {
          $R$0$i18$ph = $365;$RP$0$i17$ph = $364;
         }
         $R$0$i18 = $R$0$i18$ph;$RP$0$i17 = $RP$0$i17$ph;
         while(1) {
          $370 = (($R$0$i18) + 20|0);
          $371 = HEAP32[$370>>2]|0;
          $372 = ($371|0)==(0|0);
          if ($372) {
           $373 = (($R$0$i18) + 16|0);
           $374 = HEAP32[$373>>2]|0;
           $375 = ($374|0)==(0|0);
           if ($375) {
            $R$0$i18$lcssa = $R$0$i18;$RP$0$i17$lcssa = $RP$0$i17;
            break;
           } else {
            $R$0$i18$be = $374;$RP$0$i17$be = $373;
           }
          } else {
           $R$0$i18$be = $371;$RP$0$i17$be = $370;
          }
          $R$0$i18 = $R$0$i18$be;$RP$0$i17 = $RP$0$i17$be;
         }
         $376 = ($RP$0$i17$lcssa>>>0)<($346>>>0);
         if ($376) {
          _abort();
          // unreachable;
         } else {
          HEAP32[$RP$0$i17$lcssa>>2] = 0;
          $R$1$i20 = $R$0$i18$lcssa;
          break;
         }
        } else {
         $355 = (($v$3$lcssa$i) + 8|0);
         $356 = HEAP32[$355>>2]|0;
         $357 = ($356>>>0)<($346>>>0);
         if ($357) {
          _abort();
          // unreachable;
         }
         $358 = (($356) + 12|0);
         $359 = HEAP32[$358>>2]|0;
         $360 = ($359|0)==($v$3$lcssa$i|0);
         if (!($360)) {
          _abort();
          // unreachable;
         }
         $361 = (($353) + 8|0);
         $362 = HEAP32[$361>>2]|0;
         $363 = ($362|0)==($v$3$lcssa$i|0);
         if ($363) {
          HEAP32[$358>>2] = $353;
          HEAP32[$361>>2] = $356;
          $R$1$i20 = $353;
          break;
         } else {
          _abort();
          // unreachable;
         }
        }
       } while(0);
       $377 = ($351|0)==(0|0);
       do {
        if (!($377)) {
         $378 = (($v$3$lcssa$i) + 28|0);
         $379 = HEAP32[$378>>2]|0;
         $380 = ((10744 + ($379<<2)|0) + 304|0);
         $381 = HEAP32[$380>>2]|0;
         $382 = ($v$3$lcssa$i|0)==($381|0);
         if ($382) {
          HEAP32[$380>>2] = $R$1$i20;
          $cond$i21 = ($R$1$i20|0)==(0|0);
          if ($cond$i21) {
           $383 = 1 << $379;
           $384 = $383 ^ -1;
           $385 = HEAP32[((10744 + 4|0))>>2]|0;
           $386 = $385 & $384;
           HEAP32[((10744 + 4|0))>>2] = $386;
           break;
          }
         } else {
          $387 = HEAP32[((10744 + 16|0))>>2]|0;
          $388 = ($351>>>0)<($387>>>0);
          if ($388) {
           _abort();
           // unreachable;
          }
          $389 = (($351) + 16|0);
          $390 = HEAP32[$389>>2]|0;
          $391 = ($390|0)==($v$3$lcssa$i|0);
          if ($391) {
           HEAP32[$389>>2] = $R$1$i20;
          } else {
           $392 = (($351) + 20|0);
           HEAP32[$392>>2] = $R$1$i20;
          }
          $393 = ($R$1$i20|0)==(0|0);
          if ($393) {
           break;
          }
         }
         $394 = HEAP32[((10744 + 16|0))>>2]|0;
         $395 = ($R$1$i20>>>0)<($394>>>0);
         if ($395) {
          _abort();
          // unreachable;
         }
         $396 = (($R$1$i20) + 24|0);
         HEAP32[$396>>2] = $351;
         $397 = (($v$3$lcssa$i) + 16|0);
         $398 = HEAP32[$397>>2]|0;
         $399 = ($398|0)==(0|0);
         do {
          if (!($399)) {
           $400 = ($398>>>0)<($394>>>0);
           if ($400) {
            _abort();
            // unreachable;
           } else {
            $401 = (($R$1$i20) + 16|0);
            HEAP32[$401>>2] = $398;
            $402 = (($398) + 24|0);
            HEAP32[$402>>2] = $R$1$i20;
            break;
           }
          }
         } while(0);
         $403 = (($v$3$lcssa$i) + 20|0);
         $404 = HEAP32[$403>>2]|0;
         $405 = ($404|0)==(0|0);
         if (!($405)) {
          $406 = HEAP32[((10744 + 16|0))>>2]|0;
          $407 = ($404>>>0)<($406>>>0);
          if ($407) {
           _abort();
           // unreachable;
          } else {
           $408 = (($R$1$i20) + 20|0);
           HEAP32[$408>>2] = $404;
           $409 = (($404) + 24|0);
           HEAP32[$409>>2] = $R$1$i20;
           break;
          }
         }
        }
       } while(0);
       $410 = ($rsize$3$lcssa$i>>>0)<(16);
       L218: do {
        if ($410) {
         $411 = (($rsize$3$lcssa$i) + ($246))|0;
         $412 = $411 | 3;
         $413 = (($v$3$lcssa$i) + 4|0);
         HEAP32[$413>>2] = $412;
         $$sum18$i = (($411) + 4)|0;
         $414 = (($v$3$lcssa$i) + ($$sum18$i)|0);
         $415 = HEAP32[$414>>2]|0;
         $416 = $415 | 1;
         HEAP32[$414>>2] = $416;
        } else {
         $417 = $246 | 3;
         $418 = (($v$3$lcssa$i) + 4|0);
         HEAP32[$418>>2] = $417;
         $419 = $rsize$3$lcssa$i | 1;
         $$sum$i2337 = $246 | 4;
         $420 = (($v$3$lcssa$i) + ($$sum$i2337)|0);
         HEAP32[$420>>2] = $419;
         $$sum1$i24 = (($rsize$3$lcssa$i) + ($246))|0;
         $421 = (($v$3$lcssa$i) + ($$sum1$i24)|0);
         HEAP32[$421>>2] = $rsize$3$lcssa$i;
         $422 = $rsize$3$lcssa$i >>> 3;
         $423 = ($rsize$3$lcssa$i>>>0)<(256);
         if ($423) {
          $424 = $422 << 1;
          $425 = ((10744 + ($424<<2)|0) + 40|0);
          $426 = HEAP32[10744>>2]|0;
          $427 = 1 << $422;
          $428 = $426 & $427;
          $429 = ($428|0)==(0);
          if ($429) {
           $430 = $426 | $427;
           HEAP32[10744>>2] = $430;
           $$sum14$pre$i = (($424) + 2)|0;
           $$pre$i25 = ((10744 + ($$sum14$pre$i<<2)|0) + 40|0);
           $$pre$phi$i26Z2D = $$pre$i25;$F5$0$i = $425;
          } else {
           $$sum17$i = (($424) + 2)|0;
           $431 = ((10744 + ($$sum17$i<<2)|0) + 40|0);
           $432 = HEAP32[$431>>2]|0;
           $433 = HEAP32[((10744 + 16|0))>>2]|0;
           $434 = ($432>>>0)<($433>>>0);
           if ($434) {
            _abort();
            // unreachable;
           } else {
            $$pre$phi$i26Z2D = $431;$F5$0$i = $432;
           }
          }
          HEAP32[$$pre$phi$i26Z2D>>2] = $348;
          $435 = (($F5$0$i) + 12|0);
          HEAP32[$435>>2] = $348;
          $$sum15$i = (($246) + 8)|0;
          $436 = (($v$3$lcssa$i) + ($$sum15$i)|0);
          HEAP32[$436>>2] = $F5$0$i;
          $$sum16$i = (($246) + 12)|0;
          $437 = (($v$3$lcssa$i) + ($$sum16$i)|0);
          HEAP32[$437>>2] = $425;
          break;
         }
         $438 = $rsize$3$lcssa$i >>> 8;
         $439 = ($438|0)==(0);
         if ($439) {
          $I7$0$i = 0;
         } else {
          $440 = ($rsize$3$lcssa$i>>>0)>(16777215);
          if ($440) {
           $I7$0$i = 31;
          } else {
           $441 = (($438) + 1048320)|0;
           $442 = $441 >>> 16;
           $443 = $442 & 8;
           $444 = $438 << $443;
           $445 = (($444) + 520192)|0;
           $446 = $445 >>> 16;
           $447 = $446 & 4;
           $448 = $447 | $443;
           $449 = $444 << $447;
           $450 = (($449) + 245760)|0;
           $451 = $450 >>> 16;
           $452 = $451 & 2;
           $453 = $448 | $452;
           $454 = (14 - ($453))|0;
           $455 = $449 << $452;
           $456 = $455 >>> 15;
           $457 = (($454) + ($456))|0;
           $458 = $457 << 1;
           $459 = (($457) + 7)|0;
           $460 = $rsize$3$lcssa$i >>> $459;
           $461 = $460 & 1;
           $462 = $461 | $458;
           $I7$0$i = $462;
          }
         }
         $463 = ((10744 + ($I7$0$i<<2)|0) + 304|0);
         $$sum2$i = (($246) + 28)|0;
         $464 = (($v$3$lcssa$i) + ($$sum2$i)|0);
         HEAP32[$464>>2] = $I7$0$i;
         $$sum3$i27 = (($246) + 16)|0;
         $465 = (($v$3$lcssa$i) + ($$sum3$i27)|0);
         $$sum4$i28 = (($246) + 20)|0;
         $466 = (($v$3$lcssa$i) + ($$sum4$i28)|0);
         HEAP32[$466>>2] = 0;
         HEAP32[$465>>2] = 0;
         $467 = HEAP32[((10744 + 4|0))>>2]|0;
         $468 = 1 << $I7$0$i;
         $469 = $467 & $468;
         $470 = ($469|0)==(0);
         if ($470) {
          $471 = $467 | $468;
          HEAP32[((10744 + 4|0))>>2] = $471;
          HEAP32[$463>>2] = $348;
          $$sum5$i = (($246) + 24)|0;
          $472 = (($v$3$lcssa$i) + ($$sum5$i)|0);
          HEAP32[$472>>2] = $463;
          $$sum6$i = (($246) + 12)|0;
          $473 = (($v$3$lcssa$i) + ($$sum6$i)|0);
          HEAP32[$473>>2] = $348;
          $$sum7$i = (($246) + 8)|0;
          $474 = (($v$3$lcssa$i) + ($$sum7$i)|0);
          HEAP32[$474>>2] = $348;
          break;
         }
         $475 = HEAP32[$463>>2]|0;
         $476 = ($I7$0$i|0)==(31);
         if ($476) {
          $484 = 0;
         } else {
          $477 = $I7$0$i >>> 1;
          $478 = (25 - ($477))|0;
          $484 = $478;
         }
         $479 = (($475) + 4|0);
         $480 = HEAP32[$479>>2]|0;
         $481 = $480 & -8;
         $482 = ($481|0)==($rsize$3$lcssa$i|0);
         do {
          if ($482) {
           $T$0$lcssa$i = $475;
          } else {
           $483 = $rsize$3$lcssa$i << $484;
           $K12$029$i = $483;$T$028$i = $475;
           while(1) {
            $491 = $K12$029$i >>> 31;
            $492 = ((($T$028$i) + ($491<<2)|0) + 16|0);
            $487 = HEAP32[$492>>2]|0;
            $493 = ($487|0)==(0|0);
            if ($493) {
             $$lcssa169 = $492;$T$028$i$lcssa = $T$028$i;
             break;
            }
            $485 = $K12$029$i << 1;
            $486 = (($487) + 4|0);
            $488 = HEAP32[$486>>2]|0;
            $489 = $488 & -8;
            $490 = ($489|0)==($rsize$3$lcssa$i|0);
            if ($490) {
             $$lcssa172 = $487;
             label = 164;
             break;
            } else {
             $K12$029$i = $485;$T$028$i = $487;
            }
           }
           if ((label|0) == 164) {
            $T$0$lcssa$i = $$lcssa172;
            break;
           }
           $494 = HEAP32[((10744 + 16|0))>>2]|0;
           $495 = ($$lcssa169>>>0)<($494>>>0);
           if ($495) {
            _abort();
            // unreachable;
           } else {
            HEAP32[$$lcssa169>>2] = $348;
            $$sum11$i = (($246) + 24)|0;
            $496 = (($v$3$lcssa$i) + ($$sum11$i)|0);
            HEAP32[$496>>2] = $T$028$i$lcssa;
            $$sum12$i = (($246) + 12)|0;
            $497 = (($v$3$lcssa$i) + ($$sum12$i)|0);
            HEAP32[$497>>2] = $348;
            $$sum13$i = (($246) + 8)|0;
            $498 = (($v$3$lcssa$i) + ($$sum13$i)|0);
            HEAP32[$498>>2] = $348;
            break L218;
           }
          }
         } while(0);
         $499 = (($T$0$lcssa$i) + 8|0);
         $500 = HEAP32[$499>>2]|0;
         $501 = HEAP32[((10744 + 16|0))>>2]|0;
         $502 = ($T$0$lcssa$i>>>0)>=($501>>>0);
         $503 = ($500>>>0)>=($501>>>0);
         $or$cond24$i = $502 & $503;
         if ($or$cond24$i) {
          $504 = (($500) + 12|0);
          HEAP32[$504>>2] = $348;
          HEAP32[$499>>2] = $348;
          $$sum8$i = (($246) + 8)|0;
          $505 = (($v$3$lcssa$i) + ($$sum8$i)|0);
          HEAP32[$505>>2] = $500;
          $$sum9$i = (($246) + 12)|0;
          $506 = (($v$3$lcssa$i) + ($$sum9$i)|0);
          HEAP32[$506>>2] = $T$0$lcssa$i;
          $$sum10$i = (($246) + 24)|0;
          $507 = (($v$3$lcssa$i) + ($$sum10$i)|0);
          HEAP32[$507>>2] = 0;
          break;
         } else {
          _abort();
          // unreachable;
         }
        }
       } while(0);
       $508 = (($v$3$lcssa$i) + 8|0);
       $mem$0 = $508;
       return ($mem$0|0);
      } else {
       $nb$0 = $246;
      }
     }
    }
   }
  }
 } while(0);
 $509 = HEAP32[((10744 + 8|0))>>2]|0;
 $510 = ($509>>>0)<($nb$0>>>0);
 if (!($510)) {
  $511 = (($509) - ($nb$0))|0;
  $512 = HEAP32[((10744 + 20|0))>>2]|0;
  $513 = ($511>>>0)>(15);
  if ($513) {
   $514 = (($512) + ($nb$0)|0);
   HEAP32[((10744 + 20|0))>>2] = $514;
   HEAP32[((10744 + 8|0))>>2] = $511;
   $515 = $511 | 1;
   $$sum2 = (($nb$0) + 4)|0;
   $516 = (($512) + ($$sum2)|0);
   HEAP32[$516>>2] = $515;
   $517 = (($512) + ($509)|0);
   HEAP32[$517>>2] = $511;
   $518 = $nb$0 | 3;
   $519 = (($512) + 4|0);
   HEAP32[$519>>2] = $518;
  } else {
   HEAP32[((10744 + 8|0))>>2] = 0;
   HEAP32[((10744 + 20|0))>>2] = 0;
   $520 = $509 | 3;
   $521 = (($512) + 4|0);
   HEAP32[$521>>2] = $520;
   $$sum1 = (($509) + 4)|0;
   $522 = (($512) + ($$sum1)|0);
   $523 = HEAP32[$522>>2]|0;
   $524 = $523 | 1;
   HEAP32[$522>>2] = $524;
  }
  $525 = (($512) + 8|0);
  $mem$0 = $525;
  return ($mem$0|0);
 }
 $526 = HEAP32[((10744 + 12|0))>>2]|0;
 $527 = ($526>>>0)>($nb$0>>>0);
 if ($527) {
  $528 = (($526) - ($nb$0))|0;
  HEAP32[((10744 + 12|0))>>2] = $528;
  $529 = HEAP32[((10744 + 24|0))>>2]|0;
  $530 = (($529) + ($nb$0)|0);
  HEAP32[((10744 + 24|0))>>2] = $530;
  $531 = $528 | 1;
  $$sum = (($nb$0) + 4)|0;
  $532 = (($529) + ($$sum)|0);
  HEAP32[$532>>2] = $531;
  $533 = $nb$0 | 3;
  $534 = (($529) + 4|0);
  HEAP32[$534>>2] = $533;
  $535 = (($529) + 8|0);
  $mem$0 = $535;
  return ($mem$0|0);
 }
 $536 = HEAP32[11216>>2]|0;
 $537 = ($536|0)==(0);
 do {
  if ($537) {
   $538 = (_sysconf(30)|0);
   $539 = (($538) + -1)|0;
   $540 = $539 & $538;
   $541 = ($540|0)==(0);
   if ($541) {
    HEAP32[((11216 + 8|0))>>2] = $538;
    HEAP32[((11216 + 4|0))>>2] = $538;
    HEAP32[((11216 + 12|0))>>2] = -1;
    HEAP32[((11216 + 16|0))>>2] = -1;
    HEAP32[((11216 + 20|0))>>2] = 0;
    HEAP32[((10744 + 444|0))>>2] = 0;
    $542 = (_time((0|0))|0);
    $543 = $542 & -16;
    $544 = $543 ^ 1431655768;
    HEAP32[11216>>2] = $544;
    break;
   } else {
    _abort();
    // unreachable;
   }
  }
 } while(0);
 $545 = (($nb$0) + 48)|0;
 $546 = HEAP32[((11216 + 8|0))>>2]|0;
 $547 = (($nb$0) + 47)|0;
 $548 = (($546) + ($547))|0;
 $549 = (0 - ($546))|0;
 $550 = $548 & $549;
 $551 = ($550>>>0)>($nb$0>>>0);
 if (!($551)) {
  $mem$0 = 0;
  return ($mem$0|0);
 }
 $552 = HEAP32[((10744 + 440|0))>>2]|0;
 $553 = ($552|0)==(0);
 if (!($553)) {
  $554 = HEAP32[((10744 + 432|0))>>2]|0;
  $555 = (($554) + ($550))|0;
  $556 = ($555>>>0)<=($554>>>0);
  $557 = ($555>>>0)>($552>>>0);
  $or$cond1$i = $556 | $557;
  if ($or$cond1$i) {
   $mem$0 = 0;
   return ($mem$0|0);
  }
 }
 $558 = HEAP32[((10744 + 444|0))>>2]|0;
 $559 = $558 & 4;
 $560 = ($559|0)==(0);
 L282: do {
  if ($560) {
   $561 = HEAP32[((10744 + 24|0))>>2]|0;
   $562 = ($561|0)==(0|0);
   do {
    if ($562) {
     label = 191;
    } else {
     $sp$0$i$i = ((10744 + 448|0));
     while(1) {
      $563 = HEAP32[$sp$0$i$i>>2]|0;
      $564 = ($563>>>0)>($561>>>0);
      if (!($564)) {
       $565 = (($sp$0$i$i) + 4|0);
       $566 = HEAP32[$565>>2]|0;
       $567 = (($563) + ($566)|0);
       $568 = ($567>>>0)>($561>>>0);
       if ($568) {
        $$lcssa165 = $sp$0$i$i;$$lcssa167 = $565;
        break;
       }
      }
      $569 = (($sp$0$i$i) + 8|0);
      $570 = HEAP32[$569>>2]|0;
      $571 = ($570|0)==(0|0);
      if ($571) {
       label = 190;
       break;
      } else {
       $sp$0$i$i = $570;
      }
     }
     if ((label|0) == 190) {
      label = 191;
      break;
     }
     $594 = HEAP32[((10744 + 12|0))>>2]|0;
     $595 = (($548) - ($594))|0;
     $596 = $595 & $549;
     $597 = ($596>>>0)<(2147483647);
     if ($597) {
      $598 = (_sbrk(($596|0))|0);
      $599 = HEAP32[$$lcssa165>>2]|0;
      $600 = HEAP32[$$lcssa167>>2]|0;
      $601 = (($599) + ($600)|0);
      $602 = ($598|0)==($601|0);
      if ($602) {
       $603 = ($598|0)==((-1)|0);
       if ($603) {
        $tsize$0313843$i = $596;
       } else {
        $tbase$253$i = $598;$tsize$252$i = $596;
        label = 211;
        break L282;
       }
      } else {
       $br$0$ph$i = $598;$ssize$1$ph$i = $596;
       label = 201;
      }
     } else {
      $tsize$0313843$i = 0;
     }
    }
   } while(0);
   do {
    if ((label|0) == 191) {
     $572 = (_sbrk(0)|0);
     $573 = ($572|0)==((-1)|0);
     if ($573) {
      $tsize$0313843$i = 0;
     } else {
      $574 = $572;
      $575 = HEAP32[((11216 + 4|0))>>2]|0;
      $576 = (($575) + -1)|0;
      $577 = $576 & $574;
      $578 = ($577|0)==(0);
      if ($578) {
       $ssize$0$i = $550;
      } else {
       $579 = (($576) + ($574))|0;
       $580 = (0 - ($575))|0;
       $581 = $579 & $580;
       $582 = (($550) - ($574))|0;
       $583 = (($582) + ($581))|0;
       $ssize$0$i = $583;
      }
      $584 = HEAP32[((10744 + 432|0))>>2]|0;
      $585 = (($584) + ($ssize$0$i))|0;
      $586 = ($ssize$0$i>>>0)>($nb$0>>>0);
      $587 = ($ssize$0$i>>>0)<(2147483647);
      $or$cond$i30 = $586 & $587;
      if ($or$cond$i30) {
       $588 = HEAP32[((10744 + 440|0))>>2]|0;
       $589 = ($588|0)==(0);
       if (!($589)) {
        $590 = ($585>>>0)<=($584>>>0);
        $591 = ($585>>>0)>($588>>>0);
        $or$cond2$i = $590 | $591;
        if ($or$cond2$i) {
         $tsize$0313843$i = 0;
         break;
        }
       }
       $592 = (_sbrk(($ssize$0$i|0))|0);
       $593 = ($592|0)==($572|0);
       if ($593) {
        $tbase$253$i = $572;$tsize$252$i = $ssize$0$i;
        label = 211;
        break L282;
       } else {
        $br$0$ph$i = $592;$ssize$1$ph$i = $ssize$0$i;
        label = 201;
       }
      } else {
       $tsize$0313843$i = 0;
      }
     }
    }
   } while(0);
   L306: do {
    if ((label|0) == 201) {
     $604 = (0 - ($ssize$1$ph$i))|0;
     $605 = ($br$0$ph$i|0)!=((-1)|0);
     $606 = ($ssize$1$ph$i>>>0)<(2147483647);
     $or$cond5$i = $606 & $605;
     $607 = ($545>>>0)>($ssize$1$ph$i>>>0);
     $or$cond4$i = $607 & $or$cond5$i;
     do {
      if ($or$cond4$i) {
       $608 = HEAP32[((11216 + 8|0))>>2]|0;
       $609 = (($547) - ($ssize$1$ph$i))|0;
       $610 = (($609) + ($608))|0;
       $611 = (0 - ($608))|0;
       $612 = $610 & $611;
       $613 = ($612>>>0)<(2147483647);
       if ($613) {
        $614 = (_sbrk(($612|0))|0);
        $615 = ($614|0)==((-1)|0);
        if ($615) {
         (_sbrk(($604|0))|0);
         $tsize$0313843$i = 0;
         break L306;
        } else {
         $616 = (($612) + ($ssize$1$ph$i))|0;
         $ssize$2$i = $616;
         break;
        }
       } else {
        $ssize$2$i = $ssize$1$ph$i;
       }
      } else {
       $ssize$2$i = $ssize$1$ph$i;
      }
     } while(0);
     $617 = ($br$0$ph$i|0)==((-1)|0);
     if ($617) {
      $tsize$0313843$i = 0;
     } else {
      $tbase$253$i = $br$0$ph$i;$tsize$252$i = $ssize$2$i;
      label = 211;
      break L282;
     }
    }
   } while(0);
   $618 = HEAP32[((10744 + 444|0))>>2]|0;
   $619 = $618 | 4;
   HEAP32[((10744 + 444|0))>>2] = $619;
   $tsize$1$i = $tsize$0313843$i;
   label = 208;
  } else {
   $tsize$1$i = 0;
   label = 208;
  }
 } while(0);
 if ((label|0) == 208) {
  $620 = ($550>>>0)<(2147483647);
  if ($620) {
   $621 = (_sbrk(($550|0))|0);
   $622 = (_sbrk(0)|0);
   $623 = ($621|0)!=((-1)|0);
   $624 = ($622|0)!=((-1)|0);
   $or$cond3$i = $623 & $624;
   $625 = ($621>>>0)<($622>>>0);
   $or$cond6$i = $625 & $or$cond3$i;
   if ($or$cond6$i) {
    $626 = $622;
    $627 = $621;
    $628 = (($626) - ($627))|0;
    $629 = (($nb$0) + 40)|0;
    $630 = ($628>>>0)>($629>>>0);
    $$tsize$1$i = $630 ? $628 : $tsize$1$i;
    if ($630) {
     $tbase$253$i = $621;$tsize$252$i = $$tsize$1$i;
     label = 211;
    }
   }
  }
 }
 if ((label|0) == 211) {
  $631 = HEAP32[((10744 + 432|0))>>2]|0;
  $632 = (($631) + ($tsize$252$i))|0;
  HEAP32[((10744 + 432|0))>>2] = $632;
  $633 = HEAP32[((10744 + 436|0))>>2]|0;
  $634 = ($632>>>0)>($633>>>0);
  if ($634) {
   HEAP32[((10744 + 436|0))>>2] = $632;
  }
  $635 = HEAP32[((10744 + 24|0))>>2]|0;
  $636 = ($635|0)==(0|0);
  L325: do {
   if ($636) {
    $637 = HEAP32[((10744 + 16|0))>>2]|0;
    $638 = ($637|0)==(0|0);
    $639 = ($tbase$253$i>>>0)<($637>>>0);
    $or$cond8$i = $638 | $639;
    if ($or$cond8$i) {
     HEAP32[((10744 + 16|0))>>2] = $tbase$253$i;
    }
    HEAP32[((10744 + 448|0))>>2] = $tbase$253$i;
    HEAP32[((10744 + 452|0))>>2] = $tsize$252$i;
    HEAP32[((10744 + 460|0))>>2] = 0;
    $640 = HEAP32[11216>>2]|0;
    HEAP32[((10744 + 36|0))>>2] = $640;
    HEAP32[((10744 + 32|0))>>2] = -1;
    $i$02$i$i = 0;
    while(1) {
     $641 = $i$02$i$i << 1;
     $642 = ((10744 + ($641<<2)|0) + 40|0);
     $$sum$i$i = (($641) + 3)|0;
     $643 = ((10744 + ($$sum$i$i<<2)|0) + 40|0);
     HEAP32[$643>>2] = $642;
     $$sum1$i$i = (($641) + 2)|0;
     $644 = ((10744 + ($$sum1$i$i<<2)|0) + 40|0);
     HEAP32[$644>>2] = $642;
     $645 = (($i$02$i$i) + 1)|0;
     $exitcond$i$i = ($645|0)==(32);
     if ($exitcond$i$i) {
      break;
     } else {
      $i$02$i$i = $645;
     }
    }
    $646 = (($tsize$252$i) + -40)|0;
    $647 = (($tbase$253$i) + 8|0);
    $648 = $647;
    $649 = $648 & 7;
    $650 = ($649|0)==(0);
    if ($650) {
     $654 = 0;
    } else {
     $651 = (0 - ($648))|0;
     $652 = $651 & 7;
     $654 = $652;
    }
    $653 = (($tbase$253$i) + ($654)|0);
    $655 = (($646) - ($654))|0;
    HEAP32[((10744 + 24|0))>>2] = $653;
    HEAP32[((10744 + 12|0))>>2] = $655;
    $656 = $655 | 1;
    $$sum$i12$i = (($654) + 4)|0;
    $657 = (($tbase$253$i) + ($$sum$i12$i)|0);
    HEAP32[$657>>2] = $656;
    $$sum2$i$i = (($tsize$252$i) + -36)|0;
    $658 = (($tbase$253$i) + ($$sum2$i$i)|0);
    HEAP32[$658>>2] = 40;
    $659 = HEAP32[((11216 + 16|0))>>2]|0;
    HEAP32[((10744 + 28|0))>>2] = $659;
   } else {
    $sp$082$i = ((10744 + 448|0));
    while(1) {
     $660 = HEAP32[$sp$082$i>>2]|0;
     $661 = (($sp$082$i) + 4|0);
     $662 = HEAP32[$661>>2]|0;
     $663 = (($660) + ($662)|0);
     $664 = ($tbase$253$i|0)==($663|0);
     if ($664) {
      $$lcssa159 = $660;$$lcssa161 = $661;$$lcssa163 = $662;$sp$082$i$lcssa = $sp$082$i;
      label = 224;
      break;
     }
     $665 = (($sp$082$i) + 8|0);
     $666 = HEAP32[$665>>2]|0;
     $667 = ($666|0)==(0|0);
     if ($667) {
      label = 229;
      break;
     } else {
      $sp$082$i = $666;
     }
    }
    if ((label|0) == 224) {
     $668 = (($sp$082$i$lcssa) + 12|0);
     $669 = HEAP32[$668>>2]|0;
     $670 = $669 & 8;
     $671 = ($670|0)==(0);
     if ($671) {
      $672 = ($635>>>0)>=($$lcssa159>>>0);
      $673 = ($635>>>0)<($tbase$253$i>>>0);
      $or$cond55$i = $673 & $672;
      if ($or$cond55$i) {
       $674 = (($$lcssa163) + ($tsize$252$i))|0;
       HEAP32[$$lcssa161>>2] = $674;
       $675 = HEAP32[((10744 + 12|0))>>2]|0;
       $676 = (($675) + ($tsize$252$i))|0;
       $677 = (($635) + 8|0);
       $678 = $677;
       $679 = $678 & 7;
       $680 = ($679|0)==(0);
       if ($680) {
        $684 = 0;
       } else {
        $681 = (0 - ($678))|0;
        $682 = $681 & 7;
        $684 = $682;
       }
       $683 = (($635) + ($684)|0);
       $685 = (($676) - ($684))|0;
       HEAP32[((10744 + 24|0))>>2] = $683;
       HEAP32[((10744 + 12|0))>>2] = $685;
       $686 = $685 | 1;
       $$sum$i16$i = (($684) + 4)|0;
       $687 = (($635) + ($$sum$i16$i)|0);
       HEAP32[$687>>2] = $686;
       $$sum2$i17$i = (($676) + 4)|0;
       $688 = (($635) + ($$sum2$i17$i)|0);
       HEAP32[$688>>2] = 40;
       $689 = HEAP32[((11216 + 16|0))>>2]|0;
       HEAP32[((10744 + 28|0))>>2] = $689;
       break;
      }
     }
    }
    else if ((label|0) == 229) {
    }
    $690 = HEAP32[((10744 + 16|0))>>2]|0;
    $691 = ($tbase$253$i>>>0)<($690>>>0);
    if ($691) {
     HEAP32[((10744 + 16|0))>>2] = $tbase$253$i;
     $755 = $tbase$253$i;
    } else {
     $755 = $690;
    }
    $692 = (($tbase$253$i) + ($tsize$252$i)|0);
    $sp$181$i = ((10744 + 448|0));
    while(1) {
     $693 = HEAP32[$sp$181$i>>2]|0;
     $694 = ($693|0)==($692|0);
     if ($694) {
      $$lcssa156 = $sp$181$i;$sp$181$i$lcssa = $sp$181$i;
      label = 235;
      break;
     }
     $695 = (($sp$181$i) + 8|0);
     $696 = HEAP32[$695>>2]|0;
     $697 = ($696|0)==(0|0);
     if ($697) {
      label = 236;
      break;
     } else {
      $sp$181$i = $696;
     }
    }
    if ((label|0) == 235) {
     $698 = (($sp$181$i$lcssa) + 12|0);
     $699 = HEAP32[$698>>2]|0;
     $700 = $699 & 8;
     $701 = ($700|0)==(0);
     if ($701) {
      HEAP32[$$lcssa156>>2] = $tbase$253$i;
      $702 = (($sp$181$i$lcssa) + 4|0);
      $703 = HEAP32[$702>>2]|0;
      $704 = (($703) + ($tsize$252$i))|0;
      HEAP32[$702>>2] = $704;
      $705 = (($tbase$253$i) + 8|0);
      $706 = $705;
      $707 = $706 & 7;
      $708 = ($707|0)==(0);
      if ($708) {
       $712 = 0;
      } else {
       $709 = (0 - ($706))|0;
       $710 = $709 & 7;
       $712 = $710;
      }
      $711 = (($tbase$253$i) + ($712)|0);
      $$sum110$i = (($tsize$252$i) + 8)|0;
      $713 = (($tbase$253$i) + ($$sum110$i)|0);
      $714 = $713;
      $715 = $714 & 7;
      $716 = ($715|0)==(0);
      if ($716) {
       $719 = 0;
      } else {
       $717 = (0 - ($714))|0;
       $718 = $717 & 7;
       $719 = $718;
      }
      $$sum111$i = (($719) + ($tsize$252$i))|0;
      $720 = (($tbase$253$i) + ($$sum111$i)|0);
      $721 = $720;
      $722 = $711;
      $723 = (($721) - ($722))|0;
      $$sum$i19$i = (($712) + ($nb$0))|0;
      $724 = (($tbase$253$i) + ($$sum$i19$i)|0);
      $725 = (($723) - ($nb$0))|0;
      $726 = $nb$0 | 3;
      $$sum1$i20$i = (($712) + 4)|0;
      $727 = (($tbase$253$i) + ($$sum1$i20$i)|0);
      HEAP32[$727>>2] = $726;
      $728 = ($720|0)==($635|0);
      L354: do {
       if ($728) {
        $729 = HEAP32[((10744 + 12|0))>>2]|0;
        $730 = (($729) + ($725))|0;
        HEAP32[((10744 + 12|0))>>2] = $730;
        HEAP32[((10744 + 24|0))>>2] = $724;
        $731 = $730 | 1;
        $$sum42$i$i = (($$sum$i19$i) + 4)|0;
        $732 = (($tbase$253$i) + ($$sum42$i$i)|0);
        HEAP32[$732>>2] = $731;
       } else {
        $733 = HEAP32[((10744 + 20|0))>>2]|0;
        $734 = ($720|0)==($733|0);
        if ($734) {
         $735 = HEAP32[((10744 + 8|0))>>2]|0;
         $736 = (($735) + ($725))|0;
         HEAP32[((10744 + 8|0))>>2] = $736;
         HEAP32[((10744 + 20|0))>>2] = $724;
         $737 = $736 | 1;
         $$sum40$i$i = (($$sum$i19$i) + 4)|0;
         $738 = (($tbase$253$i) + ($$sum40$i$i)|0);
         HEAP32[$738>>2] = $737;
         $$sum41$i$i = (($736) + ($$sum$i19$i))|0;
         $739 = (($tbase$253$i) + ($$sum41$i$i)|0);
         HEAP32[$739>>2] = $736;
         break;
        }
        $$sum2$i21$i = (($tsize$252$i) + 4)|0;
        $$sum112$i = (($$sum2$i21$i) + ($719))|0;
        $740 = (($tbase$253$i) + ($$sum112$i)|0);
        $741 = HEAP32[$740>>2]|0;
        $742 = $741 & 3;
        $743 = ($742|0)==(1);
        if ($743) {
         $744 = $741 & -8;
         $745 = $741 >>> 3;
         $746 = ($741>>>0)<(256);
         L362: do {
          if ($746) {
           $$sum3738$i$i = $719 | 8;
           $$sum122$i = (($$sum3738$i$i) + ($tsize$252$i))|0;
           $747 = (($tbase$253$i) + ($$sum122$i)|0);
           $748 = HEAP32[$747>>2]|0;
           $$sum39$i$i = (($tsize$252$i) + 12)|0;
           $$sum123$i = (($$sum39$i$i) + ($719))|0;
           $749 = (($tbase$253$i) + ($$sum123$i)|0);
           $750 = HEAP32[$749>>2]|0;
           $751 = $745 << 1;
           $752 = ((10744 + ($751<<2)|0) + 40|0);
           $753 = ($748|0)==($752|0);
           do {
            if (!($753)) {
             $754 = ($748>>>0)<($755>>>0);
             if ($754) {
              _abort();
              // unreachable;
             }
             $756 = (($748) + 12|0);
             $757 = HEAP32[$756>>2]|0;
             $758 = ($757|0)==($720|0);
             if ($758) {
              break;
             }
             _abort();
             // unreachable;
            }
           } while(0);
           $759 = ($750|0)==($748|0);
           if ($759) {
            $760 = 1 << $745;
            $761 = $760 ^ -1;
            $762 = HEAP32[10744>>2]|0;
            $763 = $762 & $761;
            HEAP32[10744>>2] = $763;
            break;
           }
           $764 = ($750|0)==($752|0);
           do {
            if ($764) {
             $$pre58$i$i = (($750) + 8|0);
             $$pre$phi59$i$iZ2D = $$pre58$i$i;
            } else {
             $765 = ($750>>>0)<($755>>>0);
             if ($765) {
              _abort();
              // unreachable;
             }
             $766 = (($750) + 8|0);
             $767 = HEAP32[$766>>2]|0;
             $768 = ($767|0)==($720|0);
             if ($768) {
              $$pre$phi59$i$iZ2D = $766;
              break;
             }
             _abort();
             // unreachable;
            }
           } while(0);
           $769 = (($748) + 12|0);
           HEAP32[$769>>2] = $750;
           HEAP32[$$pre$phi59$i$iZ2D>>2] = $748;
          } else {
           $$sum34$i$i = $719 | 24;
           $$sum113$i = (($$sum34$i$i) + ($tsize$252$i))|0;
           $770 = (($tbase$253$i) + ($$sum113$i)|0);
           $771 = HEAP32[$770>>2]|0;
           $$sum5$i$i = (($tsize$252$i) + 12)|0;
           $$sum114$i = (($$sum5$i$i) + ($719))|0;
           $772 = (($tbase$253$i) + ($$sum114$i)|0);
           $773 = HEAP32[$772>>2]|0;
           $774 = ($773|0)==($720|0);
           do {
            if ($774) {
             $$sum67$i$i = $719 | 16;
             $$sum120$i = (($$sum2$i21$i) + ($$sum67$i$i))|0;
             $784 = (($tbase$253$i) + ($$sum120$i)|0);
             $785 = HEAP32[$784>>2]|0;
             $786 = ($785|0)==(0|0);
             if ($786) {
              $$sum121$i = (($$sum67$i$i) + ($tsize$252$i))|0;
              $787 = (($tbase$253$i) + ($$sum121$i)|0);
              $788 = HEAP32[$787>>2]|0;
              $789 = ($788|0)==(0|0);
              if ($789) {
               $R$1$i$i = 0;
               break;
              } else {
               $R$0$i$i$ph = $788;$RP$0$i$i$ph = $787;
              }
             } else {
              $R$0$i$i$ph = $785;$RP$0$i$i$ph = $784;
             }
             $R$0$i$i = $R$0$i$i$ph;$RP$0$i$i = $RP$0$i$i$ph;
             while(1) {
              $790 = (($R$0$i$i) + 20|0);
              $791 = HEAP32[$790>>2]|0;
              $792 = ($791|0)==(0|0);
              if ($792) {
               $793 = (($R$0$i$i) + 16|0);
               $794 = HEAP32[$793>>2]|0;
               $795 = ($794|0)==(0|0);
               if ($795) {
                $R$0$i$i$lcssa = $R$0$i$i;$RP$0$i$i$lcssa = $RP$0$i$i;
                break;
               } else {
                $R$0$i$i$be = $794;$RP$0$i$i$be = $793;
               }
              } else {
               $R$0$i$i$be = $791;$RP$0$i$i$be = $790;
              }
              $R$0$i$i = $R$0$i$i$be;$RP$0$i$i = $RP$0$i$i$be;
             }
             $796 = ($RP$0$i$i$lcssa>>>0)<($755>>>0);
             if ($796) {
              _abort();
              // unreachable;
             } else {
              HEAP32[$RP$0$i$i$lcssa>>2] = 0;
              $R$1$i$i = $R$0$i$i$lcssa;
              break;
             }
            } else {
             $$sum3536$i$i = $719 | 8;
             $$sum115$i = (($$sum3536$i$i) + ($tsize$252$i))|0;
             $775 = (($tbase$253$i) + ($$sum115$i)|0);
             $776 = HEAP32[$775>>2]|0;
             $777 = ($776>>>0)<($755>>>0);
             if ($777) {
              _abort();
              // unreachable;
             }
             $778 = (($776) + 12|0);
             $779 = HEAP32[$778>>2]|0;
             $780 = ($779|0)==($720|0);
             if (!($780)) {
              _abort();
              // unreachable;
             }
             $781 = (($773) + 8|0);
             $782 = HEAP32[$781>>2]|0;
             $783 = ($782|0)==($720|0);
             if ($783) {
              HEAP32[$778>>2] = $773;
              HEAP32[$781>>2] = $776;
              $R$1$i$i = $773;
              break;
             } else {
              _abort();
              // unreachable;
             }
            }
           } while(0);
           $797 = ($771|0)==(0|0);
           if ($797) {
            break;
           }
           $$sum30$i$i = (($tsize$252$i) + 28)|0;
           $$sum116$i = (($$sum30$i$i) + ($719))|0;
           $798 = (($tbase$253$i) + ($$sum116$i)|0);
           $799 = HEAP32[$798>>2]|0;
           $800 = ((10744 + ($799<<2)|0) + 304|0);
           $801 = HEAP32[$800>>2]|0;
           $802 = ($720|0)==($801|0);
           do {
            if ($802) {
             HEAP32[$800>>2] = $R$1$i$i;
             $cond$i$i = ($R$1$i$i|0)==(0|0);
             if (!($cond$i$i)) {
              break;
             }
             $803 = 1 << $799;
             $804 = $803 ^ -1;
             $805 = HEAP32[((10744 + 4|0))>>2]|0;
             $806 = $805 & $804;
             HEAP32[((10744 + 4|0))>>2] = $806;
             break L362;
            } else {
             $807 = HEAP32[((10744 + 16|0))>>2]|0;
             $808 = ($771>>>0)<($807>>>0);
             if ($808) {
              _abort();
              // unreachable;
             }
             $809 = (($771) + 16|0);
             $810 = HEAP32[$809>>2]|0;
             $811 = ($810|0)==($720|0);
             if ($811) {
              HEAP32[$809>>2] = $R$1$i$i;
             } else {
              $812 = (($771) + 20|0);
              HEAP32[$812>>2] = $R$1$i$i;
             }
             $813 = ($R$1$i$i|0)==(0|0);
             if ($813) {
              break L362;
             }
            }
           } while(0);
           $814 = HEAP32[((10744 + 16|0))>>2]|0;
           $815 = ($R$1$i$i>>>0)<($814>>>0);
           if ($815) {
            _abort();
            // unreachable;
           }
           $816 = (($R$1$i$i) + 24|0);
           HEAP32[$816>>2] = $771;
           $$sum3132$i$i = $719 | 16;
           $$sum117$i = (($$sum3132$i$i) + ($tsize$252$i))|0;
           $817 = (($tbase$253$i) + ($$sum117$i)|0);
           $818 = HEAP32[$817>>2]|0;
           $819 = ($818|0)==(0|0);
           do {
            if (!($819)) {
             $820 = ($818>>>0)<($814>>>0);
             if ($820) {
              _abort();
              // unreachable;
             } else {
              $821 = (($R$1$i$i) + 16|0);
              HEAP32[$821>>2] = $818;
              $822 = (($818) + 24|0);
              HEAP32[$822>>2] = $R$1$i$i;
              break;
             }
            }
           } while(0);
           $$sum118$i = (($$sum2$i21$i) + ($$sum3132$i$i))|0;
           $823 = (($tbase$253$i) + ($$sum118$i)|0);
           $824 = HEAP32[$823>>2]|0;
           $825 = ($824|0)==(0|0);
           if ($825) {
            break;
           }
           $826 = HEAP32[((10744 + 16|0))>>2]|0;
           $827 = ($824>>>0)<($826>>>0);
           if ($827) {
            _abort();
            // unreachable;
           } else {
            $828 = (($R$1$i$i) + 20|0);
            HEAP32[$828>>2] = $824;
            $829 = (($824) + 24|0);
            HEAP32[$829>>2] = $R$1$i$i;
            break;
           }
          }
         } while(0);
         $$sum9$i$i = $744 | $719;
         $$sum119$i = (($$sum9$i$i) + ($tsize$252$i))|0;
         $830 = (($tbase$253$i) + ($$sum119$i)|0);
         $831 = (($744) + ($725))|0;
         $oldfirst$0$i$i = $830;$qsize$0$i$i = $831;
        } else {
         $oldfirst$0$i$i = $720;$qsize$0$i$i = $725;
        }
        $832 = (($oldfirst$0$i$i) + 4|0);
        $833 = HEAP32[$832>>2]|0;
        $834 = $833 & -2;
        HEAP32[$832>>2] = $834;
        $835 = $qsize$0$i$i | 1;
        $$sum10$i$i = (($$sum$i19$i) + 4)|0;
        $836 = (($tbase$253$i) + ($$sum10$i$i)|0);
        HEAP32[$836>>2] = $835;
        $$sum11$i$i = (($qsize$0$i$i) + ($$sum$i19$i))|0;
        $837 = (($tbase$253$i) + ($$sum11$i$i)|0);
        HEAP32[$837>>2] = $qsize$0$i$i;
        $838 = $qsize$0$i$i >>> 3;
        $839 = ($qsize$0$i$i>>>0)<(256);
        if ($839) {
         $840 = $838 << 1;
         $841 = ((10744 + ($840<<2)|0) + 40|0);
         $842 = HEAP32[10744>>2]|0;
         $843 = 1 << $838;
         $844 = $842 & $843;
         $845 = ($844|0)==(0);
         do {
          if ($845) {
           $846 = $842 | $843;
           HEAP32[10744>>2] = $846;
           $$sum26$pre$i$i = (($840) + 2)|0;
           $$pre$i22$i = ((10744 + ($$sum26$pre$i$i<<2)|0) + 40|0);
           $$pre$phi$i23$iZ2D = $$pre$i22$i;$F4$0$i$i = $841;
          } else {
           $$sum29$i$i = (($840) + 2)|0;
           $847 = ((10744 + ($$sum29$i$i<<2)|0) + 40|0);
           $848 = HEAP32[$847>>2]|0;
           $849 = HEAP32[((10744 + 16|0))>>2]|0;
           $850 = ($848>>>0)<($849>>>0);
           if (!($850)) {
            $$pre$phi$i23$iZ2D = $847;$F4$0$i$i = $848;
            break;
           }
           _abort();
           // unreachable;
          }
         } while(0);
         HEAP32[$$pre$phi$i23$iZ2D>>2] = $724;
         $851 = (($F4$0$i$i) + 12|0);
         HEAP32[$851>>2] = $724;
         $$sum27$i$i = (($$sum$i19$i) + 8)|0;
         $852 = (($tbase$253$i) + ($$sum27$i$i)|0);
         HEAP32[$852>>2] = $F4$0$i$i;
         $$sum28$i$i = (($$sum$i19$i) + 12)|0;
         $853 = (($tbase$253$i) + ($$sum28$i$i)|0);
         HEAP32[$853>>2] = $841;
         break;
        }
        $854 = $qsize$0$i$i >>> 8;
        $855 = ($854|0)==(0);
        do {
         if ($855) {
          $I7$0$i$i = 0;
         } else {
          $856 = ($qsize$0$i$i>>>0)>(16777215);
          if ($856) {
           $I7$0$i$i = 31;
           break;
          }
          $857 = (($854) + 1048320)|0;
          $858 = $857 >>> 16;
          $859 = $858 & 8;
          $860 = $854 << $859;
          $861 = (($860) + 520192)|0;
          $862 = $861 >>> 16;
          $863 = $862 & 4;
          $864 = $863 | $859;
          $865 = $860 << $863;
          $866 = (($865) + 245760)|0;
          $867 = $866 >>> 16;
          $868 = $867 & 2;
          $869 = $864 | $868;
          $870 = (14 - ($869))|0;
          $871 = $865 << $868;
          $872 = $871 >>> 15;
          $873 = (($870) + ($872))|0;
          $874 = $873 << 1;
          $875 = (($873) + 7)|0;
          $876 = $qsize$0$i$i >>> $875;
          $877 = $876 & 1;
          $878 = $877 | $874;
          $I7$0$i$i = $878;
         }
        } while(0);
        $879 = ((10744 + ($I7$0$i$i<<2)|0) + 304|0);
        $$sum12$i$i = (($$sum$i19$i) + 28)|0;
        $880 = (($tbase$253$i) + ($$sum12$i$i)|0);
        HEAP32[$880>>2] = $I7$0$i$i;
        $$sum13$i$i = (($$sum$i19$i) + 16)|0;
        $881 = (($tbase$253$i) + ($$sum13$i$i)|0);
        $$sum14$i$i = (($$sum$i19$i) + 20)|0;
        $882 = (($tbase$253$i) + ($$sum14$i$i)|0);
        HEAP32[$882>>2] = 0;
        HEAP32[$881>>2] = 0;
        $883 = HEAP32[((10744 + 4|0))>>2]|0;
        $884 = 1 << $I7$0$i$i;
        $885 = $883 & $884;
        $886 = ($885|0)==(0);
        if ($886) {
         $887 = $883 | $884;
         HEAP32[((10744 + 4|0))>>2] = $887;
         HEAP32[$879>>2] = $724;
         $$sum15$i$i = (($$sum$i19$i) + 24)|0;
         $888 = (($tbase$253$i) + ($$sum15$i$i)|0);
         HEAP32[$888>>2] = $879;
         $$sum16$i$i = (($$sum$i19$i) + 12)|0;
         $889 = (($tbase$253$i) + ($$sum16$i$i)|0);
         HEAP32[$889>>2] = $724;
         $$sum17$i$i = (($$sum$i19$i) + 8)|0;
         $890 = (($tbase$253$i) + ($$sum17$i$i)|0);
         HEAP32[$890>>2] = $724;
         break;
        }
        $891 = HEAP32[$879>>2]|0;
        $892 = ($I7$0$i$i|0)==(31);
        if ($892) {
         $900 = 0;
        } else {
         $893 = $I7$0$i$i >>> 1;
         $894 = (25 - ($893))|0;
         $900 = $894;
        }
        $895 = (($891) + 4|0);
        $896 = HEAP32[$895>>2]|0;
        $897 = $896 & -8;
        $898 = ($897|0)==($qsize$0$i$i|0);
        do {
         if ($898) {
          $T$0$lcssa$i25$i = $891;
         } else {
          $899 = $qsize$0$i$i << $900;
          $K8$053$i$i = $899;$T$052$i$i = $891;
          while(1) {
           $907 = $K8$053$i$i >>> 31;
           $908 = ((($T$052$i$i) + ($907<<2)|0) + 16|0);
           $903 = HEAP32[$908>>2]|0;
           $909 = ($903|0)==(0|0);
           if ($909) {
            $$lcssa = $908;$T$052$i$i$lcssa = $T$052$i$i;
            break;
           }
           $901 = $K8$053$i$i << 1;
           $902 = (($903) + 4|0);
           $904 = HEAP32[$902>>2]|0;
           $905 = $904 & -8;
           $906 = ($905|0)==($qsize$0$i$i|0);
           if ($906) {
            $$lcssa146 = $903;
            label = 316;
            break;
           } else {
            $K8$053$i$i = $901;$T$052$i$i = $903;
           }
          }
          if ((label|0) == 316) {
           $T$0$lcssa$i25$i = $$lcssa146;
           break;
          }
          $910 = HEAP32[((10744 + 16|0))>>2]|0;
          $911 = ($$lcssa>>>0)<($910>>>0);
          if ($911) {
           _abort();
           // unreachable;
          } else {
           HEAP32[$$lcssa>>2] = $724;
           $$sum23$i$i = (($$sum$i19$i) + 24)|0;
           $912 = (($tbase$253$i) + ($$sum23$i$i)|0);
           HEAP32[$912>>2] = $T$052$i$i$lcssa;
           $$sum24$i$i = (($$sum$i19$i) + 12)|0;
           $913 = (($tbase$253$i) + ($$sum24$i$i)|0);
           HEAP32[$913>>2] = $724;
           $$sum25$i$i = (($$sum$i19$i) + 8)|0;
           $914 = (($tbase$253$i) + ($$sum25$i$i)|0);
           HEAP32[$914>>2] = $724;
           break L354;
          }
         }
        } while(0);
        $915 = (($T$0$lcssa$i25$i) + 8|0);
        $916 = HEAP32[$915>>2]|0;
        $917 = HEAP32[((10744 + 16|0))>>2]|0;
        $918 = ($T$0$lcssa$i25$i>>>0)>=($917>>>0);
        $919 = ($916>>>0)>=($917>>>0);
        $or$cond$i26$i = $918 & $919;
        if ($or$cond$i26$i) {
         $920 = (($916) + 12|0);
         HEAP32[$920>>2] = $724;
         HEAP32[$915>>2] = $724;
         $$sum20$i$i = (($$sum$i19$i) + 8)|0;
         $921 = (($tbase$253$i) + ($$sum20$i$i)|0);
         HEAP32[$921>>2] = $916;
         $$sum21$i$i = (($$sum$i19$i) + 12)|0;
         $922 = (($tbase$253$i) + ($$sum21$i$i)|0);
         HEAP32[$922>>2] = $T$0$lcssa$i25$i;
         $$sum22$i$i = (($$sum$i19$i) + 24)|0;
         $923 = (($tbase$253$i) + ($$sum22$i$i)|0);
         HEAP32[$923>>2] = 0;
         break;
        } else {
         _abort();
         // unreachable;
        }
       }
      } while(0);
      $$sum1819$i$i = $712 | 8;
      $924 = (($tbase$253$i) + ($$sum1819$i$i)|0);
      $mem$0 = $924;
      return ($mem$0|0);
     }
    }
    else if ((label|0) == 236) {
    }
    $sp$0$i$i$i = ((10744 + 448|0));
    while(1) {
     $925 = HEAP32[$sp$0$i$i$i>>2]|0;
     $926 = ($925>>>0)>($635>>>0);
     if (!($926)) {
      $927 = (($sp$0$i$i$i) + 4|0);
      $928 = HEAP32[$927>>2]|0;
      $929 = (($925) + ($928)|0);
      $930 = ($929>>>0)>($635>>>0);
      if ($930) {
       $$lcssa152 = $925;$$lcssa153 = $928;$$lcssa154 = $929;
       break;
      }
     }
     $931 = (($sp$0$i$i$i) + 8|0);
     $932 = HEAP32[$931>>2]|0;
     $sp$0$i$i$i = $932;
    }
    $$sum$i13$i = (($$lcssa153) + -47)|0;
    $$sum1$i14$i = (($$lcssa153) + -39)|0;
    $933 = (($$lcssa152) + ($$sum1$i14$i)|0);
    $934 = $933;
    $935 = $934 & 7;
    $936 = ($935|0)==(0);
    if ($936) {
     $939 = 0;
    } else {
     $937 = (0 - ($934))|0;
     $938 = $937 & 7;
     $939 = $938;
    }
    $$sum2$i15$i = (($$sum$i13$i) + ($939))|0;
    $940 = (($$lcssa152) + ($$sum2$i15$i)|0);
    $941 = (($635) + 16|0);
    $942 = ($940>>>0)<($941>>>0);
    $943 = $942 ? $635 : $940;
    $944 = (($943) + 8|0);
    $945 = (($tsize$252$i) + -40)|0;
    $946 = (($tbase$253$i) + 8|0);
    $947 = $946;
    $948 = $947 & 7;
    $949 = ($948|0)==(0);
    if ($949) {
     $953 = 0;
    } else {
     $950 = (0 - ($947))|0;
     $951 = $950 & 7;
     $953 = $951;
    }
    $952 = (($tbase$253$i) + ($953)|0);
    $954 = (($945) - ($953))|0;
    HEAP32[((10744 + 24|0))>>2] = $952;
    HEAP32[((10744 + 12|0))>>2] = $954;
    $955 = $954 | 1;
    $$sum$i$i$i = (($953) + 4)|0;
    $956 = (($tbase$253$i) + ($$sum$i$i$i)|0);
    HEAP32[$956>>2] = $955;
    $$sum2$i$i$i = (($tsize$252$i) + -36)|0;
    $957 = (($tbase$253$i) + ($$sum2$i$i$i)|0);
    HEAP32[$957>>2] = 40;
    $958 = HEAP32[((11216 + 16|0))>>2]|0;
    HEAP32[((10744 + 28|0))>>2] = $958;
    $959 = (($943) + 4|0);
    HEAP32[$959>>2] = 27;
    ;HEAP32[$944+0>>2]=HEAP32[((10744 + 448|0))+0>>2]|0;HEAP32[$944+4>>2]=HEAP32[((10744 + 448|0))+4>>2]|0;HEAP32[$944+8>>2]=HEAP32[((10744 + 448|0))+8>>2]|0;HEAP32[$944+12>>2]=HEAP32[((10744 + 448|0))+12>>2]|0;
    HEAP32[((10744 + 448|0))>>2] = $tbase$253$i;
    HEAP32[((10744 + 452|0))>>2] = $tsize$252$i;
    HEAP32[((10744 + 460|0))>>2] = 0;
    HEAP32[((10744 + 456|0))>>2] = $944;
    $960 = (($943) + 28|0);
    HEAP32[$960>>2] = 7;
    $961 = (($943) + 32|0);
    $962 = ($961>>>0)<($$lcssa154>>>0);
    if ($962) {
     $964 = $960;
     while(1) {
      $963 = (($964) + 4|0);
      HEAP32[$963>>2] = 7;
      $965 = (($964) + 8|0);
      $966 = ($965>>>0)<($$lcssa154>>>0);
      if ($966) {
       $964 = $963;
      } else {
       break;
      }
     }
    }
    $967 = ($943|0)==($635|0);
    if (!($967)) {
     $968 = $943;
     $969 = $635;
     $970 = (($968) - ($969))|0;
     $971 = HEAP32[$959>>2]|0;
     $972 = $971 & -2;
     HEAP32[$959>>2] = $972;
     $973 = $970 | 1;
     $974 = (($635) + 4|0);
     HEAP32[$974>>2] = $973;
     HEAP32[$943>>2] = $970;
     $975 = $970 >>> 3;
     $976 = ($970>>>0)<(256);
     if ($976) {
      $977 = $975 << 1;
      $978 = ((10744 + ($977<<2)|0) + 40|0);
      $979 = HEAP32[10744>>2]|0;
      $980 = 1 << $975;
      $981 = $979 & $980;
      $982 = ($981|0)==(0);
      do {
       if ($982) {
        $983 = $979 | $980;
        HEAP32[10744>>2] = $983;
        $$sum3$pre$i$i = (($977) + 2)|0;
        $$pre$i$i = ((10744 + ($$sum3$pre$i$i<<2)|0) + 40|0);
        $$pre$phi$i$iZ2D = $$pre$i$i;$F$0$i$i = $978;
       } else {
        $$sum4$i$i = (($977) + 2)|0;
        $984 = ((10744 + ($$sum4$i$i<<2)|0) + 40|0);
        $985 = HEAP32[$984>>2]|0;
        $986 = HEAP32[((10744 + 16|0))>>2]|0;
        $987 = ($985>>>0)<($986>>>0);
        if (!($987)) {
         $$pre$phi$i$iZ2D = $984;$F$0$i$i = $985;
         break;
        }
        _abort();
        // unreachable;
       }
      } while(0);
      HEAP32[$$pre$phi$i$iZ2D>>2] = $635;
      $988 = (($F$0$i$i) + 12|0);
      HEAP32[$988>>2] = $635;
      $989 = (($635) + 8|0);
      HEAP32[$989>>2] = $F$0$i$i;
      $990 = (($635) + 12|0);
      HEAP32[$990>>2] = $978;
      break;
     }
     $991 = $970 >>> 8;
     $992 = ($991|0)==(0);
     if ($992) {
      $I1$0$i$i = 0;
     } else {
      $993 = ($970>>>0)>(16777215);
      if ($993) {
       $I1$0$i$i = 31;
      } else {
       $994 = (($991) + 1048320)|0;
       $995 = $994 >>> 16;
       $996 = $995 & 8;
       $997 = $991 << $996;
       $998 = (($997) + 520192)|0;
       $999 = $998 >>> 16;
       $1000 = $999 & 4;
       $1001 = $1000 | $996;
       $1002 = $997 << $1000;
       $1003 = (($1002) + 245760)|0;
       $1004 = $1003 >>> 16;
       $1005 = $1004 & 2;
       $1006 = $1001 | $1005;
       $1007 = (14 - ($1006))|0;
       $1008 = $1002 << $1005;
       $1009 = $1008 >>> 15;
       $1010 = (($1007) + ($1009))|0;
       $1011 = $1010 << 1;
       $1012 = (($1010) + 7)|0;
       $1013 = $970 >>> $1012;
       $1014 = $1013 & 1;
       $1015 = $1014 | $1011;
       $I1$0$i$i = $1015;
      }
     }
     $1016 = ((10744 + ($I1$0$i$i<<2)|0) + 304|0);
     $1017 = (($635) + 28|0);
     HEAP32[$1017>>2] = $I1$0$i$i;
     $1018 = (($635) + 20|0);
     HEAP32[$1018>>2] = 0;
     HEAP32[$941>>2] = 0;
     $1019 = HEAP32[((10744 + 4|0))>>2]|0;
     $1020 = 1 << $I1$0$i$i;
     $1021 = $1019 & $1020;
     $1022 = ($1021|0)==(0);
     if ($1022) {
      $1023 = $1019 | $1020;
      HEAP32[((10744 + 4|0))>>2] = $1023;
      HEAP32[$1016>>2] = $635;
      $1024 = (($635) + 24|0);
      HEAP32[$1024>>2] = $1016;
      $1025 = (($635) + 12|0);
      HEAP32[$1025>>2] = $635;
      $1026 = (($635) + 8|0);
      HEAP32[$1026>>2] = $635;
      break;
     }
     $1027 = HEAP32[$1016>>2]|0;
     $1028 = ($I1$0$i$i|0)==(31);
     if ($1028) {
      $1036 = 0;
     } else {
      $1029 = $I1$0$i$i >>> 1;
      $1030 = (25 - ($1029))|0;
      $1036 = $1030;
     }
     $1031 = (($1027) + 4|0);
     $1032 = HEAP32[$1031>>2]|0;
     $1033 = $1032 & -8;
     $1034 = ($1033|0)==($970|0);
     do {
      if ($1034) {
       $T$0$lcssa$i$i = $1027;
      } else {
       $1035 = $970 << $1036;
       $K2$08$i$i = $1035;$T$07$i$i = $1027;
       while(1) {
        $1043 = $K2$08$i$i >>> 31;
        $1044 = ((($T$07$i$i) + ($1043<<2)|0) + 16|0);
        $1039 = HEAP32[$1044>>2]|0;
        $1045 = ($1039|0)==(0|0);
        if ($1045) {
         $$lcssa148 = $1044;$T$07$i$i$lcssa = $T$07$i$i;
         break;
        }
        $1037 = $K2$08$i$i << 1;
        $1038 = (($1039) + 4|0);
        $1040 = HEAP32[$1038>>2]|0;
        $1041 = $1040 & -8;
        $1042 = ($1041|0)==($970|0);
        if ($1042) {
         $$lcssa151 = $1039;
         label = 353;
         break;
        } else {
         $K2$08$i$i = $1037;$T$07$i$i = $1039;
        }
       }
       if ((label|0) == 353) {
        $T$0$lcssa$i$i = $$lcssa151;
        break;
       }
       $1046 = HEAP32[((10744 + 16|0))>>2]|0;
       $1047 = ($$lcssa148>>>0)<($1046>>>0);
       if ($1047) {
        _abort();
        // unreachable;
       } else {
        HEAP32[$$lcssa148>>2] = $635;
        $1048 = (($635) + 24|0);
        HEAP32[$1048>>2] = $T$07$i$i$lcssa;
        $1049 = (($635) + 12|0);
        HEAP32[$1049>>2] = $635;
        $1050 = (($635) + 8|0);
        HEAP32[$1050>>2] = $635;
        break L325;
       }
      }
     } while(0);
     $1051 = (($T$0$lcssa$i$i) + 8|0);
     $1052 = HEAP32[$1051>>2]|0;
     $1053 = HEAP32[((10744 + 16|0))>>2]|0;
     $1054 = ($T$0$lcssa$i$i>>>0)>=($1053>>>0);
     $1055 = ($1052>>>0)>=($1053>>>0);
     $or$cond$i$i = $1054 & $1055;
     if ($or$cond$i$i) {
      $1056 = (($1052) + 12|0);
      HEAP32[$1056>>2] = $635;
      HEAP32[$1051>>2] = $635;
      $1057 = (($635) + 8|0);
      HEAP32[$1057>>2] = $1052;
      $1058 = (($635) + 12|0);
      HEAP32[$1058>>2] = $T$0$lcssa$i$i;
      $1059 = (($635) + 24|0);
      HEAP32[$1059>>2] = 0;
      break;
     } else {
      _abort();
      // unreachable;
     }
    }
   }
  } while(0);
  $1060 = HEAP32[((10744 + 12|0))>>2]|0;
  $1061 = ($1060>>>0)>($nb$0>>>0);
  if ($1061) {
   $1062 = (($1060) - ($nb$0))|0;
   HEAP32[((10744 + 12|0))>>2] = $1062;
   $1063 = HEAP32[((10744 + 24|0))>>2]|0;
   $1064 = (($1063) + ($nb$0)|0);
   HEAP32[((10744 + 24|0))>>2] = $1064;
   $1065 = $1062 | 1;
   $$sum$i32 = (($nb$0) + 4)|0;
   $1066 = (($1063) + ($$sum$i32)|0);
   HEAP32[$1066>>2] = $1065;
   $1067 = $nb$0 | 3;
   $1068 = (($1063) + 4|0);
   HEAP32[$1068>>2] = $1067;
   $1069 = (($1063) + 8|0);
   $mem$0 = $1069;
   return ($mem$0|0);
  }
 }
 $1070 = (___errno_location()|0);
 HEAP32[$1070>>2] = 12;
 $mem$0 = 0;
 return ($mem$0|0);
}
function _free($mem) {
 $mem = $mem|0;
 var $$lcssa = 0, $$lcssa71 = 0, $$pre = 0, $$pre$phi60Z2D = 0, $$pre$phi62Z2D = 0, $$pre$phiZ2D = 0, $$pre59 = 0, $$pre61 = 0, $$sum = 0, $$sum10$pre = 0, $$sum11 = 0, $$sum12 = 0, $$sum13 = 0, $$sum14 = 0, $$sum1718 = 0, $$sum19 = 0, $$sum2 = 0, $$sum20 = 0, $$sum22 = 0, $$sum23 = 0;
 var $$sum24 = 0, $$sum25 = 0, $$sum26 = 0, $$sum27 = 0, $$sum28 = 0, $$sum29 = 0, $$sum3 = 0, $$sum30 = 0, $$sum31 = 0, $$sum5 = 0, $$sum67 = 0, $$sum8 = 0, $$sum9 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0;
 var $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0;
 var $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0;
 var $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0;
 var $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0;
 var $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0;
 var $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0;
 var $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0;
 var $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0;
 var $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0;
 var $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0;
 var $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0;
 var $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0;
 var $320 = 0, $321 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0;
 var $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0;
 var $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $F16$0 = 0, $I18$0 = 0, $K19$054 = 0, $R$0 = 0, $R$0$be = 0;
 var $R$0$lcssa = 0, $R$0$ph = 0, $R$1 = 0, $R7$0 = 0, $R7$0$be = 0, $R7$0$lcssa = 0, $R7$0$ph = 0, $R7$1 = 0, $RP$0 = 0, $RP$0$be = 0, $RP$0$lcssa = 0, $RP$0$ph = 0, $RP9$0 = 0, $RP9$0$be = 0, $RP9$0$lcssa = 0, $RP9$0$ph = 0, $T$0$lcssa = 0, $T$053 = 0, $T$053$lcssa = 0, $cond = 0;
 var $cond48 = 0, $or$cond = 0, $p$0 = 0, $psize$0 = 0, $psize$1 = 0, $sp$0$i = 0, $sp$0$in$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($mem|0)==(0|0);
 if ($0) {
  return;
 }
 $1 = (($mem) + -8|0);
 $2 = HEAP32[((10744 + 16|0))>>2]|0;
 $3 = ($1>>>0)<($2>>>0);
 if ($3) {
  _abort();
  // unreachable;
 }
 $4 = (($mem) + -4|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = $5 & 3;
 $7 = ($6|0)==(1);
 if ($7) {
  _abort();
  // unreachable;
 }
 $8 = $5 & -8;
 $$sum = (($8) + -8)|0;
 $9 = (($mem) + ($$sum)|0);
 $10 = $5 & 1;
 $11 = ($10|0)==(0);
 do {
  if ($11) {
   $12 = HEAP32[$1>>2]|0;
   $13 = ($6|0)==(0);
   if ($13) {
    return;
   }
   $$sum2 = (-8 - ($12))|0;
   $14 = (($mem) + ($$sum2)|0);
   $15 = (($12) + ($8))|0;
   $16 = ($14>>>0)<($2>>>0);
   if ($16) {
    _abort();
    // unreachable;
   }
   $17 = HEAP32[((10744 + 20|0))>>2]|0;
   $18 = ($14|0)==($17|0);
   if ($18) {
    $$sum3 = (($8) + -4)|0;
    $103 = (($mem) + ($$sum3)|0);
    $104 = HEAP32[$103>>2]|0;
    $105 = $104 & 3;
    $106 = ($105|0)==(3);
    if (!($106)) {
     $p$0 = $14;$psize$0 = $15;
     break;
    }
    HEAP32[((10744 + 8|0))>>2] = $15;
    $107 = $104 & -2;
    HEAP32[$103>>2] = $107;
    $108 = $15 | 1;
    $$sum20 = (($$sum2) + 4)|0;
    $109 = (($mem) + ($$sum20)|0);
    HEAP32[$109>>2] = $108;
    HEAP32[$9>>2] = $15;
    return;
   }
   $19 = $12 >>> 3;
   $20 = ($12>>>0)<(256);
   if ($20) {
    $$sum30 = (($$sum2) + 8)|0;
    $21 = (($mem) + ($$sum30)|0);
    $22 = HEAP32[$21>>2]|0;
    $$sum31 = (($$sum2) + 12)|0;
    $23 = (($mem) + ($$sum31)|0);
    $24 = HEAP32[$23>>2]|0;
    $25 = $19 << 1;
    $26 = ((10744 + ($25<<2)|0) + 40|0);
    $27 = ($22|0)==($26|0);
    if (!($27)) {
     $28 = ($22>>>0)<($2>>>0);
     if ($28) {
      _abort();
      // unreachable;
     }
     $29 = (($22) + 12|0);
     $30 = HEAP32[$29>>2]|0;
     $31 = ($30|0)==($14|0);
     if (!($31)) {
      _abort();
      // unreachable;
     }
    }
    $32 = ($24|0)==($22|0);
    if ($32) {
     $33 = 1 << $19;
     $34 = $33 ^ -1;
     $35 = HEAP32[10744>>2]|0;
     $36 = $35 & $34;
     HEAP32[10744>>2] = $36;
     $p$0 = $14;$psize$0 = $15;
     break;
    }
    $37 = ($24|0)==($26|0);
    if ($37) {
     $$pre61 = (($24) + 8|0);
     $$pre$phi62Z2D = $$pre61;
    } else {
     $38 = ($24>>>0)<($2>>>0);
     if ($38) {
      _abort();
      // unreachable;
     }
     $39 = (($24) + 8|0);
     $40 = HEAP32[$39>>2]|0;
     $41 = ($40|0)==($14|0);
     if ($41) {
      $$pre$phi62Z2D = $39;
     } else {
      _abort();
      // unreachable;
     }
    }
    $42 = (($22) + 12|0);
    HEAP32[$42>>2] = $24;
    HEAP32[$$pre$phi62Z2D>>2] = $22;
    $p$0 = $14;$psize$0 = $15;
    break;
   }
   $$sum22 = (($$sum2) + 24)|0;
   $43 = (($mem) + ($$sum22)|0);
   $44 = HEAP32[$43>>2]|0;
   $$sum23 = (($$sum2) + 12)|0;
   $45 = (($mem) + ($$sum23)|0);
   $46 = HEAP32[$45>>2]|0;
   $47 = ($46|0)==($14|0);
   do {
    if ($47) {
     $$sum25 = (($$sum2) + 20)|0;
     $57 = (($mem) + ($$sum25)|0);
     $58 = HEAP32[$57>>2]|0;
     $59 = ($58|0)==(0|0);
     if ($59) {
      $$sum24 = (($$sum2) + 16)|0;
      $60 = (($mem) + ($$sum24)|0);
      $61 = HEAP32[$60>>2]|0;
      $62 = ($61|0)==(0|0);
      if ($62) {
       $R$1 = 0;
       break;
      } else {
       $R$0$ph = $61;$RP$0$ph = $60;
      }
     } else {
      $R$0$ph = $58;$RP$0$ph = $57;
     }
     $R$0 = $R$0$ph;$RP$0 = $RP$0$ph;
     while(1) {
      $63 = (($R$0) + 20|0);
      $64 = HEAP32[$63>>2]|0;
      $65 = ($64|0)==(0|0);
      if ($65) {
       $66 = (($R$0) + 16|0);
       $67 = HEAP32[$66>>2]|0;
       $68 = ($67|0)==(0|0);
       if ($68) {
        $R$0$lcssa = $R$0;$RP$0$lcssa = $RP$0;
        break;
       } else {
        $R$0$be = $67;$RP$0$be = $66;
       }
      } else {
       $R$0$be = $64;$RP$0$be = $63;
      }
      $R$0 = $R$0$be;$RP$0 = $RP$0$be;
     }
     $69 = ($RP$0$lcssa>>>0)<($2>>>0);
     if ($69) {
      _abort();
      // unreachable;
     } else {
      HEAP32[$RP$0$lcssa>>2] = 0;
      $R$1 = $R$0$lcssa;
      break;
     }
    } else {
     $$sum29 = (($$sum2) + 8)|0;
     $48 = (($mem) + ($$sum29)|0);
     $49 = HEAP32[$48>>2]|0;
     $50 = ($49>>>0)<($2>>>0);
     if ($50) {
      _abort();
      // unreachable;
     }
     $51 = (($49) + 12|0);
     $52 = HEAP32[$51>>2]|0;
     $53 = ($52|0)==($14|0);
     if (!($53)) {
      _abort();
      // unreachable;
     }
     $54 = (($46) + 8|0);
     $55 = HEAP32[$54>>2]|0;
     $56 = ($55|0)==($14|0);
     if ($56) {
      HEAP32[$51>>2] = $46;
      HEAP32[$54>>2] = $49;
      $R$1 = $46;
      break;
     } else {
      _abort();
      // unreachable;
     }
    }
   } while(0);
   $70 = ($44|0)==(0|0);
   if ($70) {
    $p$0 = $14;$psize$0 = $15;
   } else {
    $$sum26 = (($$sum2) + 28)|0;
    $71 = (($mem) + ($$sum26)|0);
    $72 = HEAP32[$71>>2]|0;
    $73 = ((10744 + ($72<<2)|0) + 304|0);
    $74 = HEAP32[$73>>2]|0;
    $75 = ($14|0)==($74|0);
    if ($75) {
     HEAP32[$73>>2] = $R$1;
     $cond = ($R$1|0)==(0|0);
     if ($cond) {
      $76 = 1 << $72;
      $77 = $76 ^ -1;
      $78 = HEAP32[((10744 + 4|0))>>2]|0;
      $79 = $78 & $77;
      HEAP32[((10744 + 4|0))>>2] = $79;
      $p$0 = $14;$psize$0 = $15;
      break;
     }
    } else {
     $80 = HEAP32[((10744 + 16|0))>>2]|0;
     $81 = ($44>>>0)<($80>>>0);
     if ($81) {
      _abort();
      // unreachable;
     }
     $82 = (($44) + 16|0);
     $83 = HEAP32[$82>>2]|0;
     $84 = ($83|0)==($14|0);
     if ($84) {
      HEAP32[$82>>2] = $R$1;
     } else {
      $85 = (($44) + 20|0);
      HEAP32[$85>>2] = $R$1;
     }
     $86 = ($R$1|0)==(0|0);
     if ($86) {
      $p$0 = $14;$psize$0 = $15;
      break;
     }
    }
    $87 = HEAP32[((10744 + 16|0))>>2]|0;
    $88 = ($R$1>>>0)<($87>>>0);
    if ($88) {
     _abort();
     // unreachable;
    }
    $89 = (($R$1) + 24|0);
    HEAP32[$89>>2] = $44;
    $$sum27 = (($$sum2) + 16)|0;
    $90 = (($mem) + ($$sum27)|0);
    $91 = HEAP32[$90>>2]|0;
    $92 = ($91|0)==(0|0);
    do {
     if (!($92)) {
      $93 = ($91>>>0)<($87>>>0);
      if ($93) {
       _abort();
       // unreachable;
      } else {
       $94 = (($R$1) + 16|0);
       HEAP32[$94>>2] = $91;
       $95 = (($91) + 24|0);
       HEAP32[$95>>2] = $R$1;
       break;
      }
     }
    } while(0);
    $$sum28 = (($$sum2) + 20)|0;
    $96 = (($mem) + ($$sum28)|0);
    $97 = HEAP32[$96>>2]|0;
    $98 = ($97|0)==(0|0);
    if ($98) {
     $p$0 = $14;$psize$0 = $15;
    } else {
     $99 = HEAP32[((10744 + 16|0))>>2]|0;
     $100 = ($97>>>0)<($99>>>0);
     if ($100) {
      _abort();
      // unreachable;
     } else {
      $101 = (($R$1) + 20|0);
      HEAP32[$101>>2] = $97;
      $102 = (($97) + 24|0);
      HEAP32[$102>>2] = $R$1;
      $p$0 = $14;$psize$0 = $15;
      break;
     }
    }
   }
  } else {
   $p$0 = $1;$psize$0 = $8;
  }
 } while(0);
 $110 = ($p$0>>>0)<($9>>>0);
 if (!($110)) {
  _abort();
  // unreachable;
 }
 $$sum19 = (($8) + -4)|0;
 $111 = (($mem) + ($$sum19)|0);
 $112 = HEAP32[$111>>2]|0;
 $113 = $112 & 1;
 $114 = ($113|0)==(0);
 if ($114) {
  _abort();
  // unreachable;
 }
 $115 = $112 & 2;
 $116 = ($115|0)==(0);
 if ($116) {
  $117 = HEAP32[((10744 + 24|0))>>2]|0;
  $118 = ($9|0)==($117|0);
  if ($118) {
   $119 = HEAP32[((10744 + 12|0))>>2]|0;
   $120 = (($119) + ($psize$0))|0;
   HEAP32[((10744 + 12|0))>>2] = $120;
   HEAP32[((10744 + 24|0))>>2] = $p$0;
   $121 = $120 | 1;
   $122 = (($p$0) + 4|0);
   HEAP32[$122>>2] = $121;
   $123 = HEAP32[((10744 + 20|0))>>2]|0;
   $124 = ($p$0|0)==($123|0);
   if (!($124)) {
    return;
   }
   HEAP32[((10744 + 20|0))>>2] = 0;
   HEAP32[((10744 + 8|0))>>2] = 0;
   return;
  }
  $125 = HEAP32[((10744 + 20|0))>>2]|0;
  $126 = ($9|0)==($125|0);
  if ($126) {
   $127 = HEAP32[((10744 + 8|0))>>2]|0;
   $128 = (($127) + ($psize$0))|0;
   HEAP32[((10744 + 8|0))>>2] = $128;
   HEAP32[((10744 + 20|0))>>2] = $p$0;
   $129 = $128 | 1;
   $130 = (($p$0) + 4|0);
   HEAP32[$130>>2] = $129;
   $131 = (($p$0) + ($128)|0);
   HEAP32[$131>>2] = $128;
   return;
  }
  $132 = $112 & -8;
  $133 = (($132) + ($psize$0))|0;
  $134 = $112 >>> 3;
  $135 = ($112>>>0)<(256);
  do {
   if ($135) {
    $136 = (($mem) + ($8)|0);
    $137 = HEAP32[$136>>2]|0;
    $$sum1718 = $8 | 4;
    $138 = (($mem) + ($$sum1718)|0);
    $139 = HEAP32[$138>>2]|0;
    $140 = $134 << 1;
    $141 = ((10744 + ($140<<2)|0) + 40|0);
    $142 = ($137|0)==($141|0);
    if (!($142)) {
     $143 = HEAP32[((10744 + 16|0))>>2]|0;
     $144 = ($137>>>0)<($143>>>0);
     if ($144) {
      _abort();
      // unreachable;
     }
     $145 = (($137) + 12|0);
     $146 = HEAP32[$145>>2]|0;
     $147 = ($146|0)==($9|0);
     if (!($147)) {
      _abort();
      // unreachable;
     }
    }
    $148 = ($139|0)==($137|0);
    if ($148) {
     $149 = 1 << $134;
     $150 = $149 ^ -1;
     $151 = HEAP32[10744>>2]|0;
     $152 = $151 & $150;
     HEAP32[10744>>2] = $152;
     break;
    }
    $153 = ($139|0)==($141|0);
    if ($153) {
     $$pre59 = (($139) + 8|0);
     $$pre$phi60Z2D = $$pre59;
    } else {
     $154 = HEAP32[((10744 + 16|0))>>2]|0;
     $155 = ($139>>>0)<($154>>>0);
     if ($155) {
      _abort();
      // unreachable;
     }
     $156 = (($139) + 8|0);
     $157 = HEAP32[$156>>2]|0;
     $158 = ($157|0)==($9|0);
     if ($158) {
      $$pre$phi60Z2D = $156;
     } else {
      _abort();
      // unreachable;
     }
    }
    $159 = (($137) + 12|0);
    HEAP32[$159>>2] = $139;
    HEAP32[$$pre$phi60Z2D>>2] = $137;
   } else {
    $$sum5 = (($8) + 16)|0;
    $160 = (($mem) + ($$sum5)|0);
    $161 = HEAP32[$160>>2]|0;
    $$sum67 = $8 | 4;
    $162 = (($mem) + ($$sum67)|0);
    $163 = HEAP32[$162>>2]|0;
    $164 = ($163|0)==($9|0);
    do {
     if ($164) {
      $$sum9 = (($8) + 12)|0;
      $175 = (($mem) + ($$sum9)|0);
      $176 = HEAP32[$175>>2]|0;
      $177 = ($176|0)==(0|0);
      if ($177) {
       $$sum8 = (($8) + 8)|0;
       $178 = (($mem) + ($$sum8)|0);
       $179 = HEAP32[$178>>2]|0;
       $180 = ($179|0)==(0|0);
       if ($180) {
        $R7$1 = 0;
        break;
       } else {
        $R7$0$ph = $179;$RP9$0$ph = $178;
       }
      } else {
       $R7$0$ph = $176;$RP9$0$ph = $175;
      }
      $R7$0 = $R7$0$ph;$RP9$0 = $RP9$0$ph;
      while(1) {
       $181 = (($R7$0) + 20|0);
       $182 = HEAP32[$181>>2]|0;
       $183 = ($182|0)==(0|0);
       if ($183) {
        $184 = (($R7$0) + 16|0);
        $185 = HEAP32[$184>>2]|0;
        $186 = ($185|0)==(0|0);
        if ($186) {
         $R7$0$lcssa = $R7$0;$RP9$0$lcssa = $RP9$0;
         break;
        } else {
         $R7$0$be = $185;$RP9$0$be = $184;
        }
       } else {
        $R7$0$be = $182;$RP9$0$be = $181;
       }
       $R7$0 = $R7$0$be;$RP9$0 = $RP9$0$be;
      }
      $187 = HEAP32[((10744 + 16|0))>>2]|0;
      $188 = ($RP9$0$lcssa>>>0)<($187>>>0);
      if ($188) {
       _abort();
       // unreachable;
      } else {
       HEAP32[$RP9$0$lcssa>>2] = 0;
       $R7$1 = $R7$0$lcssa;
       break;
      }
     } else {
      $165 = (($mem) + ($8)|0);
      $166 = HEAP32[$165>>2]|0;
      $167 = HEAP32[((10744 + 16|0))>>2]|0;
      $168 = ($166>>>0)<($167>>>0);
      if ($168) {
       _abort();
       // unreachable;
      }
      $169 = (($166) + 12|0);
      $170 = HEAP32[$169>>2]|0;
      $171 = ($170|0)==($9|0);
      if (!($171)) {
       _abort();
       // unreachable;
      }
      $172 = (($163) + 8|0);
      $173 = HEAP32[$172>>2]|0;
      $174 = ($173|0)==($9|0);
      if ($174) {
       HEAP32[$169>>2] = $163;
       HEAP32[$172>>2] = $166;
       $R7$1 = $163;
       break;
      } else {
       _abort();
       // unreachable;
      }
     }
    } while(0);
    $189 = ($161|0)==(0|0);
    if (!($189)) {
     $$sum12 = (($8) + 20)|0;
     $190 = (($mem) + ($$sum12)|0);
     $191 = HEAP32[$190>>2]|0;
     $192 = ((10744 + ($191<<2)|0) + 304|0);
     $193 = HEAP32[$192>>2]|0;
     $194 = ($9|0)==($193|0);
     if ($194) {
      HEAP32[$192>>2] = $R7$1;
      $cond48 = ($R7$1|0)==(0|0);
      if ($cond48) {
       $195 = 1 << $191;
       $196 = $195 ^ -1;
       $197 = HEAP32[((10744 + 4|0))>>2]|0;
       $198 = $197 & $196;
       HEAP32[((10744 + 4|0))>>2] = $198;
       break;
      }
     } else {
      $199 = HEAP32[((10744 + 16|0))>>2]|0;
      $200 = ($161>>>0)<($199>>>0);
      if ($200) {
       _abort();
       // unreachable;
      }
      $201 = (($161) + 16|0);
      $202 = HEAP32[$201>>2]|0;
      $203 = ($202|0)==($9|0);
      if ($203) {
       HEAP32[$201>>2] = $R7$1;
      } else {
       $204 = (($161) + 20|0);
       HEAP32[$204>>2] = $R7$1;
      }
      $205 = ($R7$1|0)==(0|0);
      if ($205) {
       break;
      }
     }
     $206 = HEAP32[((10744 + 16|0))>>2]|0;
     $207 = ($R7$1>>>0)<($206>>>0);
     if ($207) {
      _abort();
      // unreachable;
     }
     $208 = (($R7$1) + 24|0);
     HEAP32[$208>>2] = $161;
     $$sum13 = (($8) + 8)|0;
     $209 = (($mem) + ($$sum13)|0);
     $210 = HEAP32[$209>>2]|0;
     $211 = ($210|0)==(0|0);
     do {
      if (!($211)) {
       $212 = ($210>>>0)<($206>>>0);
       if ($212) {
        _abort();
        // unreachable;
       } else {
        $213 = (($R7$1) + 16|0);
        HEAP32[$213>>2] = $210;
        $214 = (($210) + 24|0);
        HEAP32[$214>>2] = $R7$1;
        break;
       }
      }
     } while(0);
     $$sum14 = (($8) + 12)|0;
     $215 = (($mem) + ($$sum14)|0);
     $216 = HEAP32[$215>>2]|0;
     $217 = ($216|0)==(0|0);
     if (!($217)) {
      $218 = HEAP32[((10744 + 16|0))>>2]|0;
      $219 = ($216>>>0)<($218>>>0);
      if ($219) {
       _abort();
       // unreachable;
      } else {
       $220 = (($R7$1) + 20|0);
       HEAP32[$220>>2] = $216;
       $221 = (($216) + 24|0);
       HEAP32[$221>>2] = $R7$1;
       break;
      }
     }
    }
   }
  } while(0);
  $222 = $133 | 1;
  $223 = (($p$0) + 4|0);
  HEAP32[$223>>2] = $222;
  $224 = (($p$0) + ($133)|0);
  HEAP32[$224>>2] = $133;
  $225 = HEAP32[((10744 + 20|0))>>2]|0;
  $226 = ($p$0|0)==($225|0);
  if ($226) {
   HEAP32[((10744 + 8|0))>>2] = $133;
   return;
  } else {
   $psize$1 = $133;
  }
 } else {
  $227 = $112 & -2;
  HEAP32[$111>>2] = $227;
  $228 = $psize$0 | 1;
  $229 = (($p$0) + 4|0);
  HEAP32[$229>>2] = $228;
  $230 = (($p$0) + ($psize$0)|0);
  HEAP32[$230>>2] = $psize$0;
  $psize$1 = $psize$0;
 }
 $231 = $psize$1 >>> 3;
 $232 = ($psize$1>>>0)<(256);
 if ($232) {
  $233 = $231 << 1;
  $234 = ((10744 + ($233<<2)|0) + 40|0);
  $235 = HEAP32[10744>>2]|0;
  $236 = 1 << $231;
  $237 = $235 & $236;
  $238 = ($237|0)==(0);
  if ($238) {
   $239 = $235 | $236;
   HEAP32[10744>>2] = $239;
   $$sum10$pre = (($233) + 2)|0;
   $$pre = ((10744 + ($$sum10$pre<<2)|0) + 40|0);
   $$pre$phiZ2D = $$pre;$F16$0 = $234;
  } else {
   $$sum11 = (($233) + 2)|0;
   $240 = ((10744 + ($$sum11<<2)|0) + 40|0);
   $241 = HEAP32[$240>>2]|0;
   $242 = HEAP32[((10744 + 16|0))>>2]|0;
   $243 = ($241>>>0)<($242>>>0);
   if ($243) {
    _abort();
    // unreachable;
   } else {
    $$pre$phiZ2D = $240;$F16$0 = $241;
   }
  }
  HEAP32[$$pre$phiZ2D>>2] = $p$0;
  $244 = (($F16$0) + 12|0);
  HEAP32[$244>>2] = $p$0;
  $245 = (($p$0) + 8|0);
  HEAP32[$245>>2] = $F16$0;
  $246 = (($p$0) + 12|0);
  HEAP32[$246>>2] = $234;
  return;
 }
 $247 = $psize$1 >>> 8;
 $248 = ($247|0)==(0);
 if ($248) {
  $I18$0 = 0;
 } else {
  $249 = ($psize$1>>>0)>(16777215);
  if ($249) {
   $I18$0 = 31;
  } else {
   $250 = (($247) + 1048320)|0;
   $251 = $250 >>> 16;
   $252 = $251 & 8;
   $253 = $247 << $252;
   $254 = (($253) + 520192)|0;
   $255 = $254 >>> 16;
   $256 = $255 & 4;
   $257 = $256 | $252;
   $258 = $253 << $256;
   $259 = (($258) + 245760)|0;
   $260 = $259 >>> 16;
   $261 = $260 & 2;
   $262 = $257 | $261;
   $263 = (14 - ($262))|0;
   $264 = $258 << $261;
   $265 = $264 >>> 15;
   $266 = (($263) + ($265))|0;
   $267 = $266 << 1;
   $268 = (($266) + 7)|0;
   $269 = $psize$1 >>> $268;
   $270 = $269 & 1;
   $271 = $270 | $267;
   $I18$0 = $271;
  }
 }
 $272 = ((10744 + ($I18$0<<2)|0) + 304|0);
 $273 = (($p$0) + 28|0);
 HEAP32[$273>>2] = $I18$0;
 $274 = (($p$0) + 16|0);
 $275 = (($p$0) + 20|0);
 HEAP32[$275>>2] = 0;
 HEAP32[$274>>2] = 0;
 $276 = HEAP32[((10744 + 4|0))>>2]|0;
 $277 = 1 << $I18$0;
 $278 = $276 & $277;
 $279 = ($278|0)==(0);
 L205: do {
  if ($279) {
   $280 = $276 | $277;
   HEAP32[((10744 + 4|0))>>2] = $280;
   HEAP32[$272>>2] = $p$0;
   $281 = (($p$0) + 24|0);
   HEAP32[$281>>2] = $272;
   $282 = (($p$0) + 12|0);
   HEAP32[$282>>2] = $p$0;
   $283 = (($p$0) + 8|0);
   HEAP32[$283>>2] = $p$0;
  } else {
   $284 = HEAP32[$272>>2]|0;
   $285 = ($I18$0|0)==(31);
   if ($285) {
    $293 = 0;
   } else {
    $286 = $I18$0 >>> 1;
    $287 = (25 - ($286))|0;
    $293 = $287;
   }
   $288 = (($284) + 4|0);
   $289 = HEAP32[$288>>2]|0;
   $290 = $289 & -8;
   $291 = ($290|0)==($psize$1|0);
   do {
    if ($291) {
     $T$0$lcssa = $284;
    } else {
     $292 = $psize$1 << $293;
     $K19$054 = $292;$T$053 = $284;
     while(1) {
      $300 = $K19$054 >>> 31;
      $301 = ((($T$053) + ($300<<2)|0) + 16|0);
      $296 = HEAP32[$301>>2]|0;
      $302 = ($296|0)==(0|0);
      if ($302) {
       $$lcssa = $301;$T$053$lcssa = $T$053;
       break;
      }
      $294 = $K19$054 << 1;
      $295 = (($296) + 4|0);
      $297 = HEAP32[$295>>2]|0;
      $298 = $297 & -8;
      $299 = ($298|0)==($psize$1|0);
      if ($299) {
       $$lcssa71 = $296;
       label = 137;
       break;
      } else {
       $K19$054 = $294;$T$053 = $296;
      }
     }
     if ((label|0) == 137) {
      $T$0$lcssa = $$lcssa71;
      break;
     }
     $303 = HEAP32[((10744 + 16|0))>>2]|0;
     $304 = ($$lcssa>>>0)<($303>>>0);
     if ($304) {
      _abort();
      // unreachable;
     } else {
      HEAP32[$$lcssa>>2] = $p$0;
      $305 = (($p$0) + 24|0);
      HEAP32[$305>>2] = $T$053$lcssa;
      $306 = (($p$0) + 12|0);
      HEAP32[$306>>2] = $p$0;
      $307 = (($p$0) + 8|0);
      HEAP32[$307>>2] = $p$0;
      break L205;
     }
    }
   } while(0);
   $308 = (($T$0$lcssa) + 8|0);
   $309 = HEAP32[$308>>2]|0;
   $310 = HEAP32[((10744 + 16|0))>>2]|0;
   $311 = ($T$0$lcssa>>>0)>=($310>>>0);
   $312 = ($309>>>0)>=($310>>>0);
   $or$cond = $311 & $312;
   if ($or$cond) {
    $313 = (($309) + 12|0);
    HEAP32[$313>>2] = $p$0;
    HEAP32[$308>>2] = $p$0;
    $314 = (($p$0) + 8|0);
    HEAP32[$314>>2] = $309;
    $315 = (($p$0) + 12|0);
    HEAP32[$315>>2] = $T$0$lcssa;
    $316 = (($p$0) + 24|0);
    HEAP32[$316>>2] = 0;
    break;
   } else {
    _abort();
    // unreachable;
   }
  }
 } while(0);
 $317 = HEAP32[((10744 + 32|0))>>2]|0;
 $318 = (($317) + -1)|0;
 HEAP32[((10744 + 32|0))>>2] = $318;
 $319 = ($318|0)==(0);
 if (!($319)) {
  return;
 }
 $sp$0$in$i = ((10744 + 456|0));
 while(1) {
  $sp$0$i = HEAP32[$sp$0$in$i>>2]|0;
  $320 = ($sp$0$i|0)==(0|0);
  $321 = (($sp$0$i) + 8|0);
  if ($320) {
   break;
  } else {
   $sp$0$in$i = $321;
  }
 }
 HEAP32[((10744 + 32|0))>>2] = -1;
 return;
}
function _realloc($oldmem,$bytes) {
 $oldmem = $oldmem|0;
 $bytes = $bytes|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, $mem$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($oldmem|0)==(0|0);
 if ($0) {
  $1 = (_malloc($bytes)|0);
  $mem$0 = $1;
  return ($mem$0|0);
 }
 $2 = ($bytes>>>0)>(4294967231);
 if ($2) {
  $3 = (___errno_location()|0);
  HEAP32[$3>>2] = 12;
  $mem$0 = 0;
  return ($mem$0|0);
 }
 $4 = ($bytes>>>0)<(11);
 if ($4) {
  $8 = 16;
 } else {
  $5 = (($bytes) + 11)|0;
  $6 = $5 & -8;
  $8 = $6;
 }
 $7 = (($oldmem) + -8|0);
 $9 = (_try_realloc_chunk($7,$8)|0);
 $10 = ($9|0)==(0|0);
 if (!($10)) {
  $11 = (($9) + 8|0);
  $mem$0 = $11;
  return ($mem$0|0);
 }
 $12 = (_malloc($bytes)|0);
 $13 = ($12|0)==(0|0);
 if ($13) {
  $mem$0 = 0;
  return ($mem$0|0);
 }
 $14 = (($oldmem) + -4|0);
 $15 = HEAP32[$14>>2]|0;
 $16 = $15 & -8;
 $17 = $15 & 3;
 $18 = ($17|0)==(0);
 $19 = $18 ? 8 : 4;
 $20 = (($16) - ($19))|0;
 $21 = ($20>>>0)<($bytes>>>0);
 $22 = $21 ? $20 : $bytes;
 _memcpy(($12|0),($oldmem|0),($22|0))|0;
 _free($oldmem);
 $mem$0 = $12;
 return ($mem$0|0);
}
function _isspace($c) {
 $c = $c|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($c|0)==(32);
 if ($0) {
  $4 = 1;
 } else {
  $1 = (($c) + -9)|0;
  $2 = ($1>>>0)<(5);
  $4 = $2;
 }
 $3 = $4&1;
 return ($3|0);
}
function ___intscan($f,$base,$pok,$0,$1) {
 $f = $f|0;
 $base = $base|0;
 $pok = $pok|0;
 $0 = $0|0;
 $1 = $1|0;
 var $$ = 0, $$1 = 0, $$124 = 0, $$125 = 0, $$22 = 0, $$23 = 0, $$base21 = 0, $$lcssa = 0, $$lcssa117 = 0, $$lcssa118 = 0, $$lcssa119 = 0, $$lcssa120 = 0, $$lcssa121 = 0, $$lcssa122 = 0, $$sum = 0, $$sum14 = 0, $$sum1447 = 0, $$sum15 = 0, $$sum16 = 0, $$sum17 = 0;
 var $$sum18 = 0, $$sum1867 = 0, $$sum19 = 0, $$sum20 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0;
 var $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0;
 var $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0;
 var $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0;
 var $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0;
 var $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0;
 var $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0;
 var $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0;
 var $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0;
 var $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0;
 var $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $3 = 0, $30 = 0;
 var $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0;
 var $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0;
 var $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $c$0 = 0, $c$1 = 0, $c$126 = 0, $c$2$be = 0, $c$2$be$lcssa = 0;
 var $c$2$lcssa = 0, $c$3$be = 0, $c$3$lcssa = 0, $c$373 = 0, $c$4$be = 0, $c$4$be$lcssa = 0, $c$4$lcssa = 0, $c$5$be = 0, $c$5$be$lcssa = 0, $c$6$be = 0, $c$6$be$lcssa = 0, $c$6$lcssa = 0, $c$7$be = 0, $c$755 = 0, $c$8 = 0, $c$8$ph = 0, $c$9$be = 0, $neg$0 = 0, $or$cond = 0, $or$cond12 = 0;
 var $or$cond42 = 0, $or$cond5 = 0, $or$cond7 = 0, $x$084 = 0, $x$148 = 0, $x$268 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($base>>>0)>(36);
 if ($2) {
  $5 = (___errno_location()|0);
  HEAP32[$5>>2] = 22;
  $279 = 0;$280 = 0;
  tempRet0 = $279;
  return ($280|0);
 }
 $3 = (($f) + 4|0);
 $4 = (($f) + 100|0);
 while(1) {
  $6 = HEAP32[$3>>2]|0;
  $7 = HEAP32[$4>>2]|0;
  $8 = ($6>>>0)<($7>>>0);
  if ($8) {
   $9 = (($6) + 1|0);
   HEAP32[$3>>2] = $9;
   $10 = HEAP8[$6>>0]|0;
   $11 = $10&255;
   $13 = $11;
  } else {
   $12 = (___shgetc($f)|0);
   $13 = $12;
  }
  $14 = (_isspace($13)|0);
  $15 = ($14|0)==(0);
  if ($15) {
   $$lcssa122 = $13;
   break;
  }
 }
 $16 = ($$lcssa122|0)==(45);
 do {
  if ((($$lcssa122|0) == 43) | (($$lcssa122|0) == 45)) {
   $17 = $16 << 31 >> 31;
   $18 = HEAP32[$3>>2]|0;
   $19 = HEAP32[$4>>2]|0;
   $20 = ($18>>>0)<($19>>>0);
   if ($20) {
    $21 = (($18) + 1|0);
    HEAP32[$3>>2] = $21;
    $22 = HEAP8[$18>>0]|0;
    $23 = $22&255;
    $c$0 = $23;$neg$0 = $17;
    break;
   } else {
    $24 = (___shgetc($f)|0);
    $c$0 = $24;$neg$0 = $17;
    break;
   }
  } else {
   $c$0 = $$lcssa122;$neg$0 = 0;
  }
 } while(0);
 $25 = ($base|0)==(0);
 $26 = $base & -17;
 $27 = ($26|0)==(0);
 $28 = ($c$0|0)==(48);
 $or$cond5 = $27 & $28;
 do {
  if ($or$cond5) {
   $29 = HEAP32[$3>>2]|0;
   $30 = HEAP32[$4>>2]|0;
   $31 = ($29>>>0)<($30>>>0);
   if ($31) {
    $32 = (($29) + 1|0);
    HEAP32[$3>>2] = $32;
    $33 = HEAP8[$29>>0]|0;
    $34 = $33&255;
    $37 = $34;
   } else {
    $35 = (___shgetc($f)|0);
    $37 = $35;
   }
   $36 = $37 | 32;
   $38 = ($36|0)==(120);
   if (!($38)) {
    if ($25) {
     $$125 = 8;$c$126 = $37;
     label = 48;
     break;
    } else {
     $$1 = $base;$c$1 = $37;
     label = 32;
     break;
    }
   }
   $39 = HEAP32[$3>>2]|0;
   $40 = HEAP32[$4>>2]|0;
   $41 = ($39>>>0)<($40>>>0);
   if ($41) {
    $42 = (($39) + 1|0);
    HEAP32[$3>>2] = $42;
    $43 = HEAP8[$39>>0]|0;
    $44 = $43&255;
    $46 = $44;
   } else {
    $45 = (___shgetc($f)|0);
    $46 = $45;
   }
   $$sum20 = (($46) + 1)|0;
   $47 = (11240 + ($$sum20)|0);
   $48 = HEAP8[$47>>0]|0;
   $49 = ($48&255)>(15);
   if ($49) {
    $50 = HEAP32[$4>>2]|0;
    $51 = ($50|0)==(0|0);
    if (!($51)) {
     $52 = HEAP32[$3>>2]|0;
     $53 = (($52) + -1|0);
     HEAP32[$3>>2] = $53;
    }
    $54 = ($pok|0)==(0);
    if ($54) {
     ___shlim($f,0);
     $279 = 0;$280 = 0;
     tempRet0 = $279;
     return ($280|0);
    }
    if ($51) {
     $279 = 0;$280 = 0;
     tempRet0 = $279;
     return ($280|0);
    }
    $55 = HEAP32[$3>>2]|0;
    $56 = (($55) + -1|0);
    HEAP32[$3>>2] = $56;
    $279 = 0;$280 = 0;
    tempRet0 = $279;
    return ($280|0);
   } else {
    $$125 = 16;$c$126 = $46;
    label = 48;
   }
  } else {
   $$base21 = $25 ? 10 : $base;
   $$sum = (($c$0) + 1)|0;
   $57 = (11240 + ($$sum)|0);
   $58 = HEAP8[$57>>0]|0;
   $59 = $58&255;
   $60 = ($59>>>0)<($$base21>>>0);
   if ($60) {
    $$1 = $$base21;$c$1 = $c$0;
    label = 32;
   } else {
    $61 = HEAP32[$4>>2]|0;
    $62 = ($61|0)==(0|0);
    if (!($62)) {
     $63 = HEAP32[$3>>2]|0;
     $64 = (($63) + -1|0);
     HEAP32[$3>>2] = $64;
    }
    ___shlim($f,0);
    $65 = (___errno_location()|0);
    HEAP32[$65>>2] = 22;
    $279 = 0;$280 = 0;
    tempRet0 = $279;
    return ($280|0);
   }
  }
 } while(0);
 if ((label|0) == 32) {
  $66 = ($$1|0)==(10);
  if ($66) {
   $67 = (($c$1) + -48)|0;
   $68 = ($67>>>0)<(10);
   if ($68) {
    $71 = $67;$x$084 = 0;
    while(1) {
     $69 = ($x$084*10)|0;
     $70 = (($69) + ($71))|0;
     $72 = HEAP32[$3>>2]|0;
     $73 = HEAP32[$4>>2]|0;
     $74 = ($72>>>0)<($73>>>0);
     if ($74) {
      $75 = (($72) + 1|0);
      HEAP32[$3>>2] = $75;
      $76 = HEAP8[$72>>0]|0;
      $77 = $76&255;
      $c$2$be = $77;
     } else {
      $78 = (___shgetc($f)|0);
      $c$2$be = $78;
     }
     $79 = (($c$2$be) + -48)|0;
     $80 = ($79>>>0)<(10);
     $81 = ($70>>>0)<(429496729);
     $$ = $80 & $81;
     if ($$) {
      $71 = $79;$x$084 = $70;
     } else {
      $$lcssa121 = $70;$c$2$be$lcssa = $c$2$be;
      break;
     }
    }
    $281 = $$lcssa121;$282 = 0;$c$2$lcssa = $c$2$be$lcssa;
   } else {
    $281 = 0;$282 = 0;$c$2$lcssa = $c$1;
   }
   $82 = (($c$2$lcssa) + -48)|0;
   $83 = ($82>>>0)<(10);
   if ($83) {
    $84 = $281;$85 = $282;$88 = $82;$c$373 = $c$2$lcssa;
    while(1) {
     $86 = (___muldi3(($84|0),($85|0),10,0)|0);
     $87 = tempRet0;
     $89 = ($88|0)<(0);
     $90 = $89 << 31 >> 31;
     $91 = $88 ^ -1;
     $92 = $90 ^ -1;
     $93 = ($87>>>0)>($92>>>0);
     $94 = ($86>>>0)>($91>>>0);
     $95 = ($87|0)==($92|0);
     $96 = $95 & $94;
     $97 = $93 | $96;
     if ($97) {
      $$lcssa = $88;$283 = $84;$284 = $85;$c$3$lcssa = $c$373;
      break;
     }
     $98 = (_i64Add(($86|0),($87|0),($88|0),($90|0))|0);
     $99 = tempRet0;
     $100 = HEAP32[$3>>2]|0;
     $101 = HEAP32[$4>>2]|0;
     $102 = ($100>>>0)<($101>>>0);
     if ($102) {
      $103 = (($100) + 1|0);
      HEAP32[$3>>2] = $103;
      $104 = HEAP8[$100>>0]|0;
      $105 = $104&255;
      $c$3$be = $105;
     } else {
      $106 = (___shgetc($f)|0);
      $c$3$be = $106;
     }
     $107 = (($c$3$be) + -48)|0;
     $108 = ($107>>>0)<(10);
     $109 = ($99>>>0)<(429496729);
     $110 = ($98>>>0)<(2576980378);
     $111 = ($99|0)==(429496729);
     $112 = $111 & $110;
     $113 = $109 | $112;
     $or$cond7 = $108 & $113;
     if ($or$cond7) {
      $84 = $98;$85 = $99;$88 = $107;$c$373 = $c$3$be;
     } else {
      $$lcssa = $107;$283 = $98;$284 = $99;$c$3$lcssa = $c$3$be;
      break;
     }
    }
    $114 = ($$lcssa>>>0)>(9);
    if ($114) {
     $252 = $284;$254 = $283;
    } else {
     $$124 = 10;$285 = $283;$286 = $284;$c$8 = $c$3$lcssa;
     label = 79;
    }
   } else {
    $252 = $282;$254 = $281;
   }
  } else {
   $$125 = $$1;$c$126 = $c$1;
   label = 48;
  }
 }
 do {
  if ((label|0) == 48) {
   $115 = (($$125) + -1)|0;
   $116 = $115 & $$125;
   $117 = ($116|0)==(0);
   if ($117) {
    $122 = ($$125*23)|0;
    $123 = $122 >>> 5;
    $124 = $123 & 7;
    $125 = (11504 + ($124)|0);
    $126 = HEAP8[$125>>0]|0;
    $127 = $126 << 24 >> 24;
    $$sum1447 = (($c$126) + 1)|0;
    $128 = (11240 + ($$sum1447)|0);
    $129 = HEAP8[$128>>0]|0;
    $130 = $129&255;
    $131 = ($130>>>0)<($$125>>>0);
    if ($131) {
     $134 = $130;$x$148 = 0;
     while(1) {
      $132 = $x$148 << $127;
      $133 = $134 | $132;
      $135 = HEAP32[$3>>2]|0;
      $136 = HEAP32[$4>>2]|0;
      $137 = ($135>>>0)<($136>>>0);
      if ($137) {
       $138 = (($135) + 1|0);
       HEAP32[$3>>2] = $138;
       $139 = HEAP8[$135>>0]|0;
       $140 = $139&255;
       $c$4$be = $140;
      } else {
       $141 = (___shgetc($f)|0);
       $c$4$be = $141;
      }
      $$sum14 = (($c$4$be) + 1)|0;
      $142 = (11240 + ($$sum14)|0);
      $143 = HEAP8[$142>>0]|0;
      $144 = $143&255;
      $145 = ($144>>>0)<($$125>>>0);
      $146 = ($133>>>0)<(134217728);
      $$22 = $146 & $145;
      if ($$22) {
       $134 = $144;$x$148 = $133;
      } else {
       $$lcssa117 = $133;$$lcssa118 = $143;$c$4$be$lcssa = $c$4$be;
       break;
      }
     }
     $150 = $$lcssa118;$152 = 0;$154 = $$lcssa117;$c$4$lcssa = $c$4$be$lcssa;
    } else {
     $150 = $129;$152 = 0;$154 = 0;$c$4$lcssa = $c$126;
    }
    $147 = (_bitshift64Lshr(-1,-1,($127|0))|0);
    $148 = tempRet0;
    $149 = $150&255;
    $151 = ($149>>>0)>=($$125>>>0);
    $153 = ($152>>>0)>($148>>>0);
    $155 = ($154>>>0)>($147>>>0);
    $156 = ($152|0)==($148|0);
    $157 = $156 & $155;
    $158 = $153 | $157;
    $or$cond42 = $151 | $158;
    if ($or$cond42) {
     $$124 = $$125;$285 = $154;$286 = $152;$c$8 = $c$4$lcssa;
     label = 79;
     break;
    }
    $159 = $154;$160 = $152;$164 = $150;
    while(1) {
     $161 = (_bitshift64Shl(($159|0),($160|0),($127|0))|0);
     $162 = tempRet0;
     $163 = $164&255;
     $165 = $163 | $161;
     $166 = HEAP32[$3>>2]|0;
     $167 = HEAP32[$4>>2]|0;
     $168 = ($166>>>0)<($167>>>0);
     if ($168) {
      $169 = (($166) + 1|0);
      HEAP32[$3>>2] = $169;
      $170 = HEAP8[$166>>0]|0;
      $171 = $170&255;
      $c$5$be = $171;
     } else {
      $172 = (___shgetc($f)|0);
      $c$5$be = $172;
     }
     $$sum15 = (($c$5$be) + 1)|0;
     $173 = (11240 + ($$sum15)|0);
     $174 = HEAP8[$173>>0]|0;
     $175 = $174&255;
     $176 = ($175>>>0)>=($$125>>>0);
     $177 = ($162>>>0)>($148>>>0);
     $178 = ($165>>>0)>($147>>>0);
     $179 = ($162|0)==($148|0);
     $180 = $179 & $178;
     $181 = $177 | $180;
     $or$cond = $176 | $181;
     if ($or$cond) {
      $289 = $165;$290 = $162;$c$5$be$lcssa = $c$5$be;
      break;
     } else {
      $159 = $165;$160 = $162;$164 = $174;
     }
    }
    $$124 = $$125;$285 = $289;$286 = $290;$c$8 = $c$5$be$lcssa;
    label = 79;
    break;
   }
   $$sum1867 = (($c$126) + 1)|0;
   $118 = (11240 + ($$sum1867)|0);
   $119 = HEAP8[$118>>0]|0;
   $120 = $119&255;
   $121 = ($120>>>0)<($$125>>>0);
   if ($121) {
    $184 = $120;$x$268 = 0;
    while(1) {
     $182 = Math_imul($x$268, $$125)|0;
     $183 = (($184) + ($182))|0;
     $185 = HEAP32[$3>>2]|0;
     $186 = HEAP32[$4>>2]|0;
     $187 = ($185>>>0)<($186>>>0);
     if ($187) {
      $188 = (($185) + 1|0);
      HEAP32[$3>>2] = $188;
      $189 = HEAP8[$185>>0]|0;
      $190 = $189&255;
      $c$6$be = $190;
     } else {
      $191 = (___shgetc($f)|0);
      $c$6$be = $191;
     }
     $$sum18 = (($c$6$be) + 1)|0;
     $192 = (11240 + ($$sum18)|0);
     $193 = HEAP8[$192>>0]|0;
     $194 = $193&255;
     $195 = ($194>>>0)<($$125>>>0);
     $196 = ($183>>>0)<(119304647);
     $$23 = $196 & $195;
     if ($$23) {
      $184 = $194;$x$268 = $183;
     } else {
      $$lcssa119 = $183;$$lcssa120 = $193;$c$6$be$lcssa = $c$6$be;
      break;
     }
    }
    $198 = $$lcssa120;$287 = $$lcssa119;$288 = 0;$c$6$lcssa = $c$6$be$lcssa;
   } else {
    $198 = $119;$287 = 0;$288 = 0;$c$6$lcssa = $c$126;
   }
   $197 = $198&255;
   $199 = ($197>>>0)<($$125>>>0);
   if ($199) {
    $200 = (___udivdi3(-1,-1,($$125|0),0)|0);
    $201 = tempRet0;
    $202 = $288;$204 = $287;$212 = $198;$c$755 = $c$6$lcssa;
    while(1) {
     $203 = ($202>>>0)>($201>>>0);
     $205 = ($204>>>0)>($200>>>0);
     $206 = ($202|0)==($201|0);
     $207 = $206 & $205;
     $208 = $203 | $207;
     if ($208) {
      $291 = $204;$292 = $202;$c$8$ph = $c$755;
      break;
     }
     $209 = (___muldi3(($204|0),($202|0),($$125|0),0)|0);
     $210 = tempRet0;
     $211 = $212&255;
     $213 = $211 ^ -1;
     $214 = ($210>>>0)>(4294967295);
     $215 = ($209>>>0)>($213>>>0);
     $216 = ($210|0)==(-1);
     $217 = $216 & $215;
     $218 = $214 | $217;
     if ($218) {
      $291 = $204;$292 = $202;$c$8$ph = $c$755;
      break;
     }
     $219 = (_i64Add(($211|0),0,($209|0),($210|0))|0);
     $220 = tempRet0;
     $221 = HEAP32[$3>>2]|0;
     $222 = HEAP32[$4>>2]|0;
     $223 = ($221>>>0)<($222>>>0);
     if ($223) {
      $224 = (($221) + 1|0);
      HEAP32[$3>>2] = $224;
      $225 = HEAP8[$221>>0]|0;
      $226 = $225&255;
      $c$7$be = $226;
     } else {
      $227 = (___shgetc($f)|0);
      $c$7$be = $227;
     }
     $$sum19 = (($c$7$be) + 1)|0;
     $228 = (11240 + ($$sum19)|0);
     $229 = HEAP8[$228>>0]|0;
     $230 = $229&255;
     $231 = ($230>>>0)<($$125>>>0);
     if ($231) {
      $202 = $220;$204 = $219;$212 = $229;$c$755 = $c$7$be;
     } else {
      $291 = $219;$292 = $220;$c$8$ph = $c$7$be;
      break;
     }
    }
    $$124 = $$125;$285 = $291;$286 = $292;$c$8 = $c$8$ph;
    label = 79;
   } else {
    $$124 = $$125;$285 = $287;$286 = $288;$c$8 = $c$6$lcssa;
    label = 79;
   }
  }
 } while(0);
 if ((label|0) == 79) {
  $$sum16 = (($c$8) + 1)|0;
  $232 = (11240 + ($$sum16)|0);
  $233 = HEAP8[$232>>0]|0;
  $234 = $233&255;
  $235 = ($234>>>0)<($$124>>>0);
  if ($235) {
   while(1) {
    $236 = HEAP32[$3>>2]|0;
    $237 = HEAP32[$4>>2]|0;
    $238 = ($236>>>0)<($237>>>0);
    if ($238) {
     $239 = (($236) + 1|0);
     HEAP32[$3>>2] = $239;
     $240 = HEAP8[$236>>0]|0;
     $241 = $240&255;
     $c$9$be = $241;
    } else {
     $242 = (___shgetc($f)|0);
     $c$9$be = $242;
    }
    $$sum17 = (($c$9$be) + 1)|0;
    $243 = (11240 + ($$sum17)|0);
    $244 = HEAP8[$243>>0]|0;
    $245 = $244&255;
    $246 = ($245>>>0)<($$124>>>0);
    if (!($246)) {
     break;
    }
   }
   $247 = (___errno_location()|0);
   HEAP32[$247>>2] = 34;
   $252 = $1;$254 = $0;
  } else {
   $252 = $286;$254 = $285;
  }
 }
 $248 = HEAP32[$4>>2]|0;
 $249 = ($248|0)==(0|0);
 if (!($249)) {
  $250 = HEAP32[$3>>2]|0;
  $251 = (($250) + -1|0);
  HEAP32[$3>>2] = $251;
 }
 $253 = ($252>>>0)<($1>>>0);
 $255 = ($254>>>0)<($0>>>0);
 $256 = ($252|0)==($1|0);
 $257 = $256 & $255;
 $258 = $253 | $257;
 if (!($258)) {
  $259 = $0 & 1;
  $260 = ($259|0)!=(0);
  $261 = (0)!=(0);
  $262 = $260 | $261;
  $263 = ($neg$0|0)!=(0);
  $or$cond12 = $262 | $263;
  if (!($or$cond12)) {
   $264 = (___errno_location()|0);
   HEAP32[$264>>2] = 34;
   $265 = (_i64Add(($0|0),($1|0),-1,-1)|0);
   $266 = tempRet0;
   $279 = $266;$280 = $265;
   tempRet0 = $279;
   return ($280|0);
  }
  $267 = ($252>>>0)>($1>>>0);
  $268 = ($254>>>0)>($0>>>0);
  $269 = ($252|0)==($1|0);
  $270 = $269 & $268;
  $271 = $267 | $270;
  if ($271) {
   $272 = (___errno_location()|0);
   HEAP32[$272>>2] = 34;
   $279 = $1;$280 = $0;
   tempRet0 = $279;
   return ($280|0);
  }
 }
 $273 = ($neg$0|0)<(0);
 $274 = $273 << 31 >> 31;
 $275 = $254 ^ $neg$0;
 $276 = $252 ^ $274;
 $277 = (_i64Subtract(($275|0),($276|0),($neg$0|0),($274|0))|0);
 $278 = tempRet0;
 $279 = $278;$280 = $277;
 tempRet0 = $279;
 return ($280|0);
}
function ___shlim($f,$lim) {
 $f = $f|0;
 $lim = $lim|0;
 var $$sink = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($f) + 104|0);
 HEAP32[$0>>2] = $lim;
 $1 = (($f) + 8|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (($f) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = $2;
 $6 = $4;
 $7 = (($5) - ($6))|0;
 $8 = (($f) + 108|0);
 HEAP32[$8>>2] = $7;
 $9 = ($lim|0)!=(0);
 $10 = ($7|0)>($lim|0);
 $or$cond = $9 & $10;
 if (!($or$cond)) {
  $$sink = $2;
  $12 = (($f) + 100|0);
  HEAP32[$12>>2] = $$sink;
  return;
 }
 $11 = (($4) + ($lim)|0);
 $$sink = $11;
 $12 = (($f) + 100|0);
 HEAP32[$12>>2] = $$sink;
 return;
}
function ___shgetc($f) {
 $f = $f|0;
 var $$0 = 0, $$phi$trans$insert = 0, $$phi$trans$insert2 = 0, $$pre = 0, $$pre3 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($f) + 104|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)==(0);
 if ($2) {
  label = 3;
 } else {
  $3 = (($f) + 108|0);
  $4 = HEAP32[$3>>2]|0;
  $5 = ($4|0)<($1|0);
  if ($5) {
   label = 3;
  }
 }
 if ((label|0) == 3) {
  $6 = (___uflow($f)|0);
  $7 = ($6|0)<(0);
  if (!($7)) {
   $9 = HEAP32[$0>>2]|0;
   $10 = ($9|0)==(0);
   $$phi$trans$insert = (($f) + 8|0);
   $$pre = HEAP32[$$phi$trans$insert>>2]|0;
   if ($10) {
    label = 8;
   } else {
    $11 = (($f) + 4|0);
    $12 = HEAP32[$11>>2]|0;
    $13 = $$pre;
    $14 = $12;
    $15 = (($13) - ($14))|0;
    $16 = (($f) + 108|0);
    $17 = HEAP32[$16>>2]|0;
    $18 = (($9) - ($17))|0;
    $19 = (($18) + -1)|0;
    $20 = ($15|0)>($19|0);
    if ($20) {
     $21 = (($12) + ($19)|0);
     $22 = (($f) + 100|0);
     HEAP32[$22>>2] = $21;
    } else {
     label = 8;
    }
   }
   if ((label|0) == 8) {
    $23 = (($f) + 100|0);
    HEAP32[$23>>2] = $$pre;
   }
   $24 = ($$pre|0)==(0|0);
   $$phi$trans$insert2 = (($f) + 4|0);
   $$pre3 = HEAP32[$$phi$trans$insert2>>2]|0;
   if (!($24)) {
    $25 = $$pre;
    $26 = $$pre3;
    $27 = (($f) + 108|0);
    $28 = HEAP32[$27>>2]|0;
    $29 = (($25) + 1)|0;
    $30 = (($29) - ($26))|0;
    $31 = (($30) + ($28))|0;
    HEAP32[$27>>2] = $31;
   }
   $32 = (($$pre3) + -1|0);
   $33 = HEAP8[$32>>0]|0;
   $34 = $33&255;
   $35 = ($34|0)==($6|0);
   if ($35) {
    $$0 = $6;
    return ($$0|0);
   }
   $36 = $6&255;
   HEAP8[$32>>0] = $36;
   $$0 = $6;
   return ($$0|0);
  }
 }
 $8 = (($f) + 100|0);
 HEAP32[$8>>2] = 0;
 $$0 = -1;
 return ($$0|0);
}
function _scalbn($x,$n) {
 $x = +$x;
 $n = $n|0;
 var $$ = 0, $$0 = 0, $$1 = 0, $0 = 0, $1 = 0.0, $10 = 0, $11 = 0.0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0.0, $18 = 0.0, $2 = 0, $3 = 0, $4 = 0.0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0.0, $9 = 0, $y$0 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($n|0)>(1023);
 if ($0) {
  $1 = $x * 8.9884656743115795E+307;
  $2 = (($n) + -1023)|0;
  $3 = ($2|0)>(1023);
  if ($3) {
   $4 = $1 * 8.9884656743115795E+307;
   $5 = (($n) + -2046)|0;
   $6 = ($5|0)>(1023);
   $$ = $6 ? 1023 : $5;
   $$0 = $$;$y$0 = $4;
  } else {
   $$0 = $2;$y$0 = $1;
  }
 } else {
  $7 = ($n|0)<(-1022);
  if ($7) {
   $8 = $x * 2.2250738585072014E-308;
   $9 = (($n) + 1022)|0;
   $10 = ($9|0)<(-1022);
   if ($10) {
    $11 = $8 * 2.2250738585072014E-308;
    $12 = (($n) + 2044)|0;
    $13 = ($12|0)<(-1022);
    $$1 = $13 ? -1022 : $12;
    $$0 = $$1;$y$0 = $11;
   } else {
    $$0 = $9;$y$0 = $8;
   }
  } else {
   $$0 = $n;$y$0 = $x;
  }
 }
 $14 = (($$0) + 1023)|0;
 $15 = (_bitshift64Shl(($14|0),0,52)|0);
 $16 = tempRet0;
 HEAP32[tempDoublePtr>>2] = $15;HEAP32[tempDoublePtr+4>>2] = $16;$17 = +HEAPF64[tempDoublePtr>>3];
 $18 = $y$0 * $17;
 return (+$18);
}
function ___toread($f) {
 $f = $f|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($f) + 74|0);
 $1 = HEAP8[$0>>0]|0;
 $2 = $1 << 24 >> 24;
 $3 = (($2) + 255)|0;
 $4 = $3 | $2;
 $5 = $4&255;
 HEAP8[$0>>0] = $5;
 $6 = (($f) + 20|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = (($f) + 44|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ($7>>>0)>($9>>>0);
 if ($10) {
  $11 = (($f) + 36|0);
  $12 = HEAP32[$11>>2]|0;
  (FUNCTION_TABLE_iiii[$12 & 1]($f,0,0)|0);
 }
 $13 = (($f) + 16|0);
 HEAP32[$13>>2] = 0;
 $14 = (($f) + 28|0);
 HEAP32[$14>>2] = 0;
 HEAP32[$6>>2] = 0;
 $15 = HEAP32[$f>>2]|0;
 $16 = $15 & 20;
 $17 = ($16|0)==(0);
 if ($17) {
  $21 = HEAP32[$8>>2]|0;
  $22 = (($f) + 8|0);
  HEAP32[$22>>2] = $21;
  $23 = (($f) + 4|0);
  HEAP32[$23>>2] = $21;
  $$0 = 0;
  return ($$0|0);
 }
 $18 = $15 & 4;
 $19 = ($18|0)==(0);
 if ($19) {
  $$0 = -1;
  return ($$0|0);
 }
 $20 = $15 | 32;
 HEAP32[$f>>2] = $20;
 $$0 = -1;
 return ($$0|0);
}
function ___uflow($f) {
 $f = $f|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $c = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $c = sp;
 $0 = (($f) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)==(0|0);
 if ($2) {
  $3 = (___toread($f)|0);
  $4 = ($3|0)==(0);
  if ($4) {
   label = 3;
  } else {
   $$0 = -1;
  }
 } else {
  label = 3;
 }
 if ((label|0) == 3) {
  $5 = (($f) + 32|0);
  $6 = HEAP32[$5>>2]|0;
  $7 = (FUNCTION_TABLE_iiii[$6 & 1]($f,$c,1)|0);
  $8 = ($7|0)==(1);
  if ($8) {
   $9 = HEAP8[$c>>0]|0;
   $10 = $9&255;
   $$0 = $10;
  } else {
   $$0 = -1;
  }
 }
 STACKTOP = sp;return ($$0|0);
}
function _strtol($s,$p,$base) {
 $s = $s|0;
 $p = $p|0;
 $base = $base|0;
 var $$sink$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $f$i = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $f$i = sp;
 HEAP32[$f$i>>2] = 0;
 $0 = (($f$i) + 4|0);
 HEAP32[$0>>2] = $s;
 $1 = (($f$i) + 44|0);
 HEAP32[$1>>2] = $s;
 $2 = ($s|0)<(0|0);
 $3 = (($s) + 2147483647|0);
 $$sink$i = $2 ? (-1) : $3;
 $4 = (($f$i) + 8|0);
 HEAP32[$4>>2] = $$sink$i;
 $5 = (($f$i) + 76|0);
 HEAP32[$5>>2] = -1;
 ___shlim($f$i,0);
 $6 = (___intscan($f$i,$base,1,-2147483648,0)|0);
 $7 = tempRet0;
 $8 = ($p|0)==(0|0);
 if ($8) {
  STACKTOP = sp;return ($6|0);
 }
 $9 = (($f$i) + 108|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = HEAP32[$0>>2]|0;
 $12 = HEAP32[$4>>2]|0;
 $13 = $11;
 $14 = $12;
 $15 = (($13) + ($10))|0;
 $16 = (($15) - ($14))|0;
 $17 = (($s) + ($16)|0);
 HEAP32[$p>>2] = $17;
 STACKTOP = sp;return ($6|0);
}
function _strcmp($l,$r) {
 $l = $l|0;
 $r = $r|0;
 var $$014 = 0, $$05 = 0, $$lcssa = 0, $$lcssa11 = 0, $$lcssa12 = 0, $$lcssa2 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0;
 var $or$cond3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$l>>0]|0;
 $1 = HEAP8[$r>>0]|0;
 $2 = ($0<<24>>24)!=($1<<24>>24);
 $3 = ($0<<24>>24)==(0);
 $or$cond3 = $3 | $2;
 if ($or$cond3) {
  $$lcssa = $0;$$lcssa2 = $1;
 } else {
  $$014 = $l;$$05 = $r;
  while(1) {
   $4 = (($$014) + 1|0);
   $5 = (($$05) + 1|0);
   $6 = HEAP8[$4>>0]|0;
   $7 = HEAP8[$5>>0]|0;
   $8 = ($6<<24>>24)!=($7<<24>>24);
   $9 = ($6<<24>>24)==(0);
   $or$cond = $9 | $8;
   if ($or$cond) {
    $$lcssa11 = $6;$$lcssa12 = $7;
    break;
   } else {
    $$014 = $4;$$05 = $5;
   }
  }
  $$lcssa = $$lcssa11;$$lcssa2 = $$lcssa12;
 }
 $10 = $$lcssa&255;
 $11 = $$lcssa2&255;
 $12 = (($10) - ($11))|0;
 return ($12|0);
}
function _strncmp($_l,$_r,$n) {
 $_l = $_l|0;
 $_r = $_r|0;
 $n = $n|0;
 var $$03 = 0, $$08 = 0, $$08$in = 0, $$ph = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $l$06 = 0, $or$cond = 0, $or$cond4 = 0, $r$0$lcssa = 0, $r$0$lcssa$ph = 0, $r$07 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($n|0)==(0);
 if ($0) {
  $$03 = 0;
  return ($$03|0);
 }
 $1 = HEAP8[$_l>>0]|0;
 $2 = ($1<<24>>24)==(0);
 if ($2) {
  $13 = 0;$r$0$lcssa = $_r;
 } else {
  $$08$in = $n;$6 = $1;$l$06 = $_l;$r$07 = $_r;
  while(1) {
   $$08 = (($$08$in) + -1)|0;
   $3 = HEAP8[$r$07>>0]|0;
   $4 = ($3<<24>>24)!=(0);
   $5 = ($$08|0)!=(0);
   $or$cond = $5 & $4;
   $7 = ($6<<24>>24)==($3<<24>>24);
   $or$cond4 = $7 & $or$cond;
   if (!($or$cond4)) {
    $$ph = $6;$r$0$lcssa$ph = $r$07;
    break;
   }
   $8 = (($l$06) + 1|0);
   $9 = (($r$07) + 1|0);
   $10 = HEAP8[$8>>0]|0;
   $11 = ($10<<24>>24)==(0);
   if ($11) {
    $$ph = 0;$r$0$lcssa$ph = $9;
    break;
   } else {
    $$08$in = $$08;$6 = $10;$l$06 = $8;$r$07 = $9;
   }
  }
  $13 = $$ph;$r$0$lcssa = $r$0$lcssa$ph;
 }
 $12 = $13&255;
 $14 = HEAP8[$r$0$lcssa>>0]|0;
 $15 = $14&255;
 $16 = (($12) - ($15))|0;
 $$03 = $16;
 return ($$03|0);
}
function _try_realloc_chunk($p,$nb) {
 $p = $p|0;
 $nb = $nb|0;
 var $$pre = 0, $$pre$phiZ2D = 0, $$sum = 0, $$sum11 = 0, $$sum12 = 0, $$sum13 = 0, $$sum14 = 0, $$sum15 = 0, $$sum16 = 0, $$sum17 = 0, $$sum19 = 0, $$sum2 = 0, $$sum20 = 0, $$sum22 = 0, $$sum23 = 0, $$sum2728 = 0, $$sum3 = 0, $$sum4 = 0, $$sum5 = 0, $$sum78 = 0;
 var $$sum910 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0;
 var $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0;
 var $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0;
 var $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0;
 var $17 = 0, $170 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0;
 var $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0;
 var $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0;
 var $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $R$0 = 0, $R$0$be = 0, $R$0$lcssa = 0, $R$0$ph = 0, $R$1 = 0, $RP$0 = 0, $RP$0$be = 0, $RP$0$lcssa = 0;
 var $RP$0$ph = 0, $cond = 0, $newp$0 = 0, $notlhs = 0, $notrhs = 0, $or$cond$not = 0, $or$cond30 = 0, $storemerge = 0, $storemerge21 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($p) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = $1 & -8;
 $3 = (($p) + ($2)|0);
 $4 = HEAP32[((10744 + 16|0))>>2]|0;
 $5 = $1 & 3;
 $notlhs = ($p>>>0)>=($4>>>0);
 $notrhs = ($5|0)!=(1);
 $or$cond$not = $notrhs & $notlhs;
 $6 = ($p>>>0)<($3>>>0);
 $or$cond30 = $or$cond$not & $6;
 if (!($or$cond30)) {
  _abort();
  // unreachable;
 }
 $$sum2728 = $2 | 4;
 $7 = (($p) + ($$sum2728)|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = $8 & 1;
 $10 = ($9|0)==(0);
 if ($10) {
  _abort();
  // unreachable;
 }
 $11 = ($5|0)==(0);
 if ($11) {
  $12 = ($nb>>>0)<(256);
  if ($12) {
   $newp$0 = 0;
   return ($newp$0|0);
  }
  $13 = (($nb) + 4)|0;
  $14 = ($2>>>0)<($13>>>0);
  if (!($14)) {
   $15 = (($2) - ($nb))|0;
   $16 = HEAP32[((11216 + 8|0))>>2]|0;
   $17 = $16 << 1;
   $18 = ($15>>>0)>($17>>>0);
   if (!($18)) {
    $newp$0 = $p;
    return ($newp$0|0);
   }
  }
  $newp$0 = 0;
  return ($newp$0|0);
 }
 $19 = ($2>>>0)<($nb>>>0);
 if (!($19)) {
  $20 = (($2) - ($nb))|0;
  $21 = ($20>>>0)>(15);
  if (!($21)) {
   $newp$0 = $p;
   return ($newp$0|0);
  }
  $22 = (($p) + ($nb)|0);
  $23 = $1 & 1;
  $24 = $23 | $nb;
  $25 = $24 | 2;
  HEAP32[$0>>2] = $25;
  $$sum23 = (($nb) + 4)|0;
  $26 = (($p) + ($$sum23)|0);
  $27 = $20 | 3;
  HEAP32[$26>>2] = $27;
  $28 = HEAP32[$7>>2]|0;
  $29 = $28 | 1;
  HEAP32[$7>>2] = $29;
  _dispose_chunk($22,$20);
  $newp$0 = $p;
  return ($newp$0|0);
 }
 $30 = HEAP32[((10744 + 24|0))>>2]|0;
 $31 = ($3|0)==($30|0);
 if ($31) {
  $32 = HEAP32[((10744 + 12|0))>>2]|0;
  $33 = (($32) + ($2))|0;
  $34 = ($33>>>0)>($nb>>>0);
  if (!($34)) {
   $newp$0 = 0;
   return ($newp$0|0);
  }
  $35 = (($33) - ($nb))|0;
  $36 = (($p) + ($nb)|0);
  $37 = $1 & 1;
  $38 = $37 | $nb;
  $39 = $38 | 2;
  HEAP32[$0>>2] = $39;
  $$sum22 = (($nb) + 4)|0;
  $40 = (($p) + ($$sum22)|0);
  $41 = $35 | 1;
  HEAP32[$40>>2] = $41;
  HEAP32[((10744 + 24|0))>>2] = $36;
  HEAP32[((10744 + 12|0))>>2] = $35;
  $newp$0 = $p;
  return ($newp$0|0);
 }
 $42 = HEAP32[((10744 + 20|0))>>2]|0;
 $43 = ($3|0)==($42|0);
 if ($43) {
  $44 = HEAP32[((10744 + 8|0))>>2]|0;
  $45 = (($44) + ($2))|0;
  $46 = ($45>>>0)<($nb>>>0);
  if ($46) {
   $newp$0 = 0;
   return ($newp$0|0);
  }
  $47 = (($45) - ($nb))|0;
  $48 = ($47>>>0)>(15);
  if ($48) {
   $49 = (($p) + ($nb)|0);
   $50 = (($p) + ($45)|0);
   $51 = $1 & 1;
   $52 = $51 | $nb;
   $53 = $52 | 2;
   HEAP32[$0>>2] = $53;
   $$sum19 = (($nb) + 4)|0;
   $54 = (($p) + ($$sum19)|0);
   $55 = $47 | 1;
   HEAP32[$54>>2] = $55;
   HEAP32[$50>>2] = $47;
   $$sum20 = (($45) + 4)|0;
   $56 = (($p) + ($$sum20)|0);
   $57 = HEAP32[$56>>2]|0;
   $58 = $57 & -2;
   HEAP32[$56>>2] = $58;
   $storemerge = $49;$storemerge21 = $47;
  } else {
   $59 = $1 & 1;
   $60 = $59 | $45;
   $61 = $60 | 2;
   HEAP32[$0>>2] = $61;
   $$sum17 = (($45) + 4)|0;
   $62 = (($p) + ($$sum17)|0);
   $63 = HEAP32[$62>>2]|0;
   $64 = $63 | 1;
   HEAP32[$62>>2] = $64;
   $storemerge = 0;$storemerge21 = 0;
  }
  HEAP32[((10744 + 8|0))>>2] = $storemerge21;
  HEAP32[((10744 + 20|0))>>2] = $storemerge;
  $newp$0 = $p;
  return ($newp$0|0);
 }
 $65 = $8 & 2;
 $66 = ($65|0)==(0);
 if (!($66)) {
  $newp$0 = 0;
  return ($newp$0|0);
 }
 $67 = $8 & -8;
 $68 = (($67) + ($2))|0;
 $69 = ($68>>>0)<($nb>>>0);
 if ($69) {
  $newp$0 = 0;
  return ($newp$0|0);
 }
 $70 = (($68) - ($nb))|0;
 $71 = $8 >>> 3;
 $72 = ($8>>>0)<(256);
 do {
  if ($72) {
   $$sum15 = (($2) + 8)|0;
   $73 = (($p) + ($$sum15)|0);
   $74 = HEAP32[$73>>2]|0;
   $$sum16 = (($2) + 12)|0;
   $75 = (($p) + ($$sum16)|0);
   $76 = HEAP32[$75>>2]|0;
   $77 = $71 << 1;
   $78 = ((10744 + ($77<<2)|0) + 40|0);
   $79 = ($74|0)==($78|0);
   if (!($79)) {
    $80 = ($74>>>0)<($4>>>0);
    if ($80) {
     _abort();
     // unreachable;
    }
    $81 = (($74) + 12|0);
    $82 = HEAP32[$81>>2]|0;
    $83 = ($82|0)==($3|0);
    if (!($83)) {
     _abort();
     // unreachable;
    }
   }
   $84 = ($76|0)==($74|0);
   if ($84) {
    $85 = 1 << $71;
    $86 = $85 ^ -1;
    $87 = HEAP32[10744>>2]|0;
    $88 = $87 & $86;
    HEAP32[10744>>2] = $88;
    break;
   }
   $89 = ($76|0)==($78|0);
   if ($89) {
    $$pre = (($76) + 8|0);
    $$pre$phiZ2D = $$pre;
   } else {
    $90 = ($76>>>0)<($4>>>0);
    if ($90) {
     _abort();
     // unreachable;
    }
    $91 = (($76) + 8|0);
    $92 = HEAP32[$91>>2]|0;
    $93 = ($92|0)==($3|0);
    if ($93) {
     $$pre$phiZ2D = $91;
    } else {
     _abort();
     // unreachable;
    }
   }
   $94 = (($74) + 12|0);
   HEAP32[$94>>2] = $76;
   HEAP32[$$pre$phiZ2D>>2] = $74;
  } else {
   $$sum = (($2) + 24)|0;
   $95 = (($p) + ($$sum)|0);
   $96 = HEAP32[$95>>2]|0;
   $$sum2 = (($2) + 12)|0;
   $97 = (($p) + ($$sum2)|0);
   $98 = HEAP32[$97>>2]|0;
   $99 = ($98|0)==($3|0);
   do {
    if ($99) {
     $$sum4 = (($2) + 20)|0;
     $109 = (($p) + ($$sum4)|0);
     $110 = HEAP32[$109>>2]|0;
     $111 = ($110|0)==(0|0);
     if ($111) {
      $$sum3 = (($2) + 16)|0;
      $112 = (($p) + ($$sum3)|0);
      $113 = HEAP32[$112>>2]|0;
      $114 = ($113|0)==(0|0);
      if ($114) {
       $R$1 = 0;
       break;
      } else {
       $R$0$ph = $113;$RP$0$ph = $112;
      }
     } else {
      $R$0$ph = $110;$RP$0$ph = $109;
     }
     $R$0 = $R$0$ph;$RP$0 = $RP$0$ph;
     while(1) {
      $115 = (($R$0) + 20|0);
      $116 = HEAP32[$115>>2]|0;
      $117 = ($116|0)==(0|0);
      if ($117) {
       $118 = (($R$0) + 16|0);
       $119 = HEAP32[$118>>2]|0;
       $120 = ($119|0)==(0|0);
       if ($120) {
        $R$0$lcssa = $R$0;$RP$0$lcssa = $RP$0;
        break;
       } else {
        $R$0$be = $119;$RP$0$be = $118;
       }
      } else {
       $R$0$be = $116;$RP$0$be = $115;
      }
      $R$0 = $R$0$be;$RP$0 = $RP$0$be;
     }
     $121 = ($RP$0$lcssa>>>0)<($4>>>0);
     if ($121) {
      _abort();
      // unreachable;
     } else {
      HEAP32[$RP$0$lcssa>>2] = 0;
      $R$1 = $R$0$lcssa;
      break;
     }
    } else {
     $$sum14 = (($2) + 8)|0;
     $100 = (($p) + ($$sum14)|0);
     $101 = HEAP32[$100>>2]|0;
     $102 = ($101>>>0)<($4>>>0);
     if ($102) {
      _abort();
      // unreachable;
     }
     $103 = (($101) + 12|0);
     $104 = HEAP32[$103>>2]|0;
     $105 = ($104|0)==($3|0);
     if (!($105)) {
      _abort();
      // unreachable;
     }
     $106 = (($98) + 8|0);
     $107 = HEAP32[$106>>2]|0;
     $108 = ($107|0)==($3|0);
     if ($108) {
      HEAP32[$103>>2] = $98;
      HEAP32[$106>>2] = $101;
      $R$1 = $98;
      break;
     } else {
      _abort();
      // unreachable;
     }
    }
   } while(0);
   $122 = ($96|0)==(0|0);
   if (!($122)) {
    $$sum11 = (($2) + 28)|0;
    $123 = (($p) + ($$sum11)|0);
    $124 = HEAP32[$123>>2]|0;
    $125 = ((10744 + ($124<<2)|0) + 304|0);
    $126 = HEAP32[$125>>2]|0;
    $127 = ($3|0)==($126|0);
    if ($127) {
     HEAP32[$125>>2] = $R$1;
     $cond = ($R$1|0)==(0|0);
     if ($cond) {
      $128 = 1 << $124;
      $129 = $128 ^ -1;
      $130 = HEAP32[((10744 + 4|0))>>2]|0;
      $131 = $130 & $129;
      HEAP32[((10744 + 4|0))>>2] = $131;
      break;
     }
    } else {
     $132 = HEAP32[((10744 + 16|0))>>2]|0;
     $133 = ($96>>>0)<($132>>>0);
     if ($133) {
      _abort();
      // unreachable;
     }
     $134 = (($96) + 16|0);
     $135 = HEAP32[$134>>2]|0;
     $136 = ($135|0)==($3|0);
     if ($136) {
      HEAP32[$134>>2] = $R$1;
     } else {
      $137 = (($96) + 20|0);
      HEAP32[$137>>2] = $R$1;
     }
     $138 = ($R$1|0)==(0|0);
     if ($138) {
      break;
     }
    }
    $139 = HEAP32[((10744 + 16|0))>>2]|0;
    $140 = ($R$1>>>0)<($139>>>0);
    if ($140) {
     _abort();
     // unreachable;
    }
    $141 = (($R$1) + 24|0);
    HEAP32[$141>>2] = $96;
    $$sum12 = (($2) + 16)|0;
    $142 = (($p) + ($$sum12)|0);
    $143 = HEAP32[$142>>2]|0;
    $144 = ($143|0)==(0|0);
    do {
     if (!($144)) {
      $145 = ($143>>>0)<($139>>>0);
      if ($145) {
       _abort();
       // unreachable;
      } else {
       $146 = (($R$1) + 16|0);
       HEAP32[$146>>2] = $143;
       $147 = (($143) + 24|0);
       HEAP32[$147>>2] = $R$1;
       break;
      }
     }
    } while(0);
    $$sum13 = (($2) + 20)|0;
    $148 = (($p) + ($$sum13)|0);
    $149 = HEAP32[$148>>2]|0;
    $150 = ($149|0)==(0|0);
    if (!($150)) {
     $151 = HEAP32[((10744 + 16|0))>>2]|0;
     $152 = ($149>>>0)<($151>>>0);
     if ($152) {
      _abort();
      // unreachable;
     } else {
      $153 = (($R$1) + 20|0);
      HEAP32[$153>>2] = $149;
      $154 = (($149) + 24|0);
      HEAP32[$154>>2] = $R$1;
      break;
     }
    }
   }
  }
 } while(0);
 $155 = ($70>>>0)<(16);
 if ($155) {
  $156 = $1 & 1;
  $157 = $68 | $156;
  $158 = $157 | 2;
  HEAP32[$0>>2] = $158;
  $$sum910 = $68 | 4;
  $159 = (($p) + ($$sum910)|0);
  $160 = HEAP32[$159>>2]|0;
  $161 = $160 | 1;
  HEAP32[$159>>2] = $161;
  $newp$0 = $p;
  return ($newp$0|0);
 } else {
  $162 = (($p) + ($nb)|0);
  $163 = $1 & 1;
  $164 = $163 | $nb;
  $165 = $164 | 2;
  HEAP32[$0>>2] = $165;
  $$sum5 = (($nb) + 4)|0;
  $166 = (($p) + ($$sum5)|0);
  $167 = $70 | 3;
  HEAP32[$166>>2] = $167;
  $$sum78 = $68 | 4;
  $168 = (($p) + ($$sum78)|0);
  $169 = HEAP32[$168>>2]|0;
  $170 = $169 | 1;
  HEAP32[$168>>2] = $170;
  _dispose_chunk($162,$70);
  $newp$0 = $p;
  return ($newp$0|0);
 }
 return (0)|0;
}
function _dispose_chunk($p,$psize) {
 $p = $p|0;
 $psize = $psize|0;
 var $$0 = 0, $$02 = 0, $$1 = 0, $$lcssa = 0, $$lcssa62 = 0, $$pre = 0, $$pre$phi51Z2D = 0, $$pre$phi53Z2D = 0, $$pre$phiZ2D = 0, $$pre50 = 0, $$pre52 = 0, $$sum = 0, $$sum1 = 0, $$sum10 = 0, $$sum11 = 0, $$sum12 = 0, $$sum13 = 0, $$sum14 = 0, $$sum16 = 0, $$sum17 = 0;
 var $$sum18 = 0, $$sum19 = 0, $$sum2 = 0, $$sum20 = 0, $$sum21 = 0, $$sum22 = 0, $$sum23 = 0, $$sum24 = 0, $$sum25 = 0, $$sum3 = 0, $$sum4 = 0, $$sum5 = 0, $$sum6$pre = 0, $$sum7 = 0, $$sum8 = 0, $$sum9 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0;
 var $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0;
 var $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0;
 var $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0;
 var $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0;
 var $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0;
 var $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0;
 var $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0;
 var $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0;
 var $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0;
 var $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0;
 var $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0;
 var $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0;
 var $96 = 0, $97 = 0, $98 = 0, $99 = 0, $F16$0 = 0, $I19$0 = 0, $K20$045 = 0, $R$0 = 0, $R$0$be = 0, $R$0$lcssa = 0, $R$0$ph = 0, $R$1 = 0, $R7$0 = 0, $R7$0$be = 0, $R7$0$lcssa = 0, $R7$0$ph = 0, $R7$1 = 0, $RP$0 = 0, $RP$0$be = 0, $RP$0$lcssa = 0;
 var $RP$0$ph = 0, $RP9$0 = 0, $RP9$0$be = 0, $RP9$0$lcssa = 0, $RP9$0$ph = 0, $T$0$lcssa = 0, $T$044 = 0, $T$044$lcssa = 0, $cond = 0, $cond40 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($p) + ($psize)|0);
 $1 = (($p) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = $2 & 1;
 $4 = ($3|0)==(0);
 do {
  if ($4) {
   $5 = HEAP32[$p>>2]|0;
   $6 = $2 & 3;
   $7 = ($6|0)==(0);
   if ($7) {
    return;
   }
   $8 = (0 - ($5))|0;
   $9 = (($p) + ($8)|0);
   $10 = (($5) + ($psize))|0;
   $11 = HEAP32[((10744 + 16|0))>>2]|0;
   $12 = ($9>>>0)<($11>>>0);
   if ($12) {
    _abort();
    // unreachable;
   }
   $13 = HEAP32[((10744 + 20|0))>>2]|0;
   $14 = ($9|0)==($13|0);
   if ($14) {
    $$sum = (($psize) + 4)|0;
    $99 = (($p) + ($$sum)|0);
    $100 = HEAP32[$99>>2]|0;
    $101 = $100 & 3;
    $102 = ($101|0)==(3);
    if (!($102)) {
     $$0 = $9;$$02 = $10;
     break;
    }
    HEAP32[((10744 + 8|0))>>2] = $10;
    $103 = $100 & -2;
    HEAP32[$99>>2] = $103;
    $104 = $10 | 1;
    $$sum14 = (4 - ($5))|0;
    $105 = (($p) + ($$sum14)|0);
    HEAP32[$105>>2] = $104;
    HEAP32[$0>>2] = $10;
    return;
   }
   $15 = $5 >>> 3;
   $16 = ($5>>>0)<(256);
   if ($16) {
    $$sum24 = (8 - ($5))|0;
    $17 = (($p) + ($$sum24)|0);
    $18 = HEAP32[$17>>2]|0;
    $$sum25 = (12 - ($5))|0;
    $19 = (($p) + ($$sum25)|0);
    $20 = HEAP32[$19>>2]|0;
    $21 = $15 << 1;
    $22 = ((10744 + ($21<<2)|0) + 40|0);
    $23 = ($18|0)==($22|0);
    if (!($23)) {
     $24 = ($18>>>0)<($11>>>0);
     if ($24) {
      _abort();
      // unreachable;
     }
     $25 = (($18) + 12|0);
     $26 = HEAP32[$25>>2]|0;
     $27 = ($26|0)==($9|0);
     if (!($27)) {
      _abort();
      // unreachable;
     }
    }
    $28 = ($20|0)==($18|0);
    if ($28) {
     $29 = 1 << $15;
     $30 = $29 ^ -1;
     $31 = HEAP32[10744>>2]|0;
     $32 = $31 & $30;
     HEAP32[10744>>2] = $32;
     $$0 = $9;$$02 = $10;
     break;
    }
    $33 = ($20|0)==($22|0);
    if ($33) {
     $$pre52 = (($20) + 8|0);
     $$pre$phi53Z2D = $$pre52;
    } else {
     $34 = ($20>>>0)<($11>>>0);
     if ($34) {
      _abort();
      // unreachable;
     }
     $35 = (($20) + 8|0);
     $36 = HEAP32[$35>>2]|0;
     $37 = ($36|0)==($9|0);
     if ($37) {
      $$pre$phi53Z2D = $35;
     } else {
      _abort();
      // unreachable;
     }
    }
    $38 = (($18) + 12|0);
    HEAP32[$38>>2] = $20;
    HEAP32[$$pre$phi53Z2D>>2] = $18;
    $$0 = $9;$$02 = $10;
    break;
   }
   $$sum16 = (24 - ($5))|0;
   $39 = (($p) + ($$sum16)|0);
   $40 = HEAP32[$39>>2]|0;
   $$sum17 = (12 - ($5))|0;
   $41 = (($p) + ($$sum17)|0);
   $42 = HEAP32[$41>>2]|0;
   $43 = ($42|0)==($9|0);
   do {
    if ($43) {
     $$sum18 = (16 - ($5))|0;
     $$sum19 = (($$sum18) + 4)|0;
     $53 = (($p) + ($$sum19)|0);
     $54 = HEAP32[$53>>2]|0;
     $55 = ($54|0)==(0|0);
     if ($55) {
      $56 = (($p) + ($$sum18)|0);
      $57 = HEAP32[$56>>2]|0;
      $58 = ($57|0)==(0|0);
      if ($58) {
       $R$1 = 0;
       break;
      } else {
       $R$0$ph = $57;$RP$0$ph = $56;
      }
     } else {
      $R$0$ph = $54;$RP$0$ph = $53;
     }
     $R$0 = $R$0$ph;$RP$0 = $RP$0$ph;
     while(1) {
      $59 = (($R$0) + 20|0);
      $60 = HEAP32[$59>>2]|0;
      $61 = ($60|0)==(0|0);
      if ($61) {
       $62 = (($R$0) + 16|0);
       $63 = HEAP32[$62>>2]|0;
       $64 = ($63|0)==(0|0);
       if ($64) {
        $R$0$lcssa = $R$0;$RP$0$lcssa = $RP$0;
        break;
       } else {
        $R$0$be = $63;$RP$0$be = $62;
       }
      } else {
       $R$0$be = $60;$RP$0$be = $59;
      }
      $R$0 = $R$0$be;$RP$0 = $RP$0$be;
     }
     $65 = ($RP$0$lcssa>>>0)<($11>>>0);
     if ($65) {
      _abort();
      // unreachable;
     } else {
      HEAP32[$RP$0$lcssa>>2] = 0;
      $R$1 = $R$0$lcssa;
      break;
     }
    } else {
     $$sum23 = (8 - ($5))|0;
     $44 = (($p) + ($$sum23)|0);
     $45 = HEAP32[$44>>2]|0;
     $46 = ($45>>>0)<($11>>>0);
     if ($46) {
      _abort();
      // unreachable;
     }
     $47 = (($45) + 12|0);
     $48 = HEAP32[$47>>2]|0;
     $49 = ($48|0)==($9|0);
     if (!($49)) {
      _abort();
      // unreachable;
     }
     $50 = (($42) + 8|0);
     $51 = HEAP32[$50>>2]|0;
     $52 = ($51|0)==($9|0);
     if ($52) {
      HEAP32[$47>>2] = $42;
      HEAP32[$50>>2] = $45;
      $R$1 = $42;
      break;
     } else {
      _abort();
      // unreachable;
     }
    }
   } while(0);
   $66 = ($40|0)==(0|0);
   if ($66) {
    $$0 = $9;$$02 = $10;
   } else {
    $$sum20 = (28 - ($5))|0;
    $67 = (($p) + ($$sum20)|0);
    $68 = HEAP32[$67>>2]|0;
    $69 = ((10744 + ($68<<2)|0) + 304|0);
    $70 = HEAP32[$69>>2]|0;
    $71 = ($9|0)==($70|0);
    if ($71) {
     HEAP32[$69>>2] = $R$1;
     $cond = ($R$1|0)==(0|0);
     if ($cond) {
      $72 = 1 << $68;
      $73 = $72 ^ -1;
      $74 = HEAP32[((10744 + 4|0))>>2]|0;
      $75 = $74 & $73;
      HEAP32[((10744 + 4|0))>>2] = $75;
      $$0 = $9;$$02 = $10;
      break;
     }
    } else {
     $76 = HEAP32[((10744 + 16|0))>>2]|0;
     $77 = ($40>>>0)<($76>>>0);
     if ($77) {
      _abort();
      // unreachable;
     }
     $78 = (($40) + 16|0);
     $79 = HEAP32[$78>>2]|0;
     $80 = ($79|0)==($9|0);
     if ($80) {
      HEAP32[$78>>2] = $R$1;
     } else {
      $81 = (($40) + 20|0);
      HEAP32[$81>>2] = $R$1;
     }
     $82 = ($R$1|0)==(0|0);
     if ($82) {
      $$0 = $9;$$02 = $10;
      break;
     }
    }
    $83 = HEAP32[((10744 + 16|0))>>2]|0;
    $84 = ($R$1>>>0)<($83>>>0);
    if ($84) {
     _abort();
     // unreachable;
    }
    $85 = (($R$1) + 24|0);
    HEAP32[$85>>2] = $40;
    $$sum21 = (16 - ($5))|0;
    $86 = (($p) + ($$sum21)|0);
    $87 = HEAP32[$86>>2]|0;
    $88 = ($87|0)==(0|0);
    do {
     if (!($88)) {
      $89 = ($87>>>0)<($83>>>0);
      if ($89) {
       _abort();
       // unreachable;
      } else {
       $90 = (($R$1) + 16|0);
       HEAP32[$90>>2] = $87;
       $91 = (($87) + 24|0);
       HEAP32[$91>>2] = $R$1;
       break;
      }
     }
    } while(0);
    $$sum22 = (($$sum21) + 4)|0;
    $92 = (($p) + ($$sum22)|0);
    $93 = HEAP32[$92>>2]|0;
    $94 = ($93|0)==(0|0);
    if ($94) {
     $$0 = $9;$$02 = $10;
    } else {
     $95 = HEAP32[((10744 + 16|0))>>2]|0;
     $96 = ($93>>>0)<($95>>>0);
     if ($96) {
      _abort();
      // unreachable;
     } else {
      $97 = (($R$1) + 20|0);
      HEAP32[$97>>2] = $93;
      $98 = (($93) + 24|0);
      HEAP32[$98>>2] = $R$1;
      $$0 = $9;$$02 = $10;
      break;
     }
    }
   }
  } else {
   $$0 = $p;$$02 = $psize;
  }
 } while(0);
 $106 = HEAP32[((10744 + 16|0))>>2]|0;
 $107 = ($0>>>0)<($106>>>0);
 if ($107) {
  _abort();
  // unreachable;
 }
 $$sum1 = (($psize) + 4)|0;
 $108 = (($p) + ($$sum1)|0);
 $109 = HEAP32[$108>>2]|0;
 $110 = $109 & 2;
 $111 = ($110|0)==(0);
 if ($111) {
  $112 = HEAP32[((10744 + 24|0))>>2]|0;
  $113 = ($0|0)==($112|0);
  if ($113) {
   $114 = HEAP32[((10744 + 12|0))>>2]|0;
   $115 = (($114) + ($$02))|0;
   HEAP32[((10744 + 12|0))>>2] = $115;
   HEAP32[((10744 + 24|0))>>2] = $$0;
   $116 = $115 | 1;
   $117 = (($$0) + 4|0);
   HEAP32[$117>>2] = $116;
   $118 = HEAP32[((10744 + 20|0))>>2]|0;
   $119 = ($$0|0)==($118|0);
   if (!($119)) {
    return;
   }
   HEAP32[((10744 + 20|0))>>2] = 0;
   HEAP32[((10744 + 8|0))>>2] = 0;
   return;
  }
  $120 = HEAP32[((10744 + 20|0))>>2]|0;
  $121 = ($0|0)==($120|0);
  if ($121) {
   $122 = HEAP32[((10744 + 8|0))>>2]|0;
   $123 = (($122) + ($$02))|0;
   HEAP32[((10744 + 8|0))>>2] = $123;
   HEAP32[((10744 + 20|0))>>2] = $$0;
   $124 = $123 | 1;
   $125 = (($$0) + 4|0);
   HEAP32[$125>>2] = $124;
   $126 = (($$0) + ($123)|0);
   HEAP32[$126>>2] = $123;
   return;
  }
  $127 = $109 & -8;
  $128 = (($127) + ($$02))|0;
  $129 = $109 >>> 3;
  $130 = ($109>>>0)<(256);
  do {
   if ($130) {
    $$sum12 = (($psize) + 8)|0;
    $131 = (($p) + ($$sum12)|0);
    $132 = HEAP32[$131>>2]|0;
    $$sum13 = (($psize) + 12)|0;
    $133 = (($p) + ($$sum13)|0);
    $134 = HEAP32[$133>>2]|0;
    $135 = $129 << 1;
    $136 = ((10744 + ($135<<2)|0) + 40|0);
    $137 = ($132|0)==($136|0);
    if (!($137)) {
     $138 = ($132>>>0)<($106>>>0);
     if ($138) {
      _abort();
      // unreachable;
     }
     $139 = (($132) + 12|0);
     $140 = HEAP32[$139>>2]|0;
     $141 = ($140|0)==($0|0);
     if (!($141)) {
      _abort();
      // unreachable;
     }
    }
    $142 = ($134|0)==($132|0);
    if ($142) {
     $143 = 1 << $129;
     $144 = $143 ^ -1;
     $145 = HEAP32[10744>>2]|0;
     $146 = $145 & $144;
     HEAP32[10744>>2] = $146;
     break;
    }
    $147 = ($134|0)==($136|0);
    if ($147) {
     $$pre50 = (($134) + 8|0);
     $$pre$phi51Z2D = $$pre50;
    } else {
     $148 = ($134>>>0)<($106>>>0);
     if ($148) {
      _abort();
      // unreachable;
     }
     $149 = (($134) + 8|0);
     $150 = HEAP32[$149>>2]|0;
     $151 = ($150|0)==($0|0);
     if ($151) {
      $$pre$phi51Z2D = $149;
     } else {
      _abort();
      // unreachable;
     }
    }
    $152 = (($132) + 12|0);
    HEAP32[$152>>2] = $134;
    HEAP32[$$pre$phi51Z2D>>2] = $132;
   } else {
    $$sum2 = (($psize) + 24)|0;
    $153 = (($p) + ($$sum2)|0);
    $154 = HEAP32[$153>>2]|0;
    $$sum3 = (($psize) + 12)|0;
    $155 = (($p) + ($$sum3)|0);
    $156 = HEAP32[$155>>2]|0;
    $157 = ($156|0)==($0|0);
    do {
     if ($157) {
      $$sum5 = (($psize) + 20)|0;
      $167 = (($p) + ($$sum5)|0);
      $168 = HEAP32[$167>>2]|0;
      $169 = ($168|0)==(0|0);
      if ($169) {
       $$sum4 = (($psize) + 16)|0;
       $170 = (($p) + ($$sum4)|0);
       $171 = HEAP32[$170>>2]|0;
       $172 = ($171|0)==(0|0);
       if ($172) {
        $R7$1 = 0;
        break;
       } else {
        $R7$0$ph = $171;$RP9$0$ph = $170;
       }
      } else {
       $R7$0$ph = $168;$RP9$0$ph = $167;
      }
      $R7$0 = $R7$0$ph;$RP9$0 = $RP9$0$ph;
      while(1) {
       $173 = (($R7$0) + 20|0);
       $174 = HEAP32[$173>>2]|0;
       $175 = ($174|0)==(0|0);
       if ($175) {
        $176 = (($R7$0) + 16|0);
        $177 = HEAP32[$176>>2]|0;
        $178 = ($177|0)==(0|0);
        if ($178) {
         $R7$0$lcssa = $R7$0;$RP9$0$lcssa = $RP9$0;
         break;
        } else {
         $R7$0$be = $177;$RP9$0$be = $176;
        }
       } else {
        $R7$0$be = $174;$RP9$0$be = $173;
       }
       $R7$0 = $R7$0$be;$RP9$0 = $RP9$0$be;
      }
      $179 = ($RP9$0$lcssa>>>0)<($106>>>0);
      if ($179) {
       _abort();
       // unreachable;
      } else {
       HEAP32[$RP9$0$lcssa>>2] = 0;
       $R7$1 = $R7$0$lcssa;
       break;
      }
     } else {
      $$sum11 = (($psize) + 8)|0;
      $158 = (($p) + ($$sum11)|0);
      $159 = HEAP32[$158>>2]|0;
      $160 = ($159>>>0)<($106>>>0);
      if ($160) {
       _abort();
       // unreachable;
      }
      $161 = (($159) + 12|0);
      $162 = HEAP32[$161>>2]|0;
      $163 = ($162|0)==($0|0);
      if (!($163)) {
       _abort();
       // unreachable;
      }
      $164 = (($156) + 8|0);
      $165 = HEAP32[$164>>2]|0;
      $166 = ($165|0)==($0|0);
      if ($166) {
       HEAP32[$161>>2] = $156;
       HEAP32[$164>>2] = $159;
       $R7$1 = $156;
       break;
      } else {
       _abort();
       // unreachable;
      }
     }
    } while(0);
    $180 = ($154|0)==(0|0);
    if (!($180)) {
     $$sum8 = (($psize) + 28)|0;
     $181 = (($p) + ($$sum8)|0);
     $182 = HEAP32[$181>>2]|0;
     $183 = ((10744 + ($182<<2)|0) + 304|0);
     $184 = HEAP32[$183>>2]|0;
     $185 = ($0|0)==($184|0);
     if ($185) {
      HEAP32[$183>>2] = $R7$1;
      $cond40 = ($R7$1|0)==(0|0);
      if ($cond40) {
       $186 = 1 << $182;
       $187 = $186 ^ -1;
       $188 = HEAP32[((10744 + 4|0))>>2]|0;
       $189 = $188 & $187;
       HEAP32[((10744 + 4|0))>>2] = $189;
       break;
      }
     } else {
      $190 = HEAP32[((10744 + 16|0))>>2]|0;
      $191 = ($154>>>0)<($190>>>0);
      if ($191) {
       _abort();
       // unreachable;
      }
      $192 = (($154) + 16|0);
      $193 = HEAP32[$192>>2]|0;
      $194 = ($193|0)==($0|0);
      if ($194) {
       HEAP32[$192>>2] = $R7$1;
      } else {
       $195 = (($154) + 20|0);
       HEAP32[$195>>2] = $R7$1;
      }
      $196 = ($R7$1|0)==(0|0);
      if ($196) {
       break;
      }
     }
     $197 = HEAP32[((10744 + 16|0))>>2]|0;
     $198 = ($R7$1>>>0)<($197>>>0);
     if ($198) {
      _abort();
      // unreachable;
     }
     $199 = (($R7$1) + 24|0);
     HEAP32[$199>>2] = $154;
     $$sum9 = (($psize) + 16)|0;
     $200 = (($p) + ($$sum9)|0);
     $201 = HEAP32[$200>>2]|0;
     $202 = ($201|0)==(0|0);
     do {
      if (!($202)) {
       $203 = ($201>>>0)<($197>>>0);
       if ($203) {
        _abort();
        // unreachable;
       } else {
        $204 = (($R7$1) + 16|0);
        HEAP32[$204>>2] = $201;
        $205 = (($201) + 24|0);
        HEAP32[$205>>2] = $R7$1;
        break;
       }
      }
     } while(0);
     $$sum10 = (($psize) + 20)|0;
     $206 = (($p) + ($$sum10)|0);
     $207 = HEAP32[$206>>2]|0;
     $208 = ($207|0)==(0|0);
     if (!($208)) {
      $209 = HEAP32[((10744 + 16|0))>>2]|0;
      $210 = ($207>>>0)<($209>>>0);
      if ($210) {
       _abort();
       // unreachable;
      } else {
       $211 = (($R7$1) + 20|0);
       HEAP32[$211>>2] = $207;
       $212 = (($207) + 24|0);
       HEAP32[$212>>2] = $R7$1;
       break;
      }
     }
    }
   }
  } while(0);
  $213 = $128 | 1;
  $214 = (($$0) + 4|0);
  HEAP32[$214>>2] = $213;
  $215 = (($$0) + ($128)|0);
  HEAP32[$215>>2] = $128;
  $216 = HEAP32[((10744 + 20|0))>>2]|0;
  $217 = ($$0|0)==($216|0);
  if ($217) {
   HEAP32[((10744 + 8|0))>>2] = $128;
   return;
  } else {
   $$1 = $128;
  }
 } else {
  $218 = $109 & -2;
  HEAP32[$108>>2] = $218;
  $219 = $$02 | 1;
  $220 = (($$0) + 4|0);
  HEAP32[$220>>2] = $219;
  $221 = (($$0) + ($$02)|0);
  HEAP32[$221>>2] = $$02;
  $$1 = $$02;
 }
 $222 = $$1 >>> 3;
 $223 = ($$1>>>0)<(256);
 if ($223) {
  $224 = $222 << 1;
  $225 = ((10744 + ($224<<2)|0) + 40|0);
  $226 = HEAP32[10744>>2]|0;
  $227 = 1 << $222;
  $228 = $226 & $227;
  $229 = ($228|0)==(0);
  if ($229) {
   $230 = $226 | $227;
   HEAP32[10744>>2] = $230;
   $$sum6$pre = (($224) + 2)|0;
   $$pre = ((10744 + ($$sum6$pre<<2)|0) + 40|0);
   $$pre$phiZ2D = $$pre;$F16$0 = $225;
  } else {
   $$sum7 = (($224) + 2)|0;
   $231 = ((10744 + ($$sum7<<2)|0) + 40|0);
   $232 = HEAP32[$231>>2]|0;
   $233 = HEAP32[((10744 + 16|0))>>2]|0;
   $234 = ($232>>>0)<($233>>>0);
   if ($234) {
    _abort();
    // unreachable;
   } else {
    $$pre$phiZ2D = $231;$F16$0 = $232;
   }
  }
  HEAP32[$$pre$phiZ2D>>2] = $$0;
  $235 = (($F16$0) + 12|0);
  HEAP32[$235>>2] = $$0;
  $236 = (($$0) + 8|0);
  HEAP32[$236>>2] = $F16$0;
  $237 = (($$0) + 12|0);
  HEAP32[$237>>2] = $225;
  return;
 }
 $238 = $$1 >>> 8;
 $239 = ($238|0)==(0);
 if ($239) {
  $I19$0 = 0;
 } else {
  $240 = ($$1>>>0)>(16777215);
  if ($240) {
   $I19$0 = 31;
  } else {
   $241 = (($238) + 1048320)|0;
   $242 = $241 >>> 16;
   $243 = $242 & 8;
   $244 = $238 << $243;
   $245 = (($244) + 520192)|0;
   $246 = $245 >>> 16;
   $247 = $246 & 4;
   $248 = $247 | $243;
   $249 = $244 << $247;
   $250 = (($249) + 245760)|0;
   $251 = $250 >>> 16;
   $252 = $251 & 2;
   $253 = $248 | $252;
   $254 = (14 - ($253))|0;
   $255 = $249 << $252;
   $256 = $255 >>> 15;
   $257 = (($254) + ($256))|0;
   $258 = $257 << 1;
   $259 = (($257) + 7)|0;
   $260 = $$1 >>> $259;
   $261 = $260 & 1;
   $262 = $261 | $258;
   $I19$0 = $262;
  }
 }
 $263 = ((10744 + ($I19$0<<2)|0) + 304|0);
 $264 = (($$0) + 28|0);
 HEAP32[$264>>2] = $I19$0;
 $265 = (($$0) + 16|0);
 $266 = (($$0) + 20|0);
 HEAP32[$266>>2] = 0;
 HEAP32[$265>>2] = 0;
 $267 = HEAP32[((10744 + 4|0))>>2]|0;
 $268 = 1 << $I19$0;
 $269 = $267 & $268;
 $270 = ($269|0)==(0);
 if ($270) {
  $271 = $267 | $268;
  HEAP32[((10744 + 4|0))>>2] = $271;
  HEAP32[$263>>2] = $$0;
  $272 = (($$0) + 24|0);
  HEAP32[$272>>2] = $263;
  $273 = (($$0) + 12|0);
  HEAP32[$273>>2] = $$0;
  $274 = (($$0) + 8|0);
  HEAP32[$274>>2] = $$0;
  return;
 }
 $275 = HEAP32[$263>>2]|0;
 $276 = ($I19$0|0)==(31);
 if ($276) {
  $284 = 0;
 } else {
  $277 = $I19$0 >>> 1;
  $278 = (25 - ($277))|0;
  $284 = $278;
 }
 $279 = (($275) + 4|0);
 $280 = HEAP32[$279>>2]|0;
 $281 = $280 & -8;
 $282 = ($281|0)==($$1|0);
 do {
  if ($282) {
   $T$0$lcssa = $275;
  } else {
   $283 = $$1 << $284;
   $K20$045 = $283;$T$044 = $275;
   while(1) {
    $291 = $K20$045 >>> 31;
    $292 = ((($T$044) + ($291<<2)|0) + 16|0);
    $287 = HEAP32[$292>>2]|0;
    $293 = ($287|0)==(0|0);
    if ($293) {
     $$lcssa = $292;$T$044$lcssa = $T$044;
     break;
    }
    $285 = $K20$045 << 1;
    $286 = (($287) + 4|0);
    $288 = HEAP32[$286>>2]|0;
    $289 = $288 & -8;
    $290 = ($289|0)==($$1|0);
    if ($290) {
     $$lcssa62 = $287;
     label = 134;
     break;
    } else {
     $K20$045 = $285;$T$044 = $287;
    }
   }
   if ((label|0) == 134) {
    $T$0$lcssa = $$lcssa62;
    break;
   }
   $294 = HEAP32[((10744 + 16|0))>>2]|0;
   $295 = ($$lcssa>>>0)<($294>>>0);
   if ($295) {
    _abort();
    // unreachable;
   }
   HEAP32[$$lcssa>>2] = $$0;
   $296 = (($$0) + 24|0);
   HEAP32[$296>>2] = $T$044$lcssa;
   $297 = (($$0) + 12|0);
   HEAP32[$297>>2] = $$0;
   $298 = (($$0) + 8|0);
   HEAP32[$298>>2] = $$0;
   return;
  }
 } while(0);
 $299 = (($T$0$lcssa) + 8|0);
 $300 = HEAP32[$299>>2]|0;
 $301 = HEAP32[((10744 + 16|0))>>2]|0;
 $302 = ($T$0$lcssa>>>0)>=($301>>>0);
 $303 = ($300>>>0)>=($301>>>0);
 $or$cond = $302 & $303;
 if (!($or$cond)) {
  _abort();
  // unreachable;
 }
 $304 = (($300) + 12|0);
 HEAP32[$304>>2] = $$0;
 HEAP32[$299>>2] = $$0;
 $305 = (($$0) + 8|0);
 HEAP32[$305>>2] = $300;
 $306 = (($$0) + 12|0);
 HEAP32[$306>>2] = $T$0$lcssa;
 $307 = (($$0) + 24|0);
 HEAP32[$307>>2] = 0;
 return;
}
function runPostSets() {
 
}
function _i64Subtract(a, b, c, d) {
    a = a|0; b = b|0; c = c|0; d = d|0;
    var l = 0, h = 0;
    l = (a - c)>>>0;
    h = (b - d)>>>0;
    h = (b - d - (((c>>>0) > (a>>>0))|0))>>>0; // Borrow one from high word to low word on underflow.
    return ((tempRet0 = h,l|0)|0);
}
function _i64Add(a, b, c, d) {
    /*
      x = a + b*2^32
      y = c + d*2^32
      result = l + h*2^32
    */
    a = a|0; b = b|0; c = c|0; d = d|0;
    var l = 0, h = 0;
    l = (a + c)>>>0;
    h = (b + d + (((l>>>0) < (a>>>0))|0))>>>0; // Add carry from low word to high word on overflow.
    return ((tempRet0 = h,l|0)|0);
}
function _bitshift64Lshr(low, high, bits) {
    low = low|0; high = high|0; bits = bits|0;
    var ander = 0;
    if ((bits|0) < 32) {
      ander = ((1 << bits) - 1)|0;
      tempRet0 = high >>> bits;
      return (low >>> bits) | ((high&ander) << (32 - bits));
    }
    tempRet0 = 0;
    return (high >>> (bits - 32))|0;
}
function _memcpy(dest, src, num) {
    dest = dest|0; src = src|0; num = num|0;
    var ret = 0;
    if ((num|0) >= 4096) return _emscripten_memcpy_big(dest|0, src|0, num|0)|0;
    ret = dest|0;
    if ((dest&3) == (src&3)) {
      while (dest & 3) {
        if ((num|0) == 0) return ret|0;
        HEAP8[((dest)>>0)]=((HEAP8[((src)>>0)])|0);
        dest = (dest+1)|0;
        src = (src+1)|0;
        num = (num-1)|0;
      }
      while ((num|0) >= 4) {
        HEAP32[((dest)>>2)]=((HEAP32[((src)>>2)])|0);
        dest = (dest+4)|0;
        src = (src+4)|0;
        num = (num-4)|0;
      }
    }
    while ((num|0) > 0) {
      HEAP8[((dest)>>0)]=((HEAP8[((src)>>0)])|0);
      dest = (dest+1)|0;
      src = (src+1)|0;
      num = (num-1)|0;
    }
    return ret|0;
}
function _memset(ptr, value, num) {
    ptr = ptr|0; value = value|0; num = num|0;
    var stop = 0, value4 = 0, stop4 = 0, unaligned = 0;
    stop = (ptr + num)|0;
    if ((num|0) >= 20) {
      // This is unaligned, but quite large, so work hard to get to aligned settings
      value = value & 0xff;
      unaligned = ptr & 3;
      value4 = value | (value << 8) | (value << 16) | (value << 24);
      stop4 = stop & ~3;
      if (unaligned) {
        unaligned = (ptr + 4 - unaligned)|0;
        while ((ptr|0) < (unaligned|0)) { // no need to check for stop, since we have large num
          HEAP8[((ptr)>>0)]=value;
          ptr = (ptr+1)|0;
        }
      }
      while ((ptr|0) < (stop4|0)) {
        HEAP32[((ptr)>>2)]=value4;
        ptr = (ptr+4)|0;
      }
    }
    while ((ptr|0) < (stop|0)) {
      HEAP8[((ptr)>>0)]=value;
      ptr = (ptr+1)|0;
    }
    return (ptr-num)|0;
}
function _bitshift64Shl(low, high, bits) {
    low = low|0; high = high|0; bits = bits|0;
    var ander = 0;
    if ((bits|0) < 32) {
      ander = ((1 << bits) - 1)|0;
      tempRet0 = (high << bits) | ((low&(ander << (32 - bits))) >>> (32 - bits));
      return low << bits;
    }
    tempRet0 = low << (bits - 32);
    return 0;
}
function _strlen(ptr) {
    ptr = ptr|0;
    var curr = 0;
    curr = ptr;
    while (((HEAP8[((curr)>>0)])|0)) {
      curr = (curr + 1)|0;
    }
    return (curr - ptr)|0;
}
function _bitshift64Ashr(low, high, bits) {
    low = low|0; high = high|0; bits = bits|0;
    var ander = 0;
    if ((bits|0) < 32) {
      ander = ((1 << bits) - 1)|0;
      tempRet0 = high >> bits;
      return (low >>> bits) | ((high&ander) << (32 - bits));
    }
    tempRet0 = (high|0) < 0 ? -1 : 0;
    return (high >> (bits - 32))|0;
  }
function _llvm_cttz_i32(x) {
    x = x|0;
    var ret = 0;
    ret = ((HEAP8[(((cttz_i8)+(x & 0xff))>>0)])|0);
    if ((ret|0) < 8) return ret|0;
    ret = ((HEAP8[(((cttz_i8)+((x >> 8)&0xff))>>0)])|0);
    if ((ret|0) < 8) return (ret + 8)|0;
    ret = ((HEAP8[(((cttz_i8)+((x >> 16)&0xff))>>0)])|0);
    if ((ret|0) < 8) return (ret + 16)|0;
    return (((HEAP8[(((cttz_i8)+(x >>> 24))>>0)])|0) + 24)|0;
  }

// ======== compiled code from system/lib/compiler-rt , see readme therein
function ___muldsi3($a, $b) {
  $a = $a | 0;
  $b = $b | 0;
  var $1 = 0, $2 = 0, $3 = 0, $6 = 0, $8 = 0, $11 = 0, $12 = 0;
  $1 = $a & 65535;
  $2 = $b & 65535;
  $3 = Math_imul($2, $1) | 0;
  $6 = $a >>> 16;
  $8 = ($3 >>> 16) + (Math_imul($2, $6) | 0) | 0;
  $11 = $b >>> 16;
  $12 = Math_imul($11, $1) | 0;
  return (tempRet0 = (($8 >>> 16) + (Math_imul($11, $6) | 0) | 0) + ((($8 & 65535) + $12 | 0) >>> 16) | 0, 0 | ($8 + $12 << 16 | $3 & 65535)) | 0;
}
function ___divdi3($a$0, $a$1, $b$0, $b$1) {
  $a$0 = $a$0 | 0;
  $a$1 = $a$1 | 0;
  $b$0 = $b$0 | 0;
  $b$1 = $b$1 | 0;
  var $1$0 = 0, $1$1 = 0, $2$0 = 0, $2$1 = 0, $4$0 = 0, $4$1 = 0, $6$0 = 0, $7$0 = 0, $7$1 = 0, $8$0 = 0, $10$0 = 0;
  $1$0 = $a$1 >> 31 | (($a$1 | 0) < 0 ? -1 : 0) << 1;
  $1$1 = (($a$1 | 0) < 0 ? -1 : 0) >> 31 | (($a$1 | 0) < 0 ? -1 : 0) << 1;
  $2$0 = $b$1 >> 31 | (($b$1 | 0) < 0 ? -1 : 0) << 1;
  $2$1 = (($b$1 | 0) < 0 ? -1 : 0) >> 31 | (($b$1 | 0) < 0 ? -1 : 0) << 1;
  $4$0 = _i64Subtract($1$0 ^ $a$0, $1$1 ^ $a$1, $1$0, $1$1) | 0;
  $4$1 = tempRet0;
  $6$0 = _i64Subtract($2$0 ^ $b$0, $2$1 ^ $b$1, $2$0, $2$1) | 0;
  $7$0 = $2$0 ^ $1$0;
  $7$1 = $2$1 ^ $1$1;
  $8$0 = ___udivmoddi4($4$0, $4$1, $6$0, tempRet0, 0) | 0;
  $10$0 = _i64Subtract($8$0 ^ $7$0, tempRet0 ^ $7$1, $7$0, $7$1) | 0;
  return (tempRet0 = tempRet0, $10$0) | 0;
}
function ___remdi3($a$0, $a$1, $b$0, $b$1) {
  $a$0 = $a$0 | 0;
  $a$1 = $a$1 | 0;
  $b$0 = $b$0 | 0;
  $b$1 = $b$1 | 0;
  var $rem = 0, $1$0 = 0, $1$1 = 0, $2$0 = 0, $2$1 = 0, $4$0 = 0, $4$1 = 0, $6$0 = 0, $10$0 = 0, $10$1 = 0, __stackBase__ = 0;
  __stackBase__ = STACKTOP;
  STACKTOP = STACKTOP + 8 | 0;
  $rem = __stackBase__ | 0;
  $1$0 = $a$1 >> 31 | (($a$1 | 0) < 0 ? -1 : 0) << 1;
  $1$1 = (($a$1 | 0) < 0 ? -1 : 0) >> 31 | (($a$1 | 0) < 0 ? -1 : 0) << 1;
  $2$0 = $b$1 >> 31 | (($b$1 | 0) < 0 ? -1 : 0) << 1;
  $2$1 = (($b$1 | 0) < 0 ? -1 : 0) >> 31 | (($b$1 | 0) < 0 ? -1 : 0) << 1;
  $4$0 = _i64Subtract($1$0 ^ $a$0, $1$1 ^ $a$1, $1$0, $1$1) | 0;
  $4$1 = tempRet0;
  $6$0 = _i64Subtract($2$0 ^ $b$0, $2$1 ^ $b$1, $2$0, $2$1) | 0;
  ___udivmoddi4($4$0, $4$1, $6$0, tempRet0, $rem) | 0;
  $10$0 = _i64Subtract(HEAP32[$rem >> 2] ^ $1$0, HEAP32[$rem + 4 >> 2] ^ $1$1, $1$0, $1$1) | 0;
  $10$1 = tempRet0;
  STACKTOP = __stackBase__;
  return (tempRet0 = $10$1, $10$0) | 0;
}
function ___muldi3($a$0, $a$1, $b$0, $b$1) {
  $a$0 = $a$0 | 0;
  $a$1 = $a$1 | 0;
  $b$0 = $b$0 | 0;
  $b$1 = $b$1 | 0;
  var $x_sroa_0_0_extract_trunc = 0, $y_sroa_0_0_extract_trunc = 0, $1$0 = 0, $1$1 = 0, $2 = 0;
  $x_sroa_0_0_extract_trunc = $a$0;
  $y_sroa_0_0_extract_trunc = $b$0;
  $1$0 = ___muldsi3($x_sroa_0_0_extract_trunc, $y_sroa_0_0_extract_trunc) | 0;
  $1$1 = tempRet0;
  $2 = Math_imul($a$1, $y_sroa_0_0_extract_trunc) | 0;
  return (tempRet0 = ((Math_imul($b$1, $x_sroa_0_0_extract_trunc) | 0) + $2 | 0) + $1$1 | $1$1 & 0, 0 | $1$0 & -1) | 0;
}
function ___udivdi3($a$0, $a$1, $b$0, $b$1) {
  $a$0 = $a$0 | 0;
  $a$1 = $a$1 | 0;
  $b$0 = $b$0 | 0;
  $b$1 = $b$1 | 0;
  var $1$0 = 0;
  $1$0 = ___udivmoddi4($a$0, $a$1, $b$0, $b$1, 0) | 0;
  return (tempRet0 = tempRet0, $1$0) | 0;
}
function ___uremdi3($a$0, $a$1, $b$0, $b$1) {
  $a$0 = $a$0 | 0;
  $a$1 = $a$1 | 0;
  $b$0 = $b$0 | 0;
  $b$1 = $b$1 | 0;
  var $rem = 0, __stackBase__ = 0;
  __stackBase__ = STACKTOP;
  STACKTOP = STACKTOP + 8 | 0;
  $rem = __stackBase__ | 0;
  ___udivmoddi4($a$0, $a$1, $b$0, $b$1, $rem) | 0;
  STACKTOP = __stackBase__;
  return (tempRet0 = HEAP32[$rem + 4 >> 2] | 0, HEAP32[$rem >> 2] | 0) | 0;
}
function ___udivmoddi4($a$0, $a$1, $b$0, $b$1, $rem) {
  $a$0 = $a$0 | 0;
  $a$1 = $a$1 | 0;
  $b$0 = $b$0 | 0;
  $b$1 = $b$1 | 0;
  $rem = $rem | 0;
  var $n_sroa_0_0_extract_trunc = 0, $n_sroa_1_4_extract_shift$0 = 0, $n_sroa_1_4_extract_trunc = 0, $d_sroa_0_0_extract_trunc = 0, $d_sroa_1_4_extract_shift$0 = 0, $d_sroa_1_4_extract_trunc = 0, $4 = 0, $17 = 0, $37 = 0, $49 = 0, $51 = 0, $57 = 0, $58 = 0, $66 = 0, $78 = 0, $86 = 0, $88 = 0, $89 = 0, $91 = 0, $92 = 0, $95 = 0, $105 = 0, $117 = 0, $119 = 0, $125 = 0, $126 = 0, $130 = 0, $q_sroa_1_1_ph = 0, $q_sroa_0_1_ph = 0, $r_sroa_1_1_ph = 0, $r_sroa_0_1_ph = 0, $sr_1_ph = 0, $d_sroa_0_0_insert_insert99$0 = 0, $d_sroa_0_0_insert_insert99$1 = 0, $137$0 = 0, $137$1 = 0, $carry_0203 = 0, $sr_1202 = 0, $r_sroa_0_1201 = 0, $r_sroa_1_1200 = 0, $q_sroa_0_1199 = 0, $q_sroa_1_1198 = 0, $147 = 0, $149 = 0, $r_sroa_0_0_insert_insert42$0 = 0, $r_sroa_0_0_insert_insert42$1 = 0, $150$1 = 0, $151$0 = 0, $152 = 0, $154$0 = 0, $r_sroa_0_0_extract_trunc = 0, $r_sroa_1_4_extract_trunc = 0, $155 = 0, $carry_0_lcssa$0 = 0, $carry_0_lcssa$1 = 0, $r_sroa_0_1_lcssa = 0, $r_sroa_1_1_lcssa = 0, $q_sroa_0_1_lcssa = 0, $q_sroa_1_1_lcssa = 0, $q_sroa_0_0_insert_ext75$0 = 0, $q_sroa_0_0_insert_ext75$1 = 0, $q_sroa_0_0_insert_insert77$1 = 0, $_0$0 = 0, $_0$1 = 0;
  $n_sroa_0_0_extract_trunc = $a$0;
  $n_sroa_1_4_extract_shift$0 = $a$1;
  $n_sroa_1_4_extract_trunc = $n_sroa_1_4_extract_shift$0;
  $d_sroa_0_0_extract_trunc = $b$0;
  $d_sroa_1_4_extract_shift$0 = $b$1;
  $d_sroa_1_4_extract_trunc = $d_sroa_1_4_extract_shift$0;
  if (($n_sroa_1_4_extract_trunc | 0) == 0) {
    $4 = ($rem | 0) != 0;
    if (($d_sroa_1_4_extract_trunc | 0) == 0) {
      if ($4) {
        HEAP32[$rem >> 2] = ($n_sroa_0_0_extract_trunc >>> 0) % ($d_sroa_0_0_extract_trunc >>> 0);
        HEAP32[$rem + 4 >> 2] = 0;
      }
      $_0$1 = 0;
      $_0$0 = ($n_sroa_0_0_extract_trunc >>> 0) / ($d_sroa_0_0_extract_trunc >>> 0) >>> 0;
      return (tempRet0 = $_0$1, $_0$0) | 0;
    } else {
      if (!$4) {
        $_0$1 = 0;
        $_0$0 = 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
      HEAP32[$rem >> 2] = $a$0 & -1;
      HEAP32[$rem + 4 >> 2] = $a$1 & 0;
      $_0$1 = 0;
      $_0$0 = 0;
      return (tempRet0 = $_0$1, $_0$0) | 0;
    }
  }
  $17 = ($d_sroa_1_4_extract_trunc | 0) == 0;
  do {
    if (($d_sroa_0_0_extract_trunc | 0) == 0) {
      if ($17) {
        if (($rem | 0) != 0) {
          HEAP32[$rem >> 2] = ($n_sroa_1_4_extract_trunc >>> 0) % ($d_sroa_0_0_extract_trunc >>> 0);
          HEAP32[$rem + 4 >> 2] = 0;
        }
        $_0$1 = 0;
        $_0$0 = ($n_sroa_1_4_extract_trunc >>> 0) / ($d_sroa_0_0_extract_trunc >>> 0) >>> 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
      if (($n_sroa_0_0_extract_trunc | 0) == 0) {
        if (($rem | 0) != 0) {
          HEAP32[$rem >> 2] = 0;
          HEAP32[$rem + 4 >> 2] = ($n_sroa_1_4_extract_trunc >>> 0) % ($d_sroa_1_4_extract_trunc >>> 0);
        }
        $_0$1 = 0;
        $_0$0 = ($n_sroa_1_4_extract_trunc >>> 0) / ($d_sroa_1_4_extract_trunc >>> 0) >>> 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
      $37 = $d_sroa_1_4_extract_trunc - 1 | 0;
      if (($37 & $d_sroa_1_4_extract_trunc | 0) == 0) {
        if (($rem | 0) != 0) {
          HEAP32[$rem >> 2] = 0 | $a$0 & -1;
          HEAP32[$rem + 4 >> 2] = $37 & $n_sroa_1_4_extract_trunc | $a$1 & 0;
        }
        $_0$1 = 0;
        $_0$0 = $n_sroa_1_4_extract_trunc >>> ((_llvm_cttz_i32($d_sroa_1_4_extract_trunc | 0) | 0) >>> 0);
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
      $49 = Math_clz32($d_sroa_1_4_extract_trunc | 0) | 0;
      $51 = $49 - (Math_clz32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
      if ($51 >>> 0 <= 30) {
        $57 = $51 + 1 | 0;
        $58 = 31 - $51 | 0;
        $sr_1_ph = $57;
        $r_sroa_0_1_ph = $n_sroa_1_4_extract_trunc << $58 | $n_sroa_0_0_extract_trunc >>> ($57 >>> 0);
        $r_sroa_1_1_ph = $n_sroa_1_4_extract_trunc >>> ($57 >>> 0);
        $q_sroa_0_1_ph = 0;
        $q_sroa_1_1_ph = $n_sroa_0_0_extract_trunc << $58;
        break;
      }
      if (($rem | 0) == 0) {
        $_0$1 = 0;
        $_0$0 = 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
      HEAP32[$rem >> 2] = 0 | $a$0 & -1;
      HEAP32[$rem + 4 >> 2] = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
      $_0$1 = 0;
      $_0$0 = 0;
      return (tempRet0 = $_0$1, $_0$0) | 0;
    } else {
      if (!$17) {
        $117 = Math_clz32($d_sroa_1_4_extract_trunc | 0) | 0;
        $119 = $117 - (Math_clz32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
        if ($119 >>> 0 <= 31) {
          $125 = $119 + 1 | 0;
          $126 = 31 - $119 | 0;
          $130 = $119 - 31 >> 31;
          $sr_1_ph = $125;
          $r_sroa_0_1_ph = $n_sroa_0_0_extract_trunc >>> ($125 >>> 0) & $130 | $n_sroa_1_4_extract_trunc << $126;
          $r_sroa_1_1_ph = $n_sroa_1_4_extract_trunc >>> ($125 >>> 0) & $130;
          $q_sroa_0_1_ph = 0;
          $q_sroa_1_1_ph = $n_sroa_0_0_extract_trunc << $126;
          break;
        }
        if (($rem | 0) == 0) {
          $_0$1 = 0;
          $_0$0 = 0;
          return (tempRet0 = $_0$1, $_0$0) | 0;
        }
        HEAP32[$rem >> 2] = 0 | $a$0 & -1;
        HEAP32[$rem + 4 >> 2] = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
        $_0$1 = 0;
        $_0$0 = 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
      $66 = $d_sroa_0_0_extract_trunc - 1 | 0;
      if (($66 & $d_sroa_0_0_extract_trunc | 0) != 0) {
        $86 = (Math_clz32($d_sroa_0_0_extract_trunc | 0) | 0) + 33 | 0;
        $88 = $86 - (Math_clz32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
        $89 = 64 - $88 | 0;
        $91 = 32 - $88 | 0;
        $92 = $91 >> 31;
        $95 = $88 - 32 | 0;
        $105 = $95 >> 31;
        $sr_1_ph = $88;
        $r_sroa_0_1_ph = $91 - 1 >> 31 & $n_sroa_1_4_extract_trunc >>> ($95 >>> 0) | ($n_sroa_1_4_extract_trunc << $91 | $n_sroa_0_0_extract_trunc >>> ($88 >>> 0)) & $105;
        $r_sroa_1_1_ph = $105 & $n_sroa_1_4_extract_trunc >>> ($88 >>> 0);
        $q_sroa_0_1_ph = $n_sroa_0_0_extract_trunc << $89 & $92;
        $q_sroa_1_1_ph = ($n_sroa_1_4_extract_trunc << $89 | $n_sroa_0_0_extract_trunc >>> ($95 >>> 0)) & $92 | $n_sroa_0_0_extract_trunc << $91 & $88 - 33 >> 31;
        break;
      }
      if (($rem | 0) != 0) {
        HEAP32[$rem >> 2] = $66 & $n_sroa_0_0_extract_trunc;
        HEAP32[$rem + 4 >> 2] = 0;
      }
      if (($d_sroa_0_0_extract_trunc | 0) == 1) {
        $_0$1 = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
        $_0$0 = 0 | $a$0 & -1;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      } else {
        $78 = _llvm_cttz_i32($d_sroa_0_0_extract_trunc | 0) | 0;
        $_0$1 = 0 | $n_sroa_1_4_extract_trunc >>> ($78 >>> 0);
        $_0$0 = $n_sroa_1_4_extract_trunc << 32 - $78 | $n_sroa_0_0_extract_trunc >>> ($78 >>> 0) | 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
    }
  } while (0);
  if (($sr_1_ph | 0) == 0) {
    $q_sroa_1_1_lcssa = $q_sroa_1_1_ph;
    $q_sroa_0_1_lcssa = $q_sroa_0_1_ph;
    $r_sroa_1_1_lcssa = $r_sroa_1_1_ph;
    $r_sroa_0_1_lcssa = $r_sroa_0_1_ph;
    $carry_0_lcssa$1 = 0;
    $carry_0_lcssa$0 = 0;
  } else {
    $d_sroa_0_0_insert_insert99$0 = 0 | $b$0 & -1;
    $d_sroa_0_0_insert_insert99$1 = $d_sroa_1_4_extract_shift$0 | $b$1 & 0;
    $137$0 = _i64Add($d_sroa_0_0_insert_insert99$0, $d_sroa_0_0_insert_insert99$1, -1, -1) | 0;
    $137$1 = tempRet0;
    $q_sroa_1_1198 = $q_sroa_1_1_ph;
    $q_sroa_0_1199 = $q_sroa_0_1_ph;
    $r_sroa_1_1200 = $r_sroa_1_1_ph;
    $r_sroa_0_1201 = $r_sroa_0_1_ph;
    $sr_1202 = $sr_1_ph;
    $carry_0203 = 0;
    while (1) {
      $147 = $q_sroa_0_1199 >>> 31 | $q_sroa_1_1198 << 1;
      $149 = $carry_0203 | $q_sroa_0_1199 << 1;
      $r_sroa_0_0_insert_insert42$0 = 0 | ($r_sroa_0_1201 << 1 | $q_sroa_1_1198 >>> 31);
      $r_sroa_0_0_insert_insert42$1 = $r_sroa_0_1201 >>> 31 | $r_sroa_1_1200 << 1 | 0;
      _i64Subtract($137$0, $137$1, $r_sroa_0_0_insert_insert42$0, $r_sroa_0_0_insert_insert42$1) | 0;
      $150$1 = tempRet0;
      $151$0 = $150$1 >> 31 | (($150$1 | 0) < 0 ? -1 : 0) << 1;
      $152 = $151$0 & 1;
      $154$0 = _i64Subtract($r_sroa_0_0_insert_insert42$0, $r_sroa_0_0_insert_insert42$1, $151$0 & $d_sroa_0_0_insert_insert99$0, ((($150$1 | 0) < 0 ? -1 : 0) >> 31 | (($150$1 | 0) < 0 ? -1 : 0) << 1) & $d_sroa_0_0_insert_insert99$1) | 0;
      $r_sroa_0_0_extract_trunc = $154$0;
      $r_sroa_1_4_extract_trunc = tempRet0;
      $155 = $sr_1202 - 1 | 0;
      if (($155 | 0) == 0) {
        break;
      } else {
        $q_sroa_1_1198 = $147;
        $q_sroa_0_1199 = $149;
        $r_sroa_1_1200 = $r_sroa_1_4_extract_trunc;
        $r_sroa_0_1201 = $r_sroa_0_0_extract_trunc;
        $sr_1202 = $155;
        $carry_0203 = $152;
      }
    }
    $q_sroa_1_1_lcssa = $147;
    $q_sroa_0_1_lcssa = $149;
    $r_sroa_1_1_lcssa = $r_sroa_1_4_extract_trunc;
    $r_sroa_0_1_lcssa = $r_sroa_0_0_extract_trunc;
    $carry_0_lcssa$1 = 0;
    $carry_0_lcssa$0 = $152;
  }
  $q_sroa_0_0_insert_ext75$0 = $q_sroa_0_1_lcssa;
  $q_sroa_0_0_insert_ext75$1 = 0;
  $q_sroa_0_0_insert_insert77$1 = $q_sroa_1_1_lcssa | $q_sroa_0_0_insert_ext75$1;
  if (($rem | 0) != 0) {
    HEAP32[$rem >> 2] = 0 | $r_sroa_0_1_lcssa;
    HEAP32[$rem + 4 >> 2] = $r_sroa_1_1_lcssa | 0;
  }
  $_0$1 = (0 | $q_sroa_0_0_insert_ext75$0) >>> 31 | $q_sroa_0_0_insert_insert77$1 << 1 | ($q_sroa_0_0_insert_ext75$1 << 1 | $q_sroa_0_0_insert_ext75$0 >>> 31) & 0 | $carry_0_lcssa$1;
  $_0$0 = ($q_sroa_0_0_insert_ext75$0 << 1 | 0 >>> 31) & -2 | $carry_0_lcssa$0;
  return (tempRet0 = $_0$1, $_0$0) | 0;
}
// =======================================================================



  
function dynCall_iiii(index,a1,a2,a3) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0;
  return FUNCTION_TABLE_iiii[index&1](a1|0,a2|0,a3|0)|0;
}


function dynCall_vii(index,a1,a2) {
  index = index|0;
  a1=a1|0; a2=a2|0;
  FUNCTION_TABLE_vii[index&3](a1|0,a2|0);
}


function dynCall_ii(index,a1) {
  index = index|0;
  a1=a1|0;
  return FUNCTION_TABLE_ii[index&3](a1|0)|0;
}


function dynCall_viii(index,a1,a2,a3) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0;
  FUNCTION_TABLE_viii[index&15](a1|0,a2|0,a3|0);
}


function dynCall_v(index) {
  index = index|0;
  
  FUNCTION_TABLE_v[index&7]();
}


function dynCall_viiiiii(index,a1,a2,a3,a4,a5,a6) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0;
  FUNCTION_TABLE_viiiiii[index&15](a1|0,a2|0,a3|0,a4|0,a5|0,a6|0);
}


function dynCall_iiiiii(index,a1,a2,a3,a4,a5) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0;
  return FUNCTION_TABLE_iiiiii[index&15](a1|0,a2|0,a3|0,a4|0,a5|0)|0;
}


function dynCall_viiii(index,a1,a2,a3,a4) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0;
  FUNCTION_TABLE_viiii[index&7](a1|0,a2|0,a3|0,a4|0);
}

function b0(p0,p1,p2) { p0 = p0|0;p1 = p1|0;p2 = p2|0; nullFunc_iiii(0);return 0; }
function b1(p0,p1) { p0 = p0|0;p1 = p1|0; nullFunc_vii(1); }
function b2(p0) { p0 = p0|0; nullFunc_ii(2);return 0; }
function b3(p0,p1,p2) { p0 = p0|0;p1 = p1|0;p2 = p2|0; nullFunc_viii(3); }
function _glGetShaderiv__wrapper(p0,p1,p2) { p0 = p0|0;p1 = p1|0;p2 = p2|0; _glGetShaderiv(p0|0,p1|0,p2|0); }
function b4() { ; nullFunc_v(4); }
function b5(p0,p1,p2,p3,p4,p5) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0; nullFunc_viiiiii(5); }
function b6(p0,p1,p2,p3,p4) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0; nullFunc_iiiiii(6);return 0; }
function b7(p0,p1,p2,p3) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0; nullFunc_viiii(7); }
function _glGetShaderInfoLog__wrapper(p0,p1,p2,p3) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0; _glGetShaderInfoLog(p0|0,p1|0,p2|0,p3|0); }
function _glGetProgramInfoLog__wrapper(p0,p1,p2,p3) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0; _glGetProgramInfoLog(p0|0,p1|0,p2|0,p3|0); }

// EMSCRIPTEN_END_FUNCS
var FUNCTION_TABLE_iiii = [b0,_stbi__stdio_read];
var FUNCTION_TABLE_vii = [b1,b1,_stbi__stdio_skip,b1];
var FUNCTION_TABLE_ii = [b2,b2,b2,_stbi__stdio_eof];
var FUNCTION_TABLE_viii = [b3,b3,b3,b3,b3,_glGetShaderiv__wrapper,b3,b3,b3,b3,b3,b3,_stbi__idct_block,b3,b3,b3];
var FUNCTION_TABLE_v = [b4,b4,b4,b4,_sdl_update,b4,b4,b4];
var FUNCTION_TABLE_viiiiii = [b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,_stbi__YCbCr_to_RGB_row,b5,b5];
var FUNCTION_TABLE_iiiiii = [b6,b6,b6,b6,b6,b6,b6,b6,_resample_row_1,_stbi__resample_row_v_2,_stbi__resample_row_h_2,_stbi__resample_row_generic,b6,b6,_stbi__resample_row_hv_2,b6];
var FUNCTION_TABLE_viiii = [b7,b7,b7,b7,b7,b7,_glGetShaderInfoLog__wrapper,_glGetProgramInfoLog__wrapper];

  return { _i64Subtract: _i64Subtract, _free: _free, _main: _main, _i64Add: _i64Add, _memset: _memset, _malloc: _malloc, _memcpy: _memcpy, _strlen: _strlen, _bitshift64Lshr: _bitshift64Lshr, _bitshift64Shl: _bitshift64Shl, runPostSets: runPostSets, stackAlloc: stackAlloc, stackSave: stackSave, stackRestore: stackRestore, setThrew: setThrew, setTempRet0: setTempRet0, getTempRet0: getTempRet0, dynCall_iiii: dynCall_iiii, dynCall_vii: dynCall_vii, dynCall_ii: dynCall_ii, dynCall_viii: dynCall_viii, dynCall_v: dynCall_v, dynCall_viiiiii: dynCall_viiiiii, dynCall_iiiiii: dynCall_iiiiii, dynCall_viiii: dynCall_viiii };
})
// EMSCRIPTEN_END_ASM
(Module.asmGlobalArg, Module.asmLibraryArg, buffer);
var real__i64Subtract = asm["_i64Subtract"]; asm["_i64Subtract"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__i64Subtract.apply(null, arguments);
};

var real__main = asm["_main"]; asm["_main"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__main.apply(null, arguments);
};

var real__i64Add = asm["_i64Add"]; asm["_i64Add"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__i64Add.apply(null, arguments);
};

var real__strlen = asm["_strlen"]; asm["_strlen"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__strlen.apply(null, arguments);
};

var real__bitshift64Lshr = asm["_bitshift64Lshr"]; asm["_bitshift64Lshr"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__bitshift64Lshr.apply(null, arguments);
};

var real__bitshift64Shl = asm["_bitshift64Shl"]; asm["_bitshift64Shl"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__bitshift64Shl.apply(null, arguments);
};

var real_runPostSets = asm["runPostSets"]; asm["runPostSets"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real_runPostSets.apply(null, arguments);
};
var _i64Subtract = Module["_i64Subtract"] = asm["_i64Subtract"];
var _free = Module["_free"] = asm["_free"];
var _main = Module["_main"] = asm["_main"];
var _i64Add = Module["_i64Add"] = asm["_i64Add"];
var _memset = Module["_memset"] = asm["_memset"];
var _malloc = Module["_malloc"] = asm["_malloc"];
var _memcpy = Module["_memcpy"] = asm["_memcpy"];
var _strlen = Module["_strlen"] = asm["_strlen"];
var _bitshift64Lshr = Module["_bitshift64Lshr"] = asm["_bitshift64Lshr"];
var _bitshift64Shl = Module["_bitshift64Shl"] = asm["_bitshift64Shl"];
var runPostSets = Module["runPostSets"] = asm["runPostSets"];
var dynCall_iiii = Module["dynCall_iiii"] = asm["dynCall_iiii"];
var dynCall_vii = Module["dynCall_vii"] = asm["dynCall_vii"];
var dynCall_ii = Module["dynCall_ii"] = asm["dynCall_ii"];
var dynCall_viii = Module["dynCall_viii"] = asm["dynCall_viii"];
var dynCall_v = Module["dynCall_v"] = asm["dynCall_v"];
var dynCall_viiiiii = Module["dynCall_viiiiii"] = asm["dynCall_viiiiii"];
var dynCall_iiiiii = Module["dynCall_iiiiii"] = asm["dynCall_iiiiii"];
var dynCall_viiii = Module["dynCall_viiii"] = asm["dynCall_viiii"];

Runtime.stackAlloc = asm['stackAlloc'];
Runtime.stackSave = asm['stackSave'];
Runtime.stackRestore = asm['stackRestore'];
Runtime.setTempRet0 = asm['setTempRet0'];
Runtime.getTempRet0 = asm['getTempRet0'];


// TODO: strip out parts of this we do not need

//======= begin closure i64 code =======

// Copyright 2009 The Closure Library Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/**
 * @fileoverview Defines a Long class for representing a 64-bit two's-complement
 * integer value, which faithfully simulates the behavior of a Java "long". This
 * implementation is derived from LongLib in GWT.
 *
 */

var i64Math = (function() { // Emscripten wrapper
  var goog = { math: {} };


  /**
   * Constructs a 64-bit two's-complement integer, given its low and high 32-bit
   * values as *signed* integers.  See the from* functions below for more
   * convenient ways of constructing Longs.
   *
   * The internal representation of a long is the two given signed, 32-bit values.
   * We use 32-bit pieces because these are the size of integers on which
   * Javascript performs bit-operations.  For operations like addition and
   * multiplication, we split each number into 16-bit pieces, which can easily be
   * multiplied within Javascript's floating-point representation without overflow
   * or change in sign.
   *
   * In the algorithms below, we frequently reduce the negative case to the
   * positive case by negating the input(s) and then post-processing the result.
   * Note that we must ALWAYS check specially whether those values are MIN_VALUE
   * (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as
   * a positive number, it overflows back into a negative).  Not handling this
   * case would often result in infinite recursion.
   *
   * @param {number} low  The low (signed) 32 bits of the long.
   * @param {number} high  The high (signed) 32 bits of the long.
   * @constructor
   */
  goog.math.Long = function(low, high) {
    /**
     * @type {number}
     * @private
     */
    this.low_ = low | 0;  // force into 32 signed bits.

    /**
     * @type {number}
     * @private
     */
    this.high_ = high | 0;  // force into 32 signed bits.
  };


  // NOTE: Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the
  // from* methods on which they depend.


  /**
   * A cache of the Long representations of small integer values.
   * @type {!Object}
   * @private
   */
  goog.math.Long.IntCache_ = {};


  /**
   * Returns a Long representing the given (32-bit) integer value.
   * @param {number} value The 32-bit integer in question.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromInt = function(value) {
    if (-128 <= value && value < 128) {
      var cachedObj = goog.math.Long.IntCache_[value];
      if (cachedObj) {
        return cachedObj;
      }
    }

    var obj = new goog.math.Long(value | 0, value < 0 ? -1 : 0);
    if (-128 <= value && value < 128) {
      goog.math.Long.IntCache_[value] = obj;
    }
    return obj;
  };


  /**
   * Returns a Long representing the given value, provided that it is a finite
   * number.  Otherwise, zero is returned.
   * @param {number} value The number in question.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromNumber = function(value) {
    if (isNaN(value) || !isFinite(value)) {
      return goog.math.Long.ZERO;
    } else if (value <= -goog.math.Long.TWO_PWR_63_DBL_) {
      return goog.math.Long.MIN_VALUE;
    } else if (value + 1 >= goog.math.Long.TWO_PWR_63_DBL_) {
      return goog.math.Long.MAX_VALUE;
    } else if (value < 0) {
      return goog.math.Long.fromNumber(-value).negate();
    } else {
      return new goog.math.Long(
          (value % goog.math.Long.TWO_PWR_32_DBL_) | 0,
          (value / goog.math.Long.TWO_PWR_32_DBL_) | 0);
    }
  };


  /**
   * Returns a Long representing the 64-bit integer that comes by concatenating
   * the given high and low bits.  Each is assumed to use 32 bits.
   * @param {number} lowBits The low 32-bits.
   * @param {number} highBits The high 32-bits.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromBits = function(lowBits, highBits) {
    return new goog.math.Long(lowBits, highBits);
  };


  /**
   * Returns a Long representation of the given string, written using the given
   * radix.
   * @param {string} str The textual representation of the Long.
   * @param {number=} opt_radix The radix in which the text is written.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromString = function(str, opt_radix) {
    if (str.length == 0) {
      throw Error('number format error: empty string');
    }

    var radix = opt_radix || 10;
    if (radix < 2 || 36 < radix) {
      throw Error('radix out of range: ' + radix);
    }

    if (str.charAt(0) == '-') {
      return goog.math.Long.fromString(str.substring(1), radix).negate();
    } else if (str.indexOf('-') >= 0) {
      throw Error('number format error: interior "-" character: ' + str);
    }

    // Do several (8) digits each time through the loop, so as to
    // minimize the calls to the very expensive emulated div.
    var radixToPower = goog.math.Long.fromNumber(Math.pow(radix, 8));

    var result = goog.math.Long.ZERO;
    for (var i = 0; i < str.length; i += 8) {
      var size = Math.min(8, str.length - i);
      var value = parseInt(str.substring(i, i + size), radix);
      if (size < 8) {
        var power = goog.math.Long.fromNumber(Math.pow(radix, size));
        result = result.multiply(power).add(goog.math.Long.fromNumber(value));
      } else {
        result = result.multiply(radixToPower);
        result = result.add(goog.math.Long.fromNumber(value));
      }
    }
    return result;
  };


  // NOTE: the compiler should inline these constant values below and then remove
  // these variables, so there should be no runtime penalty for these.


  /**
   * Number used repeated below in calculations.  This must appear before the
   * first call to any from* function below.
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_16_DBL_ = 1 << 16;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_24_DBL_ = 1 << 24;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_32_DBL_ =
      goog.math.Long.TWO_PWR_16_DBL_ * goog.math.Long.TWO_PWR_16_DBL_;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_31_DBL_ =
      goog.math.Long.TWO_PWR_32_DBL_ / 2;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_48_DBL_ =
      goog.math.Long.TWO_PWR_32_DBL_ * goog.math.Long.TWO_PWR_16_DBL_;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_64_DBL_ =
      goog.math.Long.TWO_PWR_32_DBL_ * goog.math.Long.TWO_PWR_32_DBL_;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_63_DBL_ =
      goog.math.Long.TWO_PWR_64_DBL_ / 2;


  /** @type {!goog.math.Long} */
  goog.math.Long.ZERO = goog.math.Long.fromInt(0);


  /** @type {!goog.math.Long} */
  goog.math.Long.ONE = goog.math.Long.fromInt(1);


  /** @type {!goog.math.Long} */
  goog.math.Long.NEG_ONE = goog.math.Long.fromInt(-1);


  /** @type {!goog.math.Long} */
  goog.math.Long.MAX_VALUE =
      goog.math.Long.fromBits(0xFFFFFFFF | 0, 0x7FFFFFFF | 0);


  /** @type {!goog.math.Long} */
  goog.math.Long.MIN_VALUE = goog.math.Long.fromBits(0, 0x80000000 | 0);


  /**
   * @type {!goog.math.Long}
   * @private
   */
  goog.math.Long.TWO_PWR_24_ = goog.math.Long.fromInt(1 << 24);


  /** @return {number} The value, assuming it is a 32-bit integer. */
  goog.math.Long.prototype.toInt = function() {
    return this.low_;
  };


  /** @return {number} The closest floating-point representation to this value. */
  goog.math.Long.prototype.toNumber = function() {
    return this.high_ * goog.math.Long.TWO_PWR_32_DBL_ +
           this.getLowBitsUnsigned();
  };


  /**
   * @param {number=} opt_radix The radix in which the text should be written.
   * @return {string} The textual representation of this value.
   */
  goog.math.Long.prototype.toString = function(opt_radix) {
    var radix = opt_radix || 10;
    if (radix < 2 || 36 < radix) {
      throw Error('radix out of range: ' + radix);
    }

    if (this.isZero()) {
      return '0';
    }

    if (this.isNegative()) {
      if (this.equals(goog.math.Long.MIN_VALUE)) {
        // We need to change the Long value before it can be negated, so we remove
        // the bottom-most digit in this base and then recurse to do the rest.
        var radixLong = goog.math.Long.fromNumber(radix);
        var div = this.div(radixLong);
        var rem = div.multiply(radixLong).subtract(this);
        return div.toString(radix) + rem.toInt().toString(radix);
      } else {
        return '-' + this.negate().toString(radix);
      }
    }

    // Do several (6) digits each time through the loop, so as to
    // minimize the calls to the very expensive emulated div.
    var radixToPower = goog.math.Long.fromNumber(Math.pow(radix, 6));

    var rem = this;
    var result = '';
    while (true) {
      var remDiv = rem.div(radixToPower);
      var intval = rem.subtract(remDiv.multiply(radixToPower)).toInt();
      var digits = intval.toString(radix);

      rem = remDiv;
      if (rem.isZero()) {
        return digits + result;
      } else {
        while (digits.length < 6) {
          digits = '0' + digits;
        }
        result = '' + digits + result;
      }
    }
  };


  /** @return {number} The high 32-bits as a signed value. */
  goog.math.Long.prototype.getHighBits = function() {
    return this.high_;
  };


  /** @return {number} The low 32-bits as a signed value. */
  goog.math.Long.prototype.getLowBits = function() {
    return this.low_;
  };


  /** @return {number} The low 32-bits as an unsigned value. */
  goog.math.Long.prototype.getLowBitsUnsigned = function() {
    return (this.low_ >= 0) ?
        this.low_ : goog.math.Long.TWO_PWR_32_DBL_ + this.low_;
  };


  /**
   * @return {number} Returns the number of bits needed to represent the absolute
   *     value of this Long.
   */
  goog.math.Long.prototype.getNumBitsAbs = function() {
    if (this.isNegative()) {
      if (this.equals(goog.math.Long.MIN_VALUE)) {
        return 64;
      } else {
        return this.negate().getNumBitsAbs();
      }
    } else {
      var val = this.high_ != 0 ? this.high_ : this.low_;
      for (var bit = 31; bit > 0; bit--) {
        if ((val & (1 << bit)) != 0) {
          break;
        }
      }
      return this.high_ != 0 ? bit + 33 : bit + 1;
    }
  };


  /** @return {boolean} Whether this value is zero. */
  goog.math.Long.prototype.isZero = function() {
    return this.high_ == 0 && this.low_ == 0;
  };


  /** @return {boolean} Whether this value is negative. */
  goog.math.Long.prototype.isNegative = function() {
    return this.high_ < 0;
  };


  /** @return {boolean} Whether this value is odd. */
  goog.math.Long.prototype.isOdd = function() {
    return (this.low_ & 1) == 1;
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long equals the other.
   */
  goog.math.Long.prototype.equals = function(other) {
    return (this.high_ == other.high_) && (this.low_ == other.low_);
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long does not equal the other.
   */
  goog.math.Long.prototype.notEquals = function(other) {
    return (this.high_ != other.high_) || (this.low_ != other.low_);
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is less than the other.
   */
  goog.math.Long.prototype.lessThan = function(other) {
    return this.compare(other) < 0;
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is less than or equal to the other.
   */
  goog.math.Long.prototype.lessThanOrEqual = function(other) {
    return this.compare(other) <= 0;
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is greater than the other.
   */
  goog.math.Long.prototype.greaterThan = function(other) {
    return this.compare(other) > 0;
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is greater than or equal to the other.
   */
  goog.math.Long.prototype.greaterThanOrEqual = function(other) {
    return this.compare(other) >= 0;
  };


  /**
   * Compares this Long with the given one.
   * @param {goog.math.Long} other Long to compare against.
   * @return {number} 0 if they are the same, 1 if the this is greater, and -1
   *     if the given one is greater.
   */
  goog.math.Long.prototype.compare = function(other) {
    if (this.equals(other)) {
      return 0;
    }

    var thisNeg = this.isNegative();
    var otherNeg = other.isNegative();
    if (thisNeg && !otherNeg) {
      return -1;
    }
    if (!thisNeg && otherNeg) {
      return 1;
    }

    // at this point, the signs are the same, so subtraction will not overflow
    if (this.subtract(other).isNegative()) {
      return -1;
    } else {
      return 1;
    }
  };


  /** @return {!goog.math.Long} The negation of this value. */
  goog.math.Long.prototype.negate = function() {
    if (this.equals(goog.math.Long.MIN_VALUE)) {
      return goog.math.Long.MIN_VALUE;
    } else {
      return this.not().add(goog.math.Long.ONE);
    }
  };


  /**
   * Returns the sum of this and the given Long.
   * @param {goog.math.Long} other Long to add to this one.
   * @return {!goog.math.Long} The sum of this and the given Long.
   */
  goog.math.Long.prototype.add = function(other) {
    // Divide each number into 4 chunks of 16 bits, and then sum the chunks.

    var a48 = this.high_ >>> 16;
    var a32 = this.high_ & 0xFFFF;
    var a16 = this.low_ >>> 16;
    var a00 = this.low_ & 0xFFFF;

    var b48 = other.high_ >>> 16;
    var b32 = other.high_ & 0xFFFF;
    var b16 = other.low_ >>> 16;
    var b00 = other.low_ & 0xFFFF;

    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
    c00 += a00 + b00;
    c16 += c00 >>> 16;
    c00 &= 0xFFFF;
    c16 += a16 + b16;
    c32 += c16 >>> 16;
    c16 &= 0xFFFF;
    c32 += a32 + b32;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c48 += a48 + b48;
    c48 &= 0xFFFF;
    return goog.math.Long.fromBits((c16 << 16) | c00, (c48 << 16) | c32);
  };


  /**
   * Returns the difference of this and the given Long.
   * @param {goog.math.Long} other Long to subtract from this.
   * @return {!goog.math.Long} The difference of this and the given Long.
   */
  goog.math.Long.prototype.subtract = function(other) {
    return this.add(other.negate());
  };


  /**
   * Returns the product of this and the given long.
   * @param {goog.math.Long} other Long to multiply with this.
   * @return {!goog.math.Long} The product of this and the other.
   */
  goog.math.Long.prototype.multiply = function(other) {
    if (this.isZero()) {
      return goog.math.Long.ZERO;
    } else if (other.isZero()) {
      return goog.math.Long.ZERO;
    }

    if (this.equals(goog.math.Long.MIN_VALUE)) {
      return other.isOdd() ? goog.math.Long.MIN_VALUE : goog.math.Long.ZERO;
    } else if (other.equals(goog.math.Long.MIN_VALUE)) {
      return this.isOdd() ? goog.math.Long.MIN_VALUE : goog.math.Long.ZERO;
    }

    if (this.isNegative()) {
      if (other.isNegative()) {
        return this.negate().multiply(other.negate());
      } else {
        return this.negate().multiply(other).negate();
      }
    } else if (other.isNegative()) {
      return this.multiply(other.negate()).negate();
    }

    // If both longs are small, use float multiplication
    if (this.lessThan(goog.math.Long.TWO_PWR_24_) &&
        other.lessThan(goog.math.Long.TWO_PWR_24_)) {
      return goog.math.Long.fromNumber(this.toNumber() * other.toNumber());
    }

    // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.
    // We can skip products that would overflow.

    var a48 = this.high_ >>> 16;
    var a32 = this.high_ & 0xFFFF;
    var a16 = this.low_ >>> 16;
    var a00 = this.low_ & 0xFFFF;

    var b48 = other.high_ >>> 16;
    var b32 = other.high_ & 0xFFFF;
    var b16 = other.low_ >>> 16;
    var b00 = other.low_ & 0xFFFF;

    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
    c00 += a00 * b00;
    c16 += c00 >>> 16;
    c00 &= 0xFFFF;
    c16 += a16 * b00;
    c32 += c16 >>> 16;
    c16 &= 0xFFFF;
    c16 += a00 * b16;
    c32 += c16 >>> 16;
    c16 &= 0xFFFF;
    c32 += a32 * b00;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c32 += a16 * b16;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c32 += a00 * b32;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;
    c48 &= 0xFFFF;
    return goog.math.Long.fromBits((c16 << 16) | c00, (c48 << 16) | c32);
  };


  /**
   * Returns this Long divided by the given one.
   * @param {goog.math.Long} other Long by which to divide.
   * @return {!goog.math.Long} This Long divided by the given one.
   */
  goog.math.Long.prototype.div = function(other) {
    if (other.isZero()) {
      throw Error('division by zero');
    } else if (this.isZero()) {
      return goog.math.Long.ZERO;
    }

    if (this.equals(goog.math.Long.MIN_VALUE)) {
      if (other.equals(goog.math.Long.ONE) ||
          other.equals(goog.math.Long.NEG_ONE)) {
        return goog.math.Long.MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE
      } else if (other.equals(goog.math.Long.MIN_VALUE)) {
        return goog.math.Long.ONE;
      } else {
        // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.
        var halfThis = this.shiftRight(1);
        var approx = halfThis.div(other).shiftLeft(1);
        if (approx.equals(goog.math.Long.ZERO)) {
          return other.isNegative() ? goog.math.Long.ONE : goog.math.Long.NEG_ONE;
        } else {
          var rem = this.subtract(other.multiply(approx));
          var result = approx.add(rem.div(other));
          return result;
        }
      }
    } else if (other.equals(goog.math.Long.MIN_VALUE)) {
      return goog.math.Long.ZERO;
    }

    if (this.isNegative()) {
      if (other.isNegative()) {
        return this.negate().div(other.negate());
      } else {
        return this.negate().div(other).negate();
      }
    } else if (other.isNegative()) {
      return this.div(other.negate()).negate();
    }

    // Repeat the following until the remainder is less than other:  find a
    // floating-point that approximates remainder / other *from below*, add this
    // into the result, and subtract it from the remainder.  It is critical that
    // the approximate value is less than or equal to the real value so that the
    // remainder never becomes negative.
    var res = goog.math.Long.ZERO;
    var rem = this;
    while (rem.greaterThanOrEqual(other)) {
      // Approximate the result of division. This may be a little greater or
      // smaller than the actual value.
      var approx = Math.max(1, Math.floor(rem.toNumber() / other.toNumber()));

      // We will tweak the approximate result by changing it in the 48-th digit or
      // the smallest non-fractional digit, whichever is larger.
      var log2 = Math.ceil(Math.log(approx) / Math.LN2);
      var delta = (log2 <= 48) ? 1 : Math.pow(2, log2 - 48);

      // Decrease the approximation until it is smaller than the remainder.  Note
      // that if it is too large, the product overflows and is negative.
      var approxRes = goog.math.Long.fromNumber(approx);
      var approxRem = approxRes.multiply(other);
      while (approxRem.isNegative() || approxRem.greaterThan(rem)) {
        approx -= delta;
        approxRes = goog.math.Long.fromNumber(approx);
        approxRem = approxRes.multiply(other);
      }

      // We know the answer can't be zero... and actually, zero would cause
      // infinite recursion since we would make no progress.
      if (approxRes.isZero()) {
        approxRes = goog.math.Long.ONE;
      }

      res = res.add(approxRes);
      rem = rem.subtract(approxRem);
    }
    return res;
  };


  /**
   * Returns this Long modulo the given one.
   * @param {goog.math.Long} other Long by which to mod.
   * @return {!goog.math.Long} This Long modulo the given one.
   */
  goog.math.Long.prototype.modulo = function(other) {
    return this.subtract(this.div(other).multiply(other));
  };


  /** @return {!goog.math.Long} The bitwise-NOT of this value. */
  goog.math.Long.prototype.not = function() {
    return goog.math.Long.fromBits(~this.low_, ~this.high_);
  };


  /**
   * Returns the bitwise-AND of this Long and the given one.
   * @param {goog.math.Long} other The Long with which to AND.
   * @return {!goog.math.Long} The bitwise-AND of this and the other.
   */
  goog.math.Long.prototype.and = function(other) {
    return goog.math.Long.fromBits(this.low_ & other.low_,
                                   this.high_ & other.high_);
  };


  /**
   * Returns the bitwise-OR of this Long and the given one.
   * @param {goog.math.Long} other The Long with which to OR.
   * @return {!goog.math.Long} The bitwise-OR of this and the other.
   */
  goog.math.Long.prototype.or = function(other) {
    return goog.math.Long.fromBits(this.low_ | other.low_,
                                   this.high_ | other.high_);
  };


  /**
   * Returns the bitwise-XOR of this Long and the given one.
   * @param {goog.math.Long} other The Long with which to XOR.
   * @return {!goog.math.Long} The bitwise-XOR of this and the other.
   */
  goog.math.Long.prototype.xor = function(other) {
    return goog.math.Long.fromBits(this.low_ ^ other.low_,
                                   this.high_ ^ other.high_);
  };


  /**
   * Returns this Long with bits shifted to the left by the given amount.
   * @param {number} numBits The number of bits by which to shift.
   * @return {!goog.math.Long} This shifted to the left by the given amount.
   */
  goog.math.Long.prototype.shiftLeft = function(numBits) {
    numBits &= 63;
    if (numBits == 0) {
      return this;
    } else {
      var low = this.low_;
      if (numBits < 32) {
        var high = this.high_;
        return goog.math.Long.fromBits(
            low << numBits,
            (high << numBits) | (low >>> (32 - numBits)));
      } else {
        return goog.math.Long.fromBits(0, low << (numBits - 32));
      }
    }
  };


  /**
   * Returns this Long with bits shifted to the right by the given amount.
   * @param {number} numBits The number of bits by which to shift.
   * @return {!goog.math.Long} This shifted to the right by the given amount.
   */
  goog.math.Long.prototype.shiftRight = function(numBits) {
    numBits &= 63;
    if (numBits == 0) {
      return this;
    } else {
      var high = this.high_;
      if (numBits < 32) {
        var low = this.low_;
        return goog.math.Long.fromBits(
            (low >>> numBits) | (high << (32 - numBits)),
            high >> numBits);
      } else {
        return goog.math.Long.fromBits(
            high >> (numBits - 32),
            high >= 0 ? 0 : -1);
      }
    }
  };


  /**
   * Returns this Long with bits shifted to the right by the given amount, with
   * the new top bits matching the current sign bit.
   * @param {number} numBits The number of bits by which to shift.
   * @return {!goog.math.Long} This shifted to the right by the given amount, with
   *     zeros placed into the new leading bits.
   */
  goog.math.Long.prototype.shiftRightUnsigned = function(numBits) {
    numBits &= 63;
    if (numBits == 0) {
      return this;
    } else {
      var high = this.high_;
      if (numBits < 32) {
        var low = this.low_;
        return goog.math.Long.fromBits(
            (low >>> numBits) | (high << (32 - numBits)),
            high >>> numBits);
      } else if (numBits == 32) {
        return goog.math.Long.fromBits(high, 0);
      } else {
        return goog.math.Long.fromBits(high >>> (numBits - 32), 0);
      }
    }
  };

  //======= begin jsbn =======

  var navigator = { appName: 'Modern Browser' }; // polyfill a little

  // Copyright (c) 2005  Tom Wu
  // All Rights Reserved.
  // http://www-cs-students.stanford.edu/~tjw/jsbn/

  /*
   * Copyright (c) 2003-2005  Tom Wu
   * All Rights Reserved.
   *
   * Permission is hereby granted, free of charge, to any person obtaining
   * a copy of this software and associated documentation files (the
   * "Software"), to deal in the Software without restriction, including
   * without limitation the rights to use, copy, modify, merge, publish,
   * distribute, sublicense, and/or sell copies of the Software, and to
   * permit persons to whom the Software is furnished to do so, subject to
   * the following conditions:
   *
   * The above copyright notice and this permission notice shall be
   * included in all copies or substantial portions of the Software.
   *
   * THE SOFTWARE IS PROVIDED "AS-IS" AND WITHOUT WARRANTY OF ANY KIND, 
   * EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY 
   * WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.  
   *
   * IN NO EVENT SHALL TOM WU BE LIABLE FOR ANY SPECIAL, INCIDENTAL,
   * INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND, OR ANY DAMAGES WHATSOEVER
   * RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER OR NOT ADVISED OF
   * THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF LIABILITY, ARISING OUT
   * OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
   *
   * In addition, the following condition applies:
   *
   * All redistributions must retain an intact copy of this copyright notice
   * and disclaimer.
   */

  // Basic JavaScript BN library - subset useful for RSA encryption.

  // Bits per digit
  var dbits;

  // JavaScript engine analysis
  var canary = 0xdeadbeefcafe;
  var j_lm = ((canary&0xffffff)==0xefcafe);

  // (public) Constructor
  function BigInteger(a,b,c) {
    if(a != null)
      if("number" == typeof a) this.fromNumber(a,b,c);
      else if(b == null && "string" != typeof a) this.fromString(a,256);
      else this.fromString(a,b);
  }

  // return new, unset BigInteger
  function nbi() { return new BigInteger(null); }

  // am: Compute w_j += (x*this_i), propagate carries,
  // c is initial carry, returns final carry.
  // c < 3*dvalue, x < 2*dvalue, this_i < dvalue
  // We need to select the fastest one that works in this environment.

  // am1: use a single mult and divide to get the high bits,
  // max digit bits should be 26 because
  // max internal value = 2*dvalue^2-2*dvalue (< 2^53)
  function am1(i,x,w,j,c,n) {
    while(--n >= 0) {
      var v = x*this[i++]+w[j]+c;
      c = Math.floor(v/0x4000000);
      w[j++] = v&0x3ffffff;
    }
    return c;
  }
  // am2 avoids a big mult-and-extract completely.
  // Max digit bits should be <= 30 because we do bitwise ops
  // on values up to 2*hdvalue^2-hdvalue-1 (< 2^31)
  function am2(i,x,w,j,c,n) {
    var xl = x&0x7fff, xh = x>>15;
    while(--n >= 0) {
      var l = this[i]&0x7fff;
      var h = this[i++]>>15;
      var m = xh*l+h*xl;
      l = xl*l+((m&0x7fff)<<15)+w[j]+(c&0x3fffffff);
      c = (l>>>30)+(m>>>15)+xh*h+(c>>>30);
      w[j++] = l&0x3fffffff;
    }
    return c;
  }
  // Alternately, set max digit bits to 28 since some
  // browsers slow down when dealing with 32-bit numbers.
  function am3(i,x,w,j,c,n) {
    var xl = x&0x3fff, xh = x>>14;
    while(--n >= 0) {
      var l = this[i]&0x3fff;
      var h = this[i++]>>14;
      var m = xh*l+h*xl;
      l = xl*l+((m&0x3fff)<<14)+w[j]+c;
      c = (l>>28)+(m>>14)+xh*h;
      w[j++] = l&0xfffffff;
    }
    return c;
  }
  if(j_lm && (navigator.appName == "Microsoft Internet Explorer")) {
    BigInteger.prototype.am = am2;
    dbits = 30;
  }
  else if(j_lm && (navigator.appName != "Netscape")) {
    BigInteger.prototype.am = am1;
    dbits = 26;
  }
  else { // Mozilla/Netscape seems to prefer am3
    BigInteger.prototype.am = am3;
    dbits = 28;
  }

  BigInteger.prototype.DB = dbits;
  BigInteger.prototype.DM = ((1<<dbits)-1);
  BigInteger.prototype.DV = (1<<dbits);

  var BI_FP = 52;
  BigInteger.prototype.FV = Math.pow(2,BI_FP);
  BigInteger.prototype.F1 = BI_FP-dbits;
  BigInteger.prototype.F2 = 2*dbits-BI_FP;

  // Digit conversions
  var BI_RM = "0123456789abcdefghijklmnopqrstuvwxyz";
  var BI_RC = new Array();
  var rr,vv;
  rr = "0".charCodeAt(0);
  for(vv = 0; vv <= 9; ++vv) BI_RC[rr++] = vv;
  rr = "a".charCodeAt(0);
  for(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;
  rr = "A".charCodeAt(0);
  for(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;

  function int2char(n) { return BI_RM.charAt(n); }
  function intAt(s,i) {
    var c = BI_RC[s.charCodeAt(i)];
    return (c==null)?-1:c;
  }

  // (protected) copy this to r
  function bnpCopyTo(r) {
    for(var i = this.t-1; i >= 0; --i) r[i] = this[i];
    r.t = this.t;
    r.s = this.s;
  }

  // (protected) set from integer value x, -DV <= x < DV
  function bnpFromInt(x) {
    this.t = 1;
    this.s = (x<0)?-1:0;
    if(x > 0) this[0] = x;
    else if(x < -1) this[0] = x+DV;
    else this.t = 0;
  }

  // return bigint initialized to value
  function nbv(i) { var r = nbi(); r.fromInt(i); return r; }

  // (protected) set from string and radix
  function bnpFromString(s,b) {
    var k;
    if(b == 16) k = 4;
    else if(b == 8) k = 3;
    else if(b == 256) k = 8; // byte array
    else if(b == 2) k = 1;
    else if(b == 32) k = 5;
    else if(b == 4) k = 2;
    else { this.fromRadix(s,b); return; }
    this.t = 0;
    this.s = 0;
    var i = s.length, mi = false, sh = 0;
    while(--i >= 0) {
      var x = (k==8)?s[i]&0xff:intAt(s,i);
      if(x < 0) {
        if(s.charAt(i) == "-") mi = true;
        continue;
      }
      mi = false;
      if(sh == 0)
        this[this.t++] = x;
      else if(sh+k > this.DB) {
        this[this.t-1] |= (x&((1<<(this.DB-sh))-1))<<sh;
        this[this.t++] = (x>>(this.DB-sh));
      }
      else
        this[this.t-1] |= x<<sh;
      sh += k;
      if(sh >= this.DB) sh -= this.DB;
    }
    if(k == 8 && (s[0]&0x80) != 0) {
      this.s = -1;
      if(sh > 0) this[this.t-1] |= ((1<<(this.DB-sh))-1)<<sh;
    }
    this.clamp();
    if(mi) BigInteger.ZERO.subTo(this,this);
  }

  // (protected) clamp off excess high words
  function bnpClamp() {
    var c = this.s&this.DM;
    while(this.t > 0 && this[this.t-1] == c) --this.t;
  }

  // (public) return string representation in given radix
  function bnToString(b) {
    if(this.s < 0) return "-"+this.negate().toString(b);
    var k;
    if(b == 16) k = 4;
    else if(b == 8) k = 3;
    else if(b == 2) k = 1;
    else if(b == 32) k = 5;
    else if(b == 4) k = 2;
    else return this.toRadix(b);
    var km = (1<<k)-1, d, m = false, r = "", i = this.t;
    var p = this.DB-(i*this.DB)%k;
    if(i-- > 0) {
      if(p < this.DB && (d = this[i]>>p) > 0) { m = true; r = int2char(d); }
      while(i >= 0) {
        if(p < k) {
          d = (this[i]&((1<<p)-1))<<(k-p);
          d |= this[--i]>>(p+=this.DB-k);
        }
        else {
          d = (this[i]>>(p-=k))&km;
          if(p <= 0) { p += this.DB; --i; }
        }
        if(d > 0) m = true;
        if(m) r += int2char(d);
      }
    }
    return m?r:"0";
  }

  // (public) -this
  function bnNegate() { var r = nbi(); BigInteger.ZERO.subTo(this,r); return r; }

  // (public) |this|
  function bnAbs() { return (this.s<0)?this.negate():this; }

  // (public) return + if this > a, - if this < a, 0 if equal
  function bnCompareTo(a) {
    var r = this.s-a.s;
    if(r != 0) return r;
    var i = this.t;
    r = i-a.t;
    if(r != 0) return (this.s<0)?-r:r;
    while(--i >= 0) if((r=this[i]-a[i]) != 0) return r;
    return 0;
  }

  // returns bit length of the integer x
  function nbits(x) {
    var r = 1, t;
    if((t=x>>>16) != 0) { x = t; r += 16; }
    if((t=x>>8) != 0) { x = t; r += 8; }
    if((t=x>>4) != 0) { x = t; r += 4; }
    if((t=x>>2) != 0) { x = t; r += 2; }
    if((t=x>>1) != 0) { x = t; r += 1; }
    return r;
  }

  // (public) return the number of bits in "this"
  function bnBitLength() {
    if(this.t <= 0) return 0;
    return this.DB*(this.t-1)+nbits(this[this.t-1]^(this.s&this.DM));
  }

  // (protected) r = this << n*DB
  function bnpDLShiftTo(n,r) {
    var i;
    for(i = this.t-1; i >= 0; --i) r[i+n] = this[i];
    for(i = n-1; i >= 0; --i) r[i] = 0;
    r.t = this.t+n;
    r.s = this.s;
  }

  // (protected) r = this >> n*DB
  function bnpDRShiftTo(n,r) {
    for(var i = n; i < this.t; ++i) r[i-n] = this[i];
    r.t = Math.max(this.t-n,0);
    r.s = this.s;
  }

  // (protected) r = this << n
  function bnpLShiftTo(n,r) {
    var bs = n%this.DB;
    var cbs = this.DB-bs;
    var bm = (1<<cbs)-1;
    var ds = Math.floor(n/this.DB), c = (this.s<<bs)&this.DM, i;
    for(i = this.t-1; i >= 0; --i) {
      r[i+ds+1] = (this[i]>>cbs)|c;
      c = (this[i]&bm)<<bs;
    }
    for(i = ds-1; i >= 0; --i) r[i] = 0;
    r[ds] = c;
    r.t = this.t+ds+1;
    r.s = this.s;
    r.clamp();
  }

  // (protected) r = this >> n
  function bnpRShiftTo(n,r) {
    r.s = this.s;
    var ds = Math.floor(n/this.DB);
    if(ds >= this.t) { r.t = 0; return; }
    var bs = n%this.DB;
    var cbs = this.DB-bs;
    var bm = (1<<bs)-1;
    r[0] = this[ds]>>bs;
    for(var i = ds+1; i < this.t; ++i) {
      r[i-ds-1] |= (this[i]&bm)<<cbs;
      r[i-ds] = this[i]>>bs;
    }
    if(bs > 0) r[this.t-ds-1] |= (this.s&bm)<<cbs;
    r.t = this.t-ds;
    r.clamp();
  }

  // (protected) r = this - a
  function bnpSubTo(a,r) {
    var i = 0, c = 0, m = Math.min(a.t,this.t);
    while(i < m) {
      c += this[i]-a[i];
      r[i++] = c&this.DM;
      c >>= this.DB;
    }
    if(a.t < this.t) {
      c -= a.s;
      while(i < this.t) {
        c += this[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c += this.s;
    }
    else {
      c += this.s;
      while(i < a.t) {
        c -= a[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c -= a.s;
    }
    r.s = (c<0)?-1:0;
    if(c < -1) r[i++] = this.DV+c;
    else if(c > 0) r[i++] = c;
    r.t = i;
    r.clamp();
  }

  // (protected) r = this * a, r != this,a (HAC 14.12)
  // "this" should be the larger one if appropriate.
  function bnpMultiplyTo(a,r) {
    var x = this.abs(), y = a.abs();
    var i = x.t;
    r.t = i+y.t;
    while(--i >= 0) r[i] = 0;
    for(i = 0; i < y.t; ++i) r[i+x.t] = x.am(0,y[i],r,i,0,x.t);
    r.s = 0;
    r.clamp();
    if(this.s != a.s) BigInteger.ZERO.subTo(r,r);
  }

  // (protected) r = this^2, r != this (HAC 14.16)
  function bnpSquareTo(r) {
    var x = this.abs();
    var i = r.t = 2*x.t;
    while(--i >= 0) r[i] = 0;
    for(i = 0; i < x.t-1; ++i) {
      var c = x.am(i,x[i],r,2*i,0,1);
      if((r[i+x.t]+=x.am(i+1,2*x[i],r,2*i+1,c,x.t-i-1)) >= x.DV) {
        r[i+x.t] -= x.DV;
        r[i+x.t+1] = 1;
      }
    }
    if(r.t > 0) r[r.t-1] += x.am(i,x[i],r,2*i,0,1);
    r.s = 0;
    r.clamp();
  }

  // (protected) divide this by m, quotient and remainder to q, r (HAC 14.20)
  // r != q, this != m.  q or r may be null.
  function bnpDivRemTo(m,q,r) {
    var pm = m.abs();
    if(pm.t <= 0) return;
    var pt = this.abs();
    if(pt.t < pm.t) {
      if(q != null) q.fromInt(0);
      if(r != null) this.copyTo(r);
      return;
    }
    if(r == null) r = nbi();
    var y = nbi(), ts = this.s, ms = m.s;
    var nsh = this.DB-nbits(pm[pm.t-1]);	// normalize modulus
    if(nsh > 0) { pm.lShiftTo(nsh,y); pt.lShiftTo(nsh,r); }
    else { pm.copyTo(y); pt.copyTo(r); }
    var ys = y.t;
    var y0 = y[ys-1];
    if(y0 == 0) return;
    var yt = y0*(1<<this.F1)+((ys>1)?y[ys-2]>>this.F2:0);
    var d1 = this.FV/yt, d2 = (1<<this.F1)/yt, e = 1<<this.F2;
    var i = r.t, j = i-ys, t = (q==null)?nbi():q;
    y.dlShiftTo(j,t);
    if(r.compareTo(t) >= 0) {
      r[r.t++] = 1;
      r.subTo(t,r);
    }
    BigInteger.ONE.dlShiftTo(ys,t);
    t.subTo(y,y);	// "negative" y so we can replace sub with am later
    while(y.t < ys) y[y.t++] = 0;
    while(--j >= 0) {
      // Estimate quotient digit
      var qd = (r[--i]==y0)?this.DM:Math.floor(r[i]*d1+(r[i-1]+e)*d2);
      if((r[i]+=y.am(0,qd,r,j,0,ys)) < qd) {	// Try it out
        y.dlShiftTo(j,t);
        r.subTo(t,r);
        while(r[i] < --qd) r.subTo(t,r);
      }
    }
    if(q != null) {
      r.drShiftTo(ys,q);
      if(ts != ms) BigInteger.ZERO.subTo(q,q);
    }
    r.t = ys;
    r.clamp();
    if(nsh > 0) r.rShiftTo(nsh,r);	// Denormalize remainder
    if(ts < 0) BigInteger.ZERO.subTo(r,r);
  }

  // (public) this mod a
  function bnMod(a) {
    var r = nbi();
    this.abs().divRemTo(a,null,r);
    if(this.s < 0 && r.compareTo(BigInteger.ZERO) > 0) a.subTo(r,r);
    return r;
  }

  // Modular reduction using "classic" algorithm
  function Classic(m) { this.m = m; }
  function cConvert(x) {
    if(x.s < 0 || x.compareTo(this.m) >= 0) return x.mod(this.m);
    else return x;
  }
  function cRevert(x) { return x; }
  function cReduce(x) { x.divRemTo(this.m,null,x); }
  function cMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }
  function cSqrTo(x,r) { x.squareTo(r); this.reduce(r); }

  Classic.prototype.convert = cConvert;
  Classic.prototype.revert = cRevert;
  Classic.prototype.reduce = cReduce;
  Classic.prototype.mulTo = cMulTo;
  Classic.prototype.sqrTo = cSqrTo;

  // (protected) return "-1/this % 2^DB"; useful for Mont. reduction
  // justification:
  //         xy == 1 (mod m)
  //         xy =  1+km
  //   xy(2-xy) = (1+km)(1-km)
  // x[y(2-xy)] = 1-k^2m^2
  // x[y(2-xy)] == 1 (mod m^2)
  // if y is 1/x mod m, then y(2-xy) is 1/x mod m^2
  // should reduce x and y(2-xy) by m^2 at each step to keep size bounded.
  // JS multiply "overflows" differently from C/C++, so care is needed here.
  function bnpInvDigit() {
    if(this.t < 1) return 0;
    var x = this[0];
    if((x&1) == 0) return 0;
    var y = x&3;		// y == 1/x mod 2^2
    y = (y*(2-(x&0xf)*y))&0xf;	// y == 1/x mod 2^4
    y = (y*(2-(x&0xff)*y))&0xff;	// y == 1/x mod 2^8
    y = (y*(2-(((x&0xffff)*y)&0xffff)))&0xffff;	// y == 1/x mod 2^16
    // last step - calculate inverse mod DV directly;
    // assumes 16 < DB <= 32 and assumes ability to handle 48-bit ints
    y = (y*(2-x*y%this.DV))%this.DV;		// y == 1/x mod 2^dbits
    // we really want the negative inverse, and -DV < y < DV
    return (y>0)?this.DV-y:-y;
  }

  // Montgomery reduction
  function Montgomery(m) {
    this.m = m;
    this.mp = m.invDigit();
    this.mpl = this.mp&0x7fff;
    this.mph = this.mp>>15;
    this.um = (1<<(m.DB-15))-1;
    this.mt2 = 2*m.t;
  }

  // xR mod m
  function montConvert(x) {
    var r = nbi();
    x.abs().dlShiftTo(this.m.t,r);
    r.divRemTo(this.m,null,r);
    if(x.s < 0 && r.compareTo(BigInteger.ZERO) > 0) this.m.subTo(r,r);
    return r;
  }

  // x/R mod m
  function montRevert(x) {
    var r = nbi();
    x.copyTo(r);
    this.reduce(r);
    return r;
  }

  // x = x/R mod m (HAC 14.32)
  function montReduce(x) {
    while(x.t <= this.mt2)	// pad x so am has enough room later
      x[x.t++] = 0;
    for(var i = 0; i < this.m.t; ++i) {
      // faster way of calculating u0 = x[i]*mp mod DV
      var j = x[i]&0x7fff;
      var u0 = (j*this.mpl+(((j*this.mph+(x[i]>>15)*this.mpl)&this.um)<<15))&x.DM;
      // use am to combine the multiply-shift-add into one call
      j = i+this.m.t;
      x[j] += this.m.am(0,u0,x,i,0,this.m.t);
      // propagate carry
      while(x[j] >= x.DV) { x[j] -= x.DV; x[++j]++; }
    }
    x.clamp();
    x.drShiftTo(this.m.t,x);
    if(x.compareTo(this.m) >= 0) x.subTo(this.m,x);
  }

  // r = "x^2/R mod m"; x != r
  function montSqrTo(x,r) { x.squareTo(r); this.reduce(r); }

  // r = "xy/R mod m"; x,y != r
  function montMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }

  Montgomery.prototype.convert = montConvert;
  Montgomery.prototype.revert = montRevert;
  Montgomery.prototype.reduce = montReduce;
  Montgomery.prototype.mulTo = montMulTo;
  Montgomery.prototype.sqrTo = montSqrTo;

  // (protected) true iff this is even
  function bnpIsEven() { return ((this.t>0)?(this[0]&1):this.s) == 0; }

  // (protected) this^e, e < 2^32, doing sqr and mul with "r" (HAC 14.79)
  function bnpExp(e,z) {
    if(e > 0xffffffff || e < 1) return BigInteger.ONE;
    var r = nbi(), r2 = nbi(), g = z.convert(this), i = nbits(e)-1;
    g.copyTo(r);
    while(--i >= 0) {
      z.sqrTo(r,r2);
      if((e&(1<<i)) > 0) z.mulTo(r2,g,r);
      else { var t = r; r = r2; r2 = t; }
    }
    return z.revert(r);
  }

  // (public) this^e % m, 0 <= e < 2^32
  function bnModPowInt(e,m) {
    var z;
    if(e < 256 || m.isEven()) z = new Classic(m); else z = new Montgomery(m);
    return this.exp(e,z);
  }

  // protected
  BigInteger.prototype.copyTo = bnpCopyTo;
  BigInteger.prototype.fromInt = bnpFromInt;
  BigInteger.prototype.fromString = bnpFromString;
  BigInteger.prototype.clamp = bnpClamp;
  BigInteger.prototype.dlShiftTo = bnpDLShiftTo;
  BigInteger.prototype.drShiftTo = bnpDRShiftTo;
  BigInteger.prototype.lShiftTo = bnpLShiftTo;
  BigInteger.prototype.rShiftTo = bnpRShiftTo;
  BigInteger.prototype.subTo = bnpSubTo;
  BigInteger.prototype.multiplyTo = bnpMultiplyTo;
  BigInteger.prototype.squareTo = bnpSquareTo;
  BigInteger.prototype.divRemTo = bnpDivRemTo;
  BigInteger.prototype.invDigit = bnpInvDigit;
  BigInteger.prototype.isEven = bnpIsEven;
  BigInteger.prototype.exp = bnpExp;

  // public
  BigInteger.prototype.toString = bnToString;
  BigInteger.prototype.negate = bnNegate;
  BigInteger.prototype.abs = bnAbs;
  BigInteger.prototype.compareTo = bnCompareTo;
  BigInteger.prototype.bitLength = bnBitLength;
  BigInteger.prototype.mod = bnMod;
  BigInteger.prototype.modPowInt = bnModPowInt;

  // "constants"
  BigInteger.ZERO = nbv(0);
  BigInteger.ONE = nbv(1);

  // jsbn2 stuff

  // (protected) convert from radix string
  function bnpFromRadix(s,b) {
    this.fromInt(0);
    if(b == null) b = 10;
    var cs = this.chunkSize(b);
    var d = Math.pow(b,cs), mi = false, j = 0, w = 0;
    for(var i = 0; i < s.length; ++i) {
      var x = intAt(s,i);
      if(x < 0) {
        if(s.charAt(i) == "-" && this.signum() == 0) mi = true;
        continue;
      }
      w = b*w+x;
      if(++j >= cs) {
        this.dMultiply(d);
        this.dAddOffset(w,0);
        j = 0;
        w = 0;
      }
    }
    if(j > 0) {
      this.dMultiply(Math.pow(b,j));
      this.dAddOffset(w,0);
    }
    if(mi) BigInteger.ZERO.subTo(this,this);
  }

  // (protected) return x s.t. r^x < DV
  function bnpChunkSize(r) { return Math.floor(Math.LN2*this.DB/Math.log(r)); }

  // (public) 0 if this == 0, 1 if this > 0
  function bnSigNum() {
    if(this.s < 0) return -1;
    else if(this.t <= 0 || (this.t == 1 && this[0] <= 0)) return 0;
    else return 1;
  }

  // (protected) this *= n, this >= 0, 1 < n < DV
  function bnpDMultiply(n) {
    this[this.t] = this.am(0,n-1,this,0,0,this.t);
    ++this.t;
    this.clamp();
  }

  // (protected) this += n << w words, this >= 0
  function bnpDAddOffset(n,w) {
    if(n == 0) return;
    while(this.t <= w) this[this.t++] = 0;
    this[w] += n;
    while(this[w] >= this.DV) {
      this[w] -= this.DV;
      if(++w >= this.t) this[this.t++] = 0;
      ++this[w];
    }
  }

  // (protected) convert to radix string
  function bnpToRadix(b) {
    if(b == null) b = 10;
    if(this.signum() == 0 || b < 2 || b > 36) return "0";
    var cs = this.chunkSize(b);
    var a = Math.pow(b,cs);
    var d = nbv(a), y = nbi(), z = nbi(), r = "";
    this.divRemTo(d,y,z);
    while(y.signum() > 0) {
      r = (a+z.intValue()).toString(b).substr(1) + r;
      y.divRemTo(d,y,z);
    }
    return z.intValue().toString(b) + r;
  }

  // (public) return value as integer
  function bnIntValue() {
    if(this.s < 0) {
      if(this.t == 1) return this[0]-this.DV;
      else if(this.t == 0) return -1;
    }
    else if(this.t == 1) return this[0];
    else if(this.t == 0) return 0;
    // assumes 16 < DB < 32
    return ((this[1]&((1<<(32-this.DB))-1))<<this.DB)|this[0];
  }

  // (protected) r = this + a
  function bnpAddTo(a,r) {
    var i = 0, c = 0, m = Math.min(a.t,this.t);
    while(i < m) {
      c += this[i]+a[i];
      r[i++] = c&this.DM;
      c >>= this.DB;
    }
    if(a.t < this.t) {
      c += a.s;
      while(i < this.t) {
        c += this[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c += this.s;
    }
    else {
      c += this.s;
      while(i < a.t) {
        c += a[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c += a.s;
    }
    r.s = (c<0)?-1:0;
    if(c > 0) r[i++] = c;
    else if(c < -1) r[i++] = this.DV+c;
    r.t = i;
    r.clamp();
  }

  BigInteger.prototype.fromRadix = bnpFromRadix;
  BigInteger.prototype.chunkSize = bnpChunkSize;
  BigInteger.prototype.signum = bnSigNum;
  BigInteger.prototype.dMultiply = bnpDMultiply;
  BigInteger.prototype.dAddOffset = bnpDAddOffset;
  BigInteger.prototype.toRadix = bnpToRadix;
  BigInteger.prototype.intValue = bnIntValue;
  BigInteger.prototype.addTo = bnpAddTo;

  //======= end jsbn =======

  // Emscripten wrapper
  var Wrapper = {
    abs: function(l, h) {
      var x = new goog.math.Long(l, h);
      var ret;
      if (x.isNegative()) {
        ret = x.negate();
      } else {
        ret = x;
      }
      HEAP32[tempDoublePtr>>2] = ret.low_;
      HEAP32[tempDoublePtr+4>>2] = ret.high_;
    },
    ensureTemps: function() {
      if (Wrapper.ensuredTemps) return;
      Wrapper.ensuredTemps = true;
      Wrapper.two32 = new BigInteger();
      Wrapper.two32.fromString('4294967296', 10);
      Wrapper.two64 = new BigInteger();
      Wrapper.two64.fromString('18446744073709551616', 10);
      Wrapper.temp1 = new BigInteger();
      Wrapper.temp2 = new BigInteger();
    },
    lh2bignum: function(l, h) {
      var a = new BigInteger();
      a.fromString(h.toString(), 10);
      var b = new BigInteger();
      a.multiplyTo(Wrapper.two32, b);
      var c = new BigInteger();
      c.fromString(l.toString(), 10);
      var d = new BigInteger();
      c.addTo(b, d);
      return d;
    },
    stringify: function(l, h, unsigned) {
      var ret = new goog.math.Long(l, h).toString();
      if (unsigned && ret[0] == '-') {
        // unsign slowly using jsbn bignums
        Wrapper.ensureTemps();
        var bignum = new BigInteger();
        bignum.fromString(ret, 10);
        ret = new BigInteger();
        Wrapper.two64.addTo(bignum, ret);
        ret = ret.toString(10);
      }
      return ret;
    },
    fromString: function(str, base, min, max, unsigned) {
      Wrapper.ensureTemps();
      var bignum = new BigInteger();
      bignum.fromString(str, base);
      var bigmin = new BigInteger();
      bigmin.fromString(min, 10);
      var bigmax = new BigInteger();
      bigmax.fromString(max, 10);
      if (unsigned && bignum.compareTo(BigInteger.ZERO) < 0) {
        var temp = new BigInteger();
        bignum.addTo(Wrapper.two64, temp);
        bignum = temp;
      }
      var error = false;
      if (bignum.compareTo(bigmin) < 0) {
        bignum = bigmin;
        error = true;
      } else if (bignum.compareTo(bigmax) > 0) {
        bignum = bigmax;
        error = true;
      }
      var ret = goog.math.Long.fromString(bignum.toString()); // min-max checks should have clamped this to a range goog.math.Long can handle well
      HEAP32[tempDoublePtr>>2] = ret.low_;
      HEAP32[tempDoublePtr+4>>2] = ret.high_;
      if (error) throw 'range error';
    }
  };
  return Wrapper;
})();

//======= end closure i64 code =======



// === Auto-generated postamble setup entry stuff ===

if (memoryInitializer) {
  if (typeof Module['locateFile'] === 'function') {
    memoryInitializer = Module['locateFile'](memoryInitializer);
  } else if (Module['memoryInitializerPrefixURL']) {
    memoryInitializer = Module['memoryInitializerPrefixURL'] + memoryInitializer;
  }
  if (ENVIRONMENT_IS_NODE || ENVIRONMENT_IS_SHELL) {
    var data = Module['readBinary'](memoryInitializer);
    HEAPU8.set(data, STATIC_BASE);
  } else {
    addRunDependency('memory initializer');
    var applyMemoryInitializer = function(data) {
      if (data.byteLength) data = new Uint8Array(data);
      for (var i = 0; i < data.length; i++) {
        assert(HEAPU8[STATIC_BASE + i] === 0, "area for memory initializer should not have been touched before it's loaded");
      }
      HEAPU8.set(data, STATIC_BASE);
      removeRunDependency('memory initializer');
    }
    var request = Module['memoryInitializerRequest'];
    if (request) {
      // a network request has already been created, just use that
      if (request.response) {
        setTimeout(function() {
          applyMemoryInitializer(request.response);
        }, 0); // it's already here; but, apply it asynchronously
      } else {
        request.addEventListener('load', function() { // wait for it
          if (request.status !== 200 && request.status !== 0) {
            console.warn('a problem seems to have happened with Module.memoryInitializerRequest, status: ' + request.status);
          }
          if (!request.response || typeof request.response !== 'object' || !request.response.byteLength) {
            console.warn('a problem seems to have happened with Module.memoryInitializerRequest response (expected ArrayBuffer): ' + request.response);
          }
          applyMemoryInitializer(request.response);
        });
      }
    } else {
      // fetch it from the network ourselves
      Browser.asyncLoad(memoryInitializer, applyMemoryInitializer, function() {
        throw 'could not load memory initializer ' + memoryInitializer;
      });
    }
  }
}

function ExitStatus(status) {
  this.name = "ExitStatus";
  this.message = "Program terminated with exit(" + status + ")";
  this.status = status;
};
ExitStatus.prototype = new Error();
ExitStatus.prototype.constructor = ExitStatus;

var initialStackTop;
var preloadStartTime = null;
var calledMain = false;

dependenciesFulfilled = function runCaller() {
  // If run has never been called, and we should call run (INVOKE_RUN is true, and Module.noInitialRun is not false)
  if (!Module['calledRun']) run();
  if (!Module['calledRun']) dependenciesFulfilled = runCaller; // try this again later, after new deps are fulfilled
}

Module['callMain'] = Module.callMain = function callMain(args) {
  assert(runDependencies == 0, 'cannot call main when async dependencies remain! (listen on __ATMAIN__)');
  assert(__ATPRERUN__.length == 0, 'cannot call main when preRun functions remain to be called');

  args = args || [];

  ensureInitRuntime();

  var argc = args.length+1;
  function pad() {
    for (var i = 0; i < 4-1; i++) {
      argv.push(0);
    }
  }
  var argv = [allocate(intArrayFromString(Module['thisProgram']), 'i8', ALLOC_NORMAL) ];
  pad();
  for (var i = 0; i < argc-1; i = i + 1) {
    argv.push(allocate(intArrayFromString(args[i]), 'i8', ALLOC_NORMAL));
    pad();
  }
  argv.push(0);
  argv = allocate(argv, 'i32', ALLOC_NORMAL);

  initialStackTop = STACKTOP;

  try {

    var ret = Module['_main'](argc, argv, 0);


    // if we're not running an evented main loop, it's time to exit
    exit(ret);
  }
  catch(e) {
    if (e instanceof ExitStatus) {
      // exit() throws this once it's done to make sure execution
      // has been stopped completely
      return;
    } else if (e == 'SimulateInfiniteLoop') {
      // running an evented main loop, don't immediately exit
      Module['noExitRuntime'] = true;
      return;
    } else {
      if (e && typeof e === 'object' && e.stack) Module.printErr('exception thrown: ' + [e, e.stack]);
      throw e;
    }
  } finally {
    calledMain = true;
  }
}




function run(args) {
  args = args || Module['arguments'];

  if (preloadStartTime === null) preloadStartTime = Date.now();

  if (runDependencies > 0) {
    Module.printErr('run() called, but dependencies remain, so not running');
    return;
  }

  preRun();

  if (runDependencies > 0) return; // a preRun added a dependency, run will be called later
  if (Module['calledRun']) return; // run may have just been called through dependencies being fulfilled just in this very frame

  function doRun() {
    if (Module['calledRun']) return; // run may have just been called while the async setStatus time below was happening
    Module['calledRun'] = true;

    if (ABORT) return; 

    ensureInitRuntime();

    preMain();

    if (ENVIRONMENT_IS_WEB && preloadStartTime !== null) {
      Module.printErr('pre-main prep time: ' + (Date.now() - preloadStartTime) + ' ms');
    }

    if (Module['onRuntimeInitialized']) Module['onRuntimeInitialized']();

    if (Module['_main'] && shouldRunNow) Module['callMain'](args);

    postRun();
  }

  if (Module['setStatus']) {
    Module['setStatus']('Running...');
    setTimeout(function() {
      setTimeout(function() {
        Module['setStatus']('');
      }, 1);
      doRun();
    }, 1);
  } else {
    doRun();
  }
}
Module['run'] = Module.run = run;

function exit(status) {
  if (Module['noExitRuntime']) {
    Module.printErr('exit(' + status + ') called, but noExitRuntime, so not exiting (you can use emscripten_force_exit, if you want to force a true shutdown)');
    return;
  }

  ABORT = true;
  EXITSTATUS = status;
  STACKTOP = initialStackTop;

  // exit the runtime
  exitRuntime();

  if (Module['onExit']) Module['onExit'](status);

  if (ENVIRONMENT_IS_NODE) {
    // Work around a node.js bug where stdout buffer is not flushed at process exit:
    // Instead of process.exit() directly, wait for stdout flush event.
    // See https://github.com/joyent/node/issues/1669 and https://github.com/kripken/emscripten/issues/2582
    // Workaround is based on https://github.com/RReverser/acorn/commit/50ab143cecc9ed71a2d66f78b4aec3bb2e9844f6
    process['stdout']['once']('drain', function () {
      process['exit'](status);
    });
    console.log(' '); // Make sure to print something to force the drain event to occur, in case the stdout buffer was empty.
    // Work around another node bug where sometimes 'drain' is never fired - make another effort
    // to emit the exit status, after a significant delay (if node hasn't fired drain by then, give up)
    setTimeout(function() {
      process['exit'](status);
    }, 500);
  } else
  if (ENVIRONMENT_IS_SHELL && typeof quit === 'function') {
    quit(status);
  }
  // if we reach here, we must throw an exception to halt the current execution
  throw new ExitStatus(status);
}
Module['exit'] = Module.exit = exit;

var abortDecorators = [];

function abort(what) {
  if (what !== undefined) {
    Module.print(what);
    Module.printErr(what);
    what = JSON.stringify(what)
  } else {
    what = '';
  }

  ABORT = true;
  EXITSTATUS = 1;

  var extra = '';

  var output = 'abort(' + what + ') at ' + stackTrace() + extra;
  abortDecorators.forEach(function(decorator) {
    output = decorator(output, what);
  });
  throw output;
}
Module['abort'] = Module.abort = abort;

// {{PRE_RUN_ADDITIONS}}

if (Module['preInit']) {
  if (typeof Module['preInit'] == 'function') Module['preInit'] = [Module['preInit']];
  while (Module['preInit'].length > 0) {
    Module['preInit'].pop()();
  }
}

// shouldRunNow refers to calling main(), not run().
var shouldRunNow = true;
if (Module['noInitialRun']) {
  shouldRunNow = false;
}


run();

// {{POST_RUN_ADDITIONS}}






// {{MODULE_ADDITIONS}}



//# sourceMappingURL=sprites.html.map