=puun=

== Features / TODO ==
    * [.] Sprite support
        * [X] Load images
        * [X] Render sprites
        * [ ] Name sprites
        * [ ] Create atlas
        * [ ] Load atlas from description text
        * [ ] Access atlas to get sprite
    * [ ] Text rendering
        * A letter renderd FYEAH!
        * [.] A lib (gf/text?) to render text ala render_squares
    * [ ] Sound
        * Work f*ker
    * [ ] Input
        * [o] getKey()
        * [o] getPosition
        * [o] getClick: left, right
        * [ ] html workaraound if needed
    * [ ] Entity system
        * purrhaps not required? :3
    * [o] Platforms
        * [X] Linux
            * I should make it more shippable, but hey, good enough for now.
        * [o] Emscripten
            * Should be better
        * [X] Windows
            * More shippable, but yeah.
        * [ ] Mac Os x
        * [ ] Mobiles
            * [ ] Android
            * [ ] IOS
    * [ ] 3D graphics
        * Amazing
==bugs / fixes==
    * [X] Textytest sometimes the character appears rotated?
        * It had to do with initialization of square. I did not
         initialize rotation, so if the memory was not 0 previously,
         it rotated to a random angle.
    * [X] separate completely sdl layer from game code
        * [X] sdl_swapbuffers
        * [X] platform callbacks...
==ideas==
    * [ ] Description text for initialization
        * [ ] Simple to write, perhaps bakeable?
            * #define SPRITE_X 50\n #define SPRITE_Y 51
                * We define the macro to use it like #define SPRITE_X getX("sprite")
                * * Read wold be just scanf("#define blabla%s %s\n", foo, bar)
                * You could include on compile time and it would be baked
    * [ ] gf/text
        * a text struct for a phrase
            * pos, bbox would be ideal
                * What if it doesn't fit?
                * A: Render anyway
                * B: Complain
        * a render_text function
            * Takes a text struct perhaps some other info?
